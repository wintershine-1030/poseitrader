<!DOCTYPE html>
<html
  lang="en"
  dir="ltr"
  class="docs-wrapper plugin-docs plugin-id-default docs-version-latest docs-doc-page docs-doc-id-developer_guide/rust"
  data-has-hydrated="false"
>
  <head>
    <meta charset="UTF-8" />
    <meta name="generator" content="Docusaurus v3.8.1" />
    <title data-rh="true">Rust Style Guide | PoseiTrader Documentation</title>
    <meta
      data-rh="true"
      name="viewport"
      content="width=device-width,initial-scale=1"
    />
    <meta data-rh="true" name="twitter:card" content="summary_large_image" />
    <meta
      data-rh="true"
      property="og:image"
      content="docs/latestimg/docusaurus-social-card.jpg"
    />
    <meta
      data-rh="true"
      name="twitter:image"
      content="docs/latestimg/docusaurus-social-card.jpg"
    />
    <meta
      data-rh="true"
      property="og:url"
      content="docs/latestlatest/developer_guide/rust"
    />
    <meta data-rh="true" property="og:locale" content="en" />
    <meta data-rh="true" name="docusaurus_locale" content="en" />
    <meta data-rh="true" name="docsearch:language" content="en" />
    <meta
      data-rh="true"
      name="keywords"
      content="Open-source trading platform, Algorithmic trading software, Event-driven backtesting, Live trading with no code changes, Trade any asset class, Low-latency trading execution, Python API for trading strategies, Custom market data integration, Futures and options trading, Crypto spot and derivatives trading, Equities trading simulation, FX spot trading, Sports betting markets trading, Fast backtesting strategies, Advanced trading orders, Rust-based trading platform, High-performance trading system, Nanosecond resolution market simulation, Trading across multiple venues, Trading platform for hedge funds, Seamless data integration, Customizable trading strategies, AI and ML trading strategies, Posei trading platform, Multi-venue trading, Unlimited backtesting strategies, Fast trading execution solutions, Realistic market simulations, Seamless trading API integration, PoseiTrader Documentation, Docs, PoseiTrader Docs"
    />
    <meta data-rh="true" name="title" content="PoseiTrader Documentation" />
    <meta data-rh="true" name="og:title" content="PoseiTrader Documentation" />
    <meta
      data-rh="true"
      name="og:description"
      content="PoseiTrader is a high-performance platform for automating trading strategies, built on the powerful Posei framework for backtesting and real-time trading."
    />
    <meta data-rh="true" name="og:image" content="img/preview.png" />
    <meta data-rh="true" name="og:url" content="/docs/latest" />
    <meta data-rh="true" name="docusaurus_version" content="latest" />
    <meta data-rh="true" name="docusaurus_tag" content="docs-default-latest" />
    <meta data-rh="true" name="docsearch:version" content="latest" />
    <meta
      data-rh="true"
      name="docsearch:docusaurus_tag"
      content="docs-default-latest"
    />
    <meta
      data-rh="true"
      property="og:title"
      content="Rust Style Guide | PoseiTrader Documentation"
    />
    <meta
      data-rh="true"
      name="description"
      content="The Rust programming language is an ideal fit for implementing the mission-critical core of the platform and systems. Its strong type system, ownership model, and compile-time checks eliminate memory errors and data races by construction, while zero-cost abstractions and the absence of a garbage collector deliver C-like performance—critical for high-frequency trading workloads."
    />
    <meta
      data-rh="true"
      property="og:description"
      content="The Rust programming language is an ideal fit for implementing the mission-critical core of the platform and systems. Its strong type system, ownership model, and compile-time checks eliminate memory errors and data races by construction, while zero-cost abstractions and the absence of a garbage collector deliver C-like performance—critical for high-frequency trading workloads."
    />
    <link data-rh="true" rel="icon" href="../../../img/shell.ico" />
    <link data-rh="true" rel="canonical" href="index.htm" />
    <link data-rh="true" rel="alternate" href="index.htm" hreflang="en" />
    <link
      data-rh="true"
      rel="alternate"
      href="index.htm"
      hreflang="x-default"
    />
    <link
      data-rh="true"
      rel="preconnect"
      href="https://CWRKEEL01M-dsn.algolia.net"
      crossorigin="anonymous"
    />
    <script data-rh="true" type="application/ld+json">
      {
        "@context": "https://schema.org",
        "@type": "BreadcrumbList",
        "itemListElement": [
          {
            "@type": "ListItem",
            "position": 1,
            "name": "Developer Guide",
            "item": "docs/latestlatest/developer_guide/"
          },
          {
            "@type": "ListItem",
            "position": 2,
            "name": "Rust Style Guide",
            "item": "docs/latestlatest/developer_guide/rust"
          }
        ]
      }
    </script>
    <link
      rel="search"
      type="application/opensearchdescription+xml"
      title="PoseiTrader Documentation"
      href="../../../opensearch.xml"
    />
    <script>
      !(function () {
        var t = window.location.pathname;
        if (
          t.startsWith("/docs") &&
          !t.startsWith("/docs/latest") &&
          !t.startsWith("/docs/nightly")
        ) {
          var s = t.replace("/docs", "/docs/latest");
          window.location.href = s;
        }
      })();
    </script>
    <link rel="preconnect" href="https://www.google-analytics.com" />
    <link rel="preconnect" href="https://www.googletagmanager.com" />
    <script
      async
      src="https://www.googletagmanager.com/gtag/js?id=G-TR4XK597XK"
    ></script>
    <script>
      function gtag() {
        dataLayer.push(arguments);
      }
      (window.dataLayer = window.dataLayer || []),
        gtag("js", new Date()),
        gtag("config", "G-TR4XK597XK", { anonymize_ip: !0 });
    </script>
    <link rel="stylesheet" href="../../../assets/css/styles.0f0f692e.css" />
    <script
      src="../../../assets/js/runtime~main.92b727d5.js"
      defer="defer"
    ></script>
    <script src="../../../assets/js/main.1cd42d85.js" defer="defer"></script>
  </head>
  <body class="navigation-with-keyboard">
    <svg xmlns="http://www.w3.org/2000/svg" style="display: none">
      <defs>
        <symbol id="theme-svg-external-link" viewbox="0 0 24 24">
          <path
            fill="currentColor"
            d="M21 13v10h-21v-19h12v2h-10v15h17v-8h2zm3-12h-10.988l4.035 4-6.977 7.07 2.828 2.828 6.977-7.07 4.125 4.172v-11z"
          ></path>
        </symbol>
      </defs>
    </svg>
    <script>
      !(function () {
        var t = "dark";
        var e =
          (function () {
            try {
              return new URLSearchParams(window.location.search).get(
                "docusaurus-theme"
              );
            } catch (t) {}
          })() ||
          (function () {
            try {
              return window.localStorage.getItem("theme");
            } catch (t) {}
          })();
        document.documentElement.setAttribute("data-theme", e || t),
          document.documentElement.setAttribute("data-theme-choice", e || t);
      })(),
        (function () {
          try {
            const c = new URLSearchParams(window.location.search).entries();
            for (var [t, e] of c)
              if (t.startsWith("docusaurus-data-")) {
                var a = t.replace("docusaurus-data-", "data-");
                document.documentElement.setAttribute(a, e);
              }
          } catch (t) {}
        })();
    </script>
    <div id="__docusaurus">
      <div role="region" aria-label="Skip to main content">
        <a
          class="skipToContent_fXgn"
          href="#__docusaurus_skipToContent_fallback"
          >Skip to main content</a
        >
      </div>
      <nav
        aria-label="Main"
        class="theme-layout-navbar navbar navbar--fixed-top navbarHideable_m1mJ"
      >
        <div class="navbar__inner">
          <div class="theme-layout-navbar-left navbar__items">
            <button
              aria-label="Toggle navigation bar"
              aria-expanded="false"
              class="navbar__toggle clean-btn"
              type="button"
            >
              <svg
                width="30"
                height="30"
                viewbox="0 0 30 30"
                aria-hidden="true"
              >
                <path
                  stroke="currentColor"
                  stroke-linecap="round"
                  stroke-miterlimit="10"
                  stroke-width="2"
                  d="M4 7h22M4 15h22M4 23h22"
                ></path>
              </svg></button
            ><a
              href="../../../../index.htm"
              target="_blank"
              rel="noopener noreferrer"
              class="navbar__brand"
              ><div class="navbar__logo">
                <img
                  src="../../../img/nt-black-large.webp"
                  alt="PoseiTrader Logo"
                  class="themedComponent_mlkZ themedComponent--light_NVdE"
                /><img
                  src="../../../img/nt-white-large.webp"
                  alt="PoseiTrader Logo"
                  class="themedComponent_mlkZ themedComponent--dark_xIcU"
                />
              </div>
              <b class="navbar__title text--truncate"></b
            ></a>
            <div class="navbar__item dropdown dropdown--hoverable">
              <a
                href="#"
                aria-haspopup="true"
                aria-expanded="false"
                role="button"
                class="navbar__link"
                >Version</a
              >
              <ul class="dropdown__menu">
                <li>
                  <a
                    aria-current="page"
                    class="dropdown__link dropdown__link--active"
                    href="../../index.htm"
                    >latest</a
                  >
                </li>
                <li>
                  <a class="dropdown__link" href="../../../nightly/index.html"
                    >nightly</a
                  >
                </li>
              </ul>
            </div>
            <div class="navbarSearchContainer_Bca1">
              <button
                type="button"
                class="DocSearch DocSearch-Button"
                aria-label="Search (Command+K)"
              >
                <span class="DocSearch-Button-Container"
                  ><svg
                    width="20"
                    height="20"
                    class="DocSearch-Search-Icon"
                    viewbox="0 0 20 20"
                    aria-hidden="true"
                  >
                    <path
                      d="M14.386 14.386l4.0877 4.0877-4.0877-4.0877c-2.9418 2.9419-7.7115 2.9419-10.6533 0-2.9419-2.9418-2.9419-7.7115 0-10.6533 2.9418-2.9419 7.7115-2.9419 10.6533 0 2.9419 2.9418 2.9419 7.7115 0 10.6533z"
                      stroke="currentColor"
                      fill="none"
                      fill-rule="evenodd"
                      stroke-linecap="round"
                      stroke-linejoin="round"
                    ></path></svg
                  ><span class="DocSearch-Button-Placeholder"
                    >Search</span
                  ></span
                ><span class="DocSearch-Button-Keys"></span>
              </button>
            </div>
          </div>
          <div
            class="theme-layout-navbar-right navbar__items navbar__items--right"
          >
            <a
              href="https://github.com/poseisysstems"
              target="_blank"
              rel="noopener noreferrer"
              class="navbar__item navbar__link header-github-link common-social"
              aria-label="GitHub repository"
            ></a>
            <a
              href="https://twitter.com/PoseiTrader"
              target="_blank"
              rel="noopener noreferrer"
              class="navbar__item navbar__link header-x-link common-social"
              aria-label="X"
            ></a>
             
          </div>
        </div>
        <div role="presentation" class="navbar-sidebar__backdrop"></div>
      </nav>
      <div
        id="__docusaurus_skipToContent_fallback"
        class="theme-layout-main main-wrapper mainWrapper_z2l0"
      >
        <div class="docsWrapper_hBAB">
          <button
            aria-label="Scroll back to top"
            class="clean-btn theme-back-to-top-button backToTopButton_sjWU"
            type="button"
          ></button>
          <div class="docRoot_UBD9">
            <aside class="theme-doc-sidebar-container docSidebarContainer_YfHR">
              <div class="sidebarViewport_aRkj">
                <div class="sidebar_njMd sidebarWithHideableNavbar_wUlq">
                  <a
                    href="../../../../index.htm"
                    target="_blank"
                    rel="noopener noreferrer"
                    tabindex="-1"
                    class="sidebarLogo_isFc"
                    ><img
                      src="../../../img/nt-black-large.webp"
                      alt="PoseiTrader Logo"
                      class="themedComponent_mlkZ themedComponent--light_NVdE" /><img
                      src="../../../img/nt-white-large.webp"
                      alt="PoseiTrader Logo"
                      class="themedComponent_mlkZ themedComponent--dark_xIcU" /><b></b
                  ></a>
                  <nav
                    aria-label="Docs sidebar"
                    class="menu thin-scrollbar menu_SIkG"
                  >
                    <ul class="theme-doc-sidebar-menu menu__list">
                      <li
                        class="theme-doc-sidebar-item-link theme-doc-sidebar-item-link-level-1 menu__list-item"
                      >
                        <a class="menu__link" href="../../index.htm"
                          >PoseiTrader Documentation</a
                        >
                      </li>
                      <li
                        class="theme-doc-sidebar-item-category theme-doc-sidebar-item-category-level-1 menu__list-item menu__list-item--collapsed"
                      >
                        <div class="menu__list-item-collapsible">
                          <a
                            class="menu__link menu__link--sublist"
                            href="../../getting_started/index.htm"
                            >Getting Started</a
                          ><button
                            aria-label="Expand sidebar category &#x27;Getting Started&#x27;"
                            aria-expanded="false"
                            type="button"
                            class="clean-btn menu__caret"
                          ></button>
                        </div>
                      </li>
                      <li
                        class="theme-doc-sidebar-item-category theme-doc-sidebar-item-category-level-1 menu__list-item menu__list-item--collapsed"
                      >
                        <div class="menu__list-item-collapsible">
                          <a
                            class="menu__link menu__link--sublist"
                            href="../../concepts/index.htm"
                            >Concepts</a
                          ><button
                            aria-label="Expand sidebar category &#x27;Concepts&#x27;"
                            aria-expanded="false"
                            type="button"
                            class="clean-btn menu__caret"
                          ></button>
                        </div>
                      </li>
                      <li
                        class="theme-doc-sidebar-item-category theme-doc-sidebar-item-category-level-1 menu__list-item menu__list-item--collapsed"
                      >
                        <div class="menu__list-item-collapsible">
                          <a
                            class="menu__link menu__link--sublist"
                            href="../../tutorials/index.htm"
                            >Tutorials</a
                          ><button
                            aria-label="Expand sidebar category &#x27;Tutorials&#x27;"
                            aria-expanded="false"
                            type="button"
                            class="clean-btn menu__caret"
                          ></button>
                        </div>
                      </li>
                      <li
                        class="theme-doc-sidebar-item-category theme-doc-sidebar-item-category-level-1 menu__list-item menu__list-item--collapsed"
                      >
                        <div class="menu__list-item-collapsible">
                          <a
                            class="menu__link menu__link--sublist"
                            href="../../integrations/index.htm"
                            >Integrations</a
                          ><button
                            aria-label="Expand sidebar category &#x27;Integrations&#x27;"
                            aria-expanded="false"
                            type="button"
                            class="clean-btn menu__caret"
                          ></button>
                        </div>
                      </li>
                      <li
                        class="theme-doc-sidebar-item-category theme-doc-sidebar-item-category-level-1 menu__list-item menu__list-item--collapsed"
                      >
                        <div class="menu__list-item-collapsible">
                          <a
                            class="menu__link menu__link--sublist"
                            href="../../api_reference/index.htm"
                            >Python API</a
                          ><button
                            aria-label="Expand sidebar category &#x27;Python API&#x27;"
                            aria-expanded="false"
                            type="button"
                            class="clean-btn menu__caret"
                          ></button>
                        </div>
                      </li>
                      <li
                        class="theme-doc-sidebar-item-link theme-doc-sidebar-item-link-level-1 menu__list-item"
                      >
                        <a
                          href="../../../core-latest/index.html"
                          target="_blank"
                          rel="noopener noreferrer"
                          class="menu__link menuExternalLink_NmtK"
                          >Rust API<svg
                            width="13.5"
                            height="13.5"
                            aria-hidden="true"
                            class="iconExternalLink_nPIU"
                          >
                            <use href="#theme-svg-external-link"></use></svg
                        ></a>
                      </li>
                      <li
                        class="theme-doc-sidebar-item-category theme-doc-sidebar-item-category-level-1 menu__list-item"
                      >
                        <div class="menu__list-item-collapsible">
                          <a
                            class="menu__link menu__link--sublist menu__link--active"
                            href="../index.htm"
                            >Developer Guide</a
                          ><button
                            aria-label="Collapse sidebar category &#x27;Developer Guide&#x27;"
                            aria-expanded="true"
                            type="button"
                            class="clean-btn menu__caret"
                          ></button>
                        </div>
                        <ul class="menu__list">
                          <li
                            class="theme-doc-sidebar-item-link theme-doc-sidebar-item-link-level-2 menu__list-item"
                          >
                            <a
                              class="menu__link"
                              tabindex="0"
                              href="../environment_setup/index.htm"
                              >Environment Setup</a
                            >
                          </li>
                          <li
                            class="theme-doc-sidebar-item-link theme-doc-sidebar-item-link-level-2 menu__list-item"
                          >
                            <a
                              class="menu__link"
                              tabindex="0"
                              href="../coding_standards/index.htm"
                              >Coding Standards</a
                            >
                          </li>
                          <li
                            class="theme-doc-sidebar-item-link theme-doc-sidebar-item-link-level-2 menu__list-item"
                          >
                            <a
                              class="menu__link"
                              tabindex="0"
                              href="../cython/index.htm"
                              >Cython</a
                            >
                          </li>
                          <li
                            class="theme-doc-sidebar-item-link theme-doc-sidebar-item-link-level-2 menu__list-item"
                          >
                            <a
                              class="menu__link menu__link--active"
                              aria-current="page"
                              tabindex="0"
                              href="index.htm"
                              >Rust Style Guide</a
                            >
                          </li>
                          <li
                            class="theme-doc-sidebar-item-link theme-doc-sidebar-item-link-level-2 menu__list-item"
                          >
                            <a
                              class="menu__link"
                              tabindex="0"
                              href="../testing/index.htm"
                              >Testing</a
                            >
                          </li>
                          <li
                            class="theme-doc-sidebar-item-link theme-doc-sidebar-item-link-level-2 menu__list-item"
                          >
                            <a
                              class="menu__link"
                              tabindex="0"
                              href="../adapters/index.htm"
                              >Adapters</a
                            >
                          </li>
                          <li
                            class="theme-doc-sidebar-item-link theme-doc-sidebar-item-link-level-2 menu__list-item"
                          >
                            <a
                              class="menu__link"
                              tabindex="0"
                              href="../packaged_data/index.htm"
                              >Packaged Data</a
                            >
                          </li>
                        </ul>
                      </li>
                    </ul>
                  </nav>
                </div>
              </div>
            </aside>
            <main class="docMainContainer_TBSr">
              <div class="container padding-top--md padding-bottom--lg">
                <div>
                  <div class="row">
                    <div class="col docItemCol_VOVn">
                      <div class="docItemContainer_Djhp">
                        <article>
                          <nav
                            class="theme-doc-breadcrumbs breadcrumbsContainer_Z_bl"
                            aria-label="Breadcrumbs"
                          >
                            <ul class="breadcrumbs">
                              <li class="breadcrumbs__item">
                                <a class="breadcrumbs__link" href="../index.htm"
                                  ><span>Developer Guide</span></a
                                >
                              </li>
                              <li
                                class="breadcrumbs__item breadcrumbs__item--active"
                              >
                                <span class="breadcrumbs__link"
                                  >Rust Style Guide</span
                                >
                              </li>
                            </ul>
                          </nav>
                          <span
                            class="theme-doc-version-badge badge badge--secondary"
                            >Version: latest</span
                          >
                          <div
                            class="tocCollapsible_ETCw theme-doc-toc-mobile tocMobile_ITEo"
                          >
                            <button
                              type="button"
                              class="clean-btn tocCollapsibleButton_TO0P"
                            >
                              On this page
                            </button>
                          </div>
                          <div class="theme-doc-markdown markdown">
                            <header><h1>Rust Style Guide</h1></header>
                            <p>
                              The
                              <a
                                href="https://www.rust-lang.org/learn"
                                target="_blank"
                                rel="noopener noreferrer"
                                >Rust</a
                              >
                              programming language is an ideal fit for
                              implementing the mission-critical core of the
                              platform and systems. Its strong type system,
                              ownership model, and compile-time checks eliminate
                              memory errors and data races by construction,
                              while zero-cost abstractions and the absence of a
                              garbage collector deliver C-like
                              performance—critical for high-frequency trading
                              workloads.
                            </p>
                            <h2
                              class="anchor anchorWithHideOnScrollNavbar_WYt5"
                              id="python-bindings"
                            >
                              Python Bindings<a
                                href="#python-bindings"
                                class="hash-link"
                                aria-label="Direct link to Python Bindings"
                                title="Direct link to Python Bindings"
                                >​</a
                              >
                            </h2>
                            <p>
                              Python bindings are provided via Cython and
                              <a
                                href="https://pyo3.rs"
                                target="_blank"
                                rel="noopener noreferrer"
                                >PyO3</a
                              >, allowing users to import PoseiTrader crates
                              directly in Python without a Rust toolchain.
                            </p>
                            <h2
                              class="anchor anchorWithHideOnScrollNavbar_WYt5"
                              id="code-style-and-conventions"
                            >
                              Code Style and Conventions<a
                                href="#code-style-and-conventions"
                                class="hash-link"
                                aria-label="Direct link to Code Style and Conventions"
                                title="Direct link to Code Style and Conventions"
                                >​</a
                              >
                            </h2>
                            <h3
                              class="anchor anchorWithHideOnScrollNavbar_WYt5"
                              id="file-header-requirements"
                            >
                              File Header Requirements<a
                                href="#file-header-requirements"
                                class="hash-link"
                                aria-label="Direct link to File Header Requirements"
                                title="Direct link to File Header Requirements"
                                >​</a
                              >
                            </h3>
                            <p>
                              All Rust files must include the standardized
                              copyright header:
                            </p>
                            <div
                              class="language-rust codeBlockContainer_Ckt0 theme-code-block"
                              style="
                                --prism-color: #9cdcfe;
                                --prism-background-color: #1e1e1e;
                              "
                            >
                              <div class="codeBlockContent_QJqH">
                                <pre
                                  tabindex="0"
                                  class="prism-code language-rust codeBlock_bY9V thin-scrollbar"
                                  style="
                                    color: #9cdcfe;
                                    background-color: #1e1e1e;
                                  "
                                ><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9CDCFE"><span class="token comment" style="color:rgb(106, 153, 85)">// -------------------------------------------------------------------------------------------------</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token comment" style="color:rgb(106, 153, 85)">//  Copyright (C) 2015-2025 Posei Systems Pty Ltd. All rights reserved.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token comment" style="color:rgb(106, 153, 85)">//  https://poseissystem.com</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token comment" style="color:rgb(106, 153, 85)">//</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token comment" style="color:rgb(106, 153, 85)">//  Licensed under the GNU Lesser General Public License Version 3.0 (the &quot;License&quot;);</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token comment" style="color:rgb(106, 153, 85)">//  You may not use this file except in compliance with the License.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token comment" style="color:rgb(106, 153, 85)">//  You may obtain a copy of the License at https://www.gnu.org/licenses/lgpl-3.0.en.html</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token comment" style="color:rgb(106, 153, 85)">//</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token comment" style="color:rgb(106, 153, 85)">//  Unless required by applicable law or agreed to in writing, software</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token comment" style="color:rgb(106, 153, 85)">//  distributed under the License is distributed on an &quot;AS IS&quot; BASIS,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token comment" style="color:rgb(106, 153, 85)">//  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token comment" style="color:rgb(106, 153, 85)">//  See the License for the specific language governing permissions and</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token comment" style="color:rgb(106, 153, 85)">//  limitations under the License.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token comment" style="color:rgb(106, 153, 85)">// -------------------------------------------------------------------------------------------------</span><br></span></code></pre>
                              </div>
                            </div>
                            <h3
                              class="anchor anchorWithHideOnScrollNavbar_WYt5"
                              id="code-formatting"
                            >
                              Code Formatting<a
                                href="#code-formatting"
                                class="hash-link"
                                aria-label="Direct link to Code Formatting"
                                title="Direct link to Code Formatting"
                                >​</a
                              >
                            </h3>
                            <p>
                              Import formatting is automatically handled by
                              rustfmt when running <code>make format</code>. The
                              tool organizes imports into groups (standard
                              library, external crates, local imports) and sorts
                              them alphabetically within each group.
                            </p>
                            <h3
                              class="anchor anchorWithHideOnScrollNavbar_WYt5"
                              id="error-handling"
                            >
                              Error Handling<a
                                href="#error-handling"
                                class="hash-link"
                                aria-label="Direct link to Error Handling"
                                title="Direct link to Error Handling"
                                >​</a
                              >
                            </h3>
                            <p>
                              Use structured error handling patterns
                              consistently:
                            </p>
                            <ol>
                              <li>
                                <p>
                                  <strong>Primary Pattern</strong>: Use
                                  <code>anyhow::Result&lt;T&gt;</code> for
                                  fallible functions:
                                </p>
                                <div
                                  class="language-rust codeBlockContainer_Ckt0 theme-code-block"
                                  style="
                                    --prism-color: #9cdcfe;
                                    --prism-background-color: #1e1e1e;
                                  "
                                >
                                  <div class="codeBlockContent_QJqH">
                                    <pre
                                      tabindex="0"
                                      class="prism-code language-rust codeBlock_bY9V thin-scrollbar"
                                      style="
                                        color: #9cdcfe;
                                        background-color: #1e1e1e;
                                      "
                                    ><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9CDCFE"><span class="token keyword" style="color:rgb(86, 156, 214)">pub</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(86, 156, 214)">fn</span><span class="token plain"> </span><span class="token function-definition function" style="color:rgb(220, 220, 170)">calculate_balance</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token operator" style="color:rgb(212, 212, 212)">&amp;</span><span class="token keyword" style="color:rgb(86, 156, 214)">mut</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(86, 156, 214)">self</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(212, 212, 212)">-&gt;</span><span class="token plain"> </span><span class="token namespace">anyhow</span><span class="token namespace punctuation" style="color:rgb(212, 212, 212)">::</span><span class="token class-name" style="color:rgb(78, 201, 176)">Result</span><span class="token operator" style="color:rgb(212, 212, 212)">&lt;</span><span class="token class-name" style="color:rgb(78, 201, 176)">Money</span><span class="token operator" style="color:rgb(212, 212, 212)">&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(212, 212, 212)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token comment" style="color:rgb(106, 153, 85)">// Implementation</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token punctuation" style="color:rgb(212, 212, 212)">}</span><br></span></code></pre>
                                  </div>
                                </div>
                              </li>
                              <li>
                                <p>
                                  <strong>Custom Error Types</strong>: Use
                                  <code>thiserror</code> for domain-specific
                                  errors:
                                </p>
                                <div
                                  class="language-rust codeBlockContainer_Ckt0 theme-code-block"
                                  style="
                                    --prism-color: #9cdcfe;
                                    --prism-background-color: #1e1e1e;
                                  "
                                >
                                  <div class="codeBlockContent_QJqH">
                                    <pre
                                      tabindex="0"
                                      class="prism-code language-rust codeBlock_bY9V thin-scrollbar"
                                      style="
                                        color: #9cdcfe;
                                        background-color: #1e1e1e;
                                      "
                                    ><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9CDCFE"><span class="token attribute attr-name" style="color:rgb(156, 220, 254)">#[derive(Error, Debug)]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token keyword" style="color:rgb(86, 156, 214)">pub</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(86, 156, 214)">enum</span><span class="token plain"> </span><span class="token type-definition class-name" style="color:rgb(78, 201, 176)">NetworkError</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(212, 212, 212)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token attribute attr-name" style="color:rgb(156, 220, 254)">#[error(</span><span class="token attribute attr-name string" style="color:rgb(206, 145, 120)">&quot;Connection failed: {0}&quot;</span><span class="token attribute attr-name" style="color:rgb(156, 220, 254)">)]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token class-name" style="color:rgb(78, 201, 176)">ConnectionFailed</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token class-name" style="color:rgb(78, 201, 176)">String</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token attribute attr-name" style="color:rgb(156, 220, 254)">#[error(</span><span class="token attribute attr-name string" style="color:rgb(206, 145, 120)">&quot;Timeout occurred&quot;</span><span class="token attribute attr-name" style="color:rgb(156, 220, 254)">)]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token class-name" style="color:rgb(78, 201, 176)">Timeout</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token punctuation" style="color:rgb(212, 212, 212)">}</span><br></span></code></pre>
                                  </div>
                                </div>
                              </li>
                              <li>
                                <p>
                                  <strong>Error Propagation</strong>: Use the
                                  <code>?</code> operator for clean error
                                  propagation.
                                </p>
                              </li>
                              <li>
                                <p>
                                  <strong>Error Creation</strong>: Prefer
                                  <code>anyhow::bail!</code> for early returns
                                  with errors:
                                </p>
                                <div
                                  class="language-rust codeBlockContainer_Ckt0 theme-code-block"
                                  style="
                                    --prism-color: #9cdcfe;
                                    --prism-background-color: #1e1e1e;
                                  "
                                >
                                  <div class="codeBlockContent_QJqH">
                                    <pre
                                      tabindex="0"
                                      class="prism-code language-rust codeBlock_bY9V thin-scrollbar"
                                      style="
                                        color: #9cdcfe;
                                        background-color: #1e1e1e;
                                      "
                                    ><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9CDCFE"><span class="token comment" style="color:rgb(106, 153, 85)">// Preferred - using bail! for early returns</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token keyword" style="color:rgb(86, 156, 214)">pub</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(86, 156, 214)">fn</span><span class="token plain"> </span><span class="token function-definition function" style="color:rgb(220, 220, 170)">process_value</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token plain">value</span><span class="token punctuation" style="color:rgb(212, 212, 212)">:</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(86, 156, 214)">i32</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(212, 212, 212)">-&gt;</span><span class="token plain"> </span><span class="token namespace">anyhow</span><span class="token namespace punctuation" style="color:rgb(212, 212, 212)">::</span><span class="token class-name" style="color:rgb(78, 201, 176)">Result</span><span class="token operator" style="color:rgb(212, 212, 212)">&lt;</span><span class="token keyword" style="color:rgb(86, 156, 214)">i32</span><span class="token operator" style="color:rgb(212, 212, 212)">&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(212, 212, 212)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token keyword" style="color:rgb(86, 156, 214)">if</span><span class="token plain"> value </span><span class="token operator" style="color:rgb(212, 212, 212)">&lt;</span><span class="token plain"> </span><span class="token number" style="color:rgb(181, 206, 168)">0</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(212, 212, 212)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">        </span><span class="token namespace">anyhow</span><span class="token namespace punctuation" style="color:rgb(212, 212, 212)">::</span><span class="token macro property">bail!</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token string" style="color:rgb(206, 145, 120)">&quot;Value cannot be negative: {value}&quot;</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token punctuation" style="color:rgb(212, 212, 212)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(212, 212, 212)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token class-name" style="color:rgb(78, 201, 176)">Ok</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token plain">value </span><span class="token operator" style="color:rgb(212, 212, 212)">*</span><span class="token plain"> </span><span class="token number" style="color:rgb(181, 206, 168)">2</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token punctuation" style="color:rgb(212, 212, 212)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token comment" style="color:rgb(106, 153, 85)">// Instead of - verbose return statement</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token keyword" style="color:rgb(86, 156, 214)">if</span><span class="token plain"> value </span><span class="token operator" style="color:rgb(212, 212, 212)">&lt;</span><span class="token plain"> </span><span class="token number" style="color:rgb(181, 206, 168)">0</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(212, 212, 212)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token keyword" style="color:rgb(86, 156, 214)">return</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(78, 201, 176)">Err</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token namespace">anyhow</span><span class="token namespace punctuation" style="color:rgb(212, 212, 212)">::</span><span class="token macro property">anyhow!</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token string" style="color:rgb(206, 145, 120)">&quot;Value cannot be negative: {value}&quot;</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token punctuation" style="color:rgb(212, 212, 212)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token punctuation" style="color:rgb(212, 212, 212)">}</span><br></span></code></pre>
                                  </div>
                                </div>
                                <p>
                                  <strong>Note</strong>: Use
                                  <code>anyhow::bail!</code> for early returns,
                                  but <code>anyhow::anyhow!</code> in closure
                                  contexts like <code>ok_or_else()</code> where
                                  early returns aren&#x27;t possible.
                                </p>
                              </li>
                              <li>
                                <p>
                                  <strong>Error Message Formatting</strong>:
                                  Prefer inline format strings over positional
                                  arguments:
                                </p>
                                <div
                                  class="language-rust codeBlockContainer_Ckt0 theme-code-block"
                                  style="
                                    --prism-color: #9cdcfe;
                                    --prism-background-color: #1e1e1e;
                                  "
                                >
                                  <div class="codeBlockContent_QJqH">
                                    <pre
                                      tabindex="0"
                                      class="prism-code language-rust codeBlock_bY9V thin-scrollbar"
                                      style="
                                        color: #9cdcfe;
                                        background-color: #1e1e1e;
                                      "
                                    ><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9CDCFE"><span class="token comment" style="color:rgb(106, 153, 85)">// Preferred - inline format with variable names</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token namespace">anyhow</span><span class="token namespace punctuation" style="color:rgb(212, 212, 212)">::</span><span class="token macro property">bail!</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token string" style="color:rgb(206, 145, 120)">&quot;Failed to subtract {n} months from {datetime}&quot;</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token punctuation" style="color:rgb(212, 212, 212)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token comment" style="color:rgb(106, 153, 85)">// Instead of - positional arguments</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token namespace">anyhow</span><span class="token namespace punctuation" style="color:rgb(212, 212, 212)">::</span><span class="token macro property">bail!</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token string" style="color:rgb(206, 145, 120)">&quot;Failed to subtract {} months from {}&quot;</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"> n</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"> datetime</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token punctuation" style="color:rgb(212, 212, 212)">;</span><br></span></code></pre>
                                  </div>
                                </div>
                                <p>
                                  This makes error messages more readable and
                                  self-documenting, especially when there are
                                  multiple variables.
                                </p>
                              </li>
                            </ol>
                            <h3
                              class="anchor anchorWithHideOnScrollNavbar_WYt5"
                              id="attribute-patterns"
                            >
                              Attribute Patterns<a
                                href="#attribute-patterns"
                                class="hash-link"
                                aria-label="Direct link to Attribute Patterns"
                                title="Direct link to Attribute Patterns"
                                >​</a
                              >
                            </h3>
                            <p>Consistent attribute usage and ordering:</p>
                            <div
                              class="language-rust codeBlockContainer_Ckt0 theme-code-block"
                              style="
                                --prism-color: #9cdcfe;
                                --prism-background-color: #1e1e1e;
                              "
                            >
                              <div class="codeBlockContent_QJqH">
                                <pre
                                  tabindex="0"
                                  class="prism-code language-rust codeBlock_bY9V thin-scrollbar"
                                  style="
                                    color: #9cdcfe;
                                    background-color: #1e1e1e;
                                  "
                                ><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9CDCFE"><span class="token attribute attr-name" style="color:rgb(156, 220, 254)">#[repr(C)]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token attribute attr-name" style="color:rgb(156, 220, 254)">#[derive(Clone, Copy, Debug, Hash, PartialEq, Eq, PartialOrd, Ord)]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token attribute attr-name" style="color:rgb(156, 220, 254)">#[cfg_attr(</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token attribute attr-name" style="color:rgb(156, 220, 254)">    feature = </span><span class="token attribute attr-name string" style="color:rgb(206, 145, 120)">&quot;python&quot;</span><span class="token attribute attr-name" style="color:rgb(156, 220, 254)">,</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token attribute attr-name" style="color:rgb(156, 220, 254)">    pyo3::pyclass(module = </span><span class="token attribute attr-name string" style="color:rgb(206, 145, 120)">&quot;posei_trader.core.posei_pyo3.model&quot;</span><span class="token attribute attr-name" style="color:rgb(156, 220, 254)">)</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token attribute attr-name" style="color:rgb(156, 220, 254)">)]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token keyword" style="color:rgb(86, 156, 214)">pub</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(86, 156, 214)">struct</span><span class="token plain"> </span><span class="token type-definition class-name" style="color:rgb(78, 201, 176)">Symbol</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token class-name" style="color:rgb(78, 201, 176)">Ustr</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token punctuation" style="color:rgb(212, 212, 212)">;</span><br></span></code></pre>
                              </div>
                            </div>
                            <p>For enums with extensive derive attributes:</p>
                            <div
                              class="language-rust codeBlockContainer_Ckt0 theme-code-block"
                              style="
                                --prism-color: #9cdcfe;
                                --prism-background-color: #1e1e1e;
                              "
                            >
                              <div class="codeBlockContent_QJqH">
                                <pre
                                  tabindex="0"
                                  class="prism-code language-rust codeBlock_bY9V thin-scrollbar"
                                  style="
                                    color: #9cdcfe;
                                    background-color: #1e1e1e;
                                  "
                                ><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9CDCFE"><span class="token attribute attr-name" style="color:rgb(156, 220, 254)">#[repr(C)]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token attribute attr-name" style="color:rgb(156, 220, 254)">#[derive(</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token attribute attr-name" style="color:rgb(156, 220, 254)">    Copy,</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token attribute attr-name" style="color:rgb(156, 220, 254)">    Clone,</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token attribute attr-name" style="color:rgb(156, 220, 254)">    Debug,</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token attribute attr-name" style="color:rgb(156, 220, 254)">    Display,</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token attribute attr-name" style="color:rgb(156, 220, 254)">    Hash,</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token attribute attr-name" style="color:rgb(156, 220, 254)">    PartialEq,</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token attribute attr-name" style="color:rgb(156, 220, 254)">    Eq,</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token attribute attr-name" style="color:rgb(156, 220, 254)">    PartialOrd,</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token attribute attr-name" style="color:rgb(156, 220, 254)">    Ord,</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token attribute attr-name" style="color:rgb(156, 220, 254)">    AsRefStr,</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token attribute attr-name" style="color:rgb(156, 220, 254)">    FromRepr,</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token attribute attr-name" style="color:rgb(156, 220, 254)">    EnumIter,</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token attribute attr-name" style="color:rgb(156, 220, 254)">    EnumString,</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token attribute attr-name" style="color:rgb(156, 220, 254)">)]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token attribute attr-name" style="color:rgb(156, 220, 254)">#[strum(ascii_case_insensitive)]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token attribute attr-name" style="color:rgb(156, 220, 254)">#[strum(serialize_all = </span><span class="token attribute attr-name string" style="color:rgb(206, 145, 120)">&quot;SCREAMING_SNAKE_CASE&quot;</span><span class="token attribute attr-name" style="color:rgb(156, 220, 254)">)]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token attribute attr-name" style="color:rgb(156, 220, 254)">#[cfg_attr(</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token attribute attr-name" style="color:rgb(156, 220, 254)">    feature = </span><span class="token attribute attr-name string" style="color:rgb(206, 145, 120)">&quot;python&quot;</span><span class="token attribute attr-name" style="color:rgb(156, 220, 254)">,</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token attribute attr-name" style="color:rgb(156, 220, 254)">    pyo3::pyclass(eq, eq_int, module = </span><span class="token attribute attr-name string" style="color:rgb(206, 145, 120)">&quot;posei_trader.core.posei_pyo3.model.enums&quot;</span><span class="token attribute attr-name" style="color:rgb(156, 220, 254)">)</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token attribute attr-name" style="color:rgb(156, 220, 254)">)]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token keyword" style="color:rgb(86, 156, 214)">pub</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(86, 156, 214)">enum</span><span class="token plain"> </span><span class="token type-definition class-name" style="color:rgb(78, 201, 176)">AccountType</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(212, 212, 212)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token comment" style="color:rgb(106, 153, 85)">/// An account with unleveraged cash assets only.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token class-name" style="color:rgb(78, 201, 176)">Cash</span><span class="token plain"> </span><span class="token operator" style="color:rgb(212, 212, 212)">=</span><span class="token plain"> </span><span class="token number" style="color:rgb(181, 206, 168)">1</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token comment" style="color:rgb(106, 153, 85)">/// An account which facilitates trading on margin, using account assets as collateral.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token class-name" style="color:rgb(78, 201, 176)">Margin</span><span class="token plain"> </span><span class="token operator" style="color:rgb(212, 212, 212)">=</span><span class="token plain"> </span><span class="token number" style="color:rgb(181, 206, 168)">2</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token punctuation" style="color:rgb(212, 212, 212)">}</span><br></span></code></pre>
                              </div>
                            </div>
                            <h3
                              class="anchor anchorWithHideOnScrollNavbar_WYt5"
                              id="constructor-patterns"
                            >
                              Constructor Patterns<a
                                href="#constructor-patterns"
                                class="hash-link"
                                aria-label="Direct link to Constructor Patterns"
                                title="Direct link to Constructor Patterns"
                                >​</a
                              >
                            </h3>
                            <p>
                              Use the <code>new()</code> vs
                              <code>new_checked()</code> convention
                              consistently:
                            </p>
                            <div
                              class="language-rust codeBlockContainer_Ckt0 theme-code-block"
                              style="
                                --prism-color: #9cdcfe;
                                --prism-background-color: #1e1e1e;
                              "
                            >
                              <div class="codeBlockContent_QJqH">
                                <pre
                                  tabindex="0"
                                  class="prism-code language-rust codeBlock_bY9V thin-scrollbar"
                                  style="
                                    color: #9cdcfe;
                                    background-color: #1e1e1e;
                                  "
                                ><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9CDCFE"><span class="token comment" style="color:rgb(106, 153, 85)">/// Creates a new [`Symbol`] instance with correctness checking.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token comment" style="color:rgb(106, 153, 85)">///</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token comment" style="color:rgb(106, 153, 85)">/// # Errors</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token comment" style="color:rgb(106, 153, 85)">///</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token comment" style="color:rgb(106, 153, 85)">/// Returns an error if `value` is not a valid string.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token comment" style="color:rgb(106, 153, 85)">///</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token comment" style="color:rgb(106, 153, 85)">/// # Notes</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token comment" style="color:rgb(106, 153, 85)">///</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token comment" style="color:rgb(106, 153, 85)">/// PyO3 requires a `Result` type for proper error handling and stacktrace printing in Python.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token keyword" style="color:rgb(86, 156, 214)">pub</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(86, 156, 214)">fn</span><span class="token plain"> </span><span class="token function-definition function" style="color:rgb(220, 220, 170)">new_checked</span><span class="token operator" style="color:rgb(212, 212, 212)">&lt;</span><span class="token class-name" style="color:rgb(78, 201, 176)">T</span><span class="token punctuation" style="color:rgb(212, 212, 212)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(78, 201, 176)">AsRef</span><span class="token operator" style="color:rgb(212, 212, 212)">&lt;</span><span class="token keyword" style="color:rgb(86, 156, 214)">str</span><span class="token operator" style="color:rgb(212, 212, 212)">&gt;&gt;</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token plain">value</span><span class="token punctuation" style="color:rgb(212, 212, 212)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(78, 201, 176)">T</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(212, 212, 212)">-&gt;</span><span class="token plain"> </span><span class="token namespace">anyhow</span><span class="token namespace punctuation" style="color:rgb(212, 212, 212)">::</span><span class="token class-name" style="color:rgb(78, 201, 176)">Result</span><span class="token operator" style="color:rgb(212, 212, 212)">&lt;</span><span class="token keyword" style="color:rgb(86, 156, 214)">Self</span><span class="token operator" style="color:rgb(212, 212, 212)">&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(212, 212, 212)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token comment" style="color:rgb(106, 153, 85)">// Implementation</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token punctuation" style="color:rgb(212, 212, 212)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token comment" style="color:rgb(106, 153, 85)">/// Creates a new [`Symbol`] instance.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token comment" style="color:rgb(106, 153, 85)">///</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token comment" style="color:rgb(106, 153, 85)">/// # Panics</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token comment" style="color:rgb(106, 153, 85)">///</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token comment" style="color:rgb(106, 153, 85)">/// Panics if `value` is not a valid string.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token keyword" style="color:rgb(86, 156, 214)">pub</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(86, 156, 214)">fn</span><span class="token plain"> </span><span class="token function-definition function" style="color:rgb(220, 220, 170)">new</span><span class="token operator" style="color:rgb(212, 212, 212)">&lt;</span><span class="token class-name" style="color:rgb(78, 201, 176)">T</span><span class="token punctuation" style="color:rgb(212, 212, 212)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(78, 201, 176)">AsRef</span><span class="token operator" style="color:rgb(212, 212, 212)">&lt;</span><span class="token keyword" style="color:rgb(86, 156, 214)">str</span><span class="token operator" style="color:rgb(212, 212, 212)">&gt;&gt;</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token plain">value</span><span class="token punctuation" style="color:rgb(212, 212, 212)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(78, 201, 176)">T</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(212, 212, 212)">-&gt;</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(86, 156, 214)">Self</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(212, 212, 212)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token keyword" style="color:rgb(86, 156, 214)">Self</span><span class="token punctuation" style="color:rgb(212, 212, 212)">::</span><span class="token function" style="color:rgb(220, 220, 170)">new_checked</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token plain">value</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token function" style="color:rgb(220, 220, 170)">expect</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token constant" style="color:rgb(100, 102, 149)">FAILED</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token punctuation" style="color:rgb(212, 212, 212)">}</span><br></span></code></pre>
                              </div>
                            </div>
                            <p>
                              Always use the <code>FAILED</code> constant for
                              <code>.expect()</code> messages related to
                              correctness checks:
                            </p>
                            <div
                              class="language-rust codeBlockContainer_Ckt0 theme-code-block"
                              style="
                                --prism-color: #9cdcfe;
                                --prism-background-color: #1e1e1e;
                              "
                            >
                              <div class="codeBlockContent_QJqH">
                                <pre
                                  tabindex="0"
                                  class="prism-code language-rust codeBlock_bY9V thin-scrollbar"
                                  style="
                                    color: #9cdcfe;
                                    background-color: #1e1e1e;
                                  "
                                ><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9CDCFE"><span class="token keyword" style="color:rgb(86, 156, 214)">use</span><span class="token plain"> </span><span class="token namespace">posei_core</span><span class="token namespace punctuation" style="color:rgb(212, 212, 212)">::</span><span class="token namespace">correctness</span><span class="token namespace punctuation" style="color:rgb(212, 212, 212)">::</span><span class="token constant" style="color:rgb(100, 102, 149)">FAILED</span><span class="token punctuation" style="color:rgb(212, 212, 212)">;</span><br></span></code></pre>
                              </div>
                            </div>
                            <h3
                              class="anchor anchorWithHideOnScrollNavbar_WYt5"
                              id="constants-and-naming-conventions"
                            >
                              Constants and Naming Conventions<a
                                href="#constants-and-naming-conventions"
                                class="hash-link"
                                aria-label="Direct link to Constants and Naming Conventions"
                                title="Direct link to Constants and Naming Conventions"
                                >​</a
                              >
                            </h3>
                            <p>
                              Use SCREAMING_SNAKE_CASE for constants with
                              descriptive names:
                            </p>
                            <div
                              class="language-rust codeBlockContainer_Ckt0 theme-code-block"
                              style="
                                --prism-color: #9cdcfe;
                                --prism-background-color: #1e1e1e;
                              "
                            >
                              <div class="codeBlockContent_QJqH">
                                <pre
                                  tabindex="0"
                                  class="prism-code language-rust codeBlock_bY9V thin-scrollbar"
                                  style="
                                    color: #9cdcfe;
                                    background-color: #1e1e1e;
                                  "
                                ><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9CDCFE"><span class="token comment" style="color:rgb(106, 153, 85)">/// Number of nanoseconds in one second.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token keyword" style="color:rgb(86, 156, 214)">pub</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(86, 156, 214)">const</span><span class="token plain"> </span><span class="token constant" style="color:rgb(100, 102, 149)">NANOSECONDS_IN_SECOND</span><span class="token punctuation" style="color:rgb(212, 212, 212)">:</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(86, 156, 214)">u64</span><span class="token plain"> </span><span class="token operator" style="color:rgb(212, 212, 212)">=</span><span class="token plain"> </span><span class="token number" style="color:rgb(181, 206, 168)">1_000_000_000</span><span class="token punctuation" style="color:rgb(212, 212, 212)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token comment" style="color:rgb(106, 153, 85)">/// Bar specification for 1-minute last price bars.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token keyword" style="color:rgb(86, 156, 214)">pub</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(86, 156, 214)">const</span><span class="token plain"> </span><span class="token constant" style="color:rgb(100, 102, 149)">BAR_SPEC_1_MINUTE_LAST</span><span class="token punctuation" style="color:rgb(212, 212, 212)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(78, 201, 176)">BarSpecification</span><span class="token plain"> </span><span class="token operator" style="color:rgb(212, 212, 212)">=</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(78, 201, 176)">BarSpecification</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(212, 212, 212)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    step</span><span class="token punctuation" style="color:rgb(212, 212, 212)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(78, 201, 176)">NonZero</span><span class="token punctuation" style="color:rgb(212, 212, 212)">::</span><span class="token function" style="color:rgb(220, 220, 170)">new</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token number" style="color:rgb(181, 206, 168)">1</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token function" style="color:rgb(220, 220, 170)">unwrap</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    aggregation</span><span class="token punctuation" style="color:rgb(212, 212, 212)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(78, 201, 176)">BarAggregation</span><span class="token punctuation" style="color:rgb(212, 212, 212)">::</span><span class="token class-name" style="color:rgb(78, 201, 176)">Minute</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    price_type</span><span class="token punctuation" style="color:rgb(212, 212, 212)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(78, 201, 176)">PriceType</span><span class="token punctuation" style="color:rgb(212, 212, 212)">::</span><span class="token class-name" style="color:rgb(78, 201, 176)">Last</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token punctuation" style="color:rgb(212, 212, 212)">}</span><span class="token punctuation" style="color:rgb(212, 212, 212)">;</span><br></span></code></pre>
                              </div>
                            </div>
                            <h3
                              class="anchor anchorWithHideOnScrollNavbar_WYt5"
                              id="re-export-patterns"
                            >
                              Re-export Patterns<a
                                href="#re-export-patterns"
                                class="hash-link"
                                aria-label="Direct link to Re-export Patterns"
                                title="Direct link to Re-export Patterns"
                                >​</a
                              >
                            </h3>
                            <p>
                              Organize re-exports alphabetically and place at
                              the end of lib.rs files:
                            </p>
                            <div
                              class="language-rust codeBlockContainer_Ckt0 theme-code-block"
                              style="
                                --prism-color: #9cdcfe;
                                --prism-background-color: #1e1e1e;
                              "
                            >
                              <div class="codeBlockContent_QJqH">
                                <pre
                                  tabindex="0"
                                  class="prism-code language-rust codeBlock_bY9V thin-scrollbar"
                                  style="
                                    color: #9cdcfe;
                                    background-color: #1e1e1e;
                                  "
                                ><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9CDCFE"><span class="token comment" style="color:rgb(106, 153, 85)">// Re-exports</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token keyword" style="color:rgb(86, 156, 214)">pub</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(86, 156, 214)">use</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(86, 156, 214)">crate</span><span class="token punctuation" style="color:rgb(212, 212, 212)">::</span><span class="token punctuation" style="color:rgb(212, 212, 212)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token namespace">nanos</span><span class="token namespace punctuation" style="color:rgb(212, 212, 212)">::</span><span class="token class-name" style="color:rgb(78, 201, 176)">UnixNanos</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token namespace">time</span><span class="token namespace punctuation" style="color:rgb(212, 212, 212)">::</span><span class="token class-name" style="color:rgb(78, 201, 176)">AtomicTime</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token namespace">uuid</span><span class="token namespace punctuation" style="color:rgb(212, 212, 212)">::</span><span class="token constant" style="color:rgb(100, 102, 149)">UUID4</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token punctuation" style="color:rgb(212, 212, 212)">}</span><span class="token punctuation" style="color:rgb(212, 212, 212)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token comment" style="color:rgb(106, 153, 85)">// Module-level re-exports</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token keyword" style="color:rgb(86, 156, 214)">pub</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(86, 156, 214)">use</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(86, 156, 214)">crate</span><span class="token module-declaration namespace punctuation" style="color:rgb(212, 212, 212)">::</span><span class="token module-declaration namespace">identifiers</span><span class="token module-declaration namespace punctuation" style="color:rgb(212, 212, 212)">::</span><span class="token punctuation" style="color:rgb(212, 212, 212)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token namespace">account_id</span><span class="token namespace punctuation" style="color:rgb(212, 212, 212)">::</span><span class="token class-name" style="color:rgb(78, 201, 176)">AccountId</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token namespace">actor_id</span><span class="token namespace punctuation" style="color:rgb(212, 212, 212)">::</span><span class="token class-name" style="color:rgb(78, 201, 176)">ActorId</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token namespace">client_id</span><span class="token namespace punctuation" style="color:rgb(212, 212, 212)">::</span><span class="token class-name" style="color:rgb(78, 201, 176)">ClientId</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token punctuation" style="color:rgb(212, 212, 212)">}</span><span class="token punctuation" style="color:rgb(212, 212, 212)">;</span><br></span></code></pre>
                              </div>
                            </div>
                            <h3
                              class="anchor anchorWithHideOnScrollNavbar_WYt5"
                              id="documentation-standards"
                            >
                              Documentation Standards<a
                                href="#documentation-standards"
                                class="hash-link"
                                aria-label="Direct link to Documentation Standards"
                                title="Direct link to Documentation Standards"
                                >​</a
                              >
                            </h3>
                            <h4
                              class="anchor anchorWithHideOnScrollNavbar_WYt5"
                              id="module-level-documentation"
                            >
                              Module-Level Documentation<a
                                href="#module-level-documentation"
                                class="hash-link"
                                aria-label="Direct link to Module-Level Documentation"
                                title="Direct link to Module-Level Documentation"
                                >​</a
                              >
                            </h4>
                            <p>
                              All modules must have module-level documentation
                              starting with a brief description:
                            </p>
                            <div
                              class="language-rust codeBlockContainer_Ckt0 theme-code-block"
                              style="
                                --prism-color: #9cdcfe;
                                --prism-background-color: #1e1e1e;
                              "
                            >
                              <div class="codeBlockContent_QJqH">
                                <pre
                                  tabindex="0"
                                  class="prism-code language-rust codeBlock_bY9V thin-scrollbar"
                                  style="
                                    color: #9cdcfe;
                                    background-color: #1e1e1e;
                                  "
                                ><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9CDCFE"><span class="token comment" style="color:rgb(106, 153, 85)">//! Functions for correctness checks similar to the *design by contract* philosophy.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token comment" style="color:rgb(106, 153, 85)">//!</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token comment" style="color:rgb(106, 153, 85)">//! This module provides validation checking of function or method conditions.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token comment" style="color:rgb(106, 153, 85)">//!</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token comment" style="color:rgb(106, 153, 85)">//! A condition is a predicate which must be true just prior to the execution of</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token comment" style="color:rgb(106, 153, 85)">//! some section of code - for correct behavior as per the design specification.</span><br></span></code></pre>
                              </div>
                            </div>
                            <p>
                              For modules with feature flags, document them
                              clearly:
                            </p>
                            <div
                              class="language-rust codeBlockContainer_Ckt0 theme-code-block"
                              style="
                                --prism-color: #9cdcfe;
                                --prism-background-color: #1e1e1e;
                              "
                            >
                              <div class="codeBlockContent_QJqH">
                                <pre
                                  tabindex="0"
                                  class="prism-code language-rust codeBlock_bY9V thin-scrollbar"
                                  style="
                                    color: #9cdcfe;
                                    background-color: #1e1e1e;
                                  "
                                ><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9CDCFE"><span class="token comment" style="color:rgb(106, 153, 85)">//! # Feature flags</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token comment" style="color:rgb(106, 153, 85)">//!</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token comment" style="color:rgb(106, 153, 85)">//! This crate provides feature flags to control source code inclusion during compilation,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token comment" style="color:rgb(106, 153, 85)">//! depending on the intended use case:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token comment" style="color:rgb(106, 153, 85)">//!</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token comment" style="color:rgb(106, 153, 85)">//! - `ffi`: Enables the C foreign function interface (FFI) from [cbindgen](https://github.com/mozilla/cbindgen).</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token comment" style="color:rgb(106, 153, 85)">//! - `python`: Enables Python bindings from [PyO3](https://pyo3.rs).</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token comment" style="color:rgb(106, 153, 85)">//! - `stubs`: Enables type stubs for use in testing scenarios.</span><br></span></code></pre>
                              </div>
                            </div>
                            <h4
                              class="anchor anchorWithHideOnScrollNavbar_WYt5"
                              id="field-documentation"
                            >
                              Field Documentation<a
                                href="#field-documentation"
                                class="hash-link"
                                aria-label="Direct link to Field Documentation"
                                title="Direct link to Field Documentation"
                                >​</a
                              >
                            </h4>
                            <p>
                              All struct and enum fields must have documentation
                              with terminating periods:
                            </p>
                            <div
                              class="language-rust codeBlockContainer_Ckt0 theme-code-block"
                              style="
                                --prism-color: #9cdcfe;
                                --prism-background-color: #1e1e1e;
                              "
                            >
                              <div class="codeBlockContent_QJqH">
                                <pre
                                  tabindex="0"
                                  class="prism-code language-rust codeBlock_bY9V thin-scrollbar"
                                  style="
                                    color: #9cdcfe;
                                    background-color: #1e1e1e;
                                  "
                                ><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9CDCFE"><span class="token keyword" style="color:rgb(86, 156, 214)">pub</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(86, 156, 214)">struct</span><span class="token plain"> </span><span class="token type-definition class-name" style="color:rgb(78, 201, 176)">Currency</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(212, 212, 212)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token comment" style="color:rgb(106, 153, 85)">/// The currency code as an alpha-3 string (e.g., &quot;USD&quot;, &quot;EUR&quot;).</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token keyword" style="color:rgb(86, 156, 214)">pub</span><span class="token plain"> code</span><span class="token punctuation" style="color:rgb(212, 212, 212)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(78, 201, 176)">Ustr</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token comment" style="color:rgb(106, 153, 85)">/// The currency decimal precision.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token keyword" style="color:rgb(86, 156, 214)">pub</span><span class="token plain"> precision</span><span class="token punctuation" style="color:rgb(212, 212, 212)">:</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(86, 156, 214)">u8</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token comment" style="color:rgb(106, 153, 85)">/// The ISO 4217 currency code.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token keyword" style="color:rgb(86, 156, 214)">pub</span><span class="token plain"> iso4217</span><span class="token punctuation" style="color:rgb(212, 212, 212)">:</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(86, 156, 214)">u16</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token comment" style="color:rgb(106, 153, 85)">/// The full name of the currency.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token keyword" style="color:rgb(86, 156, 214)">pub</span><span class="token plain"> name</span><span class="token punctuation" style="color:rgb(212, 212, 212)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(78, 201, 176)">Ustr</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token comment" style="color:rgb(106, 153, 85)">/// The currency type, indicating its category (e.g. Fiat, Crypto).</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token keyword" style="color:rgb(86, 156, 214)">pub</span><span class="token plain"> currency_type</span><span class="token punctuation" style="color:rgb(212, 212, 212)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(78, 201, 176)">CurrencyType</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token punctuation" style="color:rgb(212, 212, 212)">}</span><br></span></code></pre>
                              </div>
                            </div>
                            <h4
                              class="anchor anchorWithHideOnScrollNavbar_WYt5"
                              id="function-documentation"
                            >
                              Function Documentation<a
                                href="#function-documentation"
                                class="hash-link"
                                aria-label="Direct link to Function Documentation"
                                title="Direct link to Function Documentation"
                                >​</a
                              >
                            </h4>
                            <p>Document all public functions with:</p>
                            <ul>
                              <li>Purpose and behavior</li>
                              <li>Explanation of input argument usage</li>
                              <li>Error conditions (if applicable)</li>
                              <li>Panic conditions (if applicable)</li>
                            </ul>
                            <div
                              class="language-rust codeBlockContainer_Ckt0 theme-code-block"
                              style="
                                --prism-color: #9cdcfe;
                                --prism-background-color: #1e1e1e;
                              "
                            >
                              <div class="codeBlockContent_QJqH">
                                <pre
                                  tabindex="0"
                                  class="prism-code language-rust codeBlock_bY9V thin-scrollbar"
                                  style="
                                    color: #9cdcfe;
                                    background-color: #1e1e1e;
                                  "
                                ><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9CDCFE"><span class="token comment" style="color:rgb(106, 153, 85)">/// Returns a reference to the `AccountBalance` for the specified currency, or `None` if absent.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token comment" style="color:rgb(106, 153, 85)">///</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token comment" style="color:rgb(106, 153, 85)">/// # Panics</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token comment" style="color:rgb(106, 153, 85)">///</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token comment" style="color:rgb(106, 153, 85)">/// Panics if `currency` is `None` and `self.base_currency` is `None`.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token keyword" style="color:rgb(86, 156, 214)">pub</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(86, 156, 214)">fn</span><span class="token plain"> </span><span class="token function-definition function" style="color:rgb(220, 220, 170)">base_balance</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token operator" style="color:rgb(212, 212, 212)">&amp;</span><span class="token keyword" style="color:rgb(86, 156, 214)">self</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"> currency</span><span class="token punctuation" style="color:rgb(212, 212, 212)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(78, 201, 176)">Option</span><span class="token operator" style="color:rgb(212, 212, 212)">&lt;</span><span class="token class-name" style="color:rgb(78, 201, 176)">Currency</span><span class="token operator" style="color:rgb(212, 212, 212)">&gt;</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(212, 212, 212)">-&gt;</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(78, 201, 176)">Option</span><span class="token operator" style="color:rgb(212, 212, 212)">&lt;</span><span class="token operator" style="color:rgb(212, 212, 212)">&amp;</span><span class="token class-name" style="color:rgb(78, 201, 176)">AccountBalance</span><span class="token operator" style="color:rgb(212, 212, 212)">&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(212, 212, 212)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token comment" style="color:rgb(106, 153, 85)">// Implementation</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token punctuation" style="color:rgb(212, 212, 212)">}</span><br></span></code></pre>
                              </div>
                            </div>
                            <h4
                              class="anchor anchorWithHideOnScrollNavbar_WYt5"
                              id="errors-and-panics-documentation-format"
                            >
                              Errors and Panics Documentation Format<a
                                href="#errors-and-panics-documentation-format"
                                class="hash-link"
                                aria-label="Direct link to Errors and Panics Documentation Format"
                                title="Direct link to Errors and Panics Documentation Format"
                                >​</a
                              >
                            </h4>
                            <p>
                              For single line errors and panics documentation,
                              use sentence case with the following convention:
                            </p>
                            <div
                              class="language-rust codeBlockContainer_Ckt0 theme-code-block"
                              style="
                                --prism-color: #9cdcfe;
                                --prism-background-color: #1e1e1e;
                              "
                            >
                              <div class="codeBlockContent_QJqH">
                                <pre
                                  tabindex="0"
                                  class="prism-code language-rust codeBlock_bY9V thin-scrollbar"
                                  style="
                                    color: #9cdcfe;
                                    background-color: #1e1e1e;
                                  "
                                ><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9CDCFE"><span class="token comment" style="color:rgb(106, 153, 85)">/// Returns a reference to the `AccountBalance` for the specified currency, or `None` if absent.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token comment" style="color:rgb(106, 153, 85)">///</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token comment" style="color:rgb(106, 153, 85)">/// # Errors</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token comment" style="color:rgb(106, 153, 85)">///</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token comment" style="color:rgb(106, 153, 85)">/// Returns an error if the currency conversion fails.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token comment" style="color:rgb(106, 153, 85)">///</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token comment" style="color:rgb(106, 153, 85)">/// # Panics</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token comment" style="color:rgb(106, 153, 85)">///</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token comment" style="color:rgb(106, 153, 85)">/// Panics if `currency` is `None` and `self.base_currency` is `None`.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token keyword" style="color:rgb(86, 156, 214)">pub</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(86, 156, 214)">fn</span><span class="token plain"> </span><span class="token function-definition function" style="color:rgb(220, 220, 170)">base_balance</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token operator" style="color:rgb(212, 212, 212)">&amp;</span><span class="token keyword" style="color:rgb(86, 156, 214)">self</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"> currency</span><span class="token punctuation" style="color:rgb(212, 212, 212)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(78, 201, 176)">Option</span><span class="token operator" style="color:rgb(212, 212, 212)">&lt;</span><span class="token class-name" style="color:rgb(78, 201, 176)">Currency</span><span class="token operator" style="color:rgb(212, 212, 212)">&gt;</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(212, 212, 212)">-&gt;</span><span class="token plain"> </span><span class="token namespace">anyhow</span><span class="token namespace punctuation" style="color:rgb(212, 212, 212)">::</span><span class="token class-name" style="color:rgb(78, 201, 176)">Result</span><span class="token operator" style="color:rgb(212, 212, 212)">&lt;</span><span class="token class-name" style="color:rgb(78, 201, 176)">Option</span><span class="token operator" style="color:rgb(212, 212, 212)">&lt;</span><span class="token operator" style="color:rgb(212, 212, 212)">&amp;</span><span class="token class-name" style="color:rgb(78, 201, 176)">AccountBalance</span><span class="token operator" style="color:rgb(212, 212, 212)">&gt;&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(212, 212, 212)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token comment" style="color:rgb(106, 153, 85)">// Implementation</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token punctuation" style="color:rgb(212, 212, 212)">}</span><br></span></code></pre>
                              </div>
                            </div>
                            <p>
                              For multi-line errors and panics documentation,
                              use sentence case with bullets and terminating
                              periods:
                            </p>
                            <div
                              class="language-rust codeBlockContainer_Ckt0 theme-code-block"
                              style="
                                --prism-color: #9cdcfe;
                                --prism-background-color: #1e1e1e;
                              "
                            >
                              <div class="codeBlockContent_QJqH">
                                <pre
                                  tabindex="0"
                                  class="prism-code language-rust codeBlock_bY9V thin-scrollbar"
                                  style="
                                    color: #9cdcfe;
                                    background-color: #1e1e1e;
                                  "
                                ><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9CDCFE"><span class="token comment" style="color:rgb(106, 153, 85)">/// Calculates the unrealized profit and loss for the position.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token comment" style="color:rgb(106, 153, 85)">///</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token comment" style="color:rgb(106, 153, 85)">/// # Errors</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token comment" style="color:rgb(106, 153, 85)">///</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token comment" style="color:rgb(106, 153, 85)">/// This function will return an error if:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token comment" style="color:rgb(106, 153, 85)">/// - The market price for the instrument cannot be found.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token comment" style="color:rgb(106, 153, 85)">/// - The conversion rate calculation fails.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token comment" style="color:rgb(106, 153, 85)">/// - Invalid position state is encountered.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token comment" style="color:rgb(106, 153, 85)">///</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token comment" style="color:rgb(106, 153, 85)">/// # Panics</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token comment" style="color:rgb(106, 153, 85)">///</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token comment" style="color:rgb(106, 153, 85)">/// This function will panic if:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token comment" style="color:rgb(106, 153, 85)">/// - The instrument ID is invalid or uninitialized.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token comment" style="color:rgb(106, 153, 85)">/// - Required market data is missing from the cache.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token comment" style="color:rgb(106, 153, 85)">/// - Internal state consistency checks fail.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token keyword" style="color:rgb(86, 156, 214)">pub</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(86, 156, 214)">fn</span><span class="token plain"> </span><span class="token function-definition function" style="color:rgb(220, 220, 170)">calculate_unrealized_pnl</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token operator" style="color:rgb(212, 212, 212)">&amp;</span><span class="token keyword" style="color:rgb(86, 156, 214)">self</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"> market_price</span><span class="token punctuation" style="color:rgb(212, 212, 212)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(78, 201, 176)">Price</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(212, 212, 212)">-&gt;</span><span class="token plain"> </span><span class="token namespace">anyhow</span><span class="token namespace punctuation" style="color:rgb(212, 212, 212)">::</span><span class="token class-name" style="color:rgb(78, 201, 176)">Result</span><span class="token operator" style="color:rgb(212, 212, 212)">&lt;</span><span class="token class-name" style="color:rgb(78, 201, 176)">Money</span><span class="token operator" style="color:rgb(212, 212, 212)">&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(212, 212, 212)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token comment" style="color:rgb(106, 153, 85)">// Implementation</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token punctuation" style="color:rgb(212, 212, 212)">}</span><br></span></code></pre>
                              </div>
                            </div>
                            <h4
                              class="anchor anchorWithHideOnScrollNavbar_WYt5"
                              id="safety-documentation-format"
                            >
                              Safety Documentation Format<a
                                href="#safety-documentation-format"
                                class="hash-link"
                                aria-label="Direct link to Safety Documentation Format"
                                title="Direct link to Safety Documentation Format"
                                >​</a
                              >
                            </h4>
                            <p>
                              For Safety documentation, use the
                              <code>SAFETY:</code> prefix followed by a short
                              description explaining why the unsafe operation is
                              valid:
                            </p>
                            <div
                              class="language-rust codeBlockContainer_Ckt0 theme-code-block"
                              style="
                                --prism-color: #9cdcfe;
                                --prism-background-color: #1e1e1e;
                              "
                            >
                              <div class="codeBlockContent_QJqH">
                                <pre
                                  tabindex="0"
                                  class="prism-code language-rust codeBlock_bY9V thin-scrollbar"
                                  style="
                                    color: #9cdcfe;
                                    background-color: #1e1e1e;
                                  "
                                ><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9CDCFE"><span class="token comment" style="color:rgb(106, 153, 85)">/// Creates a new instance from raw components without validation.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token comment" style="color:rgb(106, 153, 85)">///</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token comment" style="color:rgb(106, 153, 85)">/// # Safety</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token comment" style="color:rgb(106, 153, 85)">///</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token comment" style="color:rgb(106, 153, 85)">/// The caller must ensure that all input parameters are valid and properly initialized.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token keyword" style="color:rgb(86, 156, 214)">pub</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(86, 156, 214)">unsafe</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(86, 156, 214)">fn</span><span class="token plain"> </span><span class="token function-definition function" style="color:rgb(220, 220, 170)">from_raw_parts</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token plain">ptr</span><span class="token punctuation" style="color:rgb(212, 212, 212)">:</span><span class="token plain"> </span><span class="token operator" style="color:rgb(212, 212, 212)">*</span><span class="token keyword" style="color:rgb(86, 156, 214)">const</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(86, 156, 214)">u8</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"> len</span><span class="token punctuation" style="color:rgb(212, 212, 212)">:</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(86, 156, 214)">usize</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(212, 212, 212)">-&gt;</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(86, 156, 214)">Self</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(212, 212, 212)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token comment" style="color:rgb(106, 153, 85)">// SAFETY: Caller guarantees ptr is valid and len is correct</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token keyword" style="color:rgb(86, 156, 214)">Self</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(212, 212, 212)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">        data</span><span class="token punctuation" style="color:rgb(212, 212, 212)">:</span><span class="token plain"> </span><span class="token namespace">std</span><span class="token namespace punctuation" style="color:rgb(212, 212, 212)">::</span><span class="token namespace">slice</span><span class="token namespace punctuation" style="color:rgb(212, 212, 212)">::</span><span class="token function" style="color:rgb(220, 220, 170)">from_raw_parts</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token plain">ptr</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"> len</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(212, 212, 212)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token punctuation" style="color:rgb(212, 212, 212)">}</span><br></span></code></pre>
                              </div>
                            </div>
                            <p>
                              For inline unsafe blocks, use the
                              <code>SAFETY:</code> comment directly above the
                              unsafe code:
                            </p>
                            <div
                              class="language-rust codeBlockContainer_Ckt0 theme-code-block"
                              style="
                                --prism-color: #9cdcfe;
                                --prism-background-color: #1e1e1e;
                              "
                            >
                              <div class="codeBlockContent_QJqH">
                                <pre
                                  tabindex="0"
                                  class="prism-code language-rust codeBlock_bY9V thin-scrollbar"
                                  style="
                                    color: #9cdcfe;
                                    background-color: #1e1e1e;
                                  "
                                ><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9CDCFE"><span class="token keyword" style="color:rgb(86, 156, 214)">impl</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(78, 201, 176)">Send</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(86, 156, 214)">for</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(78, 201, 176)">MessageBus</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(212, 212, 212)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token keyword" style="color:rgb(86, 156, 214)">fn</span><span class="token plain"> </span><span class="token function-definition function" style="color:rgb(220, 220, 170)">send</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token operator" style="color:rgb(212, 212, 212)">&amp;</span><span class="token keyword" style="color:rgb(86, 156, 214)">self</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(212, 212, 212)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">        </span><span class="token comment" style="color:rgb(106, 153, 85)">// SAFETY: Message bus is not meant to be passed between threads</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">        </span><span class="token keyword" style="color:rgb(86, 156, 214)">unsafe</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(212, 212, 212)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">            </span><span class="token comment" style="color:rgb(106, 153, 85)">// unsafe operation here</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(212, 212, 212)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(212, 212, 212)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token punctuation" style="color:rgb(212, 212, 212)">}</span><br></span></code></pre>
                              </div>
                            </div>
                            <h3
                              class="anchor anchorWithHideOnScrollNavbar_WYt5"
                              id="testing-conventions"
                            >
                              Testing Conventions<a
                                href="#testing-conventions"
                                class="hash-link"
                                aria-label="Direct link to Testing Conventions"
                                title="Direct link to Testing Conventions"
                                >​</a
                              >
                            </h3>
                            <h4
                              class="anchor anchorWithHideOnScrollNavbar_WYt5"
                              id="test-organization"
                            >
                              Test Organization<a
                                href="#test-organization"
                                class="hash-link"
                                aria-label="Direct link to Test Organization"
                                title="Direct link to Test Organization"
                                >​</a
                              >
                            </h4>
                            <p>
                              Use consistent test module structure with section
                              separators:
                            </p>
                            <div
                              class="language-rust codeBlockContainer_Ckt0 theme-code-block"
                              style="
                                --prism-color: #9cdcfe;
                                --prism-background-color: #1e1e1e;
                              "
                            >
                              <div class="codeBlockContent_QJqH">
                                <pre
                                  tabindex="0"
                                  class="prism-code language-rust codeBlock_bY9V thin-scrollbar"
                                  style="
                                    color: #9cdcfe;
                                    background-color: #1e1e1e;
                                  "
                                ><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9CDCFE"><span class="token comment" style="color:rgb(106, 153, 85)">////////////////////////////////////////////////////////////////////////////////</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token comment" style="color:rgb(106, 153, 85)">// Tests</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token comment" style="color:rgb(106, 153, 85)">////////////////////////////////////////////////////////////////////////////////</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token attribute attr-name" style="color:rgb(156, 220, 254)">#[cfg(test)]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token keyword" style="color:rgb(86, 156, 214)">mod</span><span class="token plain"> </span><span class="token module-declaration namespace">tests</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(212, 212, 212)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token keyword" style="color:rgb(86, 156, 214)">use</span><span class="token plain"> </span><span class="token namespace">rstest</span><span class="token namespace punctuation" style="color:rgb(212, 212, 212)">::</span><span class="token plain">rstest</span><span class="token punctuation" style="color:rgb(212, 212, 212)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token keyword" style="color:rgb(86, 156, 214)">use</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(86, 156, 214)">super</span><span class="token punctuation" style="color:rgb(212, 212, 212)">::</span><span class="token operator" style="color:rgb(212, 212, 212)">*</span><span class="token punctuation" style="color:rgb(212, 212, 212)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token keyword" style="color:rgb(86, 156, 214)">use</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(86, 156, 214)">crate</span><span class="token module-declaration namespace punctuation" style="color:rgb(212, 212, 212)">::</span><span class="token module-declaration namespace">identifiers</span><span class="token module-declaration namespace punctuation" style="color:rgb(212, 212, 212)">::</span><span class="token punctuation" style="color:rgb(212, 212, 212)">{</span><span class="token class-name" style="color:rgb(78, 201, 176)">Symbol</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"> </span><span class="token namespace">stubs</span><span class="token namespace punctuation" style="color:rgb(212, 212, 212)">::</span><span class="token operator" style="color:rgb(212, 212, 212)">*</span><span class="token punctuation" style="color:rgb(212, 212, 212)">}</span><span class="token punctuation" style="color:rgb(212, 212, 212)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token attribute attr-name" style="color:rgb(156, 220, 254)">#[rstest]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token keyword" style="color:rgb(86, 156, 214)">fn</span><span class="token plain"> </span><span class="token function-definition function" style="color:rgb(220, 220, 170)">test_string_reprs</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token plain">symbol_eth_perp</span><span class="token punctuation" style="color:rgb(212, 212, 212)">:</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(78, 201, 176)">Symbol</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(212, 212, 212)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">        </span><span class="token macro property">assert_eq!</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token plain">symbol_eth_perp</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token function" style="color:rgb(220, 220, 170)">as_str</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(206, 145, 120)">&quot;ETH-PERP&quot;</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token punctuation" style="color:rgb(212, 212, 212)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">        </span><span class="token macro property">assert_eq!</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token macro property">format!</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token string" style="color:rgb(206, 145, 120)">&quot;{symbol_eth_perp}&quot;</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(206, 145, 120)">&quot;ETH-PERP&quot;</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token punctuation" style="color:rgb(212, 212, 212)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(212, 212, 212)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token punctuation" style="color:rgb(212, 212, 212)">}</span><br></span></code></pre>
                              </div>
                            </div>
                            <h4
                              class="anchor anchorWithHideOnScrollNavbar_WYt5"
                              id="parameterized-testing"
                            >
                              Parameterized Testing<a
                                href="#parameterized-testing"
                                class="hash-link"
                                aria-label="Direct link to Parameterized Testing"
                                title="Direct link to Parameterized Testing"
                                >​</a
                              >
                            </h4>
                            <p>
                              Use the <code>rstest</code> attribute
                              consistently, and for parameterized tests:
                            </p>
                            <div
                              class="language-rust codeBlockContainer_Ckt0 theme-code-block"
                              style="
                                --prism-color: #9cdcfe;
                                --prism-background-color: #1e1e1e;
                              "
                            >
                              <div class="codeBlockContent_QJqH">
                                <pre
                                  tabindex="0"
                                  class="prism-code language-rust codeBlock_bY9V thin-scrollbar"
                                  style="
                                    color: #9cdcfe;
                                    background-color: #1e1e1e;
                                  "
                                ><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9CDCFE"><span class="token attribute attr-name" style="color:rgb(156, 220, 254)">#[rstest]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token attribute attr-name" style="color:rgb(156, 220, 254)">#[case(</span><span class="token attribute attr-name string" style="color:rgb(206, 145, 120)">&quot;AUDUSD&quot;</span><span class="token attribute attr-name" style="color:rgb(156, 220, 254)">, false)]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token attribute attr-name" style="color:rgb(156, 220, 254)">#[case(</span><span class="token attribute attr-name string" style="color:rgb(206, 145, 120)">&quot;AUD/USD&quot;</span><span class="token attribute attr-name" style="color:rgb(156, 220, 254)">, false)]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token attribute attr-name" style="color:rgb(156, 220, 254)">#[case(</span><span class="token attribute attr-name string" style="color:rgb(206, 145, 120)">&quot;CL.FUT&quot;</span><span class="token attribute attr-name" style="color:rgb(156, 220, 254)">, true)]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token keyword" style="color:rgb(86, 156, 214)">fn</span><span class="token plain"> </span><span class="token function-definition function" style="color:rgb(220, 220, 170)">test_symbol_is_composite</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token attribute attr-name" style="color:rgb(156, 220, 254)">#[case]</span><span class="token plain"> input</span><span class="token punctuation" style="color:rgb(212, 212, 212)">:</span><span class="token plain"> </span><span class="token operator" style="color:rgb(212, 212, 212)">&amp;</span><span class="token keyword" style="color:rgb(86, 156, 214)">str</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"> </span><span class="token attribute attr-name" style="color:rgb(156, 220, 254)">#[case]</span><span class="token plain"> expected</span><span class="token punctuation" style="color:rgb(212, 212, 212)">:</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(86, 156, 214)">bool</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(212, 212, 212)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token keyword" style="color:rgb(86, 156, 214)">let</span><span class="token plain"> symbol </span><span class="token operator" style="color:rgb(212, 212, 212)">=</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(78, 201, 176)">Symbol</span><span class="token punctuation" style="color:rgb(212, 212, 212)">::</span><span class="token function" style="color:rgb(220, 220, 170)">new</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token plain">input</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token punctuation" style="color:rgb(212, 212, 212)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token macro property">assert_eq!</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token plain">symbol</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token function" style="color:rgb(220, 220, 170)">is_composite</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"> expected</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token punctuation" style="color:rgb(212, 212, 212)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token punctuation" style="color:rgb(212, 212, 212)">}</span><br></span></code></pre>
                              </div>
                            </div>
                            <h4
                              class="anchor anchorWithHideOnScrollNavbar_WYt5"
                              id="test-naming"
                            >
                              Test Naming<a
                                href="#test-naming"
                                class="hash-link"
                                aria-label="Direct link to Test Naming"
                                title="Direct link to Test Naming"
                                >​</a
                              >
                            </h4>
                            <p>
                              Use descriptive test names that explain the
                              scenario:
                            </p>
                            <div
                              class="language-rust codeBlockContainer_Ckt0 theme-code-block"
                              style="
                                --prism-color: #9cdcfe;
                                --prism-background-color: #1e1e1e;
                              "
                            >
                              <div class="codeBlockContent_QJqH">
                                <pre
                                  tabindex="0"
                                  class="prism-code language-rust codeBlock_bY9V thin-scrollbar"
                                  style="
                                    color: #9cdcfe;
                                    background-color: #1e1e1e;
                                  "
                                ><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9CDCFE"><span class="token keyword" style="color:rgb(86, 156, 214)">fn</span><span class="token plain"> </span><span class="token function-definition function" style="color:rgb(220, 220, 170)">test_sma_with_no_inputs</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token keyword" style="color:rgb(86, 156, 214)">fn</span><span class="token plain"> </span><span class="token function-definition function" style="color:rgb(220, 220, 170)">test_sma_with_single_input</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token keyword" style="color:rgb(86, 156, 214)">fn</span><span class="token plain"> </span><span class="token function-definition function" style="color:rgb(220, 220, 170)">test_symbol_is_composite</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><br></span></code></pre>
                              </div>
                            </div>
                            <h2
                              class="anchor anchorWithHideOnScrollNavbar_WYt5"
                              id="unsafe-rust"
                            >
                              Unsafe Rust<a
                                href="#unsafe-rust"
                                class="hash-link"
                                aria-label="Direct link to Unsafe Rust"
                                title="Direct link to Unsafe Rust"
                                >​</a
                              >
                            </h2>
                            <p>
                              It will be necessary to write
                              <code>unsafe</code> Rust code to be able to
                              achieve the value of interoperating between Cython
                              and Rust. The ability to step outside the
                              boundaries of safe Rust is what makes it possible
                              to implement many of the most fundamental features
                              of the Rust language itself, just as C and C++ are
                              used to implement their own standard libraries.
                            </p>
                            <p>
                              Great care will be taken with the use of Rusts
                              <code>unsafe</code> facility - which just enables
                              a small set of additional language features,
                              thereby changing the contract between the
                              interface and caller, shifting some responsibility
                              for guaranteeing correctness from the Rust
                              compiler, and onto us. The goal is to realize the
                              advantages of the <code>unsafe</code> facility,
                              whilst avoiding <em>any</em> undefined behavior.
                              The definition for what the Rust language
                              designers consider undefined behavior can be found
                              in the
                              <a
                                href="https://doc.rust-lang.org/stable/reference/behavior-considered-undefined.html"
                                target="_blank"
                                rel="noopener noreferrer"
                                >language reference</a
                              >.
                            </p>
                            <h3
                              class="anchor anchorWithHideOnScrollNavbar_WYt5"
                              id="safety-policy"
                            >
                              Safety Policy<a
                                href="#safety-policy"
                                class="hash-link"
                                aria-label="Direct link to Safety Policy"
                                title="Direct link to Safety Policy"
                                >​</a
                              >
                            </h3>
                            <p>
                              To maintain correctness, any use of
                              <code>unsafe</code> Rust must follow our policy:
                            </p>
                            <ul>
                              <li>
                                If a function is <code>unsafe</code> to call,
                                there <em>must</em> be a
                                <code>Safety</code> section in the documentation
                                explaining why the function is
                                <code>unsafe</code> and covering the invariants
                                which the function expects the callers to
                                uphold, and how to meet their obligations in
                                that contract.
                              </li>
                              <li>
                                Document why each function is
                                <code>unsafe</code> in its doc comment&#x27;s
                                Safety section, and cover all
                                <code>unsafe</code> blocks with unit tests.
                              </li>
                              <li>
                                Always include a <code>SAFETY:</code> comment
                                explaining why the unsafe operation is valid:
                              </li>
                            </ul>
                            <div
                              class="language-rust codeBlockContainer_Ckt0 theme-code-block"
                              style="
                                --prism-color: #9cdcfe;
                                --prism-background-color: #1e1e1e;
                              "
                            >
                              <div class="codeBlockContent_QJqH">
                                <pre
                                  tabindex="0"
                                  class="prism-code language-rust codeBlock_bY9V thin-scrollbar"
                                  style="
                                    color: #9cdcfe;
                                    background-color: #1e1e1e;
                                  "
                                ><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9CDCFE"><span class="token comment" style="color:rgb(106, 153, 85)">// SAFETY: Message bus is not meant to be passed between threads</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token attribute attr-name" style="color:rgb(156, 220, 254)">#[allow(unsafe_code)]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token keyword" style="color:rgb(86, 156, 214)">unsafe</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(86, 156, 214)">impl</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(78, 201, 176)">Send</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(86, 156, 214)">for</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(78, 201, 176)">MessageBus</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(212, 212, 212)">{</span><span class="token punctuation" style="color:rgb(212, 212, 212)">}</span><br></span></code></pre>
                              </div>
                            </div>
                            <h2
                              class="anchor anchorWithHideOnScrollNavbar_WYt5"
                              id="tooling-configuration"
                            >
                              Tooling Configuration<a
                                href="#tooling-configuration"
                                class="hash-link"
                                aria-label="Direct link to Tooling Configuration"
                                title="Direct link to Tooling Configuration"
                                >​</a
                              >
                            </h2>
                            <p>
                              The project uses several tools for code quality:
                            </p>
                            <ul>
                              <li>
                                <strong>rustfmt</strong>: Automatic code
                                formatting (see <code>rustfmt.toml</code>)
                              </li>
                              <li>
                                <strong>clippy</strong>: Linting and best
                                practices (see <code>clippy.toml</code>)
                              </li>
                              <li>
                                <strong>cbindgen</strong>: C header generation
                                for FFI
                              </li>
                            </ul>
                            <h2
                              class="anchor anchorWithHideOnScrollNavbar_WYt5"
                              id="resources"
                            >
                              Resources<a
                                href="#resources"
                                class="hash-link"
                                aria-label="Direct link to Resources"
                                title="Direct link to Resources"
                                >​</a
                              >
                            </h2>
                            <ul>
                              <li>
                                <a
                                  href="https://doc.rust-lang.org/nomicon/"
                                  target="_blank"
                                  rel="noopener noreferrer"
                                  >The Rustonomicon</a
                                >
                                - The Dark Arts of Unsafe Rust
                              </li>
                              <li>
                                <a
                                  href="https://doc.rust-lang.org/stable/reference/unsafety.html"
                                  target="_blank"
                                  rel="noopener noreferrer"
                                  >The Rust Reference - Unsafety</a
                                >
                              </li>
                              <li>
                                <a
                                  href="https://www.abubalay.com/blog/2020/08/22/safe-bindings-in-rust"
                                  target="_blank"
                                  rel="noopener noreferrer"
                                  >Safe Bindings in Rust - Russell Johnston</a
                                >
                              </li>
                              <li>
                                <a
                                  href="https://www.chromium.org/Home/chromium-security/memory-safety/rust-and-c-interoperability/"
                                  target="_blank"
                                  rel="noopener noreferrer"
                                  >Google - Rust and C interoperability</a
                                >
                              </li>
                            </ul>
                          </div>
                        </article>
                        <nav
                          class="docusaurus-mt-lg pagination-nav"
                          aria-label="Docs pages"
                        >
                          <a
                            class="pagination-nav__link pagination-nav__link--prev"
                            href="../cython/index.htm"
                            ><div class="pagination-nav__sublabel">
                              Previous
                            </div>
                            <div class="pagination-nav__label">Cython</div></a
                          ><a
                            class="pagination-nav__link pagination-nav__link--next"
                            href="../testing/index.htm"
                            ><div class="pagination-nav__sublabel">Next</div>
                            <div class="pagination-nav__label">Testing</div></a
                          >
                        </nav>
                      </div>
                    </div>
                    <div class="col col--3">
                      <div
                        class="tableOfContents_bqdL thin-scrollbar theme-doc-toc-desktop"
                      >
                        <ul
                          class="table-of-contents table-of-contents__left-border"
                        >
                          <li>
                            <a
                              href="#python-bindings"
                              class="table-of-contents__link toc-highlight"
                              >Python Bindings</a
                            >
                          </li>
                          <li>
                            <a
                              href="#code-style-and-conventions"
                              class="table-of-contents__link toc-highlight"
                              >Code Style and Conventions</a
                            >
                            <ul>
                              <li>
                                <a
                                  href="#file-header-requirements"
                                  class="table-of-contents__link toc-highlight"
                                  >File Header Requirements</a
                                >
                              </li>
                              <li>
                                <a
                                  href="#code-formatting"
                                  class="table-of-contents__link toc-highlight"
                                  >Code Formatting</a
                                >
                              </li>
                              <li>
                                <a
                                  href="#error-handling"
                                  class="table-of-contents__link toc-highlight"
                                  >Error Handling</a
                                >
                              </li>
                              <li>
                                <a
                                  href="#attribute-patterns"
                                  class="table-of-contents__link toc-highlight"
                                  >Attribute Patterns</a
                                >
                              </li>
                              <li>
                                <a
                                  href="#constructor-patterns"
                                  class="table-of-contents__link toc-highlight"
                                  >Constructor Patterns</a
                                >
                              </li>
                              <li>
                                <a
                                  href="#constants-and-naming-conventions"
                                  class="table-of-contents__link toc-highlight"
                                  >Constants and Naming Conventions</a
                                >
                              </li>
                              <li>
                                <a
                                  href="#re-export-patterns"
                                  class="table-of-contents__link toc-highlight"
                                  >Re-export Patterns</a
                                >
                              </li>
                              <li>
                                <a
                                  href="#documentation-standards"
                                  class="table-of-contents__link toc-highlight"
                                  >Documentation Standards</a
                                >
                              </li>
                              <li>
                                <a
                                  href="#testing-conventions"
                                  class="table-of-contents__link toc-highlight"
                                  >Testing Conventions</a
                                >
                              </li>
                            </ul>
                          </li>
                          <li>
                            <a
                              href="#unsafe-rust"
                              class="table-of-contents__link toc-highlight"
                              >Unsafe Rust</a
                            >
                            <ul>
                              <li>
                                <a
                                  href="#safety-policy"
                                  class="table-of-contents__link toc-highlight"
                                  >Safety Policy</a
                                >
                              </li>
                            </ul>
                          </li>
                          <li>
                            <a
                              href="#tooling-configuration"
                              class="table-of-contents__link toc-highlight"
                              >Tooling Configuration</a
                            >
                          </li>
                          <li>
                            <a
                              href="#resources"
                              class="table-of-contents__link toc-highlight"
                              >Resources</a
                            >
                          </li>
                        </ul>
                      </div>
                    </div>
                  </div>
                  <div class="footer-wrapper MuiBox-root css-0">
                    <div class="social-footer-box MuiBox-root css-0">
                      <style data-emotion="css 17rjyz3">
                        .css-17rjyz3 {
                          -webkit-text-decoration: underline;
                          text-decoration: underline;
                          text-decoration-color: rgba(25, 118, 210, 0.4);
                          padding: 12px;
                          margin-right: 10px;
                        }
                        .css-17rjyz3:hover {
                          text-decoration-color: inherit;
                        }</style
                      ><style data-emotion="css jl1bw5">
                        .css-jl1bw5 {
                          margin: 0;
                          font: inherit;
                          color: #1976d2;
                          -webkit-text-decoration: underline;
                          text-decoration: underline;
                          text-decoration-color: rgba(25, 118, 210, 0.4);
                          padding: 12px;
                          margin-right: 10px;
                        }
                        .css-jl1bw5:hover {
                          text-decoration-color: inherit;
                        }</style
                      ><a
                        class="MuiTypography-root MuiTypography-inherit MuiLink-root MuiLink-underlineAlways github-footer css-jl1bw5"
                        href="https://github.com/poseisysstems"
                        target="_blank"
                      ></a
                      ><a
                        class="MuiTypography-root MuiTypography-inherit MuiLink-root MuiLink-underlineAlways x-footer css-jl1bw5"
                        href="https://twitter.com/PoseiTrader"
                        target="_blank"
                      ></a>
                    </div>
                    <div class="footer-copyright">
                      © 2025 Posei Systems Pty Ltd. All rights reserved.
                    </div>
                  </div>
                </div>
              </div>
            </main>
          </div>
        </div>
      </div>
    </div>
  </body>
</html>
