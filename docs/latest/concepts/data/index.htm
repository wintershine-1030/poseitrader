<!DOCTYPE html>
<html
  lang="en"
  dir="ltr"
  class="docs-wrapper plugin-docs plugin-id-default docs-version-latest docs-doc-page docs-doc-id-concepts/data"
  data-has-hydrated="false"
>
  <head>
    <meta charset="UTF-8" />
    <meta name="generator" content="Docusaurus v3.8.1" />
    <title data-rh="true">Data | PoseiTrader Documentation</title>
    <meta
      data-rh="true"
      name="viewport"
      content="width=device-width,initial-scale=1"
    />
    <meta data-rh="true" name="twitter:card" content="summary_large_image" />
    <meta
      data-rh="true"
      property="og:image"
      content="docs/latestimg/docusaurus-social-card.jpg"
    />
    <meta
      data-rh="true"
      name="twitter:image"
      content="docs/latestimg/docusaurus-social-card.jpg"
    />
    <meta
      data-rh="true"
      property="og:url"
      content="docs/latestlatest/concepts/data"
    />
    <meta data-rh="true" property="og:locale" content="en" />
    <meta data-rh="true" name="docusaurus_locale" content="en" />
    <meta data-rh="true" name="docsearch:language" content="en" />
    <meta
      data-rh="true"
      name="keywords"
      content="Open-source trading platform, Algorithmic trading software, Event-driven backtesting, Live trading with no code changes, Trade any asset class, Low-latency trading execution, Python API for trading strategies, Custom market data integration, Futures and options trading, Crypto spot and derivatives trading, Equities trading simulation, FX spot trading, Sports betting markets trading, Fast backtesting strategies, Advanced trading orders, Rust-based trading platform, High-performance trading system, Nanosecond resolution market simulation, Trading across multiple venues, Trading platform for hedge funds, Seamless data integration, Customizable trading strategies, AI and ML trading strategies, Posei trading platform, Multi-venue trading, Unlimited backtesting strategies, Fast trading execution solutions, Realistic market simulations, Seamless trading API integration, PoseiTrader Documentation, Docs, PoseiTrader Docs"
    />
    <meta data-rh="true" name="title" content="PoseiTrader Documentation" />
    <meta data-rh="true" name="og:title" content="PoseiTrader Documentation" />
    <meta
      data-rh="true"
      name="og:description"
      content="PoseiTrader is a high-performance platform for automating trading strategies, built on the powerful Posei framework for backtesting and real-time trading."
    />
    <meta data-rh="true" name="og:image" content="img/preview.png" />
    <meta data-rh="true" name="og:url" content="/docs/latest" />
    <meta data-rh="true" name="docusaurus_version" content="latest" />
    <meta data-rh="true" name="docusaurus_tag" content="docs-default-latest" />
    <meta data-rh="true" name="docsearch:version" content="latest" />
    <meta
      data-rh="true"
      name="docsearch:docusaurus_tag"
      content="docs-default-latest"
    />
    <meta
      data-rh="true"
      property="og:title"
      content="Data | PoseiTrader Documentation"
    />
    <meta
      data-rh="true"
      name="description"
      content="The PoseiTrader platform provides a set of built-in data types specifically designed to represent a trading domain."
    />
    <meta
      data-rh="true"
      property="og:description"
      content="The PoseiTrader platform provides a set of built-in data types specifically designed to represent a trading domain."
    />
    <link data-rh="true" rel="icon" href="../../../img/shell.ico" />
    <link data-rh="true" rel="canonical" href="index.htm" />
    <link data-rh="true" rel="alternate" href="index.htm" hreflang="en" />
    <link
      data-rh="true"
      rel="alternate"
      href="index.htm"
      hreflang="x-default"
    />
    <link
      data-rh="true"
      rel="preconnect"
      href="https://CWRKEEL01M-dsn.algolia.net"
      crossorigin="anonymous"
    />
    <script data-rh="true" type="application/ld+json">
      {
        "@context": "https://schema.org",
        "@type": "BreadcrumbList",
        "itemListElement": [
          {
            "@type": "ListItem",
            "position": 1,
            "name": "Concepts",
            "item": "docs/latestlatest/concepts/"
          },
          {
            "@type": "ListItem",
            "position": 2,
            "name": "Data",
            "item": "docs/latestlatest/concepts/data"
          }
        ]
      }
    </script>
    <link
      rel="search"
      type="application/opensearchdescription+xml"
      title="PoseiTrader Documentation"
      href="../../../opensearch.xml"
    />
    <script>
      !(function () {
        var t = window.location.pathname;
        if (
          t.startsWith("/docs") &&
          !t.startsWith("/docs/latest") &&
          !t.startsWith("/docs/nightly")
        ) {
          var s = t.replace("/docs", "/docs/latest");
          window.location.href = s;
        }
      })();
    </script>
    <link rel="preconnect" href="https://www.google-analytics.com" />
    <link rel="preconnect" href="https://www.googletagmanager.com" />
    <script
      async
      src="https://www.googletagmanager.com/gtag/js?id=G-TR4XK597XK"
    ></script>
    <script>
      function gtag() {
        dataLayer.push(arguments);
      }
      (window.dataLayer = window.dataLayer || []),
        gtag("js", new Date()),
        gtag("config", "G-TR4XK597XK", { anonymize_ip: !0 });
    </script>
    <link rel="stylesheet" href="../../../assets/css/styles.0f0f692e.css" />
    <script
      src="../../../assets/js/runtime~main.92b727d5.js"
      defer="defer"
    ></script>
    <script src="../../../assets/js/main.1cd42d85.js" defer="defer"></script>
  </head>
  <body class="navigation-with-keyboard">
    <svg xmlns="http://www.w3.org/2000/svg" style="display: none">
      <defs>
        <symbol id="theme-svg-external-link" viewbox="0 0 24 24">
          <path
            fill="currentColor"
            d="M21 13v10h-21v-19h12v2h-10v15h17v-8h2zm3-12h-10.988l4.035 4-6.977 7.07 2.828 2.828 6.977-7.07 4.125 4.172v-11z"
          ></path>
        </symbol>
      </defs>
    </svg>
    <script>
      !(function () {
        var t = "dark";
        var e =
          (function () {
            try {
              return new URLSearchParams(window.location.search).get(
                "docusaurus-theme"
              );
            } catch (t) {}
          })() ||
          (function () {
            try {
              return window.localStorage.getItem("theme");
            } catch (t) {}
          })();
        document.documentElement.setAttribute("data-theme", e || t),
          document.documentElement.setAttribute("data-theme-choice", e || t);
      })(),
        (function () {
          try {
            const c = new URLSearchParams(window.location.search).entries();
            for (var [t, e] of c)
              if (t.startsWith("docusaurus-data-")) {
                var a = t.replace("docusaurus-data-", "data-");
                document.documentElement.setAttribute(a, e);
              }
          } catch (t) {}
        })();
    </script>
    <div id="__docusaurus">
      <div role="region" aria-label="Skip to main content">
        <a
          class="skipToContent_fXgn"
          href="#__docusaurus_skipToContent_fallback"
          >Skip to main content</a
        >
      </div>
      <nav
        aria-label="Main"
        class="theme-layout-navbar navbar navbar--fixed-top navbarHideable_m1mJ"
      >
        <div class="navbar__inner">
          <div class="theme-layout-navbar-left navbar__items">
            <button
              aria-label="Toggle navigation bar"
              aria-expanded="false"
              class="navbar__toggle clean-btn"
              type="button"
            >
              <svg
                width="30"
                height="30"
                viewbox="0 0 30 30"
                aria-hidden="true"
              >
                <path
                  stroke="currentColor"
                  stroke-linecap="round"
                  stroke-miterlimit="10"
                  stroke-width="2"
                  d="M4 7h22M4 15h22M4 23h22"
                ></path>
              </svg></button
            ><a
              href="../../../../index.htm"
              target="_blank"
              rel="noopener noreferrer"
              class="navbar__brand"
              ><div class="navbar__logo">
                <img
                  src="../../../img/nt-black-large.webp"
                  alt="PoseiTrader Logo"
                  class="themedComponent_mlkZ themedComponent--light_NVdE"
                /><img
                  src="../../../img/nt-white-large.webp"
                  alt="PoseiTrader Logo"
                  class="themedComponent_mlkZ themedComponent--dark_xIcU"
                />
              </div>
              <b class="navbar__title text--truncate"></b
            ></a>
            <div class="navbar__item dropdown dropdown--hoverable">
              <a
                href="#"
                aria-haspopup="true"
                aria-expanded="false"
                role="button"
                class="navbar__link"
                >Version</a
              >
              <ul class="dropdown__menu">
                <li>
                  <a
                    aria-current="page"
                    class="dropdown__link dropdown__link--active"
                    href="../../index.htm"
                    >latest</a
                  >
                </li>
                <li>
                  <a class="dropdown__link" href="../../../nightly/index.html"
                    >nightly</a
                  >
                </li>
              </ul>
            </div>
            <div class="navbarSearchContainer_Bca1">
              <button
                type="button"
                class="DocSearch DocSearch-Button"
                aria-label="Search (Command+K)"
              >
                <span class="DocSearch-Button-Container"
                  ><svg
                    width="20"
                    height="20"
                    class="DocSearch-Search-Icon"
                    viewbox="0 0 20 20"
                    aria-hidden="true"
                  >
                    <path
                      d="M14.386 14.386l4.0877 4.0877-4.0877-4.0877c-2.9418 2.9419-7.7115 2.9419-10.6533 0-2.9419-2.9418-2.9419-7.7115 0-10.6533 2.9418-2.9419 7.7115-2.9419 10.6533 0 2.9419 2.9418 2.9419 7.7115 0 10.6533z"
                      stroke="currentColor"
                      fill="none"
                      fill-rule="evenodd"
                      stroke-linecap="round"
                      stroke-linejoin="round"
                    ></path></svg
                  ><span class="DocSearch-Button-Placeholder"
                    >Search</span
                  ></span
                ><span class="DocSearch-Button-Keys"></span>
              </button>
            </div>
          </div>
          <div
            class="theme-layout-navbar-right navbar__items navbar__items--right"
          >
            <a
              href="https://github.com/poseisysstems"
              target="_blank"
              rel="noopener noreferrer"
              class="navbar__item navbar__link header-github-link common-social"
              aria-label="GitHub repository"
            ></a>
            <a
              href="https://twitter.com/PoseiTrader"
              target="_blank"
              rel="noopener noreferrer"
              class="navbar__item navbar__link header-x-link common-social"
              aria-label="X"
            ></a>
             
          </div>
        </div>
        <div role="presentation" class="navbar-sidebar__backdrop"></div>
      </nav>
      <div
        id="__docusaurus_skipToContent_fallback"
        class="theme-layout-main main-wrapper mainWrapper_z2l0"
      >
        <div class="docsWrapper_hBAB">
          <button
            aria-label="Scroll back to top"
            class="clean-btn theme-back-to-top-button backToTopButton_sjWU"
            type="button"
          ></button>
          <div class="docRoot_UBD9">
            <aside class="theme-doc-sidebar-container docSidebarContainer_YfHR">
              <div class="sidebarViewport_aRkj">
                <div class="sidebar_njMd sidebarWithHideableNavbar_wUlq">
                  <a
                    href="../../../../index.htm"
                    target="_blank"
                    rel="noopener noreferrer"
                    tabindex="-1"
                    class="sidebarLogo_isFc"
                    ><img
                      src="../../../img/nt-black-large.webp"
                      alt="PoseiTrader Logo"
                      class="themedComponent_mlkZ themedComponent--light_NVdE" /><img
                      src="../../../img/nt-white-large.webp"
                      alt="PoseiTrader Logo"
                      class="themedComponent_mlkZ themedComponent--dark_xIcU" /><b></b
                  ></a>
                  <nav
                    aria-label="Docs sidebar"
                    class="menu thin-scrollbar menu_SIkG"
                  >
                    <ul class="theme-doc-sidebar-menu menu__list">
                      <li
                        class="theme-doc-sidebar-item-link theme-doc-sidebar-item-link-level-1 menu__list-item"
                      >
                        <a class="menu__link" href="../../index.htm"
                          >PoseiTrader Documentation</a
                        >
                      </li>
                      <li
                        class="theme-doc-sidebar-item-category theme-doc-sidebar-item-category-level-1 menu__list-item menu__list-item--collapsed"
                      >
                        <div class="menu__list-item-collapsible">
                          <a
                            class="menu__link menu__link--sublist"
                            href="../../getting_started/index.htm"
                            >Getting Started</a
                          ><button
                            aria-label="Expand sidebar category &#x27;Getting Started&#x27;"
                            aria-expanded="false"
                            type="button"
                            class="clean-btn menu__caret"
                          ></button>
                        </div>
                      </li>
                      <li
                        class="theme-doc-sidebar-item-category theme-doc-sidebar-item-category-level-1 menu__list-item"
                      >
                        <div class="menu__list-item-collapsible">
                          <a
                            class="menu__link menu__link--sublist menu__link--active"
                            href="../index.htm"
                            >Concepts</a
                          ><button
                            aria-label="Collapse sidebar category &#x27;Concepts&#x27;"
                            aria-expanded="true"
                            type="button"
                            class="clean-btn menu__caret"
                          ></button>
                        </div>
                        <ul class="menu__list">
                          <li
                            class="theme-doc-sidebar-item-link theme-doc-sidebar-item-link-level-2 menu__list-item"
                          >
                            <a
                              class="menu__link"
                              tabindex="0"
                              href="../overview/index.htm"
                              >Overview</a
                            >
                          </li>
                          <li
                            class="theme-doc-sidebar-item-link theme-doc-sidebar-item-link-level-2 menu__list-item"
                          >
                            <a
                              class="menu__link"
                              tabindex="0"
                              href="../architecture/index.htm"
                              >Architecture</a
                            >
                          </li>
                          <li
                            class="theme-doc-sidebar-item-link theme-doc-sidebar-item-link-level-2 menu__list-item"
                          >
                            <a
                              class="menu__link"
                              tabindex="0"
                              href="../actors/index.htm"
                              >Actors</a
                            >
                          </li>
                          <li
                            class="theme-doc-sidebar-item-link theme-doc-sidebar-item-link-level-2 menu__list-item"
                          >
                            <a
                              class="menu__link"
                              tabindex="0"
                              href="../strategies/index.htm"
                              >Strategies</a
                            >
                          </li>
                          <li
                            class="theme-doc-sidebar-item-link theme-doc-sidebar-item-link-level-2 menu__list-item"
                          >
                            <a
                              class="menu__link"
                              tabindex="0"
                              href="../instruments/index.htm"
                              >Instruments</a
                            >
                          </li>
                          <li
                            class="theme-doc-sidebar-item-link theme-doc-sidebar-item-link-level-2 menu__list-item"
                          >
                            <a
                              class="menu__link menu__link--active"
                              aria-current="page"
                              tabindex="0"
                              href="index.htm"
                              >Data</a
                            >
                          </li>
                          <li
                            class="theme-doc-sidebar-item-link theme-doc-sidebar-item-link-level-2 menu__list-item"
                          >
                            <a
                              class="menu__link"
                              tabindex="0"
                              href="../execution/index.htm"
                              >Execution</a
                            >
                          </li>
                          <li
                            class="theme-doc-sidebar-item-link theme-doc-sidebar-item-link-level-2 menu__list-item"
                          >
                            <a
                              class="menu__link"
                              tabindex="0"
                              href="../orders/index.htm"
                              >Orders</a
                            >
                          </li>
                          <li
                            class="theme-doc-sidebar-item-link theme-doc-sidebar-item-link-level-2 menu__list-item"
                          >
                            <a
                              class="menu__link"
                              tabindex="0"
                              href="../cache/index.htm"
                              >Cache</a
                            >
                          </li>
                          <li
                            class="theme-doc-sidebar-item-link theme-doc-sidebar-item-link-level-2 menu__list-item"
                          >
                            <a
                              class="menu__link"
                              tabindex="0"
                              href="../message_bus/index.htm"
                              >Message Bus</a
                            >
                          </li>
                          <li
                            class="theme-doc-sidebar-item-link theme-doc-sidebar-item-link-level-2 menu__list-item"
                          >
                            <a
                              class="menu__link"
                              tabindex="0"
                              href="../portfolio/index.htm"
                              >Portfolio</a
                            >
                          </li>
                          <li
                            class="theme-doc-sidebar-item-link theme-doc-sidebar-item-link-level-2 menu__list-item"
                          >
                            <a
                              class="menu__link"
                              tabindex="0"
                              href="../logging/index.htm"
                              >Logging</a
                            >
                          </li>
                          <li
                            class="theme-doc-sidebar-item-link theme-doc-sidebar-item-link-level-2 menu__list-item"
                          >
                            <a
                              class="menu__link"
                              tabindex="0"
                              href="../backtesting/index.htm"
                              >Backtesting</a
                            >
                          </li>
                          <li
                            class="theme-doc-sidebar-item-link theme-doc-sidebar-item-link-level-2 menu__list-item"
                          >
                            <a
                              class="menu__link"
                              tabindex="0"
                              href="../live/index.htm"
                              >Live Trading</a
                            >
                          </li>
                          <li
                            class="theme-doc-sidebar-item-link theme-doc-sidebar-item-link-level-2 menu__list-item"
                          >
                            <a
                              class="menu__link"
                              tabindex="0"
                              href="../adapters/index.htm"
                              >Adapters</a
                            >
                          </li>
                        </ul>
                      </li>
                      <li
                        class="theme-doc-sidebar-item-category theme-doc-sidebar-item-category-level-1 menu__list-item menu__list-item--collapsed"
                      >
                        <div class="menu__list-item-collapsible">
                          <a
                            class="menu__link menu__link--sublist"
                            href="../../tutorials/index.htm"
                            >Tutorials</a
                          ><button
                            aria-label="Expand sidebar category &#x27;Tutorials&#x27;"
                            aria-expanded="false"
                            type="button"
                            class="clean-btn menu__caret"
                          ></button>
                        </div>
                      </li>
                      <li
                        class="theme-doc-sidebar-item-category theme-doc-sidebar-item-category-level-1 menu__list-item menu__list-item--collapsed"
                      >
                        <div class="menu__list-item-collapsible">
                          <a
                            class="menu__link menu__link--sublist"
                            href="../../integrations/index.htm"
                            >Integrations</a
                          ><button
                            aria-label="Expand sidebar category &#x27;Integrations&#x27;"
                            aria-expanded="false"
                            type="button"
                            class="clean-btn menu__caret"
                          ></button>
                        </div>
                      </li>
                      <li
                        class="theme-doc-sidebar-item-category theme-doc-sidebar-item-category-level-1 menu__list-item menu__list-item--collapsed"
                      >
                        <div class="menu__list-item-collapsible">
                          <a
                            class="menu__link menu__link--sublist"
                            href="../../api_reference/index.htm"
                            >Python API</a
                          ><button
                            aria-label="Expand sidebar category &#x27;Python API&#x27;"
                            aria-expanded="false"
                            type="button"
                            class="clean-btn menu__caret"
                          ></button>
                        </div>
                      </li>
                      <li
                        class="theme-doc-sidebar-item-link theme-doc-sidebar-item-link-level-1 menu__list-item"
                      >
                        <a
                          href="../../../core-latest/index.html"
                          target="_blank"
                          rel="noopener noreferrer"
                          class="menu__link menuExternalLink_NmtK"
                          >Rust API<svg
                            width="13.5"
                            height="13.5"
                            aria-hidden="true"
                            class="iconExternalLink_nPIU"
                          >
                            <use href="#theme-svg-external-link"></use></svg
                        ></a>
                      </li>
                      <li
                        class="theme-doc-sidebar-item-category theme-doc-sidebar-item-category-level-1 menu__list-item menu__list-item--collapsed"
                      >
                        <div class="menu__list-item-collapsible">
                          <a
                            class="menu__link menu__link--sublist"
                            href="../../developer_guide/index.htm"
                            >Developer Guide</a
                          ><button
                            aria-label="Expand sidebar category &#x27;Developer Guide&#x27;"
                            aria-expanded="false"
                            type="button"
                            class="clean-btn menu__caret"
                          ></button>
                        </div>
                      </li>
                    </ul>
                  </nav>
                </div>
              </div>
            </aside>
            <main class="docMainContainer_TBSr">
              <div class="container padding-top--md padding-bottom--lg">
                <div>
                  <div class="row">
                    <div class="col docItemCol_VOVn">
                      <div class="docItemContainer_Djhp">
                        <article>
                          <nav
                            class="theme-doc-breadcrumbs breadcrumbsContainer_Z_bl"
                            aria-label="Breadcrumbs"
                          >
                            <ul class="breadcrumbs">
                              <li class="breadcrumbs__item">
                                <a class="breadcrumbs__link" href="../index.htm"
                                  ><span>Concepts</span></a
                                >
                              </li>
                              <li
                                class="breadcrumbs__item breadcrumbs__item--active"
                              >
                                <span class="breadcrumbs__link">Data</span>
                              </li>
                            </ul>
                          </nav>
                          <span
                            class="theme-doc-version-badge badge badge--secondary"
                            >Version: latest</span
                          >
                          <div
                            class="tocCollapsible_ETCw theme-doc-toc-mobile tocMobile_ITEo"
                          >
                            <button
                              type="button"
                              class="clean-btn tocCollapsibleButton_TO0P"
                            >
                              On this page
                            </button>
                          </div>
                          <div class="theme-doc-markdown markdown">
                            <header><h1>Data</h1></header>
                            <p>
                              The PoseiTrader platform provides a set of
                              built-in data types specifically designed to
                              represent a trading domain. These data types
                              include:
                            </p>
                            <ul>
                              <li>
                                <code>OrderBookDelta</code> (L1/L2/L3):
                                Represents the most granular order book updates.
                              </li>
                              <li>
                                <code>OrderBookDeltas</code> (L1/L2/L3): Batches
                                multiple order book deltas for more efficient
                                processing.
                              </li>
                              <li>
                                <code>OrderBookDepth10</code>: Aggregated order
                                book snapshot (up to 10 levels per bid and ask
                                side).
                              </li>
                              <li>
                                <code>QuoteTick</code>: Represents the best bid
                                and ask prices along with their sizes at the
                                top-of-book.
                              </li>
                              <li>
                                <code>TradeTick</code>: A single trade/match
                                event between counterparties.
                              </li>
                              <li>
                                <code>Bar</code>: OHLCV (Open, High, Low, Close,
                                Volume) bar/candle, aggregated using a specified
                                <em>aggregation method</em>.
                              </li>
                              <li>
                                <code>InstrumentStatus</code>: An
                                instrument-level status event.
                              </li>
                              <li>
                                <code>InstrumentClose</code>: The closing price
                                of an instrument.
                              </li>
                            </ul>
                            <p>
                              PoseiTrader is designed primarily to operate on
                              granular order book data, providing the highest
                              realism for execution simulations in backtesting.
                              However, backtests can also be conducted on any of
                              the supported market data types, depending on the
                              desired simulation fidelity.
                            </p>
                            <h2
                              class="anchor anchorWithHideOnScrollNavbar_WYt5"
                              id="order-books"
                            >
                              Order books<a
                                href="#order-books"
                                class="hash-link"
                                aria-label="Direct link to Order books"
                                title="Direct link to Order books"
                                >​</a
                              >
                            </h2>
                            <p>
                              A high-performance order book implemented in Rust
                              is available to maintain order book state based on
                              provided data.
                            </p>
                            <p>
                              <code>OrderBook</code> instances are maintained
                              per instrument for both backtesting and live
                              trading, with the following book types available:
                            </p>
                            <ul>
                              <li>
                                <code>L3_MBO</code>:
                                <strong>Market by order (MBO)</strong> or L3
                                data, uses every order book event at every price
                                level, keyed by order ID.
                              </li>
                              <li>
                                <code>L2_MBP</code>:
                                <strong>Market by price (MBP)</strong> or L2
                                data, aggregates order book events by price
                                level.
                              </li>
                              <li>
                                <code>L1_MBP</code>:
                                <strong>Market by price (MBP)</strong> or L1
                                data, also known as best bid and offer (BBO),
                                captures only top-level updates.
                              </li>
                            </ul>
                            <div
                              class="theme-admonition theme-admonition-note admonition_xJq3 alert alert--secondary"
                            >
                              <div class="admonitionHeading_Gvgb">
                                <span class="admonitionIcon_Rf37"
                                  ><svg viewbox="0 0 14 16">
                                    <path
                                      fill-rule="evenodd"
                                      d="M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"
                                    ></path></svg></span
                                >note
                              </div>
                              <div class="admonitionContent_BuS1">
                                <p>
                                  Top-of-book data, such as
                                  <code>QuoteTick</code>,
                                  <code>TradeTick</code> and <code>Bar</code>,
                                  can also be used for backtesting, with markets
                                  operating on <code>L1_MBP</code> book types.
                                </p>
                              </div>
                            </div>
                            <h2
                              class="anchor anchorWithHideOnScrollNavbar_WYt5"
                              id="instruments"
                            >
                              Instruments<a
                                href="#instruments"
                                class="hash-link"
                                aria-label="Direct link to Instruments"
                                title="Direct link to Instruments"
                                >​</a
                              >
                            </h2>
                            <p>
                              The following instrument definitions are
                              available:
                            </p>
                            <ul>
                              <li>
                                <code>Betting</code>: Represents an instrument
                                in a betting market.
                              </li>
                              <li>
                                <code>BinaryOption</code>: Represents a generic
                                binary option instrument.
                              </li>
                              <li>
                                <code>Cfd</code>: Represents a Contract for
                                Difference (CFD) instrument.
                              </li>
                              <li>
                                <code>Commodity</code>: Represents a commodity
                                instrument in a spot/cash market.
                              </li>
                              <li>
                                <code>CryptoFuture</code>: Represents a
                                deliverable futures contract instrument, with
                                crypto assets as underlying and for settlement.
                              </li>
                              <li>
                                <code>CryptoPerpetual</code>: Represents a
                                crypto perpetual futures contract instrument
                                (a.k.a. perpetual swap).
                              </li>
                              <li>
                                <code>CurrencyPair</code>: Represents a generic
                                currency pair instrument in a spot/cash market.
                              </li>
                              <li>
                                <code>Equity</code>: Represents a generic equity
                                instrument.
                              </li>
                              <li>
                                <code>FuturesContract</code>: Represents a
                                generic deliverable futures contract instrument.
                              </li>
                              <li>
                                <code>FuturesSpread</code>: Represents a generic
                                deliverable futures spread instrument.
                              </li>
                              <li>
                                <code>Index</code>: Represents a generic index
                                instrument.
                              </li>
                              <li>
                                <code>OptionContract</code>: Represents a
                                generic option contract instrument.
                              </li>
                              <li>
                                <code>OptionSpread</code>: Represents a generic
                                option spread instrument.
                              </li>
                              <li>
                                <code>Synthetic</code>: Represents a synthetic
                                instrument with prices derived from component
                                instruments using a formula.
                              </li>
                            </ul>
                            <h2
                              class="anchor anchorWithHideOnScrollNavbar_WYt5"
                              id="bars-and-aggregation"
                            >
                              Bars and aggregation<a
                                href="#bars-and-aggregation"
                                class="hash-link"
                                aria-label="Direct link to Bars and aggregation"
                                title="Direct link to Bars and aggregation"
                                >​</a
                              >
                            </h2>
                            <h3
                              class="anchor anchorWithHideOnScrollNavbar_WYt5"
                              id="introduction-to-bars"
                            >
                              Introduction to Bars<a
                                href="#introduction-to-bars"
                                class="hash-link"
                                aria-label="Direct link to Introduction to Bars"
                                title="Direct link to Introduction to Bars"
                                >​</a
                              >
                            </h3>
                            <p>
                              A <em>bar</em> (also known as a candle,
                              candlestick or kline) is a data structure that
                              represents price and volume information over a
                              specific period, including:
                            </p>
                            <ul>
                              <li>Opening price</li>
                              <li>Highest price</li>
                              <li>Lowest price</li>
                              <li>Closing price</li>
                              <li>
                                Traded volume (or ticks as a volume proxy)
                              </li>
                            </ul>
                            <p>
                              These bars are generated using an
                              <em>aggregation method</em>, which groups data
                              based on specific criteria.
                            </p>
                            <h3
                              class="anchor anchorWithHideOnScrollNavbar_WYt5"
                              id="purpose-of-data-aggregation"
                            >
                              Purpose of data aggregation<a
                                href="#purpose-of-data-aggregation"
                                class="hash-link"
                                aria-label="Direct link to Purpose of data aggregation"
                                title="Direct link to Purpose of data aggregation"
                                >​</a
                              >
                            </h3>
                            <p>
                              Data aggregation in PoseiTrader transforms
                              granular market data into structured bars or
                              candles for several reasons:
                            </p>
                            <ul>
                              <li>
                                To provide data for technical indicators and
                                strategy development.
                              </li>
                              <li>
                                Because time-aggregated data (like minute bars)
                                are often sufficient for many strategies.
                              </li>
                              <li>
                                To reduce costs compared to high-frequency
                                L1/L2/L3 market data.
                              </li>
                            </ul>
                            <h3
                              class="anchor anchorWithHideOnScrollNavbar_WYt5"
                              id="aggregation-methods"
                            >
                              Aggregation methods<a
                                href="#aggregation-methods"
                                class="hash-link"
                                aria-label="Direct link to Aggregation methods"
                                title="Direct link to Aggregation methods"
                                >​</a
                              >
                            </h3>
                            <p>
                              The platform implements various aggregation
                              methods:
                            </p>

                            <table>
                              <thead>
                                <tr>
                                  <th style="text-align: left">Name</th>
                                  <th style="text-align: left">Description</th>
                                  <th style="text-align: left">Category</th>
                                </tr>
                              </thead>
                              <tbody>
                                <tr>
                                  <td style="text-align: left">
                                    <code>TICK</code>
                                  </td>
                                  <td style="text-align: left">
                                    Aggregation of a number of ticks.
                                  </td>
                                  <td style="text-align: left">Threshold</td>
                                </tr>
                                <tr>
                                  <td style="text-align: left">
                                    <code>TICK_IMBALANCE</code>
                                  </td>
                                  <td style="text-align: left">
                                    Aggregation of the buy/sell imbalance of
                                    ticks.
                                  </td>
                                  <td style="text-align: left">Threshold</td>
                                </tr>
                                <tr>
                                  <td style="text-align: left">
                                    <code>TICK_RUNS</code>
                                  </td>
                                  <td style="text-align: left">
                                    Aggregation of sequential buy/sell runs of
                                    ticks.
                                  </td>
                                  <td style="text-align: left">Information</td>
                                </tr>
                                <tr>
                                  <td style="text-align: left">
                                    <code>VOLUME</code>
                                  </td>
                                  <td style="text-align: left">
                                    Aggregation of traded volume.
                                  </td>
                                  <td style="text-align: left">Threshold</td>
                                </tr>
                                <tr>
                                  <td style="text-align: left">
                                    <code>VOLUME_IMBALANCE</code>
                                  </td>
                                  <td style="text-align: left">
                                    Aggregation of the buy/sell imbalance of
                                    traded volume.
                                  </td>
                                  <td style="text-align: left">Threshold</td>
                                </tr>
                                <tr>
                                  <td style="text-align: left">
                                    <code>VOLUME_RUNS</code>
                                  </td>
                                  <td style="text-align: left">
                                    Aggregation of sequential runs of buy/sell
                                    traded volume.
                                  </td>
                                  <td style="text-align: left">Information</td>
                                </tr>
                                <tr>
                                  <td style="text-align: left">
                                    <code>VALUE</code>
                                  </td>
                                  <td style="text-align: left">
                                    Aggregation of the notional value of trades
                                    (also known as &quot;Dollar bars&quot;).
                                  </td>
                                  <td style="text-align: left">Threshold</td>
                                </tr>
                                <tr>
                                  <td style="text-align: left">
                                    <code>VALUE_IMBALANCE</code>
                                  </td>
                                  <td style="text-align: left">
                                    Aggregation of the buy/sell imbalance of
                                    trading by notional value.
                                  </td>
                                  <td style="text-align: left">Information</td>
                                </tr>
                                <tr>
                                  <td style="text-align: left">
                                    <code>VALUE_RUNS</code>
                                  </td>
                                  <td style="text-align: left">
                                    Aggregation of sequential buy/sell runs of
                                    trading by notional value.
                                  </td>
                                  <td style="text-align: left">Threshold</td>
                                </tr>
                                <tr>
                                  <td style="text-align: left">
                                    <code>MILLISECOND</code>
                                  </td>
                                  <td style="text-align: left">
                                    Aggregation of time intervals with
                                    millisecond granularity.
                                  </td>
                                  <td style="text-align: left">Time</td>
                                </tr>
                                <tr>
                                  <td style="text-align: left">
                                    <code>SECOND</code>
                                  </td>
                                  <td style="text-align: left">
                                    Aggregation of time intervals with second
                                    granularity.
                                  </td>
                                  <td style="text-align: left">Time</td>
                                </tr>
                                <tr>
                                  <td style="text-align: left">
                                    <code>MINUTE</code>
                                  </td>
                                  <td style="text-align: left">
                                    Aggregation of time intervals with minute
                                    granularity.
                                  </td>
                                  <td style="text-align: left">Time</td>
                                </tr>
                                <tr>
                                  <td style="text-align: left">
                                    <code>HOUR</code>
                                  </td>
                                  <td style="text-align: left">
                                    Aggregation of time intervals with hour
                                    granularity.
                                  </td>
                                  <td style="text-align: left">Time</td>
                                </tr>
                                <tr>
                                  <td style="text-align: left">
                                    <code>DAY</code>
                                  </td>
                                  <td style="text-align: left">
                                    Aggregation of time intervals with day
                                    granularity.
                                  </td>
                                  <td style="text-align: left">Time</td>
                                </tr>
                                <tr>
                                  <td style="text-align: left">
                                    <code>WEEK</code>
                                  </td>
                                  <td style="text-align: left">
                                    Aggregation of time intervals with week
                                    granularity.
                                  </td>
                                  <td style="text-align: left">Time</td>
                                </tr>
                                <tr>
                                  <td style="text-align: left">
                                    <code>MONTH</code>
                                  </td>
                                  <td style="text-align: left">
                                    Aggregation of time intervals with month
                                    granularity.
                                  </td>
                                  <td style="text-align: left">Time</td>
                                </tr>
                              </tbody>
                            </table>
                            <h3
                              class="anchor anchorWithHideOnScrollNavbar_WYt5"
                              id="types-of-aggregation"
                            >
                              Types of aggregation<a
                                href="#types-of-aggregation"
                                class="hash-link"
                                aria-label="Direct link to Types of aggregation"
                                title="Direct link to Types of aggregation"
                                >​</a
                              >
                            </h3>
                            <p>
                              PoseiTrader implements three distinct data
                              aggregation methods:
                            </p>
                            <ol>
                              <li>
                                <p>
                                  <strong>Trade-to-bar aggregation</strong>:
                                  Creates bars from
                                  <code>TradeTick</code> objects (executed
                                  trades)
                                </p>
                                <ul>
                                  <li>
                                    Use case: For strategies analyzing execution
                                    prices or when working directly with trade
                                    data.
                                  </li>
                                  <li>
                                    Always uses the <code>LAST</code> price type
                                    in the bar specification.
                                  </li>
                                </ul>
                              </li>
                              <li>
                                <p>
                                  <strong>Quote-to-bar aggregation</strong>:
                                  Creates bars from
                                  <code>QuoteTick</code> objects (bid/ask
                                  prices)
                                </p>
                                <ul>
                                  <li>
                                    Use case: For strategies focusing on bid/ask
                                    spreads or market depth analysis.
                                  </li>
                                  <li>
                                    Uses <code>BID</code>, <code>ASK</code>, or
                                    <code>MID</code> price types in the bar
                                    specification.
                                  </li>
                                </ul>
                              </li>
                              <li>
                                <p>
                                  <strong>Bar-to-bar aggregation</strong>:
                                  Creates larger-timeframe
                                  <code>Bar</code> objects from
                                  smaller-timeframe <code>Bar</code> objects
                                </p>
                                <ul>
                                  <li>
                                    Use case: For resampling existing smaller
                                    timeframe bars (1-minute) into larger
                                    timeframes (5-minute, hourly).
                                  </li>
                                  <li>
                                    Always requires the <code>@</code> symbol in
                                    the specification.
                                  </li>
                                </ul>
                              </li>
                            </ol>
                            <h3
                              class="anchor anchorWithHideOnScrollNavbar_WYt5"
                              id="bar-types-and-components"
                            >
                              Bar types and Components<a
                                href="#bar-types-and-components"
                                class="hash-link"
                                aria-label="Direct link to Bar types and Components"
                                title="Direct link to Bar types and Components"
                                >​</a
                              >
                            </h3>
                            <p>
                              PoseiTrader defines a unique
                              <em>bar type</em> (<code>BarType</code> class)
                              based on the following components:
                            </p>
                            <ul>
                              <li>
                                <strong>Instrument ID</strong>
                                (<code>InstrumentId</code>): Specifies the
                                particular instrument for the bar.
                              </li>
                              <li>
                                <strong>Bar Specification</strong>
                                (<code>BarSpecification</code>):
                                <ul>
                                  <li>
                                    <code>step</code>: Defines the interval or
                                    frequency of each bar.
                                  </li>
                                  <li>
                                    <code>aggregation</code>: Specifies the
                                    method used for data aggregation (see the
                                    above table).
                                  </li>
                                  <li>
                                    <code>price_type</code>: Indicates the price
                                    basis of the bar (e.g., bid, ask, mid,
                                    last).
                                  </li>
                                </ul>
                              </li>
                              <li>
                                <strong>Aggregation Source</strong>
                                (<code>AggregationSource</code>): Indicates
                                whether the bar was aggregated internally
                                (within Posei)
                              </li>
                              <li>
                                or externally (by a trading venue or data
                                provider).
                              </li>
                            </ul>
                            <p>
                              Bar types can also be classified as either
                              <em>standard</em> or <em>composite</em>:
                            </p>
                            <ul>
                              <li>
                                <strong>Standard</strong>: Generated from
                                granular market data, such as quote-ticks or
                                trade-ticks.
                              </li>
                              <li>
                                <strong>Composite</strong>: Derived from a
                                higher-granularity bar type through subsampling
                                (like 5-MINUTE bars aggregate from 1-MINUTE
                                bars).
                              </li>
                            </ul>
                            <h3
                              class="anchor anchorWithHideOnScrollNavbar_WYt5"
                              id="aggregation-sources"
                            >
                              Aggregation sources<a
                                href="#aggregation-sources"
                                class="hash-link"
                                aria-label="Direct link to Aggregation sources"
                                title="Direct link to Aggregation sources"
                                >​</a
                              >
                            </h3>
                            <p>
                              Bar data aggregation can be either
                              <em>internal</em> or <em>external</em>:
                            </p>
                            <ul>
                              <li>
                                <code>INTERNAL</code>: The bar is aggregated
                                inside the local Posei system boundary.
                              </li>
                              <li>
                                <code>EXTERNAL</code>: The bar is aggregated
                                outside the local Posei system boundary
                                (typically by a trading venue or data provider).
                              </li>
                            </ul>
                            <p>
                              For bar-to-bar aggregation, the target bar type is
                              always <code>INTERNAL</code> (since you&#x27;re
                              doing the aggregation within PoseiTrader), but the
                              source bars can be either <code>INTERNAL</code> or
                              <code>EXTERNAL</code>, i.e., you can aggregate
                              externally provided bars or already aggregated
                              internal bars.
                            </p>
                            <h3
                              class="anchor anchorWithHideOnScrollNavbar_WYt5"
                              id="defining-bar-types-with-string-syntax"
                            >
                              Defining Bar Types with String Syntax<a
                                href="#defining-bar-types-with-string-syntax"
                                class="hash-link"
                                aria-label="Direct link to Defining Bar Types with String Syntax"
                                title="Direct link to Defining Bar Types with String Syntax"
                                >​</a
                              >
                            </h3>
                            <h4
                              class="anchor anchorWithHideOnScrollNavbar_WYt5"
                              id="standard-bars"
                            >
                              Standard bars<a
                                href="#standard-bars"
                                class="hash-link"
                                aria-label="Direct link to Standard bars"
                                title="Direct link to Standard bars"
                                >​</a
                              >
                            </h4>
                            <p>
                              You can define standard bar types from strings
                              using the following convention:
                            </p>
                            <p>
                              <code
                                >{instrument_id}-{step}-{aggregation}-{price_type}-{INTERNAL
                                | EXTERNAL}</code
                              >
                            </p>
                            <p>
                              For example, to define a <code>BarType</code> for
                              AAPL trades (last price) on Nasdaq (XNAS) using a
                              5-minute interval aggregated from trades locally
                              by Posei:
                            </p>
                            <div
                              class="language-python codeBlockContainer_Ckt0 theme-code-block"
                              style="
                                --prism-color: #9cdcfe;
                                --prism-background-color: #1e1e1e;
                              "
                            >
                              <div class="codeBlockContent_QJqH">
                                <pre
                                  tabindex="0"
                                  class="prism-code language-python codeBlock_bY9V thin-scrollbar"
                                  style="
                                    color: #9cdcfe;
                                    background-color: #1e1e1e;
                                  "
                                ><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9CDCFE"><span class="token plain">bar_type </span><span class="token operator" style="color:rgb(212, 212, 212)">=</span><span class="token plain"> BarType</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">from_str</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token string" style="color:rgb(206, 145, 120)">&quot;AAPL.XNAS-5-MINUTE-LAST-INTERNAL&quot;</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><br></span></code></pre>
                              </div>
                            </div>
                            <h4
                              class="anchor anchorWithHideOnScrollNavbar_WYt5"
                              id="composite-bars"
                            >
                              Composite bars<a
                                href="#composite-bars"
                                class="hash-link"
                                aria-label="Direct link to Composite bars"
                                title="Direct link to Composite bars"
                                >​</a
                              >
                            </h4>
                            <p>
                              Composite bars are derived by aggregating
                              higher-granularity bars into the desired bar type.
                              To define a composite bar, use this convention:
                            </p>
                            <p>
                              <code
                                >{instrument_id}-{step}-{aggregation}-{price_type}-INTERNAL@{step}-{aggregation}-{INTERNAL
                                | EXTERNAL}</code
                              >
                            </p>
                            <p><strong>Notes</strong>:</p>
                            <ul>
                              <li>
                                The derived bar type must use an
                                <code>INTERNAL</code> aggregation source (since
                                this is how the bar is aggregated).
                              </li>
                              <li>
                                The sampled bar type must have a higher
                                granularity than the derived bar type.
                              </li>
                              <li>
                                The sampled instrument ID is inferred to match
                                that of the derived bar type.
                              </li>
                              <li>
                                Composite bars can be aggregated <em>from</em>
                                <code>INTERNAL</code> or
                                <code>EXTERNAL</code> aggregation sources.
                              </li>
                            </ul>
                            <p>
                              For example, to define a <code>BarType</code> for
                              AAPL trades (last price) on Nasdaq (XNAS) using a
                              5-minute interval aggregated locally by Posei,
                              from 1-minute interval bars aggregated externally:
                            </p>
                            <div
                              class="language-python codeBlockContainer_Ckt0 theme-code-block"
                              style="
                                --prism-color: #9cdcfe;
                                --prism-background-color: #1e1e1e;
                              "
                            >
                              <div class="codeBlockContent_QJqH">
                                <pre
                                  tabindex="0"
                                  class="prism-code language-python codeBlock_bY9V thin-scrollbar"
                                  style="
                                    color: #9cdcfe;
                                    background-color: #1e1e1e;
                                  "
                                ><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9CDCFE"><span class="token plain">bar_type </span><span class="token operator" style="color:rgb(212, 212, 212)">=</span><span class="token plain"> BarType</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">from_str</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token string" style="color:rgb(206, 145, 120)">&quot;AAPL.XNAS-5-MINUTE-LAST-INTERNAL@1-MINUTE-EXTERNAL&quot;</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><br></span></code></pre>
                              </div>
                            </div>
                            <h3
                              class="anchor anchorWithHideOnScrollNavbar_WYt5"
                              id="aggregation-syntax-examples"
                            >
                              Aggregation syntax examples<a
                                href="#aggregation-syntax-examples"
                                class="hash-link"
                                aria-label="Direct link to Aggregation syntax examples"
                                title="Direct link to Aggregation syntax examples"
                                >​</a
                              >
                            </h3>
                            <p>
                              The <code>BarType</code> string format encodes
                              both the target bar type and, optionally, the
                              source data type:
                            </p>
                            <div
                              class="language-text codeBlockContainer_Ckt0 theme-code-block"
                              style="
                                --prism-color: #9cdcfe;
                                --prism-background-color: #1e1e1e;
                              "
                            >
                              <div class="codeBlockContent_QJqH">
                                <pre
                                  tabindex="0"
                                  class="prism-code language-text codeBlock_bY9V thin-scrollbar"
                                  style="
                                    color: #9cdcfe;
                                    background-color: #1e1e1e;
                                  "
                                ><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9CDCFE"><span class="token plain">{instrument_id}-{step}-{aggregation}-{price_type}-{source}@{step}-{aggregation}-{source}</span><br></span></code></pre>
                              </div>
                            </div>
                            <p>
                              The part after the <code>@</code> symbol is
                              optional and only used for bar-to-bar aggregation:
                            </p>
                            <ul>
                              <li>
                                <strong>Without <code>@</code></strong
                                >: Aggregates from
                                <code>TradeTick</code> objects (when price_type
                                is <code>LAST</code>) or
                                <code>QuoteTick</code> objects (when price_type
                                is <code>BID</code>, <code>ASK</code>, or
                                <code>MID</code>).
                              </li>
                              <li>
                                <strong>With <code>@</code></strong
                                >: Aggregates from existing
                                <code>Bar</code> objects (specifying the source
                                bar type).
                              </li>
                            </ul>
                            <h4
                              class="anchor anchorWithHideOnScrollNavbar_WYt5"
                              id="trade-to-bar-example"
                            >
                              Trade-to-bar example<a
                                href="#trade-to-bar-example"
                                class="hash-link"
                                aria-label="Direct link to Trade-to-bar example"
                                title="Direct link to Trade-to-bar example"
                                >​</a
                              >
                            </h4>
                            <div
                              class="language-python codeBlockContainer_Ckt0 theme-code-block"
                              style="
                                --prism-color: #9cdcfe;
                                --prism-background-color: #1e1e1e;
                              "
                            >
                              <div class="codeBlockContent_QJqH">
                                <pre
                                  tabindex="0"
                                  class="prism-code language-python codeBlock_bY9V thin-scrollbar"
                                  style="
                                    color: #9cdcfe;
                                    background-color: #1e1e1e;
                                  "
                                ><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9CDCFE"><span class="token keyword" style="color:rgb(86, 156, 214)">def</span><span class="token plain"> </span><span class="token function" style="color:rgb(220, 220, 170)">on_start</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token plain">self</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token plain"> </span><span class="token operator" style="color:rgb(212, 212, 212)">-</span><span class="token operator" style="color:rgb(212, 212, 212)">&gt;</span><span class="token plain"> </span><span class="token boolean">None</span><span class="token punctuation" style="color:rgb(212, 212, 212)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token comment" style="color:rgb(106, 153, 85)"># Define a bar type for aggregating from TradeTick objects</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token comment" style="color:rgb(106, 153, 85)"># Uses price_type=LAST which indicates TradeTick data as source</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    bar_type </span><span class="token operator" style="color:rgb(212, 212, 212)">=</span><span class="token plain"> BarType</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">from_str</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token string" style="color:rgb(206, 145, 120)">&quot;6EH4.XCME-50-VOLUME-LAST-INTERNAL&quot;</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token comment" style="color:rgb(106, 153, 85)"># Request historical data (will receive bars in on_historical_data handler)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    self</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">request_bars</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token plain">bar_type</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token comment" style="color:rgb(106, 153, 85)"># Subscribe to live data (will receive bars in on_bar handler)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    self</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">subscribe_bars</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token plain">bar_type</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><br></span></code></pre>
                              </div>
                            </div>
                            <h4
                              class="anchor anchorWithHideOnScrollNavbar_WYt5"
                              id="quote-to-bar-example"
                            >
                              Quote-to-bar example<a
                                href="#quote-to-bar-example"
                                class="hash-link"
                                aria-label="Direct link to Quote-to-bar example"
                                title="Direct link to Quote-to-bar example"
                                >​</a
                              >
                            </h4>
                            <div
                              class="language-python codeBlockContainer_Ckt0 theme-code-block"
                              style="
                                --prism-color: #9cdcfe;
                                --prism-background-color: #1e1e1e;
                              "
                            >
                              <div class="codeBlockContent_QJqH">
                                <pre
                                  tabindex="0"
                                  class="prism-code language-python codeBlock_bY9V thin-scrollbar"
                                  style="
                                    color: #9cdcfe;
                                    background-color: #1e1e1e;
                                  "
                                ><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9CDCFE"><span class="token keyword" style="color:rgb(86, 156, 214)">def</span><span class="token plain"> </span><span class="token function" style="color:rgb(220, 220, 170)">on_start</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token plain">self</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token plain"> </span><span class="token operator" style="color:rgb(212, 212, 212)">-</span><span class="token operator" style="color:rgb(212, 212, 212)">&gt;</span><span class="token plain"> </span><span class="token boolean">None</span><span class="token punctuation" style="color:rgb(212, 212, 212)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token comment" style="color:rgb(106, 153, 85)"># Create 1-minute bars from ASK prices (in QuoteTick objects)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    bar_type_ask </span><span class="token operator" style="color:rgb(212, 212, 212)">=</span><span class="token plain"> BarType</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">from_str</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token string" style="color:rgb(206, 145, 120)">&quot;6EH4.XCME-1-MINUTE-ASK-INTERNAL&quot;</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token comment" style="color:rgb(106, 153, 85)"># Create 1-minute bars from BID prices (in QuoteTick objects)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    bar_type_bid </span><span class="token operator" style="color:rgb(212, 212, 212)">=</span><span class="token plain"> BarType</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">from_str</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token string" style="color:rgb(206, 145, 120)">&quot;6EH4.XCME-1-MINUTE-BID-INTERNAL&quot;</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token comment" style="color:rgb(106, 153, 85)"># Create 1-minute bars from MID prices (middle between ASK and BID prices in QuoteTick objects)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    bar_type_mid </span><span class="token operator" style="color:rgb(212, 212, 212)">=</span><span class="token plain"> BarType</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">from_str</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token string" style="color:rgb(206, 145, 120)">&quot;6EH4.XCME-1-MINUTE-MID-INTERNAL&quot;</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token comment" style="color:rgb(106, 153, 85)"># Request historical data and subscribe to live data</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    self</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">request_bars</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token plain">bar_type_ask</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token plain">    </span><span class="token comment" style="color:rgb(106, 153, 85)"># Historical bars processed in on_historical_data</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    self</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">subscribe_bars</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token plain">bar_type_ask</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token plain">  </span><span class="token comment" style="color:rgb(106, 153, 85)"># Live bars processed in on_bar</span><br></span></code></pre>
                              </div>
                            </div>
                            <h4
                              class="anchor anchorWithHideOnScrollNavbar_WYt5"
                              id="bar-to-bar-example"
                            >
                              Bar-to-bar example<a
                                href="#bar-to-bar-example"
                                class="hash-link"
                                aria-label="Direct link to Bar-to-bar example"
                                title="Direct link to Bar-to-bar example"
                                >​</a
                              >
                            </h4>
                            <div
                              class="language-python codeBlockContainer_Ckt0 theme-code-block"
                              style="
                                --prism-color: #9cdcfe;
                                --prism-background-color: #1e1e1e;
                              "
                            >
                              <div class="codeBlockContent_QJqH">
                                <pre
                                  tabindex="0"
                                  class="prism-code language-python codeBlock_bY9V thin-scrollbar"
                                  style="
                                    color: #9cdcfe;
                                    background-color: #1e1e1e;
                                  "
                                ><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9CDCFE"><span class="token keyword" style="color:rgb(86, 156, 214)">def</span><span class="token plain"> </span><span class="token function" style="color:rgb(220, 220, 170)">on_start</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token plain">self</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token plain"> </span><span class="token operator" style="color:rgb(212, 212, 212)">-</span><span class="token operator" style="color:rgb(212, 212, 212)">&gt;</span><span class="token plain"> </span><span class="token boolean">None</span><span class="token punctuation" style="color:rgb(212, 212, 212)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token comment" style="color:rgb(106, 153, 85)"># Create 5-minute bars from 1-minute bars (Bar objects)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token comment" style="color:rgb(106, 153, 85)"># Format: target_bar_type@source_bar_type</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token comment" style="color:rgb(106, 153, 85)"># Note: price type (LAST) is only needed on the left target side, not on the source side</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    bar_type </span><span class="token operator" style="color:rgb(212, 212, 212)">=</span><span class="token plain"> BarType</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">from_str</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token string" style="color:rgb(206, 145, 120)">&quot;6EH4.XCME-5-MINUTE-LAST-INTERNAL@1-MINUTE-EXTERNAL&quot;</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token comment" style="color:rgb(106, 153, 85)"># Request historical data (processed in on_historical_data(...) handler)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    self</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">request_bars</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token plain">bar_type</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token comment" style="color:rgb(106, 153, 85)"># Subscribe to live updates (processed in on_bar(...) handler)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    self</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">subscribe_bars</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token plain">bar_type</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><br></span></code></pre>
                              </div>
                            </div>
                            <h4
                              class="anchor anchorWithHideOnScrollNavbar_WYt5"
                              id="advanced-bar-to-bar-example"
                            >
                              Advanced bar-to-bar example<a
                                href="#advanced-bar-to-bar-example"
                                class="hash-link"
                                aria-label="Direct link to Advanced bar-to-bar example"
                                title="Direct link to Advanced bar-to-bar example"
                                >​</a
                              >
                            </h4>
                            <p>
                              You can create complex aggregation chains where
                              you aggregate from already aggregated bars:
                            </p>
                            <div
                              class="language-python codeBlockContainer_Ckt0 theme-code-block"
                              style="
                                --prism-color: #9cdcfe;
                                --prism-background-color: #1e1e1e;
                              "
                            >
                              <div class="codeBlockContent_QJqH">
                                <pre
                                  tabindex="0"
                                  class="prism-code language-python codeBlock_bY9V thin-scrollbar"
                                  style="
                                    color: #9cdcfe;
                                    background-color: #1e1e1e;
                                  "
                                ><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9CDCFE"><span class="token comment" style="color:rgb(106, 153, 85)"># First create 1-minute bars from TradeTick objects (LAST indicates TradeTick source)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">primary_bar_type </span><span class="token operator" style="color:rgb(212, 212, 212)">=</span><span class="token plain"> BarType</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">from_str</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token string" style="color:rgb(206, 145, 120)">&quot;6EH4.XCME-1-MINUTE-LAST-INTERNAL&quot;</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token comment" style="color:rgb(106, 153, 85)"># Then create 5-minute bars from 1-minute bars</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token comment" style="color:rgb(106, 153, 85)"># Note the @1-MINUTE-INTERNAL part identifying the source bars</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">intermediate_bar_type </span><span class="token operator" style="color:rgb(212, 212, 212)">=</span><span class="token plain"> BarType</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">from_str</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token string" style="color:rgb(206, 145, 120)">&quot;6EH4.XCME-5-MINUTE-LAST-INTERNAL@1-MINUTE-INTERNAL&quot;</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token comment" style="color:rgb(106, 153, 85)"># Then create hourly bars from 5-minute bars</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token comment" style="color:rgb(106, 153, 85)"># Note the @5-MINUTE-INTERNAL part identifying the source bars</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">hourly_bar_type </span><span class="token operator" style="color:rgb(212, 212, 212)">=</span><span class="token plain"> BarType</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">from_str</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token string" style="color:rgb(206, 145, 120)">&quot;6EH4.XCME-1-HOUR-LAST-INTERNAL@5-MINUTE-INTERNAL&quot;</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><br></span></code></pre>
                              </div>
                            </div>
                            <h3
                              class="anchor anchorWithHideOnScrollNavbar_WYt5"
                              id="working-with-bars-request-vs-subscribe"
                            >
                              Working with Bars: Request vs. Subscribe<a
                                href="#working-with-bars-request-vs-subscribe"
                                class="hash-link"
                                aria-label="Direct link to Working with Bars: Request vs. Subscribe"
                                title="Direct link to Working with Bars: Request vs. Subscribe"
                                >​</a
                              >
                            </h3>
                            <p>
                              PoseiTrader provides two distinct operations for
                              working with bars:
                            </p>
                            <ul>
                              <li>
                                <strong><code>request_bars()</code></strong
                                >: Fetches historical data processed by the
                                <code>on_historical_data()</code> handler.
                              </li>
                              <li>
                                <strong><code>subscribe_bars()</code></strong
                                >: Establishes a real-time data feed processed
                                by the <code>on_bar()</code> handler.
                              </li>
                            </ul>
                            <p>
                              These methods work together in a typical workflow:
                            </p>
                            <ol>
                              <li>
                                First, <code>request_bars()</code> loads
                                historical data to initialize indicators or
                                state of strategy with past market behavior.
                              </li>
                              <li>
                                Then, <code>subscribe_bars()</code> ensures the
                                strategy continues receiving new bars as they
                                form in real-time.
                              </li>
                            </ol>
                            <p>Example usage in <code>on_start()</code>:</p>
                            <div
                              class="language-python codeBlockContainer_Ckt0 theme-code-block"
                              style="
                                --prism-color: #9cdcfe;
                                --prism-background-color: #1e1e1e;
                              "
                            >
                              <div class="codeBlockContent_QJqH">
                                <pre
                                  tabindex="0"
                                  class="prism-code language-python codeBlock_bY9V thin-scrollbar"
                                  style="
                                    color: #9cdcfe;
                                    background-color: #1e1e1e;
                                  "
                                ><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9CDCFE"><span class="token keyword" style="color:rgb(86, 156, 214)">def</span><span class="token plain"> </span><span class="token function" style="color:rgb(220, 220, 170)">on_start</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token plain">self</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token plain"> </span><span class="token operator" style="color:rgb(212, 212, 212)">-</span><span class="token operator" style="color:rgb(212, 212, 212)">&gt;</span><span class="token plain"> </span><span class="token boolean">None</span><span class="token punctuation" style="color:rgb(212, 212, 212)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token comment" style="color:rgb(106, 153, 85)"># Define bar type</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    bar_type </span><span class="token operator" style="color:rgb(212, 212, 212)">=</span><span class="token plain"> BarType</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">from_str</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token string" style="color:rgb(206, 145, 120)">&quot;6EH4.XCME-5-MINUTE-LAST-INTERNAL&quot;</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token comment" style="color:rgb(106, 153, 85)"># Request historical data to initialize indicators</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token comment" style="color:rgb(106, 153, 85)"># These bars will be delivered to the on_historical_data(...) handler in strategy</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    self</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">request_bars</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token plain">bar_type</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token comment" style="color:rgb(106, 153, 85)"># Subscribe to real-time updates</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token comment" style="color:rgb(106, 153, 85)"># New bars will be delivered to the on_bar(...) handler in strategy</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    self</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">subscribe_bars</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token plain">bar_type</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token comment" style="color:rgb(106, 153, 85)"># Register indicators to receive bar updates (they will be automatically updated)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    self</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">register_indicator_for_bars</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token plain">bar_type</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"> self</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">my_indicator</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><br></span></code></pre>
                              </div>
                            </div>
                            <p>
                              Required handlers in your strategy to receive the
                              data:
                            </p>
                            <div
                              class="language-python codeBlockContainer_Ckt0 theme-code-block"
                              style="
                                --prism-color: #9cdcfe;
                                --prism-background-color: #1e1e1e;
                              "
                            >
                              <div class="codeBlockContent_QJqH">
                                <pre
                                  tabindex="0"
                                  class="prism-code language-python codeBlock_bY9V thin-scrollbar"
                                  style="
                                    color: #9cdcfe;
                                    background-color: #1e1e1e;
                                  "
                                ><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9CDCFE"><span class="token keyword" style="color:rgb(86, 156, 214)">def</span><span class="token plain"> </span><span class="token function" style="color:rgb(220, 220, 170)">on_historical_data</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token plain">self</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"> data</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token punctuation" style="color:rgb(212, 212, 212)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token comment" style="color:rgb(106, 153, 85)"># Processes batches of historical bars from request_bars()</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token comment" style="color:rgb(106, 153, 85)"># Note: indicators registered with register_indicator_for_bars</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token comment" style="color:rgb(106, 153, 85)"># are updated automatically with historical data</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token keyword" style="color:rgb(86, 156, 214)">pass</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token keyword" style="color:rgb(86, 156, 214)">def</span><span class="token plain"> </span><span class="token function" style="color:rgb(220, 220, 170)">on_bar</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token plain">self</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"> bar</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token punctuation" style="color:rgb(212, 212, 212)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token comment" style="color:rgb(106, 153, 85)"># Processes individual bars in real-time from subscribe_bars()</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token comment" style="color:rgb(106, 153, 85)"># Indicators registered with this bar type will update automatically and they will be updated before this handler is called</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token keyword" style="color:rgb(86, 156, 214)">pass</span><br></span></code></pre>
                              </div>
                            </div>
                            <h3
                              class="anchor anchorWithHideOnScrollNavbar_WYt5"
                              id="historical-data-requests-with-aggregation"
                            >
                              Historical data requests with aggregation<a
                                href="#historical-data-requests-with-aggregation"
                                class="hash-link"
                                aria-label="Direct link to Historical data requests with aggregation"
                                title="Direct link to Historical data requests with aggregation"
                                >​</a
                              >
                            </h3>
                            <p>
                              When requesting historical bars for backtesting or
                              initializing indicators, you can use the
                              <code>request_bars()</code> method, which supports
                              both direct requests and aggregation:
                            </p>
                            <div
                              class="language-python codeBlockContainer_Ckt0 theme-code-block"
                              style="
                                --prism-color: #9cdcfe;
                                --prism-background-color: #1e1e1e;
                              "
                            >
                              <div class="codeBlockContent_QJqH">
                                <pre
                                  tabindex="0"
                                  class="prism-code language-python codeBlock_bY9V thin-scrollbar"
                                  style="
                                    color: #9cdcfe;
                                    background-color: #1e1e1e;
                                  "
                                ><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9CDCFE"><span class="token comment" style="color:rgb(106, 153, 85)"># Request raw 1-minute bars (aggregated from TradeTick objects as indicated by LAST price type)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">self</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">request_bars</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token plain">BarType</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">from_str</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token string" style="color:rgb(206, 145, 120)">&quot;6EH4.XCME-1-MINUTE-LAST-EXTERNAL&quot;</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token comment" style="color:rgb(106, 153, 85)"># Request 5-minute bars aggregated from 1-minute bars</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">self</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">request_bars</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token plain">BarType</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">from_str</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token string" style="color:rgb(206, 145, 120)">&quot;6EH4.XCME-5-MINUTE-LAST-INTERNAL@1-MINUTE-EXTERNAL&quot;</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><br></span></code></pre>
                              </div>
                            </div>
                            <p>
                              If historical aggregated bars are needed, you can
                              use specialized request
                              <code>request_aggregated_bars()</code> method:
                            </p>
                            <div
                              class="language-python codeBlockContainer_Ckt0 theme-code-block"
                              style="
                                --prism-color: #9cdcfe;
                                --prism-background-color: #1e1e1e;
                              "
                            >
                              <div class="codeBlockContent_QJqH">
                                <pre
                                  tabindex="0"
                                  class="prism-code language-python codeBlock_bY9V thin-scrollbar"
                                  style="
                                    color: #9cdcfe;
                                    background-color: #1e1e1e;
                                  "
                                ><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9CDCFE"><span class="token comment" style="color:rgb(106, 153, 85)"># Request bars that are aggregated from historical trade ticks</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">self</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">request_aggregated_bars</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token plain">BarType</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">from_str</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token string" style="color:rgb(206, 145, 120)">&quot;6EH4.XCME-100-VOLUME-LAST-INTERNAL&quot;</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token comment" style="color:rgb(106, 153, 85)"># Request bars that are aggregated from other bars</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">self</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">request_aggregated_bars</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token plain">BarType</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">from_str</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token string" style="color:rgb(206, 145, 120)">&quot;6EH4.XCME-5-MINUTE-LAST-INTERNAL@1-MINUTE-EXTERNAL&quot;</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><br></span></code></pre>
                              </div>
                            </div>
                            <h3
                              class="anchor anchorWithHideOnScrollNavbar_WYt5"
                              id="common-pitfalls"
                            >
                              Common Pitfalls<a
                                href="#common-pitfalls"
                                class="hash-link"
                                aria-label="Direct link to Common Pitfalls"
                                title="Direct link to Common Pitfalls"
                                >​</a
                              >
                            </h3>
                            <p>
                              <strong
                                >Register indicators before requesting
                                data</strong
                              >: Ensure indicators are registered before
                              requesting historical data so they get updated
                              properly.
                            </p>
                            <div
                              class="language-python codeBlockContainer_Ckt0 theme-code-block"
                              style="
                                --prism-color: #9cdcfe;
                                --prism-background-color: #1e1e1e;
                              "
                            >
                              <div class="codeBlockContent_QJqH">
                                <pre
                                  tabindex="0"
                                  class="prism-code language-python codeBlock_bY9V thin-scrollbar"
                                  style="
                                    color: #9cdcfe;
                                    background-color: #1e1e1e;
                                  "
                                ><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9CDCFE"><span class="token comment" style="color:rgb(106, 153, 85)"># Correct order</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">self</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">register_indicator_for_bars</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token plain">bar_type</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"> self</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">ema</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">self</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">request_bars</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token plain">bar_type</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token comment" style="color:rgb(106, 153, 85)"># Incorrect order</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">self</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">request_bars</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token plain">bar_type</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token plain">  </span><span class="token comment" style="color:rgb(106, 153, 85)"># Indicator won&#x27;t receive historical data</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">self</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">register_indicator_for_bars</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token plain">bar_type</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"> self</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">ema</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><br></span></code></pre>
                              </div>
                            </div>
                            <h2
                              class="anchor anchorWithHideOnScrollNavbar_WYt5"
                              id="timestamps"
                            >
                              Timestamps<a
                                href="#timestamps"
                                class="hash-link"
                                aria-label="Direct link to Timestamps"
                                title="Direct link to Timestamps"
                                >​</a
                              >
                            </h2>
                            <p>
                              The platform uses two fundamental timestamp fields
                              that appear across many objects, including market
                              data, orders, and events. These timestamps serve
                              distinct purposes and help maintain precise timing
                              information throughout the system:
                            </p>
                            <ul>
                              <li>
                                <code>ts_event</code>: UNIX timestamp
                                (nanoseconds) representing when an event
                                actually occurred.
                              </li>
                              <li>
                                <code>ts_init</code>: UNIX timestamp
                                (nanoseconds) representing when Posei created
                                the internal object representing that event.
                              </li>
                            </ul>
                            <h3
                              class="anchor anchorWithHideOnScrollNavbar_WYt5"
                              id="examples"
                            >
                              Examples<a
                                href="#examples"
                                class="hash-link"
                                aria-label="Direct link to Examples"
                                title="Direct link to Examples"
                                >​</a
                              >
                            </h3>

                            <table>
                              <thead>
                                <tr>
                                  <th><strong>Event Type</strong></th>
                                  <th>
                                    <strong><code>ts_event</code></strong>
                                  </th>
                                  <th>
                                    <strong><code>ts_init</code></strong>
                                  </th>
                                </tr>
                              </thead>
                              <tbody>
                                <tr>
                                  <td><code>TradeTick</code></td>
                                  <td>
                                    Time when trade occurred at the exchange.
                                  </td>
                                  <td>
                                    Time when Posei received the trade data.
                                  </td>
                                </tr>
                                <tr>
                                  <td><code>QuoteTick</code></td>
                                  <td>
                                    Time when quote occurred at the exchange.
                                  </td>
                                  <td>
                                    Time when Posei received the quote data.
                                  </td>
                                </tr>
                                <tr>
                                  <td><code>OrderBookDelta</code></td>
                                  <td>
                                    Time when order book update occurred at the
                                    exchange.
                                  </td>
                                  <td>
                                    Time when Posei received the order book
                                    update.
                                  </td>
                                </tr>
                                <tr>
                                  <td><code>Bar</code></td>
                                  <td>
                                    Time of the bar&#x27;s closing (exact
                                    minute/hour).
                                  </td>
                                  <td>
                                    Time when Posei generated (for internal
                                    bars) or received the bar data (for external
                                    bars).
                                  </td>
                                </tr>
                                <tr>
                                  <td><code>OrderFilled</code></td>
                                  <td>
                                    Time when order was filled at the exchange.
                                  </td>
                                  <td>
                                    Time when Posei received and processed the
                                    fill confirmation.
                                  </td>
                                </tr>
                                <tr>
                                  <td><code>OrderCanceled</code></td>
                                  <td>
                                    Time when cancellation was processed at the
                                    exchange.
                                  </td>
                                  <td>
                                    Time when Posei received and processed the
                                    cancellation confirmation.
                                  </td>
                                </tr>
                                <tr>
                                  <td><code>NewsEvent</code></td>
                                  <td>Time when the news was published.</td>
                                  <td>
                                    Time when the event object was created (if
                                    internal event) or received (if external
                                    event) in Posei.
                                  </td>
                                </tr>
                                <tr>
                                  <td>Custom event</td>
                                  <td>
                                    Time when event conditions actually
                                    occurred.
                                  </td>
                                  <td>
                                    Time when the event object was created (if
                                    internal event) or received (if external
                                    event) in Posei.
                                  </td>
                                </tr>
                              </tbody>
                            </table>
                            <div
                              class="theme-admonition theme-admonition-note admonition_xJq3 alert alert--secondary"
                            >
                              <div class="admonitionHeading_Gvgb">
                                <span class="admonitionIcon_Rf37"
                                  ><svg viewbox="0 0 14 16">
                                    <path
                                      fill-rule="evenodd"
                                      d="M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"
                                    ></path></svg></span
                                >note
                              </div>
                              <div class="admonitionContent_BuS1">
                                <p>
                                  The <code>ts_init</code> field represents a
                                  more general concept than just the &quot;time
                                  of reception&quot; for events. It denotes the
                                  timestamp when an object, such as a data point
                                  or command, was initialized within Posei. This
                                  distinction is important because
                                  <code>ts_init</code> is not exclusive to
                                  &quot;received events&quot; — it applies to
                                  any internal initialization process.
                                </p>
                                <p>
                                  For example, the <code>ts_init</code> field is
                                  also used for commands, where the concept of
                                  reception does not apply. This broader
                                  definition ensures consistent handling of
                                  initialization timestamps across various
                                  object types in the system.
                                </p>
                              </div>
                            </div>
                            <h3
                              class="anchor anchorWithHideOnScrollNavbar_WYt5"
                              id="latency-analysis"
                            >
                              Latency analysis<a
                                href="#latency-analysis"
                                class="hash-link"
                                aria-label="Direct link to Latency analysis"
                                title="Direct link to Latency analysis"
                                >​</a
                              >
                            </h3>
                            <p>
                              The dual timestamp system enables latency analysis
                              within the platform:
                            </p>
                            <ul>
                              <li>
                                Latency can be calculated as
                                <code>ts_init - ts_event</code>.
                              </li>
                              <li>
                                This difference represents total system latency,
                                including network transmission time, processing
                                overhead, and any queueing delays.
                              </li>
                              <li>
                                It&#x27;s important to remember that the clocks
                                producing these timestamps are likely not
                                synchronized.
                              </li>
                            </ul>
                            <h3
                              class="anchor anchorWithHideOnScrollNavbar_WYt5"
                              id="environment-specific-behavior"
                            >
                              Environment specific behavior<a
                                href="#environment-specific-behavior"
                                class="hash-link"
                                aria-label="Direct link to Environment specific behavior"
                                title="Direct link to Environment specific behavior"
                                >​</a
                              >
                            </h3>
                            <h4
                              class="anchor anchorWithHideOnScrollNavbar_WYt5"
                              id="backtesting-environment"
                            >
                              Backtesting environment<a
                                href="#backtesting-environment"
                                class="hash-link"
                                aria-label="Direct link to Backtesting environment"
                                title="Direct link to Backtesting environment"
                                >​</a
                              >
                            </h4>
                            <ul>
                              <li>
                                Data is ordered by <code>ts_init</code> using a
                                stable sort.
                              </li>
                              <li>
                                This behavior ensures deterministic processing
                                order and simulates realistic system behavior,
                                including latencies.
                              </li>
                            </ul>
                            <h4
                              class="anchor anchorWithHideOnScrollNavbar_WYt5"
                              id="live-trading-environment"
                            >
                              Live trading environment<a
                                href="#live-trading-environment"
                                class="hash-link"
                                aria-label="Direct link to Live trading environment"
                                title="Direct link to Live trading environment"
                                >​</a
                              >
                            </h4>
                            <ul>
                              <li>
                                Data is processed as it arrives, ensuring
                                minimal latency and allowing for real-time
                                decision-making.
                                <ul>
                                  <li>
                                    <code>ts_init</code> field records the exact
                                    moment when data is received by Posei in
                                    real-time.
                                  </li>
                                  <li>
                                    <code>ts_event</code> reflects the time the
                                    event occurred externally, enabling accurate
                                    comparisons between external event timing
                                    and system reception.
                                  </li>
                                </ul>
                              </li>
                              <li>
                                We can use the difference between
                                <code>ts_init</code> and
                                <code>ts_event</code> to detect network or
                                processing delays.
                              </li>
                            </ul>
                            <h3
                              class="anchor anchorWithHideOnScrollNavbar_WYt5"
                              id="other-notes-and-considerations"
                            >
                              Other notes and considerations<a
                                href="#other-notes-and-considerations"
                                class="hash-link"
                                aria-label="Direct link to Other notes and considerations"
                                title="Direct link to Other notes and considerations"
                                >​</a
                              >
                            </h3>
                            <ul>
                              <li>
                                For data from external sources,
                                <code>ts_init</code> is always the same as or
                                later than <code>ts_event</code>.
                              </li>
                              <li>
                                For data created within Posei,
                                <code>ts_init</code> and
                                <code>ts_event</code> can be the same because
                                the object is initialized at the same time the
                                event happens.
                              </li>
                              <li>
                                Not every type with a <code>ts_init</code> field
                                necessarily has a <code>ts_event</code> field.
                                This reflects cases where:
                                <ul>
                                  <li>
                                    The initialization of an object happens at
                                    the same time as the event itself.
                                  </li>
                                  <li>
                                    The concept of an external event time does
                                    not apply.
                                  </li>
                                </ul>
                              </li>
                            </ul>
                            <h4
                              class="anchor anchorWithHideOnScrollNavbar_WYt5"
                              id="persisted-data"
                            >
                              Persisted Data<a
                                href="#persisted-data"
                                class="hash-link"
                                aria-label="Direct link to Persisted Data"
                                title="Direct link to Persisted Data"
                                >​</a
                              >
                            </h4>
                            <p>
                              The <code>ts_init</code> field indicates when the
                              message was originally received.
                            </p>
                            <h2
                              class="anchor anchorWithHideOnScrollNavbar_WYt5"
                              id="data-flow"
                            >
                              Data flow<a
                                href="#data-flow"
                                class="hash-link"
                                aria-label="Direct link to Data flow"
                                title="Direct link to Data flow"
                                >​</a
                              >
                            </h2>
                            <p>
                              The platform ensures consistency by flowing data
                              through the same pathways across all system
                              <a
                                href="../architecture/index.htm#environment-contexts"
                                >environment contexts</a
                              >
                              (e.g., <code>backtest</code>,
                              <code>sandbox</code>, <code>live</code>). Data is
                              primarily transported via the
                              <code>MessageBus</code> to the
                              <code>DataEngine</code> and then distributed to
                              subscribed or registered handlers.
                            </p>
                            <p>
                              For users who need more flexibility, the platform
                              also supports the creation of custom data types.
                              For details on how to implement user-defined data
                              types, see the
                              <a href="#custom-data">Custom Data</a> section
                              below.
                            </p>
                            <h2
                              class="anchor anchorWithHideOnScrollNavbar_WYt5"
                              id="loading-data"
                            >
                              Loading data<a
                                href="#loading-data"
                                class="hash-link"
                                aria-label="Direct link to Loading data"
                                title="Direct link to Loading data"
                                >​</a
                              >
                            </h2>
                            <p>
                              PoseiTrader facilitates data loading and
                              conversion for three main use cases:
                            </p>
                            <ul>
                              <li>
                                Providing data for a
                                <code>BacktestEngine</code> to run backtests.
                              </li>
                              <li>
                                Persisting the Posei-specific Parquet format for
                                the data catalog via
                                <code>ParquetDataCatalog.write_data(...)</code>
                                to be later used with a
                                <code>BacktestNode</code>.
                              </li>
                              <li>
                                For research purposes (to ensure data is
                                consistent between research and backtesting).
                              </li>
                            </ul>
                            <p>
                              Regardless of the destination, the process remains
                              the same: converting diverse external data formats
                              into Posei data structures.
                            </p>
                            <p>
                              To achieve this, two main components are
                              necessary:
                            </p>
                            <ul>
                              <li>
                                A type of DataLoader (normally specific per raw
                                source/format) which can read the data and
                                return a <code>pd.DataFrame</code> with the
                                correct schema for the desired Posei object
                              </li>
                              <li>
                                A type of DataWrangler (specific per data type)
                                which takes this <code>pd.DataFrame</code> and
                                returns a <code>list[Data]</code> of Posei
                                objects
                              </li>
                            </ul>
                            <h3
                              class="anchor anchorWithHideOnScrollNavbar_WYt5"
                              id="data-loaders"
                            >
                              Data loaders<a
                                href="#data-loaders"
                                class="hash-link"
                                aria-label="Direct link to Data loaders"
                                title="Direct link to Data loaders"
                                >​</a
                              >
                            </h3>
                            <p>
                              Data loader components are typically specific for
                              the raw source/format and per integration. For
                              instance, Binance order book data is stored in its
                              raw CSV file form with an entirely different
                              format to
                              <a
                                href="https://databento.com/docs/knowledge-base/new-users/dbn-encoding/getting-started-with-dbn"
                                target="_blank"
                                rel="noopener noreferrer"
                                >Databento Binary Encoding (DBN)</a
                              >
                              files.
                            </p>
                            <h3
                              class="anchor anchorWithHideOnScrollNavbar_WYt5"
                              id="data-wranglers"
                            >
                              Data wranglers<a
                                href="#data-wranglers"
                                class="hash-link"
                                aria-label="Direct link to Data wranglers"
                                title="Direct link to Data wranglers"
                                >​</a
                              >
                            </h3>
                            <p>
                              Data wranglers are implemented per specific Posei
                              data type, and can be found in the
                              <code>posei_trader.persistence.wranglers</code>
                              module. Currently there exists:
                            </p>
                            <ul>
                              <li><code>OrderBookDeltaDataWrangler</code></li>
                              <li><code>QuoteTickDataWrangler</code></li>
                              <li><code>TradeTickDataWrangler</code></li>
                              <li><code>BarDataWrangler</code></li>
                            </ul>
                            <div
                              class="theme-admonition theme-admonition-warning admonition_xJq3 alert alert--warning"
                            >
                              <div class="admonitionHeading_Gvgb">
                                <span class="admonitionIcon_Rf37"
                                  ><svg viewbox="0 0 16 16">
                                    <path
                                      fill-rule="evenodd"
                                      d="M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"
                                    ></path></svg></span
                                >warning
                              </div>
                              <div class="admonitionContent_BuS1">
                                <p>
                                  There are a number of
                                  <strong>DataWrangler v2</strong> components,
                                  which will take a
                                  <code>pd.DataFrame</code> typically with a
                                  different fixed width Posei Arrow v2 schema,
                                  and output PyO3 Posei objects which are only
                                  compatible with the new version of the Posei
                                  core, currently in development.
                                </p>
                                <p>
                                  <strong
                                    >These PyO3 provided data objects are not
                                    compatible where the legacy Cython objects
                                    are currently used (e.g., adding directly to
                                    a <code>BacktestEngine</code>).</strong
                                  >
                                </p>
                              </div>
                            </div>
                            <h3
                              class="anchor anchorWithHideOnScrollNavbar_WYt5"
                              id="transformation-pipeline"
                            >
                              Transformation pipeline<a
                                href="#transformation-pipeline"
                                class="hash-link"
                                aria-label="Direct link to Transformation pipeline"
                                title="Direct link to Transformation pipeline"
                                >​</a
                              >
                            </h3>
                            <p><strong>Process flow</strong>:</p>
                            <ol>
                              <li>
                                Raw data (e.g., CSV) is input into the pipeline.
                              </li>
                              <li>
                                DataLoader processes the raw data and converts
                                it into a <code>pd.DataFrame</code>.
                              </li>
                              <li>
                                DataWrangler further processes the
                                <code>pd.DataFrame</code> to generate a list of
                                Posei objects.
                              </li>
                              <li>
                                The Posei <code>list[Data]</code> is the output
                                of the data loading process.
                              </li>
                            </ol>
                            <p>
                              The following diagram illustrates how raw data is
                              transformed into Posei data structures:
                            </p>
                            <div
                              class="language-text codeBlockContainer_Ckt0 theme-code-block"
                              style="
                                --prism-color: #9cdcfe;
                                --prism-background-color: #1e1e1e;
                              "
                            >
                              <div class="codeBlockContent_QJqH">
                                <pre
                                  tabindex="0"
                                  class="prism-code language-text codeBlock_bY9V thin-scrollbar"
                                  style="
                                    color: #9cdcfe;
                                    background-color: #1e1e1e;
                                  "
                                ><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9CDCFE"><span class="token plain">  ┌──────────┐    ┌──────────────────────┐                  ┌──────────────────────┐</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">  │          │    │                      │                  │                      │</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">  │          │    │                      │                  │                      │</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">  │ Raw data │    │                      │  `pd.DataFrame`  │                      │</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">  │ (CSV)    ├───►│      DataLoader      ├─────────────────►│     DataWrangler     ├───► Posei `list[Data]`</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">  │          │    │                      │                  │                      │</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">  │          │    │                      │                  │                      │</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">  │          │    │                      │                  │                      │</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">  └──────────┘    └──────────────────────┘                  └──────────────────────┘</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain" style="display:inline-block"></span><br></span></code></pre>
                              </div>
                            </div>
                            <p>Concretely, this would involve:</p>
                            <ul>
                              <li>
                                <code
                                  >BinanceOrderBookDeltaDataLoader.load(...)</code
                                >
                                which reads CSV files provided by Binance from
                                disk, and returns a <code>pd.DataFrame</code>.
                              </li>
                              <li>
                                <code
                                  >OrderBookDeltaDataWrangler.process(...)</code
                                >
                                which takes the <code>pd.DataFrame</code> and
                                returns <code>list[OrderBookDelta]</code>.
                              </li>
                            </ul>
                            <p>
                              The following example shows how to accomplish the
                              above in Python:
                            </p>
                            <div
                              class="language-python codeBlockContainer_Ckt0 theme-code-block"
                              style="
                                --prism-color: #9cdcfe;
                                --prism-background-color: #1e1e1e;
                              "
                            >
                              <div class="codeBlockContent_QJqH">
                                <pre
                                  tabindex="0"
                                  class="prism-code language-python codeBlock_bY9V thin-scrollbar"
                                  style="
                                    color: #9cdcfe;
                                    background-color: #1e1e1e;
                                  "
                                ><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9CDCFE"><span class="token keyword" style="color:rgb(86, 156, 214)">from</span><span class="token plain"> posei_trader </span><span class="token keyword" style="color:rgb(86, 156, 214)">import</span><span class="token plain"> TEST_DATA_DIR</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token keyword" style="color:rgb(86, 156, 214)">from</span><span class="token plain"> posei_trader</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">adapters</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">binance</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">loaders </span><span class="token keyword" style="color:rgb(86, 156, 214)">import</span><span class="token plain"> BinanceOrderBookDeltaDataLoader</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token keyword" style="color:rgb(86, 156, 214)">from</span><span class="token plain"> posei_trader</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">persistence</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">wranglers </span><span class="token keyword" style="color:rgb(86, 156, 214)">import</span><span class="token plain"> OrderBookDeltaDataWrangler</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token keyword" style="color:rgb(86, 156, 214)">from</span><span class="token plain"> posei_trader</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">test_kit</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">providers </span><span class="token keyword" style="color:rgb(86, 156, 214)">import</span><span class="token plain"> TestInstrumentProvider</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token comment" style="color:rgb(106, 153, 85)"># Load raw data</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">data_path </span><span class="token operator" style="color:rgb(212, 212, 212)">=</span><span class="token plain"> TEST_DATA_DIR </span><span class="token operator" style="color:rgb(212, 212, 212)">/</span><span class="token plain"> </span><span class="token string" style="color:rgb(206, 145, 120)">&quot;binance&quot;</span><span class="token plain"> </span><span class="token operator" style="color:rgb(212, 212, 212)">/</span><span class="token plain"> </span><span class="token string" style="color:rgb(206, 145, 120)">&quot;btcusdt-depth-snap.csv&quot;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">df </span><span class="token operator" style="color:rgb(212, 212, 212)">=</span><span class="token plain"> BinanceOrderBookDeltaDataLoader</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">load</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token plain">data_path</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token comment" style="color:rgb(106, 153, 85)"># Set up a wrangler</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">instrument </span><span class="token operator" style="color:rgb(212, 212, 212)">=</span><span class="token plain"> TestInstrumentProvider</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">btcusdt_binance</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">wrangler </span><span class="token operator" style="color:rgb(212, 212, 212)">=</span><span class="token plain"> OrderBookDeltaDataWrangler</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token plain">instrument</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token comment" style="color:rgb(106, 153, 85)"># Process to a list `OrderBookDelta` Posei objects</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">deltas </span><span class="token operator" style="color:rgb(212, 212, 212)">=</span><span class="token plain"> wrangler</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">process</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token plain">df</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><br></span></code></pre>
                              </div>
                            </div>
                            <h2
                              class="anchor anchorWithHideOnScrollNavbar_WYt5"
                              id="data-catalog"
                            >
                              Data catalog<a
                                href="#data-catalog"
                                class="hash-link"
                                aria-label="Direct link to Data catalog"
                                title="Direct link to Data catalog"
                                >​</a
                              >
                            </h2>
                            <p>
                              The data catalog is a central store for Posei
                              data, persisted in the
                              <a
                                href="https://parquet.apache.org"
                                target="_blank"
                                rel="noopener noreferrer"
                                >Parquet</a
                              >
                              file format.
                            </p>
                            <p>
                              We have chosen Parquet as the storage format for
                              the following reasons:
                            </p>
                            <ul>
                              <li>
                                It performs much better than CSV/JSON/HDF5/etc
                                in terms of compression ratio (storage size) and
                                read performance.
                              </li>
                              <li>
                                It does not require any separate running
                                components (for example a database).
                              </li>
                              <li>
                                It is quick and simple to get up and running
                                with.
                              </li>
                            </ul>
                            <p>
                              The Arrow schemas used for the Parquet format are
                              either single sourced in the core
                              <code>persistence</code> Rust crate, or available
                              from the
                              <code>/serialization/arrow/schema.py</code>
                              module.
                            </p>
                            <div
                              class="theme-admonition theme-admonition-note admonition_xJq3 alert alert--secondary"
                            >
                              <div class="admonitionHeading_Gvgb">
                                <span class="admonitionIcon_Rf37"
                                  ><svg viewbox="0 0 14 16">
                                    <path
                                      fill-rule="evenodd"
                                      d="M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"
                                    ></path></svg></span
                                >note
                              </div>
                              <div class="admonitionContent_BuS1">
                                <p>
                                  2023-10-14: The current plan is to eventually
                                  phase out the Python schemas module, so that
                                  all schemas are single sourced in the Rust
                                  core.
                                </p>
                              </div>
                            </div>
                            <h3
                              class="anchor anchorWithHideOnScrollNavbar_WYt5"
                              id="initializing"
                            >
                              Initializing<a
                                href="#initializing"
                                class="hash-link"
                                aria-label="Direct link to Initializing"
                                title="Direct link to Initializing"
                                >​</a
                              >
                            </h3>
                            <p>
                              The data catalog can be initialized from a
                              <code>POSEI_PATH</code> environment variable, or
                              by explicitly passing in a path like object.
                            </p>
                            <p>
                              The following example shows how to initialize a
                              data catalog where there is pre-existing data
                              already written to disk at the given path.
                            </p>
                            <div
                              class="language-python codeBlockContainer_Ckt0 theme-code-block"
                              style="
                                --prism-color: #9cdcfe;
                                --prism-background-color: #1e1e1e;
                              "
                            >
                              <div class="codeBlockContent_QJqH">
                                <pre
                                  tabindex="0"
                                  class="prism-code language-python codeBlock_bY9V thin-scrollbar"
                                  style="
                                    color: #9cdcfe;
                                    background-color: #1e1e1e;
                                  "
                                ><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9CDCFE"><span class="token keyword" style="color:rgb(86, 156, 214)">from</span><span class="token plain"> pathlib </span><span class="token keyword" style="color:rgb(86, 156, 214)">import</span><span class="token plain"> Path</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token keyword" style="color:rgb(86, 156, 214)">from</span><span class="token plain"> posei_trader</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">persistence</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">catalog </span><span class="token keyword" style="color:rgb(86, 156, 214)">import</span><span class="token plain"> ParquetDataCatalog</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">CATALOG_PATH </span><span class="token operator" style="color:rgb(212, 212, 212)">=</span><span class="token plain"> Path</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">cwd</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token plain"> </span><span class="token operator" style="color:rgb(212, 212, 212)">/</span><span class="token plain"> </span><span class="token string" style="color:rgb(206, 145, 120)">&quot;catalog&quot;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token comment" style="color:rgb(106, 153, 85)"># Create a new catalog instance</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">catalog </span><span class="token operator" style="color:rgb(212, 212, 212)">=</span><span class="token plain"> ParquetDataCatalog</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token plain">CATALOG_PATH</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><br></span></code></pre>
                              </div>
                            </div>
                            <h3
                              class="anchor anchorWithHideOnScrollNavbar_WYt5"
                              id="writing-data"
                            >
                              Writing data<a
                                href="#writing-data"
                                class="hash-link"
                                aria-label="Direct link to Writing data"
                                title="Direct link to Writing data"
                                >​</a
                              >
                            </h3>
                            <p>
                              New data can be stored in the catalog, which is
                              effectively writing the given data to disk in the
                              Posei-specific Parquet format. All Posei built-in
                              <code>Data</code> objects are supported, and any
                              data which inherits from <code>Data</code> can be
                              written.
                            </p>
                            <p>
                              The following example shows the above list of
                              Binance <code>OrderBookDelta</code> objects being
                              written:
                            </p>
                            <div
                              class="language-python codeBlockContainer_Ckt0 theme-code-block"
                              style="
                                --prism-color: #9cdcfe;
                                --prism-background-color: #1e1e1e;
                              "
                            >
                              <div class="codeBlockContent_QJqH">
                                <pre
                                  tabindex="0"
                                  class="prism-code language-python codeBlock_bY9V thin-scrollbar"
                                  style="
                                    color: #9cdcfe;
                                    background-color: #1e1e1e;
                                  "
                                ><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9CDCFE"><span class="token plain">catalog</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">write_data</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token plain">deltas</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><br></span></code></pre>
                              </div>
                            </div>
                            <h3
                              class="anchor anchorWithHideOnScrollNavbar_WYt5"
                              id="basename-template"
                            >
                              Basename template<a
                                href="#basename-template"
                                class="hash-link"
                                aria-label="Direct link to Basename template"
                                title="Direct link to Basename template"
                                >​</a
                              >
                            </h3>
                            <p>
                              Posei makes no assumptions about how data may be
                              partitioned between files for a particular data
                              type and instrument ID.
                            </p>
                            <p>
                              The <code>basename_template</code> keyword
                              argument is an additional optional naming
                              component for the output files. The template
                              should include placeholders that will be filled in
                              with actual values at runtime. These values can be
                              automatically derived from the data or provided as
                              additional keyword arguments.
                            </p>
                            <p>
                              For example, using a basename template like
                              <code>&quot;{date}&quot;</code> for AUD/USD.SIM
                              quote tick data, and assuming
                              <code>&quot;date&quot;</code> is a provided or
                              derivable field, could result in a filename like
                              <code>&quot;2023-01-01.parquet&quot;</code> under
                              the
                              <code>&quot;quote_tick/audusd.sim/&quot;</code>
                              catalog directory. If not provided, a default
                              naming scheme will be applied. This parameter
                              should be specified as a keyword argument, like
                              <code
                                >write_data(data,
                                basename_template=&quot;{date}&quot;)</code
                              >.
                            </p>
                            <div
                              class="theme-admonition theme-admonition-warning admonition_xJq3 alert alert--warning"
                            >
                              <div class="admonitionHeading_Gvgb">
                                <span class="admonitionIcon_Rf37"
                                  ><svg viewbox="0 0 16 16">
                                    <path
                                      fill-rule="evenodd"
                                      d="M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"
                                    ></path></svg></span
                                >warning
                              </div>
                              <div class="admonitionContent_BuS1">
                                <p>
                                  Any data which already exists under a filename
                                  will be overwritten. If a
                                  <code>basename_template</code> is not
                                  provided, then its very likely existing data
                                  for the data type and instrument ID will be
                                  overwritten. To prevent data loss, ensure that
                                  the <code>basename_template</code> (or the
                                  default naming scheme) generates unique
                                  filenames for different data sets.
                                </p>
                              </div>
                            </div>
                            <p>
                              Rust Arrow schema implementations are available
                              for the follow data types (enhanced performance):
                            </p>
                            <ul>
                              <li><code>OrderBookDelta</code></li>
                              <li><code>QuoteTick</code></li>
                              <li><code>TradeTick</code></li>
                              <li><code>Bar</code></li>
                            </ul>
                            <div
                              class="theme-admonition theme-admonition-warning admonition_xJq3 alert alert--warning"
                            >
                              <div class="admonitionHeading_Gvgb">
                                <span class="admonitionIcon_Rf37"
                                  ><svg viewbox="0 0 16 16">
                                    <path
                                      fill-rule="evenodd"
                                      d="M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"
                                    ></path></svg></span
                                >warning
                              </div>
                              <div class="admonitionContent_BuS1">
                                <p>
                                  By default any data which already exists under
                                  a filename will be overwritten.
                                </p>
                                <p>
                                  You can use one of the following write mode
                                  with catalog.write_data:
                                </p>
                                <ul>
                                  <li>CatalogWriteMode.OVERWRITE</li>
                                  <li>CatalogWriteMode.APPEND</li>
                                  <li>CatalogWriteMode.PREPEND</li>
                                  <li>
                                    CatalogWriteMode.NEWFILE, which will create
                                    a file name of the form
                                    <code>part-{i}.parquet</code> where
                                    <code>i</code> is an integer starting at 0.
                                  </li>
                                </ul>
                              </div>
                            </div>
                            <h3
                              class="anchor anchorWithHideOnScrollNavbar_WYt5"
                              id="reading-data"
                            >
                              Reading data<a
                                href="#reading-data"
                                class="hash-link"
                                aria-label="Direct link to Reading data"
                                title="Direct link to Reading data"
                                >​</a
                              >
                            </h3>
                            <p>
                              Any stored data can then be read back into memory:
                            </p>
                            <div
                              class="language-python codeBlockContainer_Ckt0 theme-code-block"
                              style="
                                --prism-color: #9cdcfe;
                                --prism-background-color: #1e1e1e;
                              "
                            >
                              <div class="codeBlockContent_QJqH">
                                <pre
                                  tabindex="0"
                                  class="prism-code language-python codeBlock_bY9V thin-scrollbar"
                                  style="
                                    color: #9cdcfe;
                                    background-color: #1e1e1e;
                                  "
                                ><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9CDCFE"><span class="token keyword" style="color:rgb(86, 156, 214)">from</span><span class="token plain"> posei_trader</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">core</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">datetime </span><span class="token keyword" style="color:rgb(86, 156, 214)">import</span><span class="token plain"> dt_to_unix_nanos</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token keyword" style="color:rgb(86, 156, 214)">import</span><span class="token plain"> pandas </span><span class="token keyword" style="color:rgb(86, 156, 214)">as</span><span class="token plain"> pd</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token keyword" style="color:rgb(86, 156, 214)">import</span><span class="token plain"> pytz</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">start </span><span class="token operator" style="color:rgb(212, 212, 212)">=</span><span class="token plain"> dt_to_unix_nanos</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token plain">pd</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">Timestamp</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token string" style="color:rgb(206, 145, 120)">&quot;2020-01-03&quot;</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"> tz</span><span class="token operator" style="color:rgb(212, 212, 212)">=</span><span class="token plain">pytz</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">utc</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">end </span><span class="token operator" style="color:rgb(212, 212, 212)">=</span><span class="token plain">  dt_to_unix_nanos</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token plain">pd</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">Timestamp</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token string" style="color:rgb(206, 145, 120)">&quot;2020-01-04&quot;</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"> tz</span><span class="token operator" style="color:rgb(212, 212, 212)">=</span><span class="token plain">pytz</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">utc</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">deltas </span><span class="token operator" style="color:rgb(212, 212, 212)">=</span><span class="token plain"> catalog</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">order_book_deltas</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token plain">instrument_ids</span><span class="token operator" style="color:rgb(212, 212, 212)">=</span><span class="token punctuation" style="color:rgb(212, 212, 212)">[</span><span class="token plain">instrument</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token builtin" style="color:rgb(86, 156, 214)">id</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">value</span><span class="token punctuation" style="color:rgb(212, 212, 212)">]</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"> start</span><span class="token operator" style="color:rgb(212, 212, 212)">=</span><span class="token plain">start</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"> end</span><span class="token operator" style="color:rgb(212, 212, 212)">=</span><span class="token plain">end</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><br></span></code></pre>
                              </div>
                            </div>
                            <h3
                              class="anchor anchorWithHideOnScrollNavbar_WYt5"
                              id="streaming-data"
                            >
                              Streaming data<a
                                href="#streaming-data"
                                class="hash-link"
                                aria-label="Direct link to Streaming data"
                                title="Direct link to Streaming data"
                                >​</a
                              >
                            </h3>
                            <p>
                              When running backtests in streaming mode with a
                              <code>BacktestNode</code>, the data catalog can be
                              used to stream the data in batches.
                            </p>
                            <p>
                              The following example shows how to achieve this by
                              initializing a
                              <code>BacktestDataConfig</code> configuration
                              object:
                            </p>
                            <div
                              class="language-python codeBlockContainer_Ckt0 theme-code-block"
                              style="
                                --prism-color: #9cdcfe;
                                --prism-background-color: #1e1e1e;
                              "
                            >
                              <div class="codeBlockContent_QJqH">
                                <pre
                                  tabindex="0"
                                  class="prism-code language-python codeBlock_bY9V thin-scrollbar"
                                  style="
                                    color: #9cdcfe;
                                    background-color: #1e1e1e;
                                  "
                                ><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9CDCFE"><span class="token keyword" style="color:rgb(86, 156, 214)">from</span><span class="token plain"> posei_trader</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">config </span><span class="token keyword" style="color:rgb(86, 156, 214)">import</span><span class="token plain"> BacktestDataConfig</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token keyword" style="color:rgb(86, 156, 214)">from</span><span class="token plain"> posei_trader</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">model </span><span class="token keyword" style="color:rgb(86, 156, 214)">import</span><span class="token plain"> OrderBookDelta</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">data_config </span><span class="token operator" style="color:rgb(212, 212, 212)">=</span><span class="token plain"> BacktestDataConfig</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    catalog_path</span><span class="token operator" style="color:rgb(212, 212, 212)">=</span><span class="token builtin" style="color:rgb(86, 156, 214)">str</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token plain">catalog</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">path</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    data_cls</span><span class="token operator" style="color:rgb(212, 212, 212)">=</span><span class="token plain">OrderBookDelta</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    instrument_id</span><span class="token operator" style="color:rgb(212, 212, 212)">=</span><span class="token plain">instrument</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token builtin" style="color:rgb(86, 156, 214)">id</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    start_time</span><span class="token operator" style="color:rgb(212, 212, 212)">=</span><span class="token plain">start</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    end_time</span><span class="token operator" style="color:rgb(212, 212, 212)">=</span><span class="token plain">end</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><br></span></code></pre>
                              </div>
                            </div>
                            <p>
                              This configuration object can then be passed into
                              a <code>BacktestRunConfig</code> and then in turn
                              passed into a <code>BacktestNode</code> as part of
                              a run. See the
                              <a
                                href="../../getting_started/backtest_high_level/index.htm"
                                >Backtest (high-level API)</a
                              >
                              tutorial for further details.
                            </p>
                            <h2
                              class="anchor anchorWithHideOnScrollNavbar_WYt5"
                              id="data-migrations"
                            >
                              Data migrations<a
                                href="#data-migrations"
                                class="hash-link"
                                aria-label="Direct link to Data migrations"
                                title="Direct link to Data migrations"
                                >​</a
                              >
                            </h2>
                            <p>
                              PoseiTrader defines an internal data format
                              specified in the <code>posei_model</code> crate.
                              These models are serialized into Arrow record
                              batches and written to Parquet files. Posei
                              backtesting is most efficient when using these
                              Posei-format Parquet files.
                            </p>
                            <p>
                              However, migrating the data model between
                              <a
                                href="../../getting_started/installation/index.htm#precision-mode"
                                >precision modes</a
                              >
                              and schema changes can be challenging. This guide
                              explains how to handle data migrations using our
                              utility tools.
                            </p>
                            <h3
                              class="anchor anchorWithHideOnScrollNavbar_WYt5"
                              id="migration-tools"
                            >
                              Migration tools<a
                                href="#migration-tools"
                                class="hash-link"
                                aria-label="Direct link to Migration tools"
                                title="Direct link to Migration tools"
                                >​</a
                              >
                            </h3>
                            <p>
                              The <code>posei_persistence</code> crate provides
                              two key utilities:
                            </p>
                            <h4
                              class="anchor anchorWithHideOnScrollNavbar_WYt5"
                              id="to_json"
                            >
                              <code>to_json</code
                              ><a
                                href="#to_json"
                                class="hash-link"
                                aria-label="Direct link to to_json"
                                title="Direct link to to_json"
                                >​</a
                              >
                            </h4>
                            <p>
                              Converts Parquet files to JSON while preserving
                              metadata:
                            </p>
                            <ul>
                              <li>
                                <p>Creates two files:</p>
                                <ul>
                                  <li>
                                    <code>&lt;input&gt;.json</code>: Contains
                                    the deserialized data
                                  </li>
                                  <li>
                                    <code>&lt;input&gt;.metadata.json</code>:
                                    Contains schema metadata and row group
                                    configuration
                                  </li>
                                </ul>
                              </li>
                              <li>
                                <p>
                                  Automatically detects data type from filename:
                                </p>
                                <ul>
                                  <li>
                                    <code>OrderBookDelta</code> (contains
                                    &quot;deltas&quot; or
                                    &quot;order_book_delta&quot;)
                                  </li>
                                  <li>
                                    <code>QuoteTick</code> (contains
                                    &quot;quotes&quot; or
                                    &quot;quote_tick&quot;)
                                  </li>
                                  <li>
                                    <code>TradeTick</code> (contains
                                    &quot;trades&quot; or
                                    &quot;trade_tick&quot;)
                                  </li>
                                  <li>
                                    <code>Bar</code> (contains &quot;bars&quot;)
                                  </li>
                                </ul>
                              </li>
                            </ul>
                            <h4
                              class="anchor anchorWithHideOnScrollNavbar_WYt5"
                              id="to_parquet"
                            >
                              <code>to_parquet</code
                              ><a
                                href="#to_parquet"
                                class="hash-link"
                                aria-label="Direct link to to_parquet"
                                title="Direct link to to_parquet"
                                >​</a
                              >
                            </h4>
                            <p>Converts JSON back to Parquet format:</p>
                            <ul>
                              <li>
                                Reads both the data JSON and metadata JSON files
                              </li>
                              <li>
                                Preserves row group sizes from original metadata
                              </li>
                              <li>Uses ZSTD compression</li>
                              <li>
                                Creates <code>&lt;input&gt;.parquet</code>
                              </li>
                            </ul>
                            <h3
                              class="anchor anchorWithHideOnScrollNavbar_WYt5"
                              id="migration-process"
                            >
                              Migration Process<a
                                href="#migration-process"
                                class="hash-link"
                                aria-label="Direct link to Migration Process"
                                title="Direct link to Migration Process"
                                >​</a
                              >
                            </h3>
                            <p>
                              The following migration examples both use trades
                              data (you can also migrate the other data types in
                              the same way). All commands should be run from the
                              root of the <code>persistence</code> crate
                              directory.
                            </p>
                            <h4
                              class="anchor anchorWithHideOnScrollNavbar_WYt5"
                              id="migrating-from-standard-precision-64-bit-to-high-precision-128-bit"
                            >
                              Migrating from standard-precision (64-bit) to
                              high-precision (128-bit)<a
                                href="#migrating-from-standard-precision-64-bit-to-high-precision-128-bit"
                                class="hash-link"
                                aria-label="Direct link to Migrating from standard-precision (64-bit) to high-precision (128-bit)"
                                title="Direct link to Migrating from standard-precision (64-bit) to high-precision (128-bit)"
                                >​</a
                              >
                            </h4>
                            <p>
                              This example describes a scenario where you want
                              to migrate from standard-precision schema to
                              high-precision schema.
                            </p>
                            <div
                              class="theme-admonition theme-admonition-note admonition_xJq3 alert alert--secondary"
                            >
                              <div class="admonitionHeading_Gvgb">
                                <span class="admonitionIcon_Rf37"
                                  ><svg viewbox="0 0 14 16">
                                    <path
                                      fill-rule="evenodd"
                                      d="M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"
                                    ></path></svg></span
                                >note
                              </div>
                              <div class="admonitionContent_BuS1">
                                <p>
                                  If you&#x27;re migrating from a catalog that
                                  used the <code>Int64</code> and
                                  <code>UInt64</code> Arrow data types for
                                  prices and sizes, be sure to check out commit
                                  <a
                                    href="https://github.com/poseisysstems/commit/e284162cf27a3222115aeb5d10d599c8cf09cf50"
                                    target="_blank"
                                    rel="noopener noreferrer"
                                    >e284162</a
                                  >
                                  <strong>before</strong> compiling the code
                                  that writes the initial JSON.
                                </p>
                              </div>
                            </div>
                            <p>
                              <strong
                                >1. Convert from standard-precision Parquet to
                                JSON</strong
                              >:
                            </p>
                            <div
                              class="language-bash codeBlockContainer_Ckt0 theme-code-block"
                              style="
                                --prism-color: #9cdcfe;
                                --prism-background-color: #1e1e1e;
                              "
                            >
                              <div class="codeBlockContent_QJqH">
                                <pre
                                  tabindex="0"
                                  class="prism-code language-bash codeBlock_bY9V thin-scrollbar"
                                  style="
                                    color: #9cdcfe;
                                    background-color: #1e1e1e;
                                  "
                                ><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9CDCFE"><span class="token plain">cargo run --bin to_json trades.parquet</span><br></span></code></pre>
                              </div>
                            </div>
                            <p>
                              This will create <code>trades.json</code> and
                              <code>trades.metadata.json</code> files.
                            </p>
                            <p>
                              <strong
                                >2. Convert from JSON to high-precision
                                Parquet</strong
                              >:
                            </p>
                            <p>
                              Add the
                              <code>--features high-precision</code> flag to
                              write data as high-precision (128-bit) schema
                              Parquet.
                            </p>
                            <div
                              class="language-bash codeBlockContainer_Ckt0 theme-code-block"
                              style="
                                --prism-color: #9cdcfe;
                                --prism-background-color: #1e1e1e;
                              "
                            >
                              <div class="codeBlockContent_QJqH">
                                <pre
                                  tabindex="0"
                                  class="prism-code language-bash codeBlock_bY9V thin-scrollbar"
                                  style="
                                    color: #9cdcfe;
                                    background-color: #1e1e1e;
                                  "
                                ><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9CDCFE"><span class="token plain">cargo run --features high-precision --bin to_parquet trades.json</span><br></span></code></pre>
                              </div>
                            </div>
                            <p>
                              This will create a
                              <code>trades.parquet</code> file with
                              high-precision schema data.
                            </p>
                            <h4
                              class="anchor anchorWithHideOnScrollNavbar_WYt5"
                              id="migrating-schema-changes"
                            >
                              Migrating schema changes<a
                                href="#migrating-schema-changes"
                                class="hash-link"
                                aria-label="Direct link to Migrating schema changes"
                                title="Direct link to Migrating schema changes"
                                >​</a
                              >
                            </h4>
                            <p>
                              This example describes a scenario where you want
                              to migrate from one schema version to another.
                            </p>
                            <p>
                              <strong
                                >1. Convert from old schema Parquet to
                                JSON</strong
                              >:
                            </p>
                            <p>
                              Add the
                              <code>--features high-precision</code> flag if the
                              source data uses a high-precision (128-bit)
                              schema.
                            </p>
                            <div
                              class="language-bash codeBlockContainer_Ckt0 theme-code-block"
                              style="
                                --prism-color: #9cdcfe;
                                --prism-background-color: #1e1e1e;
                              "
                            >
                              <div class="codeBlockContent_QJqH">
                                <pre
                                  tabindex="0"
                                  class="prism-code language-bash codeBlock_bY9V thin-scrollbar"
                                  style="
                                    color: #9cdcfe;
                                    background-color: #1e1e1e;
                                  "
                                ><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9CDCFE"><span class="token plain">cargo run --bin to_json trades.parquet</span><br></span></code></pre>
                              </div>
                            </div>
                            <p>
                              This will create <code>trades.json</code> and
                              <code>trades.metadata.json</code> files.
                            </p>
                            <p>
                              <strong>2. Switch to new schema version</strong>:
                            </p>
                            <div
                              class="language-bash codeBlockContainer_Ckt0 theme-code-block"
                              style="
                                --prism-color: #9cdcfe;
                                --prism-background-color: #1e1e1e;
                              "
                            >
                              <div class="codeBlockContent_QJqH">
                                <pre
                                  tabindex="0"
                                  class="prism-code language-bash codeBlock_bY9V thin-scrollbar"
                                  style="
                                    color: #9cdcfe;
                                    background-color: #1e1e1e;
                                  "
                                ><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9CDCFE"><span class="token plain">git checkout &lt;new-version&gt;</span><br></span></code></pre>
                              </div>
                            </div>
                            <p>
                              <strong
                                >3. Convert from JSON back to new schema
                                Parquet</strong
                              >:
                            </p>
                            <div
                              class="language-bash codeBlockContainer_Ckt0 theme-code-block"
                              style="
                                --prism-color: #9cdcfe;
                                --prism-background-color: #1e1e1e;
                              "
                            >
                              <div class="codeBlockContent_QJqH">
                                <pre
                                  tabindex="0"
                                  class="prism-code language-bash codeBlock_bY9V thin-scrollbar"
                                  style="
                                    color: #9cdcfe;
                                    background-color: #1e1e1e;
                                  "
                                ><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9CDCFE"><span class="token plain">cargo run --features high-precision --bin to_parquet trades.json</span><br></span></code></pre>
                              </div>
                            </div>
                            <p>
                              This will create a
                              <code>trades.parquet</code> file with the new
                              schema.
                            </p>
                            <h3
                              class="anchor anchorWithHideOnScrollNavbar_WYt5"
                              id="best-practices"
                            >
                              Best Practices<a
                                href="#best-practices"
                                class="hash-link"
                                aria-label="Direct link to Best Practices"
                                title="Direct link to Best Practices"
                                >​</a
                              >
                            </h3>
                            <ul>
                              <li>
                                Always test migrations with a small dataset
                                first.
                              </li>
                              <li>Maintain backups of original files.</li>
                              <li>Verify data integrity after migration.</li>
                              <li>
                                Perform migrations in a staging environment
                                before applying them to production data.
                              </li>
                            </ul>
                            <h2
                              class="anchor anchorWithHideOnScrollNavbar_WYt5"
                              id="custom-data"
                            >
                              Custom Data<a
                                href="#custom-data"
                                class="hash-link"
                                aria-label="Direct link to Custom Data"
                                title="Direct link to Custom Data"
                                >​</a
                              >
                            </h2>
                            <p>
                              Due to the modular nature of the Posei design, it
                              is possible to set up systems with very flexible
                              data streams, including custom user-defined data
                              types. This guide covers some possible use cases
                              for this functionality.
                            </p>
                            <p>
                              It&#x27;s possible to create custom data types
                              within the Posei system. First you will need to
                              define your data by subclassing from
                              <code>Data</code>.
                            </p>
                            <div
                              class="theme-admonition theme-admonition-info admonition_xJq3 alert alert--info"
                            >
                              <div class="admonitionHeading_Gvgb">
                                <span class="admonitionIcon_Rf37"
                                  ><svg viewbox="0 0 14 16">
                                    <path
                                      fill-rule="evenodd"
                                      d="M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"
                                    ></path></svg></span
                                >info
                              </div>
                              <div class="admonitionContent_BuS1">
                                <p>
                                  As <code>Data</code> holds no state, it is not
                                  strictly necessary to call
                                  <code>super().__init__()</code>.
                                </p>
                              </div>
                            </div>
                            <div
                              class="language-python codeBlockContainer_Ckt0 theme-code-block"
                              style="
                                --prism-color: #9cdcfe;
                                --prism-background-color: #1e1e1e;
                              "
                            >
                              <div class="codeBlockContent_QJqH">
                                <pre
                                  tabindex="0"
                                  class="prism-code language-python codeBlock_bY9V thin-scrollbar"
                                  style="
                                    color: #9cdcfe;
                                    background-color: #1e1e1e;
                                  "
                                ><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9CDCFE"><span class="token keyword" style="color:rgb(86, 156, 214)">from</span><span class="token plain"> posei_trader</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">core </span><span class="token keyword" style="color:rgb(86, 156, 214)">import</span><span class="token plain"> Data</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token keyword" style="color:rgb(86, 156, 214)">class</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(78, 201, 176)">MyDataPoint</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token plain">Data</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token punctuation" style="color:rgb(212, 212, 212)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token triple-quoted-string string" style="color:rgb(206, 145, 120)">&quot;&quot;&quot;</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token triple-quoted-string string" style="color:rgb(206, 145, 120)">    This is an example of a user-defined data class, inheriting from the base class `Data`.</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token triple-quoted-string string" style="display:inline-block;color:rgb(206, 145, 120)"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token triple-quoted-string string" style="color:rgb(206, 145, 120)">    The fields `label`, `x`, `y`, and `z` in this class are examples of arbitrary user data.</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token triple-quoted-string string" style="color:rgb(206, 145, 120)">    &quot;&quot;&quot;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token keyword" style="color:rgb(86, 156, 214)">def</span><span class="token plain"> </span><span class="token function" style="color:rgb(220, 220, 170)">__init__</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">        self</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">        label</span><span class="token punctuation" style="color:rgb(212, 212, 212)">:</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(86, 156, 214)">str</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">        x</span><span class="token punctuation" style="color:rgb(212, 212, 212)">:</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(86, 156, 214)">int</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">        y</span><span class="token punctuation" style="color:rgb(212, 212, 212)">:</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(86, 156, 214)">int</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">        z</span><span class="token punctuation" style="color:rgb(212, 212, 212)">:</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(86, 156, 214)">int</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">        ts_event</span><span class="token punctuation" style="color:rgb(212, 212, 212)">:</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(86, 156, 214)">int</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">        ts_init</span><span class="token punctuation" style="color:rgb(212, 212, 212)">:</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(86, 156, 214)">int</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token plain"> </span><span class="token operator" style="color:rgb(212, 212, 212)">-</span><span class="token operator" style="color:rgb(212, 212, 212)">&gt;</span><span class="token plain"> </span><span class="token boolean">None</span><span class="token punctuation" style="color:rgb(212, 212, 212)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">        self</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">label </span><span class="token operator" style="color:rgb(212, 212, 212)">=</span><span class="token plain"> label</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">        self</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">x </span><span class="token operator" style="color:rgb(212, 212, 212)">=</span><span class="token plain"> x</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">        self</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">y </span><span class="token operator" style="color:rgb(212, 212, 212)">=</span><span class="token plain"> y</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">        self</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">z </span><span class="token operator" style="color:rgb(212, 212, 212)">=</span><span class="token plain"> z</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">        self</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">_ts_event </span><span class="token operator" style="color:rgb(212, 212, 212)">=</span><span class="token plain"> ts_event</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">        self</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">_ts_init </span><span class="token operator" style="color:rgb(212, 212, 212)">=</span><span class="token plain"> ts_init</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token decorator annotation punctuation" style="color:rgb(212, 212, 212)">@property</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token keyword" style="color:rgb(86, 156, 214)">def</span><span class="token plain"> </span><span class="token function" style="color:rgb(220, 220, 170)">ts_event</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token plain">self</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token plain"> </span><span class="token operator" style="color:rgb(212, 212, 212)">-</span><span class="token operator" style="color:rgb(212, 212, 212)">&gt;</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(86, 156, 214)">int</span><span class="token punctuation" style="color:rgb(212, 212, 212)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">        </span><span class="token triple-quoted-string string" style="color:rgb(206, 145, 120)">&quot;&quot;&quot;</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token triple-quoted-string string" style="color:rgb(206, 145, 120)">        UNIX timestamp (nanoseconds) when the data event occurred.</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token triple-quoted-string string" style="display:inline-block;color:rgb(206, 145, 120)"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token triple-quoted-string string" style="color:rgb(206, 145, 120)">        Returns</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token triple-quoted-string string" style="color:rgb(206, 145, 120)">        -------</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token triple-quoted-string string" style="color:rgb(206, 145, 120)">        int</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token triple-quoted-string string" style="display:inline-block;color:rgb(206, 145, 120)"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token triple-quoted-string string" style="color:rgb(206, 145, 120)">        &quot;&quot;&quot;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">        </span><span class="token keyword" style="color:rgb(86, 156, 214)">return</span><span class="token plain"> self</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">_ts_event</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token decorator annotation punctuation" style="color:rgb(212, 212, 212)">@property</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token keyword" style="color:rgb(86, 156, 214)">def</span><span class="token plain"> </span><span class="token function" style="color:rgb(220, 220, 170)">ts_init</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token plain">self</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token plain"> </span><span class="token operator" style="color:rgb(212, 212, 212)">-</span><span class="token operator" style="color:rgb(212, 212, 212)">&gt;</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(86, 156, 214)">int</span><span class="token punctuation" style="color:rgb(212, 212, 212)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">        </span><span class="token triple-quoted-string string" style="color:rgb(206, 145, 120)">&quot;&quot;&quot;</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token triple-quoted-string string" style="color:rgb(206, 145, 120)">        UNIX timestamp (nanoseconds) when the object was initialized.</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token triple-quoted-string string" style="display:inline-block;color:rgb(206, 145, 120)"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token triple-quoted-string string" style="color:rgb(206, 145, 120)">        Returns</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token triple-quoted-string string" style="color:rgb(206, 145, 120)">        -------</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token triple-quoted-string string" style="color:rgb(206, 145, 120)">        int</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token triple-quoted-string string" style="display:inline-block;color:rgb(206, 145, 120)"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token triple-quoted-string string" style="color:rgb(206, 145, 120)">        &quot;&quot;&quot;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">        </span><span class="token keyword" style="color:rgb(86, 156, 214)">return</span><span class="token plain"> self</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">_ts_init</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain" style="display:inline-block"></span><br></span></code></pre>
                              </div>
                            </div>
                            <p>
                              The <code>Data</code> abstract base class acts as
                              a contract within the system and requires two
                              properties for all types of data:
                              <code>ts_event</code> and <code>ts_init</code>.
                              These represent the UNIX nanosecond timestamps for
                              when the event occurred and when the object was
                              initialized, respectively.
                            </p>
                            <p>
                              The recommended approach to satisfy the contract
                              is to assign <code>ts_event</code> and
                              <code>ts_init</code> to backing fields, and then
                              implement the <code>@property</code> for each as
                              shown above (for completeness, the docstrings are
                              copied from the <code>Data</code> base class).
                            </p>
                            <div
                              class="theme-admonition theme-admonition-info admonition_xJq3 alert alert--info"
                            >
                              <div class="admonitionHeading_Gvgb">
                                <span class="admonitionIcon_Rf37"
                                  ><svg viewbox="0 0 14 16">
                                    <path
                                      fill-rule="evenodd"
                                      d="M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"
                                    ></path></svg></span
                                >info
                              </div>
                              <div class="admonitionContent_BuS1">
                                <p>
                                  These timestamps enable Posei to correctly
                                  order data streams for backtests using
                                  monotonically increasing
                                  <code>ts_init</code> UNIX nanoseconds.
                                </p>
                              </div>
                            </div>
                            <p>
                              We can now work with this data type for
                              backtesting and live trading. For instance, we
                              could now create an adapter which is able to parse
                              and create objects of this type - and send them
                              back to the <code>DataEngine</code> for
                              consumption by subscribers.
                            </p>
                            <p>
                              You can publish a custom data type within your
                              actor/strategy using the message bus in the
                              following way:
                            </p>
                            <div
                              class="language-python codeBlockContainer_Ckt0 theme-code-block"
                              style="
                                --prism-color: #9cdcfe;
                                --prism-background-color: #1e1e1e;
                              "
                            >
                              <div class="codeBlockContent_QJqH">
                                <pre
                                  tabindex="0"
                                  class="prism-code language-python codeBlock_bY9V thin-scrollbar"
                                  style="
                                    color: #9cdcfe;
                                    background-color: #1e1e1e;
                                  "
                                ><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9CDCFE"><span class="token plain">self</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">publish_data</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    DataType</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token plain">MyDataPoint</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"> metadata</span><span class="token operator" style="color:rgb(212, 212, 212)">=</span><span class="token punctuation" style="color:rgb(212, 212, 212)">{</span><span class="token string" style="color:rgb(206, 145, 120)">&quot;some_optional_category&quot;</span><span class="token punctuation" style="color:rgb(212, 212, 212)">:</span><span class="token plain"> </span><span class="token number" style="color:rgb(181, 206, 168)">1</span><span class="token punctuation" style="color:rgb(212, 212, 212)">}</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    MyDataPoint</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><br></span></code></pre>
                              </div>
                            </div>
                            <p>
                              The <code>metadata</code> dictionary optionally
                              adds more granular information that is used in the
                              topic name to publish data with the message bus.
                            </p>
                            <p>
                              Extra metadata information can also be passed to a
                              <code>BacktestDataConfig</code> configuration
                              object in order to enrich and describe custom data
                              objects used in a backtesting context:
                            </p>
                            <div
                              class="language-python codeBlockContainer_Ckt0 theme-code-block"
                              style="
                                --prism-color: #9cdcfe;
                                --prism-background-color: #1e1e1e;
                              "
                            >
                              <div class="codeBlockContent_QJqH">
                                <pre
                                  tabindex="0"
                                  class="prism-code language-python codeBlock_bY9V thin-scrollbar"
                                  style="
                                    color: #9cdcfe;
                                    background-color: #1e1e1e;
                                  "
                                ><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9CDCFE"><span class="token keyword" style="color:rgb(86, 156, 214)">from</span><span class="token plain"> posei_trader</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">config </span><span class="token keyword" style="color:rgb(86, 156, 214)">import</span><span class="token plain"> BacktestDataConfig</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">data_config </span><span class="token operator" style="color:rgb(212, 212, 212)">=</span><span class="token plain"> BacktestDataConfig</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    catalog_path</span><span class="token operator" style="color:rgb(212, 212, 212)">=</span><span class="token builtin" style="color:rgb(86, 156, 214)">str</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token plain">catalog</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">path</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    data_cls</span><span class="token operator" style="color:rgb(212, 212, 212)">=</span><span class="token plain">MyDataPoint</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    metadata</span><span class="token operator" style="color:rgb(212, 212, 212)">=</span><span class="token punctuation" style="color:rgb(212, 212, 212)">{</span><span class="token string" style="color:rgb(206, 145, 120)">&quot;some_optional_category&quot;</span><span class="token punctuation" style="color:rgb(212, 212, 212)">:</span><span class="token plain"> </span><span class="token number" style="color:rgb(181, 206, 168)">1</span><span class="token punctuation" style="color:rgb(212, 212, 212)">}</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><br></span></code></pre>
                              </div>
                            </div>
                            <p>
                              You can subscribe to custom data types within your
                              actor/strategy in the following way:
                            </p>
                            <div
                              class="language-python codeBlockContainer_Ckt0 theme-code-block"
                              style="
                                --prism-color: #9cdcfe;
                                --prism-background-color: #1e1e1e;
                              "
                            >
                              <div class="codeBlockContent_QJqH">
                                <pre
                                  tabindex="0"
                                  class="prism-code language-python codeBlock_bY9V thin-scrollbar"
                                  style="
                                    color: #9cdcfe;
                                    background-color: #1e1e1e;
                                  "
                                ><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9CDCFE"><span class="token plain">self</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">subscribe_data</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    data_type</span><span class="token operator" style="color:rgb(212, 212, 212)">=</span><span class="token plain">DataType</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token plain">MyDataPoint</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    metadata</span><span class="token operator" style="color:rgb(212, 212, 212)">=</span><span class="token punctuation" style="color:rgb(212, 212, 212)">{</span><span class="token string" style="color:rgb(206, 145, 120)">&quot;some_optional_category&quot;</span><span class="token punctuation" style="color:rgb(212, 212, 212)">:</span><span class="token plain"> </span><span class="token number" style="color:rgb(181, 206, 168)">1</span><span class="token punctuation" style="color:rgb(212, 212, 212)">}</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    client_id</span><span class="token operator" style="color:rgb(212, 212, 212)">=</span><span class="token plain">ClientId</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token string" style="color:rgb(206, 145, 120)">&quot;MY_ADAPTER&quot;</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><br></span></code></pre>
                              </div>
                            </div>
                            <p>
                              The <code>client_id</code> provides an identifier
                              to route the data subscription to a specific
                              client.
                            </p>
                            <p>
                              This will result in your actor/strategy passing
                              these received <code>MyDataPoint</code> objects to
                              your <code>on_data</code> method. You will need to
                              check the type, as this method acts as a flexible
                              handler for all custom data.
                            </p>
                            <div
                              class="language-python codeBlockContainer_Ckt0 theme-code-block"
                              style="
                                --prism-color: #9cdcfe;
                                --prism-background-color: #1e1e1e;
                              "
                            >
                              <div class="codeBlockContent_QJqH">
                                <pre
                                  tabindex="0"
                                  class="prism-code language-python codeBlock_bY9V thin-scrollbar"
                                  style="
                                    color: #9cdcfe;
                                    background-color: #1e1e1e;
                                  "
                                ><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9CDCFE"><span class="token keyword" style="color:rgb(86, 156, 214)">def</span><span class="token plain"> </span><span class="token function" style="color:rgb(220, 220, 170)">on_data</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token plain">self</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"> data</span><span class="token punctuation" style="color:rgb(212, 212, 212)">:</span><span class="token plain"> Data</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token plain"> </span><span class="token operator" style="color:rgb(212, 212, 212)">-</span><span class="token operator" style="color:rgb(212, 212, 212)">&gt;</span><span class="token plain"> </span><span class="token boolean">None</span><span class="token punctuation" style="color:rgb(212, 212, 212)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token comment" style="color:rgb(106, 153, 85)"># First check the type of data</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token keyword" style="color:rgb(86, 156, 214)">if</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(86, 156, 214)">isinstance</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token plain">data</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"> MyDataPoint</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token punctuation" style="color:rgb(212, 212, 212)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">        </span><span class="token comment" style="color:rgb(106, 153, 85)"># Do something with the data</span><br></span></code></pre>
                              </div>
                            </div>
                            <h3
                              class="anchor anchorWithHideOnScrollNavbar_WYt5"
                              id="publishing-and-receiving-signal-data"
                            >
                              Publishing and receiving signal data<a
                                href="#publishing-and-receiving-signal-data"
                                class="hash-link"
                                aria-label="Direct link to Publishing and receiving signal data"
                                title="Direct link to Publishing and receiving signal data"
                                >​</a
                              >
                            </h3>
                            <p>
                              Here is an example of publishing and receiving
                              signal data using the <code>MessageBus</code> from
                              an actor or strategy. A signal is an automatically
                              generated custom data identified by a name
                              containing only one value of a basic type (str,
                              float, int, bool or bytes).
                            </p>
                            <div
                              class="language-python codeBlockContainer_Ckt0 theme-code-block"
                              style="
                                --prism-color: #9cdcfe;
                                --prism-background-color: #1e1e1e;
                              "
                            >
                              <div class="codeBlockContent_QJqH">
                                <pre
                                  tabindex="0"
                                  class="prism-code language-python codeBlock_bY9V thin-scrollbar"
                                  style="
                                    color: #9cdcfe;
                                    background-color: #1e1e1e;
                                  "
                                ><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9CDCFE"><span class="token plain">self</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">publish_signal</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token string" style="color:rgb(206, 145, 120)">&quot;signal_name&quot;</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"> value</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"> ts_event</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">self</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">subscribe_signal</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token string" style="color:rgb(206, 145, 120)">&quot;signal_name&quot;</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token keyword" style="color:rgb(86, 156, 214)">def</span><span class="token plain"> </span><span class="token function" style="color:rgb(220, 220, 170)">on_signal</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token plain">self</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"> signal</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token punctuation" style="color:rgb(212, 212, 212)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token keyword" style="color:rgb(86, 156, 214)">print</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token string" style="color:rgb(206, 145, 120)">&quot;Signal&quot;</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"> data</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><br></span></code></pre>
                              </div>
                            </div>
                            <h3
                              class="anchor anchorWithHideOnScrollNavbar_WYt5"
                              id="option-greeks-example"
                            >
                              Option Greeks example<a
                                href="#option-greeks-example"
                                class="hash-link"
                                aria-label="Direct link to Option Greeks example"
                                title="Direct link to Option Greeks example"
                                >​</a
                              >
                            </h3>
                            <p>
                              This example demonstrates how to create a custom
                              data type for option Greeks, specifically the
                              delta. By following these steps, you can create
                              custom data types, subscribe to them, publish
                              them, and store them in the <code>Cache</code> or
                              <code>ParquetDataCatalog</code> for efficient
                              retrieval.
                            </p>
                            <div
                              class="language-python codeBlockContainer_Ckt0 theme-code-block"
                              style="
                                --prism-color: #9cdcfe;
                                --prism-background-color: #1e1e1e;
                              "
                            >
                              <div class="codeBlockContent_QJqH">
                                <pre
                                  tabindex="0"
                                  class="prism-code language-python codeBlock_bY9V thin-scrollbar"
                                  style="
                                    color: #9cdcfe;
                                    background-color: #1e1e1e;
                                  "
                                ><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9CDCFE"><span class="token keyword" style="color:rgb(86, 156, 214)">import</span><span class="token plain"> msgspec</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token keyword" style="color:rgb(86, 156, 214)">from</span><span class="token plain"> posei_trader</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">core </span><span class="token keyword" style="color:rgb(86, 156, 214)">import</span><span class="token plain"> Data</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token keyword" style="color:rgb(86, 156, 214)">from</span><span class="token plain"> posei_trader</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">core</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">datetime </span><span class="token keyword" style="color:rgb(86, 156, 214)">import</span><span class="token plain"> unix_nanos_to_iso8601</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token keyword" style="color:rgb(86, 156, 214)">from</span><span class="token plain"> posei_trader</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">model </span><span class="token keyword" style="color:rgb(86, 156, 214)">import</span><span class="token plain"> DataType</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token keyword" style="color:rgb(86, 156, 214)">from</span><span class="token plain"> posei_trader</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">serialization</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">base </span><span class="token keyword" style="color:rgb(86, 156, 214)">import</span><span class="token plain"> register_serializable_type</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token keyword" style="color:rgb(86, 156, 214)">from</span><span class="token plain"> posei_trader</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">serialization</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">arrow</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">serializer </span><span class="token keyword" style="color:rgb(86, 156, 214)">import</span><span class="token plain"> register_arrow</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token keyword" style="color:rgb(86, 156, 214)">import</span><span class="token plain"> pyarrow </span><span class="token keyword" style="color:rgb(86, 156, 214)">as</span><span class="token plain"> pa</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token keyword" style="color:rgb(86, 156, 214)">from</span><span class="token plain"> posei_trader</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">model </span><span class="token keyword" style="color:rgb(86, 156, 214)">import</span><span class="token plain"> InstrumentId</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token keyword" style="color:rgb(86, 156, 214)">from</span><span class="token plain"> posei_trader</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">core</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">datetime </span><span class="token keyword" style="color:rgb(86, 156, 214)">import</span><span class="token plain"> dt_to_unix_nanos</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"> unix_nanos_to_dt</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"> format_iso8601</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token keyword" style="color:rgb(86, 156, 214)">class</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(78, 201, 176)">GreeksData</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token plain">Data</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token punctuation" style="color:rgb(212, 212, 212)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token keyword" style="color:rgb(86, 156, 214)">def</span><span class="token plain"> </span><span class="token function" style="color:rgb(220, 220, 170)">__init__</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">        self</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"> instrument_id</span><span class="token punctuation" style="color:rgb(212, 212, 212)">:</span><span class="token plain"> InstrumentId </span><span class="token operator" style="color:rgb(212, 212, 212)">=</span><span class="token plain"> InstrumentId</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">from_str</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token string" style="color:rgb(206, 145, 120)">&quot;ES.GLBX&quot;</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">        ts_event</span><span class="token punctuation" style="color:rgb(212, 212, 212)">:</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(86, 156, 214)">int</span><span class="token plain"> </span><span class="token operator" style="color:rgb(212, 212, 212)">=</span><span class="token plain"> </span><span class="token number" style="color:rgb(181, 206, 168)">0</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">        ts_init</span><span class="token punctuation" style="color:rgb(212, 212, 212)">:</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(86, 156, 214)">int</span><span class="token plain"> </span><span class="token operator" style="color:rgb(212, 212, 212)">=</span><span class="token plain"> </span><span class="token number" style="color:rgb(181, 206, 168)">0</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">        delta</span><span class="token punctuation" style="color:rgb(212, 212, 212)">:</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(86, 156, 214)">float</span><span class="token plain"> </span><span class="token operator" style="color:rgb(212, 212, 212)">=</span><span class="token plain"> </span><span class="token number" style="color:rgb(181, 206, 168)">0.0</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token plain"> </span><span class="token operator" style="color:rgb(212, 212, 212)">-</span><span class="token operator" style="color:rgb(212, 212, 212)">&gt;</span><span class="token plain"> </span><span class="token boolean">None</span><span class="token punctuation" style="color:rgb(212, 212, 212)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">        self</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">instrument_id </span><span class="token operator" style="color:rgb(212, 212, 212)">=</span><span class="token plain"> instrument_id</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">        self</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">_ts_event </span><span class="token operator" style="color:rgb(212, 212, 212)">=</span><span class="token plain"> ts_event</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">        self</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">_ts_init </span><span class="token operator" style="color:rgb(212, 212, 212)">=</span><span class="token plain"> ts_init</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">        self</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">delta </span><span class="token operator" style="color:rgb(212, 212, 212)">=</span><span class="token plain"> delta</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token keyword" style="color:rgb(86, 156, 214)">def</span><span class="token plain"> </span><span class="token function" style="color:rgb(220, 220, 170)">__repr__</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token plain">self</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token punctuation" style="color:rgb(212, 212, 212)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">        </span><span class="token keyword" style="color:rgb(86, 156, 214)">return</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token string-interpolation string" style="color:rgb(206, 145, 120)">f&quot;GreeksData(ts_init=</span><span class="token string-interpolation interpolation punctuation" style="color:rgb(212, 212, 212)">{</span><span class="token string-interpolation interpolation">unix_nanos_to_iso8601</span><span class="token string-interpolation interpolation punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token string-interpolation interpolation">self</span><span class="token string-interpolation interpolation punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token string-interpolation interpolation">_ts_init</span><span class="token string-interpolation interpolation punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token string-interpolation interpolation punctuation" style="color:rgb(212, 212, 212)">}</span><span class="token string-interpolation string" style="color:rgb(206, 145, 120)">, instrument_id=</span><span class="token string-interpolation interpolation punctuation" style="color:rgb(212, 212, 212)">{</span><span class="token string-interpolation interpolation">self</span><span class="token string-interpolation interpolation punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token string-interpolation interpolation">instrument_id</span><span class="token string-interpolation interpolation punctuation" style="color:rgb(212, 212, 212)">}</span><span class="token string-interpolation string" style="color:rgb(206, 145, 120)">, delta=</span><span class="token string-interpolation interpolation punctuation" style="color:rgb(212, 212, 212)">{</span><span class="token string-interpolation interpolation">self</span><span class="token string-interpolation interpolation punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token string-interpolation interpolation">delta</span><span class="token string-interpolation interpolation punctuation" style="color:rgb(212, 212, 212)">:</span><span class="token string-interpolation interpolation format-spec">.2f</span><span class="token string-interpolation interpolation punctuation" style="color:rgb(212, 212, 212)">}</span><span class="token string-interpolation string" style="color:rgb(206, 145, 120)">)&quot;</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token decorator annotation punctuation" style="color:rgb(212, 212, 212)">@property</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token keyword" style="color:rgb(86, 156, 214)">def</span><span class="token plain"> </span><span class="token function" style="color:rgb(220, 220, 170)">ts_event</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token plain">self</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token punctuation" style="color:rgb(212, 212, 212)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">        </span><span class="token keyword" style="color:rgb(86, 156, 214)">return</span><span class="token plain"> self</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">_ts_event</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token decorator annotation punctuation" style="color:rgb(212, 212, 212)">@property</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token keyword" style="color:rgb(86, 156, 214)">def</span><span class="token plain"> </span><span class="token function" style="color:rgb(220, 220, 170)">ts_init</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token plain">self</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token punctuation" style="color:rgb(212, 212, 212)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">        </span><span class="token keyword" style="color:rgb(86, 156, 214)">return</span><span class="token plain"> self</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">_ts_init</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token keyword" style="color:rgb(86, 156, 214)">def</span><span class="token plain"> </span><span class="token function" style="color:rgb(220, 220, 170)">to_dict</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token plain">self</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token punctuation" style="color:rgb(212, 212, 212)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">        </span><span class="token keyword" style="color:rgb(86, 156, 214)">return</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(212, 212, 212)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">            </span><span class="token string" style="color:rgb(206, 145, 120)">&quot;instrument_id&quot;</span><span class="token punctuation" style="color:rgb(212, 212, 212)">:</span><span class="token plain"> self</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">instrument_id</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">value</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">            </span><span class="token string" style="color:rgb(206, 145, 120)">&quot;ts_event&quot;</span><span class="token punctuation" style="color:rgb(212, 212, 212)">:</span><span class="token plain"> self</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">_ts_event</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">            </span><span class="token string" style="color:rgb(206, 145, 120)">&quot;ts_init&quot;</span><span class="token punctuation" style="color:rgb(212, 212, 212)">:</span><span class="token plain"> self</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">_ts_init</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">            </span><span class="token string" style="color:rgb(206, 145, 120)">&quot;delta&quot;</span><span class="token punctuation" style="color:rgb(212, 212, 212)">:</span><span class="token plain"> self</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">delta</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(212, 212, 212)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token decorator annotation punctuation" style="color:rgb(212, 212, 212)">@classmethod</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token keyword" style="color:rgb(86, 156, 214)">def</span><span class="token plain"> </span><span class="token function" style="color:rgb(220, 220, 170)">from_dict</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token plain">cls</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"> data</span><span class="token punctuation" style="color:rgb(212, 212, 212)">:</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(86, 156, 214)">dict</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token punctuation" style="color:rgb(212, 212, 212)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">        </span><span class="token keyword" style="color:rgb(86, 156, 214)">return</span><span class="token plain"> GreeksData</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token plain">InstrumentId</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">from_str</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token plain">data</span><span class="token punctuation" style="color:rgb(212, 212, 212)">[</span><span class="token string" style="color:rgb(206, 145, 120)">&quot;instrument_id&quot;</span><span class="token punctuation" style="color:rgb(212, 212, 212)">]</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"> data</span><span class="token punctuation" style="color:rgb(212, 212, 212)">[</span><span class="token string" style="color:rgb(206, 145, 120)">&quot;ts_event&quot;</span><span class="token punctuation" style="color:rgb(212, 212, 212)">]</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"> data</span><span class="token punctuation" style="color:rgb(212, 212, 212)">[</span><span class="token string" style="color:rgb(206, 145, 120)">&quot;ts_init&quot;</span><span class="token punctuation" style="color:rgb(212, 212, 212)">]</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"> data</span><span class="token punctuation" style="color:rgb(212, 212, 212)">[</span><span class="token string" style="color:rgb(206, 145, 120)">&quot;delta&quot;</span><span class="token punctuation" style="color:rgb(212, 212, 212)">]</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token keyword" style="color:rgb(86, 156, 214)">def</span><span class="token plain"> </span><span class="token function" style="color:rgb(220, 220, 170)">to_bytes</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token plain">self</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token punctuation" style="color:rgb(212, 212, 212)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">        </span><span class="token keyword" style="color:rgb(86, 156, 214)">return</span><span class="token plain"> msgspec</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">msgpack</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">encode</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token plain">self</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">to_dict</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token decorator annotation punctuation" style="color:rgb(212, 212, 212)">@classmethod</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token keyword" style="color:rgb(86, 156, 214)">def</span><span class="token plain"> </span><span class="token function" style="color:rgb(220, 220, 170)">from_bytes</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token plain">cls</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"> data</span><span class="token punctuation" style="color:rgb(212, 212, 212)">:</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(86, 156, 214)">bytes</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token punctuation" style="color:rgb(212, 212, 212)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">        </span><span class="token keyword" style="color:rgb(86, 156, 214)">return</span><span class="token plain"> cls</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">from_dict</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token plain">msgspec</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">msgpack</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">decode</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token plain">data</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token keyword" style="color:rgb(86, 156, 214)">def</span><span class="token plain"> </span><span class="token function" style="color:rgb(220, 220, 170)">to_catalog</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token plain">self</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token punctuation" style="color:rgb(212, 212, 212)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">        </span><span class="token keyword" style="color:rgb(86, 156, 214)">return</span><span class="token plain"> pa</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">RecordBatch</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">from_pylist</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token punctuation" style="color:rgb(212, 212, 212)">[</span><span class="token plain">self</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">to_dict</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token punctuation" style="color:rgb(212, 212, 212)">]</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"> schema</span><span class="token operator" style="color:rgb(212, 212, 212)">=</span><span class="token plain">GreeksData</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">schema</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token decorator annotation punctuation" style="color:rgb(212, 212, 212)">@classmethod</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token keyword" style="color:rgb(86, 156, 214)">def</span><span class="token plain"> </span><span class="token function" style="color:rgb(220, 220, 170)">from_catalog</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token plain">cls</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"> table</span><span class="token punctuation" style="color:rgb(212, 212, 212)">:</span><span class="token plain"> pa</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">Table</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token punctuation" style="color:rgb(212, 212, 212)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">        </span><span class="token keyword" style="color:rgb(86, 156, 214)">return</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(212, 212, 212)">[</span><span class="token plain">GreeksData</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">from_dict</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token plain">d</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(86, 156, 214)">for</span><span class="token plain"> d </span><span class="token keyword" style="color:rgb(86, 156, 214)">in</span><span class="token plain"> table</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">to_pylist</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token punctuation" style="color:rgb(212, 212, 212)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token decorator annotation punctuation" style="color:rgb(212, 212, 212)">@classmethod</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token keyword" style="color:rgb(86, 156, 214)">def</span><span class="token plain"> </span><span class="token function" style="color:rgb(220, 220, 170)">schema</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token plain">cls</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token punctuation" style="color:rgb(212, 212, 212)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">        </span><span class="token keyword" style="color:rgb(86, 156, 214)">return</span><span class="token plain"> pa</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">schema</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">            </span><span class="token punctuation" style="color:rgb(212, 212, 212)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">                </span><span class="token string" style="color:rgb(206, 145, 120)">&quot;instrument_id&quot;</span><span class="token punctuation" style="color:rgb(212, 212, 212)">:</span><span class="token plain"> pa</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">string</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">                </span><span class="token string" style="color:rgb(206, 145, 120)">&quot;ts_event&quot;</span><span class="token punctuation" style="color:rgb(212, 212, 212)">:</span><span class="token plain"> pa</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">int64</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">                </span><span class="token string" style="color:rgb(206, 145, 120)">&quot;ts_init&quot;</span><span class="token punctuation" style="color:rgb(212, 212, 212)">:</span><span class="token plain"> pa</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">int64</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">                </span><span class="token string" style="color:rgb(206, 145, 120)">&quot;delta&quot;</span><span class="token punctuation" style="color:rgb(212, 212, 212)">:</span><span class="token plain"> pa</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">float64</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">            </span><span class="token punctuation" style="color:rgb(212, 212, 212)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><br></span></code></pre>
                              </div>
                            </div>
                            <h4
                              class="anchor anchorWithHideOnScrollNavbar_WYt5"
                              id="publishing-and-receiving-data"
                            >
                              Publishing and receiving data<a
                                href="#publishing-and-receiving-data"
                                class="hash-link"
                                aria-label="Direct link to Publishing and receiving data"
                                title="Direct link to Publishing and receiving data"
                                >​</a
                              >
                            </h4>
                            <p>
                              Here is an example of publishing and receiving
                              data using the <code>MessageBus</code> from an
                              actor or strategy:
                            </p>
                            <div
                              class="language-python codeBlockContainer_Ckt0 theme-code-block"
                              style="
                                --prism-color: #9cdcfe;
                                --prism-background-color: #1e1e1e;
                              "
                            >
                              <div class="codeBlockContent_QJqH">
                                <pre
                                  tabindex="0"
                                  class="prism-code language-python codeBlock_bY9V thin-scrollbar"
                                  style="
                                    color: #9cdcfe;
                                    background-color: #1e1e1e;
                                  "
                                ><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9CDCFE"><span class="token plain">register_serializable_type</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token plain">GreeksData</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"> GreeksData</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">to_dict</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"> GreeksData</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">from_dict</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token keyword" style="color:rgb(86, 156, 214)">def</span><span class="token plain"> </span><span class="token function" style="color:rgb(220, 220, 170)">publish_greeks</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token plain">self</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"> greeks_data</span><span class="token punctuation" style="color:rgb(212, 212, 212)">:</span><span class="token plain"> GreeksData</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token punctuation" style="color:rgb(212, 212, 212)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    self</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">publish_data</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token plain">DataType</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token plain">GreeksData</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"> greeks_data</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token keyword" style="color:rgb(86, 156, 214)">def</span><span class="token plain"> </span><span class="token function" style="color:rgb(220, 220, 170)">subscribe_to_greeks</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token plain">self</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token punctuation" style="color:rgb(212, 212, 212)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    self</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">subscribe_data</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token plain">DataType</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token plain">GreeksData</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token keyword" style="color:rgb(86, 156, 214)">def</span><span class="token plain"> </span><span class="token function" style="color:rgb(220, 220, 170)">on_data</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token plain">self</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"> data</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token punctuation" style="color:rgb(212, 212, 212)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token keyword" style="color:rgb(86, 156, 214)">if</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(86, 156, 214)">isinstance</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token plain">GreeksData</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token punctuation" style="color:rgb(212, 212, 212)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">        </span><span class="token keyword" style="color:rgb(86, 156, 214)">print</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token string" style="color:rgb(206, 145, 120)">&quot;Data&quot;</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"> data</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><br></span></code></pre>
                              </div>
                            </div>
                            <h4
                              class="anchor anchorWithHideOnScrollNavbar_WYt5"
                              id="writing-and-reading-data-using-the-cache"
                            >
                              Writing and reading data using the cache<a
                                href="#writing-and-reading-data-using-the-cache"
                                class="hash-link"
                                aria-label="Direct link to Writing and reading data using the cache"
                                title="Direct link to Writing and reading data using the cache"
                                >​</a
                              >
                            </h4>
                            <p>
                              Here is an example of writing and reading data
                              using the <code>Cache</code> from an actor or
                              strategy:
                            </p>
                            <div
                              class="language-python codeBlockContainer_Ckt0 theme-code-block"
                              style="
                                --prism-color: #9cdcfe;
                                --prism-background-color: #1e1e1e;
                              "
                            >
                              <div class="codeBlockContent_QJqH">
                                <pre
                                  tabindex="0"
                                  class="prism-code language-python codeBlock_bY9V thin-scrollbar"
                                  style="
                                    color: #9cdcfe;
                                    background-color: #1e1e1e;
                                  "
                                ><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9CDCFE"><span class="token keyword" style="color:rgb(86, 156, 214)">def</span><span class="token plain"> </span><span class="token function" style="color:rgb(220, 220, 170)">greeks_key</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token plain">instrument_id</span><span class="token punctuation" style="color:rgb(212, 212, 212)">:</span><span class="token plain"> InstrumentId</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token punctuation" style="color:rgb(212, 212, 212)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token keyword" style="color:rgb(86, 156, 214)">return</span><span class="token plain"> </span><span class="token string-interpolation string" style="color:rgb(206, 145, 120)">f&quot;</span><span class="token string-interpolation interpolation punctuation" style="color:rgb(212, 212, 212)">{</span><span class="token string-interpolation interpolation">instrument_id</span><span class="token string-interpolation interpolation punctuation" style="color:rgb(212, 212, 212)">}</span><span class="token string-interpolation string" style="color:rgb(206, 145, 120)">_GREEKS&quot;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token keyword" style="color:rgb(86, 156, 214)">def</span><span class="token plain"> </span><span class="token function" style="color:rgb(220, 220, 170)">cache_greeks</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token plain">self</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"> greeks_data</span><span class="token punctuation" style="color:rgb(212, 212, 212)">:</span><span class="token plain"> GreeksData</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token punctuation" style="color:rgb(212, 212, 212)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    self</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">cache</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">add</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token plain">greeks_key</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token plain">greeks_data</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">instrument_id</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"> greeks_data</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">to_bytes</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token keyword" style="color:rgb(86, 156, 214)">def</span><span class="token plain"> </span><span class="token function" style="color:rgb(220, 220, 170)">greeks_from_cache</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token plain">self</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"> instrument_id</span><span class="token punctuation" style="color:rgb(212, 212, 212)">:</span><span class="token plain"> InstrumentId</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token punctuation" style="color:rgb(212, 212, 212)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token keyword" style="color:rgb(86, 156, 214)">return</span><span class="token plain"> GreeksData</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">from_bytes</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token plain">self</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">cache</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">get</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token plain">greeks_key</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token plain">instrument_id</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><br></span></code></pre>
                              </div>
                            </div>
                            <h4
                              class="anchor anchorWithHideOnScrollNavbar_WYt5"
                              id="writing-and-reading-data-using-a-catalog"
                            >
                              Writing and reading data using a catalog<a
                                href="#writing-and-reading-data-using-a-catalog"
                                class="hash-link"
                                aria-label="Direct link to Writing and reading data using a catalog"
                                title="Direct link to Writing and reading data using a catalog"
                                >​</a
                              >
                            </h4>
                            <p>
                              For streaming custom data to feather files or
                              writing it to parquet files in a catalog (<code
                                >register_arrow</code
                              >
                              needs to be used):
                            </p>
                            <div
                              class="language-python codeBlockContainer_Ckt0 theme-code-block"
                              style="
                                --prism-color: #9cdcfe;
                                --prism-background-color: #1e1e1e;
                              "
                            >
                              <div class="codeBlockContent_QJqH">
                                <pre
                                  tabindex="0"
                                  class="prism-code language-python codeBlock_bY9V thin-scrollbar"
                                  style="
                                    color: #9cdcfe;
                                    background-color: #1e1e1e;
                                  "
                                ><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9CDCFE"><span class="token plain">register_arrow</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token plain">GreeksData</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"> GreeksData</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">schema</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"> GreeksData</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">to_catalog</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"> GreeksData</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">from_catalog</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token keyword" style="color:rgb(86, 156, 214)">from</span><span class="token plain"> posei_trader</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">persistence</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">catalog </span><span class="token keyword" style="color:rgb(86, 156, 214)">import</span><span class="token plain"> ParquetDataCatalog</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">catalog </span><span class="token operator" style="color:rgb(212, 212, 212)">=</span><span class="token plain"> ParquetDataCatalog</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token string" style="color:rgb(206, 145, 120)">&#x27;.&#x27;</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">catalog</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">write_data</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token punctuation" style="color:rgb(212, 212, 212)">[</span><span class="token plain">GreeksData</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token punctuation" style="color:rgb(212, 212, 212)">]</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><br></span></code></pre>
                              </div>
                            </div>
                            <h3
                              class="anchor anchorWithHideOnScrollNavbar_WYt5"
                              id="creating-a-custom-data-class-automatically"
                            >
                              Creating a custom data class automatically<a
                                href="#creating-a-custom-data-class-automatically"
                                class="hash-link"
                                aria-label="Direct link to Creating a custom data class automatically"
                                title="Direct link to Creating a custom data class automatically"
                                >​</a
                              >
                            </h3>
                            <p>
                              The <code>@customdataclass</code> decorator
                              enables the creation of a custom data class with
                              default implementations for all the features
                              described above.
                            </p>
                            <p>
                              Each method can also be overridden if needed. Here
                              is an example of its usage:
                            </p>
                            <div
                              class="language-python codeBlockContainer_Ckt0 theme-code-block"
                              style="
                                --prism-color: #9cdcfe;
                                --prism-background-color: #1e1e1e;
                              "
                            >
                              <div class="codeBlockContent_QJqH">
                                <pre
                                  tabindex="0"
                                  class="prism-code language-python codeBlock_bY9V thin-scrollbar"
                                  style="
                                    color: #9cdcfe;
                                    background-color: #1e1e1e;
                                  "
                                ><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9CDCFE"><span class="token keyword" style="color:rgb(86, 156, 214)">from</span><span class="token plain"> posei_trader</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">model</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">custom </span><span class="token keyword" style="color:rgb(86, 156, 214)">import</span><span class="token plain"> customdataclass</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token decorator annotation punctuation" style="color:rgb(212, 212, 212)">@customdataclass</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token keyword" style="color:rgb(86, 156, 214)">class</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(78, 201, 176)">GreeksTestData</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token plain">Data</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token punctuation" style="color:rgb(212, 212, 212)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    instrument_id</span><span class="token punctuation" style="color:rgb(212, 212, 212)">:</span><span class="token plain"> InstrumentId </span><span class="token operator" style="color:rgb(212, 212, 212)">=</span><span class="token plain"> InstrumentId</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">from_str</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token string" style="color:rgb(206, 145, 120)">&quot;ES.GLBX&quot;</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    delta</span><span class="token punctuation" style="color:rgb(212, 212, 212)">:</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(86, 156, 214)">float</span><span class="token plain"> </span><span class="token operator" style="color:rgb(212, 212, 212)">=</span><span class="token plain"> </span><span class="token number" style="color:rgb(181, 206, 168)">0.0</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">GreeksTestData</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    instrument_id</span><span class="token operator" style="color:rgb(212, 212, 212)">=</span><span class="token plain">InstrumentId</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">from_str</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token string" style="color:rgb(206, 145, 120)">&quot;CL.GLBX&quot;</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    delta</span><span class="token operator" style="color:rgb(212, 212, 212)">=</span><span class="token number" style="color:rgb(181, 206, 168)">1000.0</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    ts_event</span><span class="token operator" style="color:rgb(212, 212, 212)">=</span><span class="token number" style="color:rgb(181, 206, 168)">1</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    ts_init</span><span class="token operator" style="color:rgb(212, 212, 212)">=</span><span class="token number" style="color:rgb(181, 206, 168)">2</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><br></span></code></pre>
                              </div>
                            </div>
                            <h4
                              class="anchor anchorWithHideOnScrollNavbar_WYt5"
                              id="custom-data-type-stub"
                            >
                              Custom data type stub<a
                                href="#custom-data-type-stub"
                                class="hash-link"
                                aria-label="Direct link to Custom data type stub"
                                title="Direct link to Custom data type stub"
                                >​</a
                              >
                            </h4>
                            <p>
                              To enhance development convenience and improve
                              code suggestions in your IDE, you can create a
                              <code>.pyi</code> stub file with the proper
                              constructor signature for your custom data types
                              as well as type hints for attributes. This is
                              particularly useful when the constructor is
                              dynamically generated at runtime, as it allows the
                              IDE to recognize and provide suggestions for the
                              class&#x27;s methods and attributes.
                            </p>
                            <p>
                              For instance, if you have a custom data class
                              defined in <code>greeks.py</code>, you can create
                              a corresponding <code>greeks.pyi</code> file with
                              the following constructor signature:
                            </p>
                            <div
                              class="language-python codeBlockContainer_Ckt0 theme-code-block"
                              style="
                                --prism-color: #9cdcfe;
                                --prism-background-color: #1e1e1e;
                              "
                            >
                              <div class="codeBlockContent_QJqH">
                                <pre
                                  tabindex="0"
                                  class="prism-code language-python codeBlock_bY9V thin-scrollbar"
                                  style="
                                    color: #9cdcfe;
                                    background-color: #1e1e1e;
                                  "
                                ><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9CDCFE"><span class="token keyword" style="color:rgb(86, 156, 214)">from</span><span class="token plain"> posei_trader</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">core </span><span class="token keyword" style="color:rgb(86, 156, 214)">import</span><span class="token plain"> Data</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token keyword" style="color:rgb(86, 156, 214)">from</span><span class="token plain"> posei_trader</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">model </span><span class="token keyword" style="color:rgb(86, 156, 214)">import</span><span class="token plain"> InstrumentId</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token keyword" style="color:rgb(86, 156, 214)">class</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(78, 201, 176)">GreeksData</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token plain">Data</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token punctuation" style="color:rgb(212, 212, 212)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    instrument_id</span><span class="token punctuation" style="color:rgb(212, 212, 212)">:</span><span class="token plain"> InstrumentId</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    delta</span><span class="token punctuation" style="color:rgb(212, 212, 212)">:</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(86, 156, 214)">float</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token keyword" style="color:rgb(86, 156, 214)">def</span><span class="token plain"> </span><span class="token function" style="color:rgb(220, 220, 170)">__init__</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">        self</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">        ts_event</span><span class="token punctuation" style="color:rgb(212, 212, 212)">:</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(86, 156, 214)">int</span><span class="token plain"> </span><span class="token operator" style="color:rgb(212, 212, 212)">=</span><span class="token plain"> </span><span class="token number" style="color:rgb(181, 206, 168)">0</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">        ts_init</span><span class="token punctuation" style="color:rgb(212, 212, 212)">:</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(86, 156, 214)">int</span><span class="token plain"> </span><span class="token operator" style="color:rgb(212, 212, 212)">=</span><span class="token plain"> </span><span class="token number" style="color:rgb(181, 206, 168)">0</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">        instrument_id</span><span class="token punctuation" style="color:rgb(212, 212, 212)">:</span><span class="token plain"> InstrumentId </span><span class="token operator" style="color:rgb(212, 212, 212)">=</span><span class="token plain"> InstrumentId</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">from_str</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token string" style="color:rgb(206, 145, 120)">&quot;ES.GLBX&quot;</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">        delta</span><span class="token punctuation" style="color:rgb(212, 212, 212)">:</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(86, 156, 214)">float</span><span class="token plain"> </span><span class="token operator" style="color:rgb(212, 212, 212)">=</span><span class="token plain"> </span><span class="token number" style="color:rgb(181, 206, 168)">0.0</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token plain"> </span><span class="token operator" style="color:rgb(212, 212, 212)">-</span><span class="token operator" style="color:rgb(212, 212, 212)">&gt;</span><span class="token plain"> GreeksData</span><span class="token punctuation" style="color:rgb(212, 212, 212)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><br></span></code></pre>
                              </div>
                            </div>
                          </div>
                        </article>
                        <nav
                          class="docusaurus-mt-lg pagination-nav"
                          aria-label="Docs pages"
                        >
                          <a
                            class="pagination-nav__link pagination-nav__link--prev"
                            href="../instruments/index.htm"
                            ><div class="pagination-nav__sublabel">
                              Previous
                            </div>
                            <div class="pagination-nav__label">
                              Instruments
                            </div></a
                          ><a
                            class="pagination-nav__link pagination-nav__link--next"
                            href="../execution/index.htm"
                            ><div class="pagination-nav__sublabel">Next</div>
                            <div class="pagination-nav__label">
                              Execution
                            </div></a
                          >
                        </nav>
                      </div>
                    </div>
                    <div class="col col--3">
                      <div
                        class="tableOfContents_bqdL thin-scrollbar theme-doc-toc-desktop"
                      >
                        <ul
                          class="table-of-contents table-of-contents__left-border"
                        >
                          <li>
                            <a
                              href="#order-books"
                              class="table-of-contents__link toc-highlight"
                              >Order books</a
                            >
                          </li>
                          <li>
                            <a
                              href="#instruments"
                              class="table-of-contents__link toc-highlight"
                              >Instruments</a
                            >
                          </li>
                          <li>
                            <a
                              href="#bars-and-aggregation"
                              class="table-of-contents__link toc-highlight"
                              >Bars and aggregation</a
                            >
                            <ul>
                              <li>
                                <a
                                  href="#introduction-to-bars"
                                  class="table-of-contents__link toc-highlight"
                                  >Introduction to Bars</a
                                >
                              </li>
                              <li>
                                <a
                                  href="#purpose-of-data-aggregation"
                                  class="table-of-contents__link toc-highlight"
                                  >Purpose of data aggregation</a
                                >
                              </li>
                              <li>
                                <a
                                  href="#aggregation-methods"
                                  class="table-of-contents__link toc-highlight"
                                  >Aggregation methods</a
                                >
                              </li>
                              <li>
                                <a
                                  href="#types-of-aggregation"
                                  class="table-of-contents__link toc-highlight"
                                  >Types of aggregation</a
                                >
                              </li>
                              <li>
                                <a
                                  href="#bar-types-and-components"
                                  class="table-of-contents__link toc-highlight"
                                  >Bar types and Components</a
                                >
                              </li>
                              <li>
                                <a
                                  href="#aggregation-sources"
                                  class="table-of-contents__link toc-highlight"
                                  >Aggregation sources</a
                                >
                              </li>
                              <li>
                                <a
                                  href="#defining-bar-types-with-string-syntax"
                                  class="table-of-contents__link toc-highlight"
                                  >Defining Bar Types with String Syntax</a
                                >
                              </li>
                              <li>
                                <a
                                  href="#aggregation-syntax-examples"
                                  class="table-of-contents__link toc-highlight"
                                  >Aggregation syntax examples</a
                                >
                              </li>
                              <li>
                                <a
                                  href="#working-with-bars-request-vs-subscribe"
                                  class="table-of-contents__link toc-highlight"
                                  >Working with Bars: Request vs. Subscribe</a
                                >
                              </li>
                              <li>
                                <a
                                  href="#historical-data-requests-with-aggregation"
                                  class="table-of-contents__link toc-highlight"
                                  >Historical data requests with aggregation</a
                                >
                              </li>
                              <li>
                                <a
                                  href="#common-pitfalls"
                                  class="table-of-contents__link toc-highlight"
                                  >Common Pitfalls</a
                                >
                              </li>
                            </ul>
                          </li>
                          <li>
                            <a
                              href="#timestamps"
                              class="table-of-contents__link toc-highlight"
                              >Timestamps</a
                            >
                            <ul>
                              <li>
                                <a
                                  href="#examples"
                                  class="table-of-contents__link toc-highlight"
                                  >Examples</a
                                >
                              </li>
                              <li>
                                <a
                                  href="#latency-analysis"
                                  class="table-of-contents__link toc-highlight"
                                  >Latency analysis</a
                                >
                              </li>
                              <li>
                                <a
                                  href="#environment-specific-behavior"
                                  class="table-of-contents__link toc-highlight"
                                  >Environment specific behavior</a
                                >
                              </li>
                              <li>
                                <a
                                  href="#other-notes-and-considerations"
                                  class="table-of-contents__link toc-highlight"
                                  >Other notes and considerations</a
                                >
                              </li>
                            </ul>
                          </li>
                          <li>
                            <a
                              href="#data-flow"
                              class="table-of-contents__link toc-highlight"
                              >Data flow</a
                            >
                          </li>
                          <li>
                            <a
                              href="#loading-data"
                              class="table-of-contents__link toc-highlight"
                              >Loading data</a
                            >
                            <ul>
                              <li>
                                <a
                                  href="#data-loaders"
                                  class="table-of-contents__link toc-highlight"
                                  >Data loaders</a
                                >
                              </li>
                              <li>
                                <a
                                  href="#data-wranglers"
                                  class="table-of-contents__link toc-highlight"
                                  >Data wranglers</a
                                >
                              </li>
                              <li>
                                <a
                                  href="#transformation-pipeline"
                                  class="table-of-contents__link toc-highlight"
                                  >Transformation pipeline</a
                                >
                              </li>
                            </ul>
                          </li>
                          <li>
                            <a
                              href="#data-catalog"
                              class="table-of-contents__link toc-highlight"
                              >Data catalog</a
                            >
                            <ul>
                              <li>
                                <a
                                  href="#initializing"
                                  class="table-of-contents__link toc-highlight"
                                  >Initializing</a
                                >
                              </li>
                              <li>
                                <a
                                  href="#writing-data"
                                  class="table-of-contents__link toc-highlight"
                                  >Writing data</a
                                >
                              </li>
                              <li>
                                <a
                                  href="#basename-template"
                                  class="table-of-contents__link toc-highlight"
                                  >Basename template</a
                                >
                              </li>
                              <li>
                                <a
                                  href="#reading-data"
                                  class="table-of-contents__link toc-highlight"
                                  >Reading data</a
                                >
                              </li>
                              <li>
                                <a
                                  href="#streaming-data"
                                  class="table-of-contents__link toc-highlight"
                                  >Streaming data</a
                                >
                              </li>
                            </ul>
                          </li>
                          <li>
                            <a
                              href="#data-migrations"
                              class="table-of-contents__link toc-highlight"
                              >Data migrations</a
                            >
                            <ul>
                              <li>
                                <a
                                  href="#migration-tools"
                                  class="table-of-contents__link toc-highlight"
                                  >Migration tools</a
                                >
                              </li>
                              <li>
                                <a
                                  href="#migration-process"
                                  class="table-of-contents__link toc-highlight"
                                  >Migration Process</a
                                >
                              </li>
                              <li>
                                <a
                                  href="#best-practices"
                                  class="table-of-contents__link toc-highlight"
                                  >Best Practices</a
                                >
                              </li>
                            </ul>
                          </li>
                          <li>
                            <a
                              href="#custom-data"
                              class="table-of-contents__link toc-highlight"
                              >Custom Data</a
                            >
                            <ul>
                              <li>
                                <a
                                  href="#publishing-and-receiving-signal-data"
                                  class="table-of-contents__link toc-highlight"
                                  >Publishing and receiving signal data</a
                                >
                              </li>
                              <li>
                                <a
                                  href="#option-greeks-example"
                                  class="table-of-contents__link toc-highlight"
                                  >Option Greeks example</a
                                >
                              </li>
                              <li>
                                <a
                                  href="#creating-a-custom-data-class-automatically"
                                  class="table-of-contents__link toc-highlight"
                                  >Creating a custom data class automatically</a
                                >
                              </li>
                            </ul>
                          </li>
                        </ul>
                      </div>
                    </div>
                  </div>
                  <div class="footer-wrapper MuiBox-root css-0">
                    <div class="social-footer-box MuiBox-root css-0">
                      <style data-emotion="css 17rjyz3">
                        .css-17rjyz3 {
                          -webkit-text-decoration: underline;
                          text-decoration: underline;
                          text-decoration-color: rgba(25, 118, 210, 0.4);
                          padding: 12px;
                          margin-right: 10px;
                        }
                        .css-17rjyz3:hover {
                          text-decoration-color: inherit;
                        }</style
                      ><style data-emotion="css jl1bw5">
                        .css-jl1bw5 {
                          margin: 0;
                          font: inherit;
                          color: #1976d2;
                          -webkit-text-decoration: underline;
                          text-decoration: underline;
                          text-decoration-color: rgba(25, 118, 210, 0.4);
                          padding: 12px;
                          margin-right: 10px;
                        }
                        .css-jl1bw5:hover {
                          text-decoration-color: inherit;
                        }</style
                      ><a
                        class="MuiTypography-root MuiTypography-inherit MuiLink-root MuiLink-underlineAlways github-footer css-jl1bw5"
                        href="https://github.com/poseisysstems"
                        target="_blank"
                      ></a
                      ><a
                        class="MuiTypography-root MuiTypography-inherit MuiLink-root MuiLink-underlineAlways discord-footer css-jl1bw5"
                        href=""
                        target="_blank"
                      ></a
                      ><a
                        class="MuiTypography-root MuiTypography-inherit MuiLink-root MuiLink-underlineAlways linkedin-footer css-jl1bw5"
                        href="https://www.linkedin.com/company/poseitrader/"
                        target="_blank"
                      ></a
                      ><a
                        class="MuiTypography-root MuiTypography-inherit MuiLink-root MuiLink-underlineAlways x-footer css-jl1bw5"
                        href="https://twitter.com/PoseiTrader"
                        target="_blank"
                      ></a>
                    </div>
                    <div class="footer-copyright">
                      © 2025 Posei Systems Pty Ltd. All rights reserved.
                    </div>
                  </div>
                </div>
              </div>
            </main>
          </div>
        </div>
      </div>
    </div>
  </body>
</html>
