<!doctype html>
<html lang="en" dir="ltr" class="docs-wrapper plugin-docs plugin-id-default docs-version-nightly docs-doc-page docs-doc-id-concepts/message_bus" data-has-hydrated="false">
<head>
<meta charset="UTF-8">
<meta name="generator" content="Docusaurus v3.8.1">
<title data-rh="true">Message Bus | PoseiTrader Documentation</title><meta data-rh="true" name="viewport" content="width=device-width,initial-scale=1"><meta data-rh="true" name="twitter:card" content="summary_large_image"><meta data-rh="true" property="og:image" content="docs/latestimg/docusaurus-social-card.jpg"><meta data-rh="true" name="twitter:image" content="docs/latestimg/docusaurus-social-card.jpg"><meta data-rh="true" property="og:url" content="docs/latestnightly/concepts/message_bus"><meta data-rh="true" property="og:locale" content="en"><meta data-rh="true" name="docusaurus_locale" content="en"><meta data-rh="true" name="docsearch:language" content="en"><meta data-rh="true" name="keywords" content="Open-source trading platform, Algorithmic trading software, Event-driven backtesting, Live trading with no code changes, Trade any asset class, Low-latency trading execution, Python API for trading strategies, Custom market data integration, Futures and options trading, Crypto spot and derivatives trading, Equities trading simulation, FX spot trading, Sports betting markets trading, Fast backtesting strategies, Advanced trading orders, Rust-based trading platform, High-performance trading system, Nanosecond resolution market simulation, Trading across multiple venues, Trading platform for hedge funds, Seamless data integration, Customizable trading strategies, AI and ML trading strategies, Posei trading platform, Multi-venue trading, Unlimited backtesting strategies, Fast trading execution solutions, Realistic market simulations, Seamless trading API integration, PoseiTrader Documentation, Docs, PoseiTrader Docs"><meta data-rh="true" name="title" content="PoseiTrader Documentation"><meta data-rh="true" name="og:title" content="PoseiTrader Documentation"><meta data-rh="true" name="og:description" content="PoseiTrader is a high-performance platform for automating trading strategies, built on the powerful Posei framework for backtesting and real-time trading."><meta data-rh="true" name="og:image" content="img/preview.png"><meta data-rh="true" name="og:url" content="/docs/latest"><meta data-rh="true" name="docusaurus_version" content="nightly"><meta data-rh="true" name="docusaurus_tag" content="docs-default-nightly"><meta data-rh="true" name="docsearch:version" content="nightly"><meta data-rh="true" name="docsearch:docusaurus_tag" content="docs-default-nightly"><meta data-rh="true" property="og:title" content="Message Bus | PoseiTrader Documentation"><meta data-rh="true" name="description" content="The MessageBus is a fundamental part of the platform, enabling communication between system components"><meta data-rh="true" property="og:description" content="The MessageBus is a fundamental part of the platform, enabling communication between system components"><link data-rh="true" rel="icon" href="../../../img/shell.ico"><link data-rh="true" rel="canonical" href="index.htm"><link data-rh="true" rel="alternate" href="index.htm" hreflang="en"><link data-rh="true" rel="alternate" href="index.htm" hreflang="x-default"><link data-rh="true" rel="preconnect" href="https://CWRKEEL01M-dsn.algolia.net" crossorigin="anonymous"><script data-rh="true" type="application/ld+json">{"@context":"https://schema.org","@type":"BreadcrumbList","itemListElement":[{"@type":"ListItem","position":1,"name":"Concepts","item":"docs/latestnightly/concepts/"},{"@type":"ListItem","position":2,"name":"Message Bus","item":"docs/latestnightly/concepts/message_bus"}]}</script><link rel="search" type="application/opensearchdescription+xml" title="PoseiTrader Documentation" href="../../../opensearch.xml">
<script>!function(){var t=window.location.pathname;if(t.startsWith("/docs")&&!t.startsWith("/docs/latest")&&!t.startsWith("/docs/nightly")){var s=t.replace("/docs","/docs/latest");window.location.href=s}}()</script>
<link rel="preconnect" href="https://www.google-analytics.com">
<link rel="preconnect" href="https://www.googletagmanager.com">
<script async src="https://www.googletagmanager.com/gtag/js?id=G-TR4XK597XK"></script>
<script>function gtag(){dataLayer.push(arguments)}window.dataLayer=window.dataLayer||[],gtag("js",new Date),gtag("config","G-TR4XK597XK",{anonymize_ip:!0})</script><link rel="stylesheet" href="../../../assets/css/styles.0f0f692e.css">
<script src="../../../assets/js/runtime~main.92b727d5.js" defer="defer"></script>
<script src="../../../assets/js/main.1cd42d85.js" defer="defer"></script>
</head>
<body class="navigation-with-keyboard">
<svg xmlns="http://www.w3.org/2000/svg" style="display: none;"><defs>
<symbol id="theme-svg-external-link" viewbox="0 0 24 24"><path fill="currentColor" d="M21 13v10h-21v-19h12v2h-10v15h17v-8h2zm3-12h-10.988l4.035 4-6.977 7.07 2.828 2.828 6.977-7.07 4.125 4.172v-11z"></path></symbol>
</defs></svg>
<script>!function(){var t="dark";var e=function(){try{return new URLSearchParams(window.location.search).get("docusaurus-theme")}catch(t){}}()||function(){try{return window.localStorage.getItem("theme")}catch(t){}}();document.documentElement.setAttribute("data-theme",e||t),document.documentElement.setAttribute("data-theme-choice",e||t)}(),function(){try{const c=new URLSearchParams(window.location.search).entries();for(var[t,e]of c)if(t.startsWith("docusaurus-data-")){var a=t.replace("docusaurus-data-","data-");document.documentElement.setAttribute(a,e)}}catch(t){}}()</script><div id="__docusaurus"><div role="region" aria-label="Skip to main content"><a class="skipToContent_fXgn" href="#__docusaurus_skipToContent_fallback">Skip to main content</a></div><nav aria-label="Main" class="theme-layout-navbar navbar navbar--fixed-top navbarHideable_m1mJ"><div class="navbar__inner"><div class="theme-layout-navbar-left navbar__items"><button aria-label="Toggle navigation bar" aria-expanded="false" class="navbar__toggle clean-btn" type="button"><svg width="30" height="30" viewbox="0 0 30 30" aria-hidden="true"><path stroke="currentColor" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" d="M4 7h22M4 15h22M4 23h22"></path></svg></button><a href="../../../../index.htm" target="_blank" rel="noopener noreferrer" class="navbar__brand"><div class="navbar__logo"><img src="../../../img/nt-black-large.webp" alt="PoseiTrader Logo" class="themedComponent_mlkZ themedComponent--light_NVdE"><img src="../../../img/nt-white-large.webp" alt="PoseiTrader Logo" class="themedComponent_mlkZ themedComponent--dark_xIcU"></div><b class="navbar__title text--truncate"></b></a><div class="navbar__item dropdown dropdown--hoverable"><a href="#" aria-haspopup="true" aria-expanded="false" role="button" class="navbar__link">Version</a><ul class="dropdown__menu"><li><a class="dropdown__link" href="../../../latest/index.html">latest</a></li><li><a aria-current="page" class="dropdown__link dropdown__link--active" href="../../index.htm">nightly</a></li></ul></div><div class="navbarSearchContainer_Bca1"><button type="button" class="DocSearch DocSearch-Button" aria-label="Search (Command+K)"><span class="DocSearch-Button-Container"><svg width="20" height="20" class="DocSearch-Search-Icon" viewbox="0 0 20 20" aria-hidden="true"><path d="M14.386 14.386l4.0877 4.0877-4.0877-4.0877c-2.9418 2.9419-7.7115 2.9419-10.6533 0-2.9419-2.9418-2.9419-7.7115 0-10.6533 2.9418-2.9419 7.7115-2.9419 10.6533 0 2.9419 2.9418 2.9419 7.7115 0 10.6533z" stroke="currentColor" fill="none" fill-rule="evenodd" stroke-linecap="round" stroke-linejoin="round"></path></svg><span class="DocSearch-Button-Placeholder">Search</span></span><span class="DocSearch-Button-Keys"></span></button></div></div><div class="theme-layout-navbar-right navbar__items navbar__items--right"><a href="https://github.com/poseisysstems" target="_blank" rel="noopener noreferrer" class="navbar__item navbar__link header-github-link common-social" aria-label="GitHub repository"></a> <a href="https://twitter.com/PoseiTrader" target="_blank" rel="noopener noreferrer" class="navbar__item navbar__link header-x-link common-social" aria-label="X"></a><div class="toggleContainer_T22x colorModeToggle_DEke"><button class="clean-btn toggleButton_yw5v toggleButtonDisabled_BJd7" type="button" disabled="" title="Switch between dark and light mode (currently light mode)" aria-label="Switch between dark and light mode (currently light mode)" aria-live="polite"><div class="switch_Ms1n"><span class="iconWrapper_FHql"><style data-emotion="css lp52so">.css-lp52so{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;width:1em;height:1em;display:inline-block;fill:currentColor;-webkit-flex-shrink:0;-ms-flex-negative:0;flex-shrink:0;-webkit-transition:fill 200ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;transition:fill 200ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;font-size:1.5rem;color:black;font-size:14px;}</style><svg class="MuiSvgIcon-root MuiSvgIcon-fontSizeMedium lightToggleIcon_SFTY css-lp52so" focusable="false" aria-hidden="true" viewbox="0 0 24 24" data-testid="LightModeIcon"><path d="M12 7c-2.76 0-5 2.24-5 5s2.24 5 5 5 5-2.24 5-5-2.24-5-5-5M2 13h2c.55 0 1-.45 1-1s-.45-1-1-1H2c-.55 0-1 .45-1 1s.45 1 1 1m18 0h2c.55 0 1-.45 1-1s-.45-1-1-1h-2c-.55 0-1 .45-1 1s.45 1 1 1M11 2v2c0 .55.45 1 1 1s1-.45 1-1V2c0-.55-.45-1-1-1s-1 .45-1 1m0 18v2c0 .55.45 1 1 1s1-.45 1-1v-2c0-.55-.45-1-1-1s-1 .45-1 1M5.99 4.58c-.39-.39-1.03-.39-1.41 0-.39.39-.39 1.03 0 1.41l1.06 1.06c.39.39 1.03.39 1.41 0s.39-1.03 0-1.41zm12.37 12.37c-.39-.39-1.03-.39-1.41 0-.39.39-.39 1.03 0 1.41l1.06 1.06c.39.39 1.03.39 1.41 0 .39-.39.39-1.03 0-1.41zm1.06-10.96c.39-.39.39-1.03 0-1.41-.39-.39-1.03-.39-1.41 0l-1.06 1.06c-.39.39-.39 1.03 0 1.41s1.03.39 1.41 0zM7.05 18.36c.39-.39.39-1.03 0-1.41-.39-.39-1.03-.39-1.41 0l-1.06 1.06c-.39.39-.39 1.03 0 1.41s1.03.39 1.41 0z"></path></svg><style data-emotion="css 13m6tje">.css-13m6tje{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;width:1em;height:1em;display:inline-block;fill:currentColor;-webkit-flex-shrink:0;-ms-flex-negative:0;flex-shrink:0;-webkit-transition:fill 200ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;transition:fill 200ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;font-size:1.5rem;color:white;font-size:14px;}</style><svg class="MuiSvgIcon-root MuiSvgIcon-fontSizeMedium darkToggleIcon_ekgs css-13m6tje" focusable="false" aria-hidden="true" viewbox="0 0 24 24" data-testid="DarkModeIcon"><path d="M12 3c-4.97 0-9 4.03-9 9s4.03 9 9 9 9-4.03 9-9c0-.46-.04-.92-.1-1.36-.98 1.37-2.58 2.26-4.4 2.26-2.98 0-5.4-2.42-5.4-5.4 0-1.81.89-3.42 2.26-4.4-.44-.06-.9-.1-1.36-.1"></path></svg></span></div></button></div></div></div><div role="presentation" class="navbar-sidebar__backdrop"></div></nav><div id="__docusaurus_skipToContent_fallback" class="theme-layout-main main-wrapper mainWrapper_z2l0"><div class="docsWrapper_hBAB"><button aria-label="Scroll back to top" class="clean-btn theme-back-to-top-button backToTopButton_sjWU" type="button"></button><div class="docRoot_UBD9"><aside class="theme-doc-sidebar-container docSidebarContainer_YfHR"><div class="sidebarViewport_aRkj"><div class="sidebar_njMd sidebarWithHideableNavbar_wUlq"><a href="../../../../index.htm" target="_blank" rel="noopener noreferrer" tabindex="-1" class="sidebarLogo_isFc"><img src="../../../img/nt-black-large.webp" alt="PoseiTrader Logo" class="themedComponent_mlkZ themedComponent--light_NVdE"><img src="../../../img/nt-white-large.webp" alt="PoseiTrader Logo" class="themedComponent_mlkZ themedComponent--dark_xIcU"><b></b></a><nav aria-label="Docs sidebar" class="menu thin-scrollbar menu_SIkG"><ul class="theme-doc-sidebar-menu menu__list"><li class="theme-doc-sidebar-item-link theme-doc-sidebar-item-link-level-1 menu__list-item"><a class="menu__link" href="../../index.htm">PoseiTrader Documentation</a></li><li class="theme-doc-sidebar-item-category theme-doc-sidebar-item-category-level-1 menu__list-item menu__list-item--collapsed"><div class="menu__list-item-collapsible"><a class="menu__link menu__link--sublist" href="../../getting_started/index.htm">Getting Started</a><button aria-label="Expand sidebar category &#x27;Getting Started&#x27;" aria-expanded="false" type="button" class="clean-btn menu__caret"></button></div></li><li class="theme-doc-sidebar-item-category theme-doc-sidebar-item-category-level-1 menu__list-item"><div class="menu__list-item-collapsible"><a class="menu__link menu__link--sublist menu__link--active" href="../index.htm">Concepts</a><button aria-label="Collapse sidebar category &#x27;Concepts&#x27;" aria-expanded="true" type="button" class="clean-btn menu__caret"></button></div><ul class="menu__list"><li class="theme-doc-sidebar-item-link theme-doc-sidebar-item-link-level-2 menu__list-item"><a class="menu__link" tabindex="0" href="../overview/index.htm">Overview</a></li><li class="theme-doc-sidebar-item-link theme-doc-sidebar-item-link-level-2 menu__list-item"><a class="menu__link" tabindex="0" href="../architecture/index.htm">Architecture</a></li><li class="theme-doc-sidebar-item-link theme-doc-sidebar-item-link-level-2 menu__list-item"><a class="menu__link" tabindex="0" href="../actors/index.htm">Actors</a></li><li class="theme-doc-sidebar-item-link theme-doc-sidebar-item-link-level-2 menu__list-item"><a class="menu__link" tabindex="0" href="../strategies/index.htm">Strategies</a></li><li class="theme-doc-sidebar-item-link theme-doc-sidebar-item-link-level-2 menu__list-item"><a class="menu__link" tabindex="0" href="../instruments/index.htm">Instruments</a></li><li class="theme-doc-sidebar-item-link theme-doc-sidebar-item-link-level-2 menu__list-item"><a class="menu__link" tabindex="0" href="../data/index.htm">Data</a></li><li class="theme-doc-sidebar-item-link theme-doc-sidebar-item-link-level-2 menu__list-item"><a class="menu__link" tabindex="0" href="../execution/index.htm">Execution</a></li><li class="theme-doc-sidebar-item-link theme-doc-sidebar-item-link-level-2 menu__list-item"><a class="menu__link" tabindex="0" href="../orders/index.htm">Orders</a></li><li class="theme-doc-sidebar-item-link theme-doc-sidebar-item-link-level-2 menu__list-item"><a class="menu__link" tabindex="0" href="../cache/index.htm">Cache</a></li><li class="theme-doc-sidebar-item-link theme-doc-sidebar-item-link-level-2 menu__list-item"><a class="menu__link menu__link--active" aria-current="page" tabindex="0" href="index.htm">Message Bus</a></li><li class="theme-doc-sidebar-item-link theme-doc-sidebar-item-link-level-2 menu__list-item"><a class="menu__link" tabindex="0" href="../portfolio/index.htm">Portfolio</a></li><li class="theme-doc-sidebar-item-link theme-doc-sidebar-item-link-level-2 menu__list-item"><a class="menu__link" tabindex="0" href="../logging/index.htm">Logging</a></li><li class="theme-doc-sidebar-item-link theme-doc-sidebar-item-link-level-2 menu__list-item"><a class="menu__link" tabindex="0" href="../backtesting/index.htm">Backtesting</a></li><li class="theme-doc-sidebar-item-link theme-doc-sidebar-item-link-level-2 menu__list-item"><a class="menu__link" tabindex="0" href="../live/index.htm">Live Trading</a></li><li class="theme-doc-sidebar-item-link theme-doc-sidebar-item-link-level-2 menu__list-item"><a class="menu__link" tabindex="0" href="../adapters/index.htm">Adapters</a></li></ul></li><li class="theme-doc-sidebar-item-category theme-doc-sidebar-item-category-level-1 menu__list-item menu__list-item--collapsed"><div class="menu__list-item-collapsible"><a class="menu__link menu__link--sublist" href="../../tutorials/index.htm">Tutorials</a><button aria-label="Expand sidebar category &#x27;Tutorials&#x27;" aria-expanded="false" type="button" class="clean-btn menu__caret"></button></div></li><li class="theme-doc-sidebar-item-category theme-doc-sidebar-item-category-level-1 menu__list-item menu__list-item--collapsed"><div class="menu__list-item-collapsible"><a class="menu__link menu__link--sublist" href="../../integrations/index.htm">Integrations</a><button aria-label="Expand sidebar category &#x27;Integrations&#x27;" aria-expanded="false" type="button" class="clean-btn menu__caret"></button></div></li><li class="theme-doc-sidebar-item-category theme-doc-sidebar-item-category-level-1 menu__list-item menu__list-item--collapsed"><div class="menu__list-item-collapsible"><a class="menu__link menu__link--sublist" href="../../api_reference/index.htm">Python API</a><button aria-label="Expand sidebar category &#x27;Python API&#x27;" aria-expanded="false" type="button" class="clean-btn menu__caret"></button></div></li><li class="theme-doc-sidebar-item-link theme-doc-sidebar-item-link-level-1 menu__list-item"><a href="../../../core-nightly/index.html" target="_blank" rel="noopener noreferrer" class="menu__link menuExternalLink_NmtK">Rust API<svg width="13.5" height="13.5" aria-hidden="true" class="iconExternalLink_nPIU"><use href="#theme-svg-external-link"></use></svg></a></li><li class="theme-doc-sidebar-item-category theme-doc-sidebar-item-category-level-1 menu__list-item menu__list-item--collapsed"><div class="menu__list-item-collapsible"><a class="menu__link menu__link--sublist" href="../../developer_guide/index.htm">Developer Guide</a><button aria-label="Expand sidebar category &#x27;Developer Guide&#x27;" aria-expanded="false" type="button" class="clean-btn menu__caret"></button></div></li></ul></nav></div></div></aside><main class="docMainContainer_TBSr"><div class="container padding-top--md padding-bottom--lg"><div><div class="row"><div class="col docItemCol_VOVn"><div class="docItemContainer_Djhp"><article><nav class="theme-doc-breadcrumbs breadcrumbsContainer_Z_bl" aria-label="Breadcrumbs"><ul class="breadcrumbs"><li class="breadcrumbs__item"><a class="breadcrumbs__link" href="../index.htm"><span>Concepts</span></a></li><li class="breadcrumbs__item breadcrumbs__item--active"><span class="breadcrumbs__link">Message Bus</span></li></ul></nav><span class="theme-doc-version-badge badge badge--secondary">Version: nightly</span><div class="tocCollapsible_ETCw theme-doc-toc-mobile tocMobile_ITEo"><button type="button" class="clean-btn tocCollapsibleButton_TO0P">On this page</button></div><div class="theme-doc-markdown markdown"><header><h1>Message Bus</h1></header>
<p>The <code>MessageBus</code> is a fundamental part of the platform, enabling communication between system components
through message passing. This design creates a loosely coupled architecture where components can interact
without direct dependencies.</p>
<p>The <em>messaging patterns</em> include:</p>
<ul>
<li>Point-to-Point</li>
<li>Publish/Subscribe</li>
<li>Request/Response</li>
</ul>
<p>Messages exchanged via the <code>MessageBus</code> fall into three categories:</p>
<ul>
<li>Data</li>
<li>Events</li>
<li>Commands</li>
</ul>
<h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="data-and-signal-publishing">Data and signal publishing<a href="#data-and-signal-publishing" class="hash-link" aria-label="Direct link to Data and signal publishing" title="Direct link to Data and signal publishing">​</a></h2>
<p>While the <code>MessageBus</code> is a lower-level component that users typically interact with indirectly,
<code>Actor</code> and <code>Strategy</code> classes provide convenient methods built on top of it:</p>
<div class="language-python codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9CDCFE;--prism-background-color:#1E1E1E"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-python codeBlock_bY9V thin-scrollbar" style="color:#9CDCFE;background-color:#1E1E1E"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9CDCFE"><span class="token keyword" style="color:rgb(86, 156, 214)">def</span><span class="token plain"> </span><span class="token function" style="color:rgb(220, 220, 170)">publish_data</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token plain">self</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"> data_type</span><span class="token punctuation" style="color:rgb(212, 212, 212)">:</span><span class="token plain"> DataType</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"> data</span><span class="token punctuation" style="color:rgb(212, 212, 212)">:</span><span class="token plain"> Data</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token plain"> </span><span class="token operator" style="color:rgb(212, 212, 212)">-</span><span class="token operator" style="color:rgb(212, 212, 212)">&gt;</span><span class="token plain"> </span><span class="token boolean">None</span><span class="token punctuation" style="color:rgb(212, 212, 212)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token keyword" style="color:rgb(86, 156, 214)">def</span><span class="token plain"> </span><span class="token function" style="color:rgb(220, 220, 170)">publish_signal</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token plain">self</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"> name</span><span class="token punctuation" style="color:rgb(212, 212, 212)">:</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(86, 156, 214)">str</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"> value</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"> ts_event</span><span class="token punctuation" style="color:rgb(212, 212, 212)">:</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(86, 156, 214)">int</span><span class="token plain"> </span><span class="token operator" style="color:rgb(212, 212, 212)">|</span><span class="token plain"> </span><span class="token boolean">None</span><span class="token plain"> </span><span class="token operator" style="color:rgb(212, 212, 212)">=</span><span class="token plain"> </span><span class="token boolean">None</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token plain"> </span><span class="token operator" style="color:rgb(212, 212, 212)">-</span><span class="token operator" style="color:rgb(212, 212, 212)">&gt;</span><span class="token plain"> </span><span class="token boolean">None</span><span class="token punctuation" style="color:rgb(212, 212, 212)">:</span><br></span></code></pre></div></div>
<p>These methods allow you to publish custom data and signals efficiently without needing to work directly with the <code>MessageBus</code> interface.</p>
<h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="direct-access">Direct access<a href="#direct-access" class="hash-link" aria-label="Direct link to Direct access" title="Direct link to Direct access">​</a></h2>
<p>For advanced users or specialized use cases, direct access to the message bus is available within <code>Actor</code> and <code>Strategy</code>
classes through the <code>self.msgbus</code> reference, which provides the full message bus interface.</p>
<p>To publish a custom message directly, you can specify a topic as a <code>str</code> and any Python <code>object</code> as the message payload, for example:</p>
<div class="language-python codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9CDCFE;--prism-background-color:#1E1E1E"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-python codeBlock_bY9V thin-scrollbar" style="color:#9CDCFE;background-color:#1E1E1E"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9CDCFE"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">self</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">msgbus</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">publish</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token string" style="color:rgb(206, 145, 120)">&quot;MyTopic&quot;</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(206, 145, 120)">&quot;MyMessage&quot;</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><br></span></code></pre></div></div>
<h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="messaging-styles">Messaging styles<a href="#messaging-styles" class="hash-link" aria-label="Direct link to Messaging styles" title="Direct link to Messaging styles">​</a></h2>
<p>PoseiTrader is an <strong>event-driven</strong> framework where components communicate by sending and receiving messages.
Understanding the different messaging styles is crucial for building effective trading systems.</p>
<p>This guide explains the three primary messaging patterns available in PoseiTrader:</p>

























<table><thead><tr><th style="text-align:left"><strong>Messaging Style</strong></th><th style="text-align:left"><strong>Purpose</strong></th><th style="text-align:left"><strong>Best For</strong></th></tr></thead><tbody><tr><td style="text-align:left"><strong>MessageBus - Publish/Subscribe to topics</strong></td><td style="text-align:left">Low-level, direct access to the message bus</td><td style="text-align:left">Custom events, system-level communication</td></tr><tr><td style="text-align:left"><strong>Actor-Based - Publish/Subscribe Data</strong></td><td style="text-align:left">Structured trading data exchange</td><td style="text-align:left">Trading metrics, indicators, data needing persistence</td></tr><tr><td style="text-align:left"><strong>Actor-Based - Publish/Subscribe Signal</strong></td><td style="text-align:left">Lightweight notifications</td><td style="text-align:left">Simple alerts, flags, status updates</td></tr></tbody></table>
<p>Each approach serves different purposes and offers unique advantages. This guide will help you decide which messaging
pattern to use in your PoseiTrader applications.</p>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="messagebus-publishsubscribe-to-topics">MessageBus publish/subscribe to topics<a href="#messagebus-publishsubscribe-to-topics" class="hash-link" aria-label="Direct link to MessageBus publish/subscribe to topics" title="Direct link to MessageBus publish/subscribe to topics">​</a></h3>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="concept">Concept<a href="#concept" class="hash-link" aria-label="Direct link to Concept" title="Direct link to Concept">​</a></h4>
<p>The <code>MessageBus</code> is the central hub for all messages in PoseiTrader. It enables a <strong>publish/subscribe</strong> pattern
where components can publish events to <strong>named topics</strong>, and other components can subscribe to receive those messages.
This decouples components, allowing them to interact indirectly via the message bus.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="key-benefits-and-use-cases">Key benefits and use cases<a href="#key-benefits-and-use-cases" class="hash-link" aria-label="Direct link to Key benefits and use cases" title="Direct link to Key benefits and use cases">​</a></h4>
<p>The message bus approach is ideal when you need:</p>
<ul>
<li><strong>Cross-component communication</strong> within the system.</li>
<li><strong>Flexibility</strong> to define any topic and send any type of payload (any Python object).</li>
<li><strong>Decoupling</strong> between publishers and subscribers who don&#x27;t need to know about each other.</li>
<li><strong>Global Reach</strong> where messages can be received by multiple subscribers.</li>
<li>Working with events that don&#x27;t fit within the predefined <code>Actor</code> model.</li>
<li>Advanced scenarios requiring full control over messaging.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="considerations">Considerations<a href="#considerations" class="hash-link" aria-label="Direct link to Considerations" title="Direct link to Considerations">​</a></h4>
<ul>
<li>You must track topic names manually (typos could result in missed messages).</li>
<li>You must define handlers manually.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="quick-overview-code">Quick overview code<a href="#quick-overview-code" class="hash-link" aria-label="Direct link to Quick overview code" title="Direct link to Quick overview code">​</a></h4>
<div class="language-python codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9CDCFE;--prism-background-color:#1E1E1E"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-python codeBlock_bY9V thin-scrollbar" style="color:#9CDCFE;background-color:#1E1E1E"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9CDCFE"><span class="token keyword" style="color:rgb(86, 156, 214)">from</span><span class="token plain"> posei_trader</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">core</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">message </span><span class="token keyword" style="color:rgb(86, 156, 214)">import</span><span class="token plain"> Event</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token comment" style="color:rgb(106, 153, 85)"># Define a custom event</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token keyword" style="color:rgb(86, 156, 214)">class</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(78, 201, 176)">Each10thBarEvent</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token plain">Event</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token punctuation" style="color:rgb(212, 212, 212)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    TOPIC </span><span class="token operator" style="color:rgb(212, 212, 212)">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(206, 145, 120)">&quot;each_10th_bar&quot;</span><span class="token plain">  </span><span class="token comment" style="color:rgb(106, 153, 85)"># Topic name</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token keyword" style="color:rgb(86, 156, 214)">def</span><span class="token plain"> </span><span class="token function" style="color:rgb(220, 220, 170)">__init__</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token plain">self</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"> bar</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token punctuation" style="color:rgb(212, 212, 212)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">        self</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">bar </span><span class="token operator" style="color:rgb(212, 212, 212)">=</span><span class="token plain"> bar</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token comment" style="color:rgb(106, 153, 85)"># Subscribe in a component (in Strategy)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">self</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">msgbus</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">subscribe</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token plain">Each10thBarEvent</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">TOPIC</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"> self</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">on_each_10th_bar</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token comment" style="color:rgb(106, 153, 85)"># Publish an event (in Strategy)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">event </span><span class="token operator" style="color:rgb(212, 212, 212)">=</span><span class="token plain"> Each10thBarEvent</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token plain">bar</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">self</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">msgbus</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">publish</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token plain">Each10thBarEvent</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">TOPIC</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"> event</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token comment" style="color:rgb(106, 153, 85)"># Handler (in Strategy)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token keyword" style="color:rgb(86, 156, 214)">def</span><span class="token plain"> </span><span class="token function" style="color:rgb(220, 220, 170)">on_each_10th_bar</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token plain">self</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"> event</span><span class="token punctuation" style="color:rgb(212, 212, 212)">:</span><span class="token plain"> Each10thBarEvent</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token punctuation" style="color:rgb(212, 212, 212)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    self</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">log</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">info</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token string-interpolation string" style="color:rgb(206, 145, 120)">f&quot;Received 10th bar: </span><span class="token string-interpolation interpolation punctuation" style="color:rgb(212, 212, 212)">{</span><span class="token string-interpolation interpolation">event</span><span class="token string-interpolation interpolation punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token string-interpolation interpolation">bar</span><span class="token string-interpolation interpolation punctuation" style="color:rgb(212, 212, 212)">}</span><span class="token string-interpolation string" style="color:rgb(206, 145, 120)">&quot;</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><br></span></code></pre></div></div>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="full-example">Full example<a href="#full-example" class="hash-link" aria-label="Direct link to Full example" title="Direct link to Full example">​</a></h4>
<p><a href="https://github.com/poseisysstems/tree/develop/examples/backtest/example_09_messaging_with_msgbus" target="_blank" rel="noopener noreferrer">MessageBus Example</a></p>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="actor-based-publishsubscribe-data">Actor-based publish/subscribe data<a href="#actor-based-publishsubscribe-data" class="hash-link" aria-label="Direct link to Actor-based publish/subscribe data" title="Direct link to Actor-based publish/subscribe data">​</a></h3>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="concept-1">Concept<a href="#concept-1" class="hash-link" aria-label="Direct link to Concept" title="Direct link to Concept">​</a></h4>
<p>This approach provides a way to exchange trading specific data between <code>Actor</code>s in the system.
(note: each <code>Strategy</code> inherits from <code>Actor</code>). It inherits from <code>Data</code>, which ensures proper timestamping
and ordering of events - crucial for correct backtest processing.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="key-benefits-and-use-cases-1">Key Benefits and Use Cases<a href="#key-benefits-and-use-cases-1" class="hash-link" aria-label="Direct link to Key Benefits and Use Cases" title="Direct link to Key Benefits and Use Cases">​</a></h4>
<p>The Data publish/subscribe approach excels when you need:</p>
<ul>
<li><strong>Exchange of structured trading data</strong> like market data, indicators, custom metrics, or option greeks.</li>
<li><strong>Proper event ordering</strong> via built-in timestamps (<code>ts_event</code>, <code>ts_init</code>) crucial for backtest accuracy.</li>
<li><strong>Data persistence and serialization</strong> through the <code>@customdataclass</code> decorator, integrating seamlessly with PoseiTrader&#x27;s data catalog system.</li>
<li><strong>Standardized trading data exchange</strong> between system components.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="considerations-1">Considerations<a href="#considerations-1" class="hash-link" aria-label="Direct link to Considerations" title="Direct link to Considerations">​</a></h4>
<ul>
<li>Requires defining a class that inherits from <code>Data</code> or uses <code>@customdataclass</code>.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="inheriting-from-data-vs-using-customdataclass">Inheriting from <code>Data</code> vs. using <code>@customdataclass</code><a href="#inheriting-from-data-vs-using-customdataclass" class="hash-link" aria-label="Direct link to inheriting-from-data-vs-using-customdataclass" title="Direct link to inheriting-from-data-vs-using-customdataclass">​</a></h4>
<p><strong>Inheriting from <code>Data</code> class:</strong></p>
<ul>
<li>Defines abstract properties <code>ts_event</code> and <code>ts_init</code> that must be implemented by the subclass. These ensure proper data ordering in backtests based on timestamps.</li>
</ul>
<p><strong>The <code>@customdataclass</code> decorator:</strong></p>
<ul>
<li>Adds <code>ts_event</code> and <code>ts_init</code> attributes if they are not already present.</li>
<li>Provides serialization functions: <code>to_dict()</code>, <code>from_dict()</code>, <code>to_bytes()</code>, <code>to_arrow()</code>, etc.</li>
<li>Enables data persistence and external communication.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="quick-overview-code-1">Quick overview code<a href="#quick-overview-code-1" class="hash-link" aria-label="Direct link to Quick overview code" title="Direct link to Quick overview code">​</a></h4>
<div class="language-python codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9CDCFE;--prism-background-color:#1E1E1E"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-python codeBlock_bY9V thin-scrollbar" style="color:#9CDCFE;background-color:#1E1E1E"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9CDCFE"><span class="token keyword" style="color:rgb(86, 156, 214)">from</span><span class="token plain"> posei_trader</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">core</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">data </span><span class="token keyword" style="color:rgb(86, 156, 214)">import</span><span class="token plain"> Data</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token keyword" style="color:rgb(86, 156, 214)">from</span><span class="token plain"> posei_trader</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">model</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">custom </span><span class="token keyword" style="color:rgb(86, 156, 214)">import</span><span class="token plain"> customdataclass</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token decorator annotation punctuation" style="color:rgb(212, 212, 212)">@customdataclass</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token keyword" style="color:rgb(86, 156, 214)">class</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(78, 201, 176)">GreeksData</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token plain">Data</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token punctuation" style="color:rgb(212, 212, 212)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    delta</span><span class="token punctuation" style="color:rgb(212, 212, 212)">:</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(86, 156, 214)">float</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    gamma</span><span class="token punctuation" style="color:rgb(212, 212, 212)">:</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(86, 156, 214)">float</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token comment" style="color:rgb(106, 153, 85)"># Publish data (in Actor / Strategy)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">data </span><span class="token operator" style="color:rgb(212, 212, 212)">=</span><span class="token plain"> GreeksData</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token plain">delta</span><span class="token operator" style="color:rgb(212, 212, 212)">=</span><span class="token number" style="color:rgb(181, 206, 168)">0.75</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"> gamma</span><span class="token operator" style="color:rgb(212, 212, 212)">=</span><span class="token number" style="color:rgb(181, 206, 168)">0.1</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"> ts_event</span><span class="token operator" style="color:rgb(212, 212, 212)">=</span><span class="token number" style="color:rgb(181, 206, 168)">1_630_000_000_000_000_000</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"> ts_init</span><span class="token operator" style="color:rgb(212, 212, 212)">=</span><span class="token number" style="color:rgb(181, 206, 168)">1_630_000_000_000_000_000</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">self</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">publish_data</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token plain">GreeksData</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"> data</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token comment" style="color:rgb(106, 153, 85)"># Subscribe to receiving data  (in Actor / Strategy)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">self</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">subscribe_data</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token plain">GreeksData</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token comment" style="color:rgb(106, 153, 85)"># Handler (this is static callback function with fixed name)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token keyword" style="color:rgb(86, 156, 214)">def</span><span class="token plain"> </span><span class="token function" style="color:rgb(220, 220, 170)">on_data</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token plain">self</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"> data</span><span class="token punctuation" style="color:rgb(212, 212, 212)">:</span><span class="token plain"> Data</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token punctuation" style="color:rgb(212, 212, 212)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token keyword" style="color:rgb(86, 156, 214)">if</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(86, 156, 214)">isinstance</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token plain">data</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"> GreeksData</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token punctuation" style="color:rgb(212, 212, 212)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">        self</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">log</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">info</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token string-interpolation string" style="color:rgb(206, 145, 120)">f&quot;Delta: </span><span class="token string-interpolation interpolation punctuation" style="color:rgb(212, 212, 212)">{</span><span class="token string-interpolation interpolation">data</span><span class="token string-interpolation interpolation punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token string-interpolation interpolation">delta</span><span class="token string-interpolation interpolation punctuation" style="color:rgb(212, 212, 212)">}</span><span class="token string-interpolation string" style="color:rgb(206, 145, 120)">, Gamma: </span><span class="token string-interpolation interpolation punctuation" style="color:rgb(212, 212, 212)">{</span><span class="token string-interpolation interpolation">data</span><span class="token string-interpolation interpolation punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token string-interpolation interpolation">gamma</span><span class="token string-interpolation interpolation punctuation" style="color:rgb(212, 212, 212)">}</span><span class="token string-interpolation string" style="color:rgb(206, 145, 120)">&quot;</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><br></span></code></pre></div></div>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="full-example-1">Full example<a href="#full-example-1" class="hash-link" aria-label="Direct link to Full example" title="Direct link to Full example">​</a></h4>
<p><a href="https://github.com/poseisysstems/tree/develop/examples/backtest/example_10_messaging_with_actor_data" target="_blank" rel="noopener noreferrer">Actor-Based Data Example</a></p>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="actor-based-publishsubscribe-signal">Actor-based publish/subscribe signal<a href="#actor-based-publishsubscribe-signal" class="hash-link" aria-label="Direct link to Actor-based publish/subscribe signal" title="Direct link to Actor-based publish/subscribe signal">​</a></h3>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="concept-2">Concept<a href="#concept-2" class="hash-link" aria-label="Direct link to Concept" title="Direct link to Concept">​</a></h4>
<p><strong>Signals</strong> are a lightweight way to publish and subscribe to simple notifications within the actor framework.
This is the simplest messaging approach, requiring no custom class definitions.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="key-benefits-and-use-cases-2">Key Benefits and Use Cases<a href="#key-benefits-and-use-cases-2" class="hash-link" aria-label="Direct link to Key Benefits and Use Cases" title="Direct link to Key Benefits and Use Cases">​</a></h4>
<p>The Signal messaging approach shines when you need:</p>
<ul>
<li><strong>Simple, lightweight notifications/alerts</strong> like &quot;RiskThresholdExceeded&quot; or &quot;TrendUp&quot;.</li>
<li><strong>Quick, on-the-fly messaging</strong> without defining custom classes.</li>
<li><strong>Broadcasting alerts or flags</strong> as primitive data (<code>int</code>, <code>float</code>, or <code>str</code>).</li>
<li><strong>Easy API integration</strong> with straightforward methods (<code>publish_signal</code>, <code>subscribe_signal</code>).</li>
<li><strong>Multiple subscriber communication</strong> where all subscribers receive signals when published.</li>
<li><strong>Minimal setup overhead</strong> with no class definitions required.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="considerations-2">Considerations<a href="#considerations-2" class="hash-link" aria-label="Direct link to Considerations" title="Direct link to Considerations">​</a></h4>
<ul>
<li>Each signal can contain only <strong>single value</strong> of type: <code>int</code>, <code>float</code>, and <code>str</code>. That means no support for complex data structures or other Python types.</li>
<li>In the <code>on_signal</code> handler, you can only differentiate between signals using <code>signal.value</code>, as the signal name is not accessible in the handler.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="quick-overview-code-2">Quick overview code<a href="#quick-overview-code-2" class="hash-link" aria-label="Direct link to Quick overview code" title="Direct link to Quick overview code">​</a></h4>
<div class="language-python codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9CDCFE;--prism-background-color:#1E1E1E"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-python codeBlock_bY9V thin-scrollbar" style="color:#9CDCFE;background-color:#1E1E1E"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9CDCFE"><span class="token comment" style="color:rgb(106, 153, 85)"># Define signal constants for better organization (optional but recommended)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token keyword" style="color:rgb(86, 156, 214)">import</span><span class="token plain"> types</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token keyword" style="color:rgb(86, 156, 214)">from</span><span class="token plain"> posei_trader</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">core</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">datetime </span><span class="token keyword" style="color:rgb(86, 156, 214)">import</span><span class="token plain"> unix_nanos_to_dt</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token keyword" style="color:rgb(86, 156, 214)">from</span><span class="token plain"> posei_trader</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">common</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">enums </span><span class="token keyword" style="color:rgb(86, 156, 214)">import</span><span class="token plain"> LogColor</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">signals </span><span class="token operator" style="color:rgb(212, 212, 212)">=</span><span class="token plain"> types</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">SimpleNamespace</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">signals</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">NEW_HIGHEST_PRICE </span><span class="token operator" style="color:rgb(212, 212, 212)">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(206, 145, 120)">&quot;NewHighestPriceReached&quot;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">signals</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">NEW_LOWEST_PRICE </span><span class="token operator" style="color:rgb(212, 212, 212)">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(206, 145, 120)">&quot;NewLowestPriceReached&quot;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token comment" style="color:rgb(106, 153, 85)"># Subscribe to signals (in Actor/Strategy)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">self</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">subscribe_signal</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token plain">signals</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">NEW_HIGHEST_PRICE</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">self</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">subscribe_signal</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token plain">signals</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">NEW_LOWEST_PRICE</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token comment" style="color:rgb(106, 153, 85)"># Publish a signal (in Actor/Strategy)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">self</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">publish_signal</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    name</span><span class="token operator" style="color:rgb(212, 212, 212)">=</span><span class="token plain">signals</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">NEW_HIGHEST_PRICE</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    value</span><span class="token operator" style="color:rgb(212, 212, 212)">=</span><span class="token plain">signals</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">NEW_HIGHEST_PRICE</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain">  </span><span class="token comment" style="color:rgb(106, 153, 85)"># value can be the same as name for simplicity</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    ts_event</span><span class="token operator" style="color:rgb(212, 212, 212)">=</span><span class="token plain">bar</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">ts_event</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain">  </span><span class="token comment" style="color:rgb(106, 153, 85)"># timestamp from triggering event</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token comment" style="color:rgb(106, 153, 85)"># Handler (this is static callback function with fixed name)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token keyword" style="color:rgb(86, 156, 214)">def</span><span class="token plain"> </span><span class="token function" style="color:rgb(220, 220, 170)">on_signal</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token plain">self</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"> signal</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token punctuation" style="color:rgb(212, 212, 212)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token comment" style="color:rgb(106, 153, 85)"># IMPORTANT: We match against signal.value, not signal.name</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token keyword" style="color:rgb(86, 156, 214)">match</span><span class="token plain"> signal</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">value</span><span class="token punctuation" style="color:rgb(212, 212, 212)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">        </span><span class="token keyword" style="color:rgb(86, 156, 214)">case</span><span class="token plain"> signals</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">NEW_HIGHEST_PRICE</span><span class="token punctuation" style="color:rgb(212, 212, 212)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">            self</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">log</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">info</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">                </span><span class="token string-interpolation string" style="color:rgb(206, 145, 120)">f&quot;New highest price was reached. | &quot;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">                </span><span class="token string-interpolation string" style="color:rgb(206, 145, 120)">f&quot;Signal value: </span><span class="token string-interpolation interpolation punctuation" style="color:rgb(212, 212, 212)">{</span><span class="token string-interpolation interpolation">signal</span><span class="token string-interpolation interpolation punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token string-interpolation interpolation">value</span><span class="token string-interpolation interpolation punctuation" style="color:rgb(212, 212, 212)">}</span><span class="token string-interpolation string" style="color:rgb(206, 145, 120)"> | &quot;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">                </span><span class="token string-interpolation string" style="color:rgb(206, 145, 120)">f&quot;Signal time: </span><span class="token string-interpolation interpolation punctuation" style="color:rgb(212, 212, 212)">{</span><span class="token string-interpolation interpolation">unix_nanos_to_dt</span><span class="token string-interpolation interpolation punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token string-interpolation interpolation">signal</span><span class="token string-interpolation interpolation punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token string-interpolation interpolation">ts_event</span><span class="token string-interpolation interpolation punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token string-interpolation interpolation punctuation" style="color:rgb(212, 212, 212)">}</span><span class="token string-interpolation string" style="color:rgb(206, 145, 120)">&quot;</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">                color</span><span class="token operator" style="color:rgb(212, 212, 212)">=</span><span class="token plain">LogColor</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">GREEN</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">            </span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">        </span><span class="token keyword" style="color:rgb(86, 156, 214)">case</span><span class="token plain"> signals</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">NEW_LOWEST_PRICE</span><span class="token punctuation" style="color:rgb(212, 212, 212)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">            self</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">log</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">info</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">                </span><span class="token string-interpolation string" style="color:rgb(206, 145, 120)">f&quot;New lowest price was reached. | &quot;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">                </span><span class="token string-interpolation string" style="color:rgb(206, 145, 120)">f&quot;Signal value: </span><span class="token string-interpolation interpolation punctuation" style="color:rgb(212, 212, 212)">{</span><span class="token string-interpolation interpolation">signal</span><span class="token string-interpolation interpolation punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token string-interpolation interpolation">value</span><span class="token string-interpolation interpolation punctuation" style="color:rgb(212, 212, 212)">}</span><span class="token string-interpolation string" style="color:rgb(206, 145, 120)"> | &quot;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">                </span><span class="token string-interpolation string" style="color:rgb(206, 145, 120)">f&quot;Signal time: </span><span class="token string-interpolation interpolation punctuation" style="color:rgb(212, 212, 212)">{</span><span class="token string-interpolation interpolation">unix_nanos_to_dt</span><span class="token string-interpolation interpolation punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token string-interpolation interpolation">signal</span><span class="token string-interpolation interpolation punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token string-interpolation interpolation">ts_event</span><span class="token string-interpolation interpolation punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token string-interpolation interpolation punctuation" style="color:rgb(212, 212, 212)">}</span><span class="token string-interpolation string" style="color:rgb(206, 145, 120)">&quot;</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">                color</span><span class="token operator" style="color:rgb(212, 212, 212)">=</span><span class="token plain">LogColor</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">RED</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">            </span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><br></span></code></pre></div></div>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="full-example-2">Full example<a href="#full-example-2" class="hash-link" aria-label="Direct link to Full example" title="Direct link to Full example">​</a></h4>
<p><a href="https://github.com/poseisysstems/tree/develop/examples/backtest/example_11_messaging_with_actor_signals" target="_blank" rel="noopener noreferrer">Actor-Based Signal Example</a></p>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="summary-and-decision-guide">Summary and decision guide<a href="#summary-and-decision-guide" class="hash-link" aria-label="Direct link to Summary and decision guide" title="Direct link to Summary and decision guide">​</a></h3>
<p>Here&#x27;s a quick reference to help you decide which messaging style to use:</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="decision-guide-which-style-to-choose">Decision guide: Which style to choose?<a href="#decision-guide-which-style-to-choose" class="hash-link" aria-label="Direct link to Decision guide: Which style to choose?" title="Direct link to Decision guide: Which style to choose?">​</a></h4>

























<table><thead><tr><th style="text-align:left"><strong>Use Case</strong></th><th style="text-align:left"><strong>Recommended Approach</strong></th><th style="text-align:left"><strong>Setup required</strong></th></tr></thead><tbody><tr><td style="text-align:left">Custom events or system-level communication</td><td style="text-align:left"><code>MessageBus</code> + Pub/Sub to topic</td><td style="text-align:left">Topic + Handler management</td></tr><tr><td style="text-align:left">Structured trading data</td><td style="text-align:left"><code>Actor</code> + Pub/Sub Data + optional <code>@customdataclass</code> if serialization is needed</td><td style="text-align:left">New class definition inheriting from <code>Data</code> (handler <code>on_data</code> is predefined)</td></tr><tr><td style="text-align:left">Simple alerts/notifications</td><td style="text-align:left"><code>Actor</code> + Pub/Sub Signal</td><td style="text-align:left">Just signal name</td></tr></tbody></table>
<h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="external-publishing">External publishing<a href="#external-publishing" class="hash-link" aria-label="Direct link to External publishing" title="Direct link to External publishing">​</a></h2>
<p>The <code>MessageBus</code> can be <em>backed</em> with any database or message broker technology which has an
integration written for it, this then enables external publishing of messages.</p>
<div class="theme-admonition theme-admonition-info admonition_xJq3 alert alert--info"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg viewbox="0 0 14 16"><path fill-rule="evenodd" d="M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"></path></svg></span>info</div><div class="admonitionContent_BuS1"><p>Redis is currently supported for all serializable messages which are published externally.
The minimum supported Redis version is 6.2 (required for <a href="https://redis.io/docs/latest/develop/data-types/streams/" target="_blank" rel="noopener noreferrer">streams</a> functionality).</p></div></div>
<p>Under the hood, when a backing database (or any other compatible technology) is configured,
all outgoing messages are first serialized, then transmitted via a Multiple-Producer Single-Consumer (MPSC) channel to a separate thread (implemented in Rust).
In this separate thread, the message is written to its final destination, which is presently Redis streams.</p>
<p>This design is primarily driven by performance considerations. By offloading the I/O operations to a separate thread,
we ensure that the main thread remains unblocked and can continue its tasks without being hindered by the potentially
time-consuming operations involved in interacting with a database or client.</p>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="serialization">Serialization<a href="#serialization" class="hash-link" aria-label="Direct link to Serialization" title="Direct link to Serialization">​</a></h3>
<p>Posei supports serialization for:</p>
<ul>
<li>All Posei built-in types (serialized as dictionaries <code>dict[str, Any]</code> containing serializable primitives).</li>
<li>Python primitive types (<code>str</code>, <code>int</code>, <code>float</code>, <code>bool</code>, <code>bytes</code>).</li>
</ul>
<p>You can add serialization support for custom types by registering them through the <code>serialization</code> subpackage.</p>
<div class="language-python codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9CDCFE;--prism-background-color:#1E1E1E"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-python codeBlock_bY9V thin-scrollbar" style="color:#9CDCFE;background-color:#1E1E1E"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9CDCFE"><span class="token keyword" style="color:rgb(86, 156, 214)">def</span><span class="token plain"> </span><span class="token function" style="color:rgb(220, 220, 170)">register_serializable_type</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    cls</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    to_dict</span><span class="token punctuation" style="color:rgb(212, 212, 212)">:</span><span class="token plain"> Callable</span><span class="token punctuation" style="color:rgb(212, 212, 212)">[</span><span class="token punctuation" style="color:rgb(212, 212, 212)">[</span><span class="token plain">Any</span><span class="token punctuation" style="color:rgb(212, 212, 212)">]</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(86, 156, 214)">dict</span><span class="token punctuation" style="color:rgb(212, 212, 212)">[</span><span class="token builtin" style="color:rgb(86, 156, 214)">str</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"> Any</span><span class="token punctuation" style="color:rgb(212, 212, 212)">]</span><span class="token punctuation" style="color:rgb(212, 212, 212)">]</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    from_dict</span><span class="token punctuation" style="color:rgb(212, 212, 212)">:</span><span class="token plain"> Callable</span><span class="token punctuation" style="color:rgb(212, 212, 212)">[</span><span class="token punctuation" style="color:rgb(212, 212, 212)">[</span><span class="token builtin" style="color:rgb(86, 156, 214)">dict</span><span class="token punctuation" style="color:rgb(212, 212, 212)">[</span><span class="token builtin" style="color:rgb(86, 156, 214)">str</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"> Any</span><span class="token punctuation" style="color:rgb(212, 212, 212)">]</span><span class="token punctuation" style="color:rgb(212, 212, 212)">]</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"> Any</span><span class="token punctuation" style="color:rgb(212, 212, 212)">]</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token punctuation" style="color:rgb(212, 212, 212)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><br></span></code></pre></div></div>
<ul>
<li><code>cls</code>: The type to register.</li>
<li><code>to_dict</code>: The delegate to instantiate a dict of primitive types from the object.</li>
<li><code>from_dict</code>: The delegate to instantiate the object from a dict of primitive types.</li>
</ul>
<h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="configuration">Configuration<a href="#configuration" class="hash-link" aria-label="Direct link to Configuration" title="Direct link to Configuration">​</a></h2>
<p>The message bus external backing technology can be configured by importing the <code>MessageBusConfig</code> object and passing this to
your <code>TradingNodeConfig</code>. Each of these config options will be described below.</p>
<div class="language-python codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9CDCFE;--prism-background-color:#1E1E1E"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-python codeBlock_bY9V thin-scrollbar" style="color:#9CDCFE;background-color:#1E1E1E"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9CDCFE"><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">  </span><span class="token comment" style="color:rgb(106, 153, 85)"># Other config omitted</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">message_bus</span><span class="token operator" style="color:rgb(212, 212, 212)">=</span><span class="token plain">MessageBusConfig</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    database</span><span class="token operator" style="color:rgb(212, 212, 212)">=</span><span class="token plain">DatabaseConfig</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    encoding</span><span class="token operator" style="color:rgb(212, 212, 212)">=</span><span class="token string" style="color:rgb(206, 145, 120)">&quot;json&quot;</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    timestamps_as_iso8601</span><span class="token operator" style="color:rgb(212, 212, 212)">=</span><span class="token boolean">True</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    buffer_interval_ms</span><span class="token operator" style="color:rgb(212, 212, 212)">=</span><span class="token number" style="color:rgb(181, 206, 168)">100</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    autotrim_mins</span><span class="token operator" style="color:rgb(212, 212, 212)">=</span><span class="token number" style="color:rgb(181, 206, 168)">30</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    use_trader_prefix</span><span class="token operator" style="color:rgb(212, 212, 212)">=</span><span class="token boolean">True</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    use_trader_id</span><span class="token operator" style="color:rgb(212, 212, 212)">=</span><span class="token boolean">True</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    use_instance_id</span><span class="token operator" style="color:rgb(212, 212, 212)">=</span><span class="token boolean">False</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    streams_prefix</span><span class="token operator" style="color:rgb(212, 212, 212)">=</span><span class="token string" style="color:rgb(206, 145, 120)">&quot;streams&quot;</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    types_filter</span><span class="token operator" style="color:rgb(212, 212, 212)">=</span><span class="token punctuation" style="color:rgb(212, 212, 212)">[</span><span class="token plain">QuoteTick</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"> TradeTick</span><span class="token punctuation" style="color:rgb(212, 212, 212)">]</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><br></span></code></pre></div></div>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="database-config">Database config<a href="#database-config" class="hash-link" aria-label="Direct link to Database config" title="Direct link to Database config">​</a></h3>
<p>A <code>DatabaseConfig</code> must be provided, for a default Redis setup on the local
loopback you can pass a <code>DatabaseConfig()</code>, which will use defaults to match.</p>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="encoding">Encoding<a href="#encoding" class="hash-link" aria-label="Direct link to Encoding" title="Direct link to Encoding">​</a></h3>
<p>Two encodings are currently supported by the built-in <code>Serializer</code> used by the <code>MessageBus</code>:</p>
<ul>
<li>JSON (<code>json</code>)</li>
<li>MessagePack (<code>msgpack</code>)</li>
</ul>
<p>Use the <code>encoding</code> config option to control the message writing encoding.</p>
<div class="theme-admonition theme-admonition-tip admonition_xJq3 alert alert--success"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg viewbox="0 0 12 16"><path fill-rule="evenodd" d="M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"></path></svg></span>tip</div><div class="admonitionContent_BuS1"><p>The <code>msgpack</code> encoding is used by default as it offers the most optimal serialization and memory performance.
We recommend using <code>json</code> encoding for human readability when performance is not a primary concern.</p></div></div>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="timestamp-formatting">Timestamp formatting<a href="#timestamp-formatting" class="hash-link" aria-label="Direct link to Timestamp formatting" title="Direct link to Timestamp formatting">​</a></h3>
<p>By default timestamps are formatted as UNIX epoch nanosecond integers. Alternatively you can
configure ISO 8601 string formatting by setting the <code>timestamps_as_iso8601</code> to <code>True</code>.</p>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="message-stream-keys">Message stream keys<a href="#message-stream-keys" class="hash-link" aria-label="Direct link to Message stream keys" title="Direct link to Message stream keys">​</a></h3>
<p>Message stream keys are essential for identifying individual trader nodes and organizing messages within streams.
They can be tailored to meet your specific requirements and use cases. In the context of message bus streams, a trader key is typically structured as follows:</p>
<div class="language-text codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9CDCFE;--prism-background-color:#1E1E1E"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#9CDCFE;background-color:#1E1E1E"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9CDCFE"><span class="token plain">trader:{trader_id}:{instance_id}:{streams_prefix}</span><br></span></code></pre></div></div>
<p>The following options are available for configuring message stream keys:</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="trader-prefix">Trader prefix<a href="#trader-prefix" class="hash-link" aria-label="Direct link to Trader prefix" title="Direct link to Trader prefix">​</a></h4>
<p>If the key should begin with the <code>trader</code> string.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="trader-id">Trader ID<a href="#trader-id" class="hash-link" aria-label="Direct link to Trader ID" title="Direct link to Trader ID">​</a></h4>
<p>If the key should include the trader ID for the node.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="instance-id">Instance ID<a href="#instance-id" class="hash-link" aria-label="Direct link to Instance ID" title="Direct link to Instance ID">​</a></h4>
<p>Each trader node is assigned a unique &#x27;instance ID,&#x27; which is a UUIDv4. This instance ID helps distinguish individual traders when messages
are distributed across multiple streams. You can include the instance ID in the trader key by setting the <code>use_instance_id</code> configuration option to <code>True</code>.
This is particularly useful when you need to track and identify traders across various streams in a multi-node trading system.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="streams-prefix">Streams prefix<a href="#streams-prefix" class="hash-link" aria-label="Direct link to Streams prefix" title="Direct link to Streams prefix">​</a></h4>
<p>The <code>streams_prefix</code> string enables you to group all streams for a single trader instance or organize
messages for multiple instances. Configure this by passing a string to the <code>streams_prefix</code> configuration
option, ensuring other prefixes are set to false.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="stream-per-topic">Stream per topic<a href="#stream-per-topic" class="hash-link" aria-label="Direct link to Stream per topic" title="Direct link to Stream per topic">​</a></h4>
<p>Indicates whether the producer will write a separate stream for each topic. This is particularly
useful for Redis backings, which do not support wildcard topics when listening to streams.
If set to False, all messages will be written to the same stream.</p>
<div class="theme-admonition theme-admonition-info admonition_xJq3 alert alert--info"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg viewbox="0 0 14 16"><path fill-rule="evenodd" d="M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"></path></svg></span>info</div><div class="admonitionContent_BuS1"><p>Redis does not support wildcard stream topics. For better compatibility with Redis, it is recommended to set this option to False.</p></div></div>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="types-filtering">Types filtering<a href="#types-filtering" class="hash-link" aria-label="Direct link to Types filtering" title="Direct link to Types filtering">​</a></h3>
<p>When messages are published on the message bus, they are serialized and written to a stream if a backing
for the message bus is configured and enabled. To prevent flooding the stream with data like high-frequency
quotes, you may filter out certain types of messages from external publication.</p>
<p>To enable this filtering mechanism, pass a list of <code>type</code> objects to the <code>types_filter</code> parameter in the message bus configuration,
specifying which types of messages should be excluded from external publication.</p>
<div class="language-python codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9CDCFE;--prism-background-color:#1E1E1E"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-python codeBlock_bY9V thin-scrollbar" style="color:#9CDCFE;background-color:#1E1E1E"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9CDCFE"><span class="token keyword" style="color:rgb(86, 156, 214)">from</span><span class="token plain"> posei_trader</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">config </span><span class="token keyword" style="color:rgb(86, 156, 214)">import</span><span class="token plain"> MessageBusConfig</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token keyword" style="color:rgb(86, 156, 214)">from</span><span class="token plain"> posei_trader</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">data </span><span class="token keyword" style="color:rgb(86, 156, 214)">import</span><span class="token plain"> TradeTick</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token keyword" style="color:rgb(86, 156, 214)">from</span><span class="token plain"> posei_trader</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">data </span><span class="token keyword" style="color:rgb(86, 156, 214)">import</span><span class="token plain"> QuoteTick</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token comment" style="color:rgb(106, 153, 85)"># Create a MessageBusConfig instance with types filtering</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">message_bus </span><span class="token operator" style="color:rgb(212, 212, 212)">=</span><span class="token plain"> MessageBusConfig</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    types_filter</span><span class="token operator" style="color:rgb(212, 212, 212)">=</span><span class="token punctuation" style="color:rgb(212, 212, 212)">[</span><span class="token plain">QuoteTick</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"> TradeTick</span><span class="token punctuation" style="color:rgb(212, 212, 212)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain" style="display:inline-block"></span><br></span></code></pre></div></div>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="stream-auto-trimming">Stream auto-trimming<a href="#stream-auto-trimming" class="hash-link" aria-label="Direct link to Stream auto-trimming" title="Direct link to Stream auto-trimming">​</a></h3>
<p>The <code>autotrim_mins</code> configuration parameter allows you to specify the lookback window in minutes for automatic stream trimming in your message streams.
Automatic stream trimming helps manage the size of your message streams by removing older messages, ensuring that the streams remain manageable in terms of storage and performance.</p>
<div class="theme-admonition theme-admonition-info admonition_xJq3 alert alert--info"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg viewbox="0 0 14 16"><path fill-rule="evenodd" d="M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"></path></svg></span>info</div><div class="admonitionContent_BuS1"><p>The current Redis implementation will maintain the <code>autotrim_mins</code> as a maximum width (plus roughly a minute, as streams are trimmed no more than once per minute).
Rather than a maximum lookback window based on the current wall clock time.</p></div></div>
<h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="external-streams">External streams<a href="#external-streams" class="hash-link" aria-label="Direct link to External streams" title="Direct link to External streams">​</a></h2>
<p>The message bus within a <code>TradingNode</code> (node) is referred to as the &quot;internal message bus&quot;.
A producer node is one which publishes messages onto an external stream (see <a href="#external-publishing">external publishing</a>).
The consumer node listens to external streams to receive and publish deserialized message payloads on its internal message bus.</p>
<div class="language-text codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9CDCFE;--prism-background-color:#1E1E1E"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#9CDCFE;background-color:#1E1E1E"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9CDCFE"><span class="token plain">                  ┌───────────────────────────┐</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">                  │                           │</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">                  │                           │</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">                  │                           │</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">                  │      Producer Node        │</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">                  │                           │</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">                  │                           │</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">                  │                           │</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">                  │                           │</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">                  │                           │</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">                  │                           │</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">                  └─────────────┬─────────────┘</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">                                │</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">                                │</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">┌───────────────────────────────▼──────────────────────────────┐</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">│                                                              │</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">│                            Stream                            │</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">│                                                              │</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">└─────────────┬────────────────────────────────────┬───────────┘</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">              │                                    │</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">              │                                    │</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">┌─────────────▼───────────┐          ┌─────────────▼───────────┐</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">│                         │          │                         │</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">│                         │          │                         │</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">│     Consumer Node 1     │          │     Consumer Node 2     │</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">│                         │          │                         │</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">│                         │          │                         │</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">│                         │          │                         │</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">│                         │          │                         │</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">│                         │          │                         │</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">│                         │          │                         │</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">│                         │          │                         │</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">└─────────────────────────┘          └─────────────────────────┘</span><br></span></code></pre></div></div>
<div class="theme-admonition theme-admonition-tip admonition_xJq3 alert alert--success"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg viewbox="0 0 12 16"><path fill-rule="evenodd" d="M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"></path></svg></span>tip</div><div class="admonitionContent_BuS1"><p>Set the <code>LiveDataEngineConfig.external_clients</code> with the list of <code>client_id</code>s intended to represent the external streaming clients.
The <code>DataEngine</code> will filter out subscription commands for these clients, ensuring that the external streaming provides the necessary data for any subscriptions to these clients.</p></div></div>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="example-configuration">Example configuration<a href="#example-configuration" class="hash-link" aria-label="Direct link to Example configuration" title="Direct link to Example configuration">​</a></h3>
<p>The following example details a streaming setup where a producer node publishes Binance data externally,
and a downstream consumer node publishes these data messages onto its internal message bus.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="producer-node">Producer node<a href="#producer-node" class="hash-link" aria-label="Direct link to Producer node" title="Direct link to Producer node">​</a></h4>
<p>We configure the <code>MessageBus</code> of the producer node to publish to a <code>&quot;binance&quot;</code> stream.
The settings <code>use_trader_id</code>, <code>use_trader_prefix</code>, and <code>use_instance_id</code> are all set to <code>False</code>
to ensure a simple and predictable stream key that the consumer nodes can register for.</p>
<div class="language-python codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9CDCFE;--prism-background-color:#1E1E1E"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-python codeBlock_bY9V thin-scrollbar" style="color:#9CDCFE;background-color:#1E1E1E"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9CDCFE"><span class="token plain">message_bus</span><span class="token operator" style="color:rgb(212, 212, 212)">=</span><span class="token plain">MessageBusConfig</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    database</span><span class="token operator" style="color:rgb(212, 212, 212)">=</span><span class="token plain">DatabaseConfig</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token plain">timeout</span><span class="token operator" style="color:rgb(212, 212, 212)">=</span><span class="token number" style="color:rgb(181, 206, 168)">2</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    use_trader_id</span><span class="token operator" style="color:rgb(212, 212, 212)">=</span><span class="token boolean">False</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    use_trader_prefix</span><span class="token operator" style="color:rgb(212, 212, 212)">=</span><span class="token boolean">False</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    use_instance_id</span><span class="token operator" style="color:rgb(212, 212, 212)">=</span><span class="token boolean">False</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    streams_prefix</span><span class="token operator" style="color:rgb(212, 212, 212)">=</span><span class="token string" style="color:rgb(206, 145, 120)">&quot;binance&quot;</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain">  </span><span class="token comment" style="color:rgb(106, 153, 85)"># &lt;---</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    stream_per_topic</span><span class="token operator" style="color:rgb(212, 212, 212)">=</span><span class="token boolean">False</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    autotrim_mins</span><span class="token operator" style="color:rgb(212, 212, 212)">=</span><span class="token number" style="color:rgb(181, 206, 168)">30</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><br></span></code></pre></div></div>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="consumer-node">Consumer node<a href="#consumer-node" class="hash-link" aria-label="Direct link to Consumer node" title="Direct link to Consumer node">​</a></h4>
<p>We configure the <code>MessageBus</code> of the consumer node to receive messages from the same <code>&quot;binance&quot;</code> stream.
The node will listen to the external stream keys to publish these messages onto its internal message bus.
Additionally, we declare the client ID <code>&quot;BINANCE_EXT&quot;</code> as an external client. This ensures that the
<code>DataEngine</code> does not attempt to send data commands to this client ID, as we expect these messages to be
published onto the internal message bus from the external stream, to which the node has subscribed to the relevant topics.</p>
<div class="language-python codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9CDCFE;--prism-background-color:#1E1E1E"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-python codeBlock_bY9V thin-scrollbar" style="color:#9CDCFE;background-color:#1E1E1E"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9CDCFE"><span class="token plain">data_engine</span><span class="token operator" style="color:rgb(212, 212, 212)">=</span><span class="token plain">LiveDataEngineConfig</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    external_clients</span><span class="token operator" style="color:rgb(212, 212, 212)">=</span><span class="token punctuation" style="color:rgb(212, 212, 212)">[</span><span class="token plain">ClientId</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token string" style="color:rgb(206, 145, 120)">&quot;BINANCE_EXT&quot;</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token punctuation" style="color:rgb(212, 212, 212)">]</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">message_bus</span><span class="token operator" style="color:rgb(212, 212, 212)">=</span><span class="token plain">MessageBusConfig</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    database</span><span class="token operator" style="color:rgb(212, 212, 212)">=</span><span class="token plain">DatabaseConfig</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token plain">timeout</span><span class="token operator" style="color:rgb(212, 212, 212)">=</span><span class="token number" style="color:rgb(181, 206, 168)">2</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    external_streams</span><span class="token operator" style="color:rgb(212, 212, 212)">=</span><span class="token punctuation" style="color:rgb(212, 212, 212)">[</span><span class="token string" style="color:rgb(206, 145, 120)">&quot;binance&quot;</span><span class="token punctuation" style="color:rgb(212, 212, 212)">]</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain">  </span><span class="token comment" style="color:rgb(106, 153, 85)"># &lt;---</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><br></span></code></pre></div></div></div></article><nav class="docusaurus-mt-lg pagination-nav" aria-label="Docs pages"><a class="pagination-nav__link pagination-nav__link--prev" href="../cache/index.htm"><div class="pagination-nav__sublabel">Previous</div><div class="pagination-nav__label">Cache</div></a><a class="pagination-nav__link pagination-nav__link--next" href="../portfolio/index.htm"><div class="pagination-nav__sublabel">Next</div><div class="pagination-nav__label">Portfolio</div></a></nav></div></div><div class="col col--3"><div class="tableOfContents_bqdL thin-scrollbar theme-doc-toc-desktop"><ul class="table-of-contents table-of-contents__left-border"><li><a href="#data-and-signal-publishing" class="table-of-contents__link toc-highlight">Data and signal publishing</a></li><li><a href="#direct-access" class="table-of-contents__link toc-highlight">Direct access</a></li><li><a href="#messaging-styles" class="table-of-contents__link toc-highlight">Messaging styles</a><ul><li><a href="#messagebus-publishsubscribe-to-topics" class="table-of-contents__link toc-highlight">MessageBus publish/subscribe to topics</a></li><li><a href="#actor-based-publishsubscribe-data" class="table-of-contents__link toc-highlight">Actor-based publish/subscribe data</a></li><li><a href="#actor-based-publishsubscribe-signal" class="table-of-contents__link toc-highlight">Actor-based publish/subscribe signal</a></li><li><a href="#summary-and-decision-guide" class="table-of-contents__link toc-highlight">Summary and decision guide</a></li></ul></li><li><a href="#external-publishing" class="table-of-contents__link toc-highlight">External publishing</a><ul><li><a href="#serialization" class="table-of-contents__link toc-highlight">Serialization</a></li></ul></li><li><a href="#configuration" class="table-of-contents__link toc-highlight">Configuration</a><ul><li><a href="#database-config" class="table-of-contents__link toc-highlight">Database config</a></li><li><a href="#encoding" class="table-of-contents__link toc-highlight">Encoding</a></li><li><a href="#timestamp-formatting" class="table-of-contents__link toc-highlight">Timestamp formatting</a></li><li><a href="#message-stream-keys" class="table-of-contents__link toc-highlight">Message stream keys</a></li><li><a href="#types-filtering" class="table-of-contents__link toc-highlight">Types filtering</a></li><li><a href="#stream-auto-trimming" class="table-of-contents__link toc-highlight">Stream auto-trimming</a></li></ul></li><li><a href="#external-streams" class="table-of-contents__link toc-highlight">External streams</a><ul><li><a href="#example-configuration" class="table-of-contents__link toc-highlight">Example configuration</a></li></ul></li></ul></div></div></div><div class="footer-wrapper MuiBox-root css-0"><div class="social-footer-box MuiBox-root css-0"><style data-emotion="css 17rjyz3">.css-17rjyz3{-webkit-text-decoration:underline;text-decoration:underline;text-decoration-color:rgba(25, 118, 210, 0.4);padding:12px;margin-right:10px;}.css-17rjyz3:hover{text-decoration-color:inherit;}</style><style data-emotion="css jl1bw5">.css-jl1bw5{margin:0;font:inherit;color:#1976d2;-webkit-text-decoration:underline;text-decoration:underline;text-decoration-color:rgba(25, 118, 210, 0.4);padding:12px;margin-right:10px;}.css-jl1bw5:hover{text-decoration-color:inherit;}</style><a class="MuiTypography-root MuiTypography-inherit MuiLink-root MuiLink-underlineAlways github-footer css-jl1bw5" href="https://github.com/poseisysstems" target="_blank"></a><a class="MuiTypography-root MuiTypography-inherit MuiLink-root MuiLink-underlineAlways discord-footer css-jl1bw5" href="" target="_blank"></a><a class="MuiTypography-root MuiTypography-inherit MuiLink-root MuiLink-underlineAlways linkedin-footer css-jl1bw5" href="https://www.linkedin.com/company/poseitrader/" target="_blank"></a><a class="MuiTypography-root MuiTypography-inherit MuiLink-root MuiLink-underlineAlways x-footer css-jl1bw5" href="https://twitter.com/PoseiTrader" target="_blank"></a></div><div class="footer-copyright">© 2025 Posei Systems Pty Ltd. All rights reserved.</div></div></div></div></main></div></div></div></div>
</body>
</html>