<!doctype html>
<html lang="en" dir="ltr" class="docs-wrapper plugin-docs plugin-id-default docs-version-nightly docs-doc-page docs-doc-id-concepts/logging" data-has-hydrated="false">
<head>
<meta charset="UTF-8">
<meta name="generator" content="Docusaurus v3.8.1">
<title data-rh="true">Logging | PoseiTrader Documentation</title><meta data-rh="true" name="viewport" content="width=device-width,initial-scale=1"><meta data-rh="true" name="twitter:card" content="summary_large_image"><meta data-rh="true" property="og:image" content="docs/latestimg/docusaurus-social-card.jpg"><meta data-rh="true" name="twitter:image" content="docs/latestimg/docusaurus-social-card.jpg"><meta data-rh="true" property="og:url" content="docs/latestnightly/concepts/logging"><meta data-rh="true" property="og:locale" content="en"><meta data-rh="true" name="docusaurus_locale" content="en"><meta data-rh="true" name="docsearch:language" content="en"><meta data-rh="true" name="keywords" content="Open-source trading platform, Algorithmic trading software, Event-driven backtesting, Live trading with no code changes, Trade any asset class, Low-latency trading execution, Python API for trading strategies, Custom market data integration, Futures and options trading, Crypto spot and derivatives trading, Equities trading simulation, FX spot trading, Sports betting markets trading, Fast backtesting strategies, Advanced trading orders, Rust-based trading platform, High-performance trading system, Nanosecond resolution market simulation, Trading across multiple venues, Trading platform for hedge funds, Seamless data integration, Customizable trading strategies, AI and ML trading strategies, Posei trading platform, Multi-venue trading, Unlimited backtesting strategies, Fast trading execution solutions, Realistic market simulations, Seamless trading API integration, PoseiTrader Documentation, Docs, PoseiTrader Docs"><meta data-rh="true" name="title" content="PoseiTrader Documentation"><meta data-rh="true" name="og:title" content="PoseiTrader Documentation"><meta data-rh="true" name="og:description" content="PoseiTrader is a high-performance platform for automating trading strategies, built on the powerful Posei framework for backtesting and real-time trading."><meta data-rh="true" name="og:image" content="img/preview.png"><meta data-rh="true" name="og:url" content="/docs/latest"><meta data-rh="true" name="docusaurus_version" content="nightly"><meta data-rh="true" name="docusaurus_tag" content="docs-default-nightly"><meta data-rh="true" name="docsearch:version" content="nightly"><meta data-rh="true" name="docsearch:docusaurus_tag" content="docs-default-nightly"><meta data-rh="true" property="og:title" content="Logging | PoseiTrader Documentation"><meta data-rh="true" name="description" content="The platform provides logging for both backtesting and live trading using a high-performance logging subsystem implemented in Rust"><meta data-rh="true" property="og:description" content="The platform provides logging for both backtesting and live trading using a high-performance logging subsystem implemented in Rust"><link data-rh="true" rel="icon" href="../../../img/shell.ico"><link data-rh="true" rel="canonical" href="index.htm"><link data-rh="true" rel="alternate" href="index.htm" hreflang="en"><link data-rh="true" rel="alternate" href="index.htm" hreflang="x-default"><link data-rh="true" rel="preconnect" href="https://CWRKEEL01M-dsn.algolia.net" crossorigin="anonymous"><script data-rh="true" type="application/ld+json">{"@context":"https://schema.org","@type":"BreadcrumbList","itemListElement":[{"@type":"ListItem","position":1,"name":"Concepts","item":"docs/latestnightly/concepts/"},{"@type":"ListItem","position":2,"name":"Logging","item":"docs/latestnightly/concepts/logging"}]}</script><link rel="search" type="application/opensearchdescription+xml" title="PoseiTrader Documentation" href="../../../opensearch.xml">
<script>!function(){var t=window.location.pathname;if(t.startsWith("/docs")&&!t.startsWith("/docs/latest")&&!t.startsWith("/docs/nightly")){var s=t.replace("/docs","/docs/latest");window.location.href=s}}()</script>
<link rel="preconnect" href="https://www.google-analytics.com">
<link rel="preconnect" href="https://www.googletagmanager.com">
<script async src="https://www.googletagmanager.com/gtag/js?id=G-TR4XK597XK"></script>
<script>function gtag(){dataLayer.push(arguments)}window.dataLayer=window.dataLayer||[],gtag("js",new Date),gtag("config","G-TR4XK597XK",{anonymize_ip:!0})</script><link rel="stylesheet" href="../../../assets/css/styles.0f0f692e.css">
<script src="../../../assets/js/runtime~main.92b727d5.js" defer="defer"></script>
<script src="../../../assets/js/main.1cd42d85.js" defer="defer"></script>
</head>
<body class="navigation-with-keyboard">
<svg xmlns="http://www.w3.org/2000/svg" style="display: none;"><defs>
<symbol id="theme-svg-external-link" viewbox="0 0 24 24"><path fill="currentColor" d="M21 13v10h-21v-19h12v2h-10v15h17v-8h2zm3-12h-10.988l4.035 4-6.977 7.07 2.828 2.828 6.977-7.07 4.125 4.172v-11z"></path></symbol>
</defs></svg>
<script>!function(){var t="dark";var e=function(){try{return new URLSearchParams(window.location.search).get("docusaurus-theme")}catch(t){}}()||function(){try{return window.localStorage.getItem("theme")}catch(t){}}();document.documentElement.setAttribute("data-theme",e||t),document.documentElement.setAttribute("data-theme-choice",e||t)}(),function(){try{const c=new URLSearchParams(window.location.search).entries();for(var[t,e]of c)if(t.startsWith("docusaurus-data-")){var a=t.replace("docusaurus-data-","data-");document.documentElement.setAttribute(a,e)}}catch(t){}}()</script><div id="__docusaurus"><div role="region" aria-label="Skip to main content"><a class="skipToContent_fXgn" href="#__docusaurus_skipToContent_fallback">Skip to main content</a></div><nav aria-label="Main" class="theme-layout-navbar navbar navbar--fixed-top navbarHideable_m1mJ"><div class="navbar__inner"><div class="theme-layout-navbar-left navbar__items"><button aria-label="Toggle navigation bar" aria-expanded="false" class="navbar__toggle clean-btn" type="button"><svg width="30" height="30" viewbox="0 0 30 30" aria-hidden="true"><path stroke="currentColor" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" d="M4 7h22M4 15h22M4 23h22"></path></svg></button><a href="../../../../index.htm" target="_blank" rel="noopener noreferrer" class="navbar__brand"><div class="navbar__logo"><img src="../../../img/nt-black-large.webp" alt="PoseiTrader Logo" class="themedComponent_mlkZ themedComponent--light_NVdE"><img src="../../../img/nt-white-large.webp" alt="PoseiTrader Logo" class="themedComponent_mlkZ themedComponent--dark_xIcU"></div><b class="navbar__title text--truncate"></b></a><div class="navbar__item dropdown dropdown--hoverable"><a href="#" aria-haspopup="true" aria-expanded="false" role="button" class="navbar__link">Version</a><ul class="dropdown__menu"><li><a class="dropdown__link" href="../../../latest/index.html">latest</a></li><li><a aria-current="page" class="dropdown__link dropdown__link--active" href="../../index.htm">nightly</a></li></ul></div><div class="navbarSearchContainer_Bca1"><button type="button" class="DocSearch DocSearch-Button" aria-label="Search (Command+K)"><span class="DocSearch-Button-Container"><svg width="20" height="20" class="DocSearch-Search-Icon" viewbox="0 0 20 20" aria-hidden="true"><path d="M14.386 14.386l4.0877 4.0877-4.0877-4.0877c-2.9418 2.9419-7.7115 2.9419-10.6533 0-2.9419-2.9418-2.9419-7.7115 0-10.6533 2.9418-2.9419 7.7115-2.9419 10.6533 0 2.9419 2.9418 2.9419 7.7115 0 10.6533z" stroke="currentColor" fill="none" fill-rule="evenodd" stroke-linecap="round" stroke-linejoin="round"></path></svg><span class="DocSearch-Button-Placeholder">Search</span></span><span class="DocSearch-Button-Keys"></span></button></div></div><div class="theme-layout-navbar-right navbar__items navbar__items--right"><a href="https://github.com/poseisysstems" target="_blank" rel="noopener noreferrer" class="navbar__item navbar__link header-github-link common-social" aria-label="GitHub repository"></a> <a href="https://twitter.com/PoseiTrader" target="_blank" rel="noopener noreferrer" class="navbar__item navbar__link header-x-link common-social" aria-label="X"></a><div class="toggleContainer_T22x colorModeToggle_DEke"><button class="clean-btn toggleButton_yw5v toggleButtonDisabled_BJd7" type="button" disabled="" title="Switch between dark and light mode (currently light mode)" aria-label="Switch between dark and light mode (currently light mode)" aria-live="polite"><div class="switch_Ms1n"><span class="iconWrapper_FHql"><style data-emotion="css lp52so">.css-lp52so{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;width:1em;height:1em;display:inline-block;fill:currentColor;-webkit-flex-shrink:0;-ms-flex-negative:0;flex-shrink:0;-webkit-transition:fill 200ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;transition:fill 200ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;font-size:1.5rem;color:black;font-size:14px;}</style><svg class="MuiSvgIcon-root MuiSvgIcon-fontSizeMedium lightToggleIcon_SFTY css-lp52so" focusable="false" aria-hidden="true" viewbox="0 0 24 24" data-testid="LightModeIcon"><path d="M12 7c-2.76 0-5 2.24-5 5s2.24 5 5 5 5-2.24 5-5-2.24-5-5-5M2 13h2c.55 0 1-.45 1-1s-.45-1-1-1H2c-.55 0-1 .45-1 1s.45 1 1 1m18 0h2c.55 0 1-.45 1-1s-.45-1-1-1h-2c-.55 0-1 .45-1 1s.45 1 1 1M11 2v2c0 .55.45 1 1 1s1-.45 1-1V2c0-.55-.45-1-1-1s-1 .45-1 1m0 18v2c0 .55.45 1 1 1s1-.45 1-1v-2c0-.55-.45-1-1-1s-1 .45-1 1M5.99 4.58c-.39-.39-1.03-.39-1.41 0-.39.39-.39 1.03 0 1.41l1.06 1.06c.39.39 1.03.39 1.41 0s.39-1.03 0-1.41zm12.37 12.37c-.39-.39-1.03-.39-1.41 0-.39.39-.39 1.03 0 1.41l1.06 1.06c.39.39 1.03.39 1.41 0 .39-.39.39-1.03 0-1.41zm1.06-10.96c.39-.39.39-1.03 0-1.41-.39-.39-1.03-.39-1.41 0l-1.06 1.06c-.39.39-.39 1.03 0 1.41s1.03.39 1.41 0zM7.05 18.36c.39-.39.39-1.03 0-1.41-.39-.39-1.03-.39-1.41 0l-1.06 1.06c-.39.39-.39 1.03 0 1.41s1.03.39 1.41 0z"></path></svg><style data-emotion="css 13m6tje">.css-13m6tje{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;width:1em;height:1em;display:inline-block;fill:currentColor;-webkit-flex-shrink:0;-ms-flex-negative:0;flex-shrink:0;-webkit-transition:fill 200ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;transition:fill 200ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;font-size:1.5rem;color:white;font-size:14px;}</style><svg class="MuiSvgIcon-root MuiSvgIcon-fontSizeMedium darkToggleIcon_ekgs css-13m6tje" focusable="false" aria-hidden="true" viewbox="0 0 24 24" data-testid="DarkModeIcon"><path d="M12 3c-4.97 0-9 4.03-9 9s4.03 9 9 9 9-4.03 9-9c0-.46-.04-.92-.1-1.36-.98 1.37-2.58 2.26-4.4 2.26-2.98 0-5.4-2.42-5.4-5.4 0-1.81.89-3.42 2.26-4.4-.44-.06-.9-.1-1.36-.1"></path></svg></span></div></button></div></div></div><div role="presentation" class="navbar-sidebar__backdrop"></div></nav><div id="__docusaurus_skipToContent_fallback" class="theme-layout-main main-wrapper mainWrapper_z2l0"><div class="docsWrapper_hBAB"><button aria-label="Scroll back to top" class="clean-btn theme-back-to-top-button backToTopButton_sjWU" type="button"></button><div class="docRoot_UBD9"><aside class="theme-doc-sidebar-container docSidebarContainer_YfHR"><div class="sidebarViewport_aRkj"><div class="sidebar_njMd sidebarWithHideableNavbar_wUlq"><a href="../../../../index.htm" target="_blank" rel="noopener noreferrer" tabindex="-1" class="sidebarLogo_isFc"><img src="../../../img/nt-black-large.webp" alt="PoseiTrader Logo" class="themedComponent_mlkZ themedComponent--light_NVdE"><img src="../../../img/nt-white-large.webp" alt="PoseiTrader Logo" class="themedComponent_mlkZ themedComponent--dark_xIcU"><b></b></a><nav aria-label="Docs sidebar" class="menu thin-scrollbar menu_SIkG"><ul class="theme-doc-sidebar-menu menu__list"><li class="theme-doc-sidebar-item-link theme-doc-sidebar-item-link-level-1 menu__list-item"><a class="menu__link" href="../../index.htm">PoseiTrader Documentation</a></li><li class="theme-doc-sidebar-item-category theme-doc-sidebar-item-category-level-1 menu__list-item menu__list-item--collapsed"><div class="menu__list-item-collapsible"><a class="menu__link menu__link--sublist" href="../../getting_started/index.htm">Getting Started</a><button aria-label="Expand sidebar category &#x27;Getting Started&#x27;" aria-expanded="false" type="button" class="clean-btn menu__caret"></button></div></li><li class="theme-doc-sidebar-item-category theme-doc-sidebar-item-category-level-1 menu__list-item"><div class="menu__list-item-collapsible"><a class="menu__link menu__link--sublist menu__link--active" href="../index.htm">Concepts</a><button aria-label="Collapse sidebar category &#x27;Concepts&#x27;" aria-expanded="true" type="button" class="clean-btn menu__caret"></button></div><ul class="menu__list"><li class="theme-doc-sidebar-item-link theme-doc-sidebar-item-link-level-2 menu__list-item"><a class="menu__link" tabindex="0" href="../overview/index.htm">Overview</a></li><li class="theme-doc-sidebar-item-link theme-doc-sidebar-item-link-level-2 menu__list-item"><a class="menu__link" tabindex="0" href="../architecture/index.htm">Architecture</a></li><li class="theme-doc-sidebar-item-link theme-doc-sidebar-item-link-level-2 menu__list-item"><a class="menu__link" tabindex="0" href="../actors/index.htm">Actors</a></li><li class="theme-doc-sidebar-item-link theme-doc-sidebar-item-link-level-2 menu__list-item"><a class="menu__link" tabindex="0" href="../strategies/index.htm">Strategies</a></li><li class="theme-doc-sidebar-item-link theme-doc-sidebar-item-link-level-2 menu__list-item"><a class="menu__link" tabindex="0" href="../instruments/index.htm">Instruments</a></li><li class="theme-doc-sidebar-item-link theme-doc-sidebar-item-link-level-2 menu__list-item"><a class="menu__link" tabindex="0" href="../data/index.htm">Data</a></li><li class="theme-doc-sidebar-item-link theme-doc-sidebar-item-link-level-2 menu__list-item"><a class="menu__link" tabindex="0" href="../execution/index.htm">Execution</a></li><li class="theme-doc-sidebar-item-link theme-doc-sidebar-item-link-level-2 menu__list-item"><a class="menu__link" tabindex="0" href="../orders/index.htm">Orders</a></li><li class="theme-doc-sidebar-item-link theme-doc-sidebar-item-link-level-2 menu__list-item"><a class="menu__link" tabindex="0" href="../cache/index.htm">Cache</a></li><li class="theme-doc-sidebar-item-link theme-doc-sidebar-item-link-level-2 menu__list-item"><a class="menu__link" tabindex="0" href="../message_bus/index.htm">Message Bus</a></li><li class="theme-doc-sidebar-item-link theme-doc-sidebar-item-link-level-2 menu__list-item"><a class="menu__link" tabindex="0" href="../portfolio/index.htm">Portfolio</a></li><li class="theme-doc-sidebar-item-link theme-doc-sidebar-item-link-level-2 menu__list-item"><a class="menu__link menu__link--active" aria-current="page" tabindex="0" href="index.htm">Logging</a></li><li class="theme-doc-sidebar-item-link theme-doc-sidebar-item-link-level-2 menu__list-item"><a class="menu__link" tabindex="0" href="../backtesting/index.htm">Backtesting</a></li><li class="theme-doc-sidebar-item-link theme-doc-sidebar-item-link-level-2 menu__list-item"><a class="menu__link" tabindex="0" href="../live/index.htm">Live Trading</a></li><li class="theme-doc-sidebar-item-link theme-doc-sidebar-item-link-level-2 menu__list-item"><a class="menu__link" tabindex="0" href="../adapters/index.htm">Adapters</a></li></ul></li><li class="theme-doc-sidebar-item-category theme-doc-sidebar-item-category-level-1 menu__list-item menu__list-item--collapsed"><div class="menu__list-item-collapsible"><a class="menu__link menu__link--sublist" href="../../tutorials/index.htm">Tutorials</a><button aria-label="Expand sidebar category &#x27;Tutorials&#x27;" aria-expanded="false" type="button" class="clean-btn menu__caret"></button></div></li><li class="theme-doc-sidebar-item-category theme-doc-sidebar-item-category-level-1 menu__list-item menu__list-item--collapsed"><div class="menu__list-item-collapsible"><a class="menu__link menu__link--sublist" href="../../integrations/index.htm">Integrations</a><button aria-label="Expand sidebar category &#x27;Integrations&#x27;" aria-expanded="false" type="button" class="clean-btn menu__caret"></button></div></li><li class="theme-doc-sidebar-item-category theme-doc-sidebar-item-category-level-1 menu__list-item menu__list-item--collapsed"><div class="menu__list-item-collapsible"><a class="menu__link menu__link--sublist" href="../../api_reference/index.htm">Python API</a><button aria-label="Expand sidebar category &#x27;Python API&#x27;" aria-expanded="false" type="button" class="clean-btn menu__caret"></button></div></li><li class="theme-doc-sidebar-item-link theme-doc-sidebar-item-link-level-1 menu__list-item"><a href="../../../core-nightly/index.html" target="_blank" rel="noopener noreferrer" class="menu__link menuExternalLink_NmtK">Rust API<svg width="13.5" height="13.5" aria-hidden="true" class="iconExternalLink_nPIU"><use href="#theme-svg-external-link"></use></svg></a></li><li class="theme-doc-sidebar-item-category theme-doc-sidebar-item-category-level-1 menu__list-item menu__list-item--collapsed"><div class="menu__list-item-collapsible"><a class="menu__link menu__link--sublist" href="../../developer_guide/index.htm">Developer Guide</a><button aria-label="Expand sidebar category &#x27;Developer Guide&#x27;" aria-expanded="false" type="button" class="clean-btn menu__caret"></button></div></li></ul></nav></div></div></aside><main class="docMainContainer_TBSr"><div class="container padding-top--md padding-bottom--lg"><div><div class="row"><div class="col docItemCol_VOVn"><div class="docItemContainer_Djhp"><article><nav class="theme-doc-breadcrumbs breadcrumbsContainer_Z_bl" aria-label="Breadcrumbs"><ul class="breadcrumbs"><li class="breadcrumbs__item"><a class="breadcrumbs__link" href="../index.htm"><span>Concepts</span></a></li><li class="breadcrumbs__item breadcrumbs__item--active"><span class="breadcrumbs__link">Logging</span></li></ul></nav><span class="theme-doc-version-badge badge badge--secondary">Version: nightly</span><div class="tocCollapsible_ETCw theme-doc-toc-mobile tocMobile_ITEo"><button type="button" class="clean-btn tocCollapsibleButton_TO0P">On this page</button></div><div class="theme-doc-markdown markdown"><header><h1>Logging</h1></header>
<p>The platform provides logging for both backtesting and live trading using a high-performance logging subsystem implemented in Rust
with a standardized facade from the <code>log</code> crate.</p>
<p>The core logger operates in a separate thread and uses a multi-producer single-consumer (MPSC) channel to receive log messages.
This design ensures that the main thread remains performant, avoiding potential bottlenecks caused by log string formatting or file I/O operations.</p>
<p>Logging output is configurable and supports:</p>
<ul>
<li><strong>stdout/stderr writer</strong> for console output</li>
<li><strong>file writer</strong> for persistent storage of logs</li>
</ul>
<div class="theme-admonition theme-admonition-info admonition_xJq3 alert alert--info"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg viewbox="0 0 14 16"><path fill-rule="evenodd" d="M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"></path></svg></span>info</div><div class="admonitionContent_BuS1"><p>Infrastructure such as <a href="https://github.com/vectordotdev/vector" target="_blank" rel="noopener noreferrer">Vector</a> can be integrated to collect and aggregate events within your system.</p></div></div>
<h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="configuration">Configuration<a href="#configuration" class="hash-link" aria-label="Direct link to Configuration" title="Direct link to Configuration">​</a></h2>
<p>Logging can be configured by importing the <code>LoggingConfig</code> object.
By default, log events with an &#x27;INFO&#x27; <code>LogLevel</code> and higher are written to stdout/stderr.</p>
<p>Log level (<code>LogLevel</code>) values include (and generally match Rust&#x27;s <code>tracing</code> level filters).</p>
<p>Python loggers expose the following levels:</p>
<ul>
<li><code>OFF</code></li>
<li><code>DEBUG</code></li>
<li><code>INFO</code></li>
<li><code>WARNING</code></li>
<li><code>ERROR</code></li>
</ul>
<div class="theme-admonition theme-admonition-warning admonition_xJq3 alert alert--warning"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg viewbox="0 0 16 16"><path fill-rule="evenodd" d="M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"></path></svg></span>warning</div><div class="admonitionContent_BuS1"><p>The Python <code>Logger</code> does not provide a <code>trace()</code> method; <code>TRACE</code> level logs are only emitted by the underlying Rust components and cannot be generated directly from Python code.</p><p>See the <code>LoggingConfig</code> <a href="../../api_reference/config/index.htm#class-loggingconfig">API Reference</a> for further details.</p></div></div>
<p>Logging can be configured in the following ways:</p>
<ul>
<li>Minimum <code>LogLevel</code> for stdout/stderr</li>
<li>Minimum <code>LogLevel</code> for log files</li>
<li>Maximum size before rotating a log file</li>
<li>Maximum number of backup log files to maintain when rotating</li>
<li>Automatic log file naming with date or timestamp components, or custom log file name</li>
<li>Directory for writing log files</li>
<li>Plain text or JSON log file formatting</li>
<li>Filtering of individual components by log level</li>
<li>ANSI colors in log lines</li>
<li>Bypass logging entirely</li>
<li>Print Rust config to stdout at initialization</li>
<li>Optionally initialize logging via the PyO3 bridge (<code>use_pyo3</code>) to capture log events emitted by Rust components</li>
<li>Truncate existing log file on startup if it already exists (<code>clear_log_file</code>)</li>
</ul>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="standard-output-logging">Standard output logging<a href="#standard-output-logging" class="hash-link" aria-label="Direct link to Standard output logging" title="Direct link to Standard output logging">​</a></h3>
<p>Log messages are written to the console via stdout/stderr writers. The minimum log level can be configured using the <code>log_level</code> parameter.</p>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="file-logging">File logging<a href="#file-logging" class="hash-link" aria-label="Direct link to File logging" title="Direct link to File logging">​</a></h3>
<p>Log files are written to the current working directory by default. The naming convention and rotation behavior are configurable and follow specific patterns based on your settings.</p>
<p>You can specify a custom log directory using <code>log_directory</code> and/or a custom file basename using <code>log_file_name</code>. Log files are always suffixed with <code>.log</code> (plain text) or <code>.json</code> (JSON).</p>
<p>For detailed information about log file naming conventions and rotation behavior, see the <a href="#log-file-rotation">Log file rotation</a> and <a href="#log-file-naming-convention">Log file naming convention</a> sections below.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="log-file-rotation">Log file rotation<a href="#log-file-rotation" class="hash-link" aria-label="Direct link to Log file rotation" title="Direct link to Log file rotation">​</a></h4>
<p>Rotation behavior depends on both the presence of a size limit and whether a custom file name is provided:</p>
<ul>
<li><strong>Size-based rotation</strong>:
<ul>
<li>Enabled by specifying the <code>log_file_max_size</code> parameter (e.g., <code>100_000_000</code> for 100 MB).</li>
<li>When writing a log entry would make the current file exceed this size, the file is closed and a new one is created.</li>
</ul>
</li>
<li><strong>Date-based rotation (default naming only)</strong>:
<ul>
<li>Applies when no <code>log_file_max_size</code> is specified and no custom <code>log_file_name</code> is provided.</li>
<li>At each UTC date change (midnight), the current log file is closed and a new one is started, creating one file per UTC day.</li>
</ul>
</li>
<li><strong>No rotation</strong>:
<ul>
<li>When a custom <code>log_file_name</code> is provided without a <code>log_file_max_size</code>, logs continue to append to the same file.</li>
</ul>
</li>
<li><strong>Backup file management</strong>:
<ul>
<li>Controlled by the <code>log_file_max_backup_count</code> parameter (default: 5), limiting the total number of rotated files kept.</li>
<li>When this limit is exceeded, the oldest backup files are automatically removed.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="log-file-naming-convention">Log file naming convention<a href="#log-file-naming-convention" class="hash-link" aria-label="Direct link to Log file naming convention" title="Direct link to Log file naming convention">​</a></h4>
<p>The default naming convention ensures log files are uniquely identifiable and timestamped.
The format depends on whether file rotation is enabled:</p>
<p><strong>With file rotation enabled</strong>:</p>
<ul>
<li><strong>Format</strong>: <code>{trader_id}_{%Y-%m-%d_%H%M%S:%3f}_{instance_id}.{log|json}</code></li>
<li><strong>Example</strong>: <code>TESTER-001_2025-04-09_210721:521_d7dc12c8-7008-4042-8ac4-017c3db0fc38.log</code></li>
<li><strong>Components</strong>:
<ul>
<li><code>{trader_id}</code>: The trader identifier (e.g., <code>TESTER-001</code>).</li>
<li><code>{%Y-%m-%d_%H%M%S:%3f}</code>: Full ISO 8601-compliant datetime with millisecond resolution.</li>
<li><code>{instance_id}</code>: A unique instance identifier.</li>
<li><code>{log|json}</code>: File suffix based on format setting.</li>
</ul>
</li>
</ul>
<p><strong>With file rotation disabled</strong>:</p>
<ul>
<li><strong>Format</strong>: <code>{trader_id}_{%Y-%m-%d}_{instance_id}.{log|json}</code></li>
<li><strong>Example</strong>: <code>TESTER-001_2025-04-09_d7dc12c8-7008-4042-8ac4-017c3db0fc38.log</code></li>
<li><strong>Components</strong>:
<ul>
<li><code>{trader_id}</code>: The trader identifier.</li>
<li><code>{%Y-%m-%d}</code>: Date only (YYYY-MM-DD).</li>
<li><code>{instance_id}</code>: A unique instance identifier.</li>
<li><code>{log|json}</code>: File suffix based on format setting.</li>
</ul>
</li>
</ul>
<p><strong>Custom naming</strong>:</p>
<p>If <code>log_file_name</code> is set (e.g., <code>my_custom_log</code>):</p>
<ul>
<li>With rotation disabled: The file will be named exactly as provided (e.g., <code>my_custom_log.log</code>).</li>
<li>With rotation enabled: The file will include the custom name and timestamp (e.g., <code>my_custom_log_2025-04-09_210721:521.log</code>).</li>
</ul>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="component-log-filtering">Component log filtering<a href="#component-log-filtering" class="hash-link" aria-label="Direct link to Component log filtering" title="Direct link to Component log filtering">​</a></h3>
<p>The <code>log_component_levels</code> parameter can be used to set log levels for each component individually.
The input value should be a dictionary of component ID strings to log level strings: <code>dict[str, str]</code>.</p>
<p>Below is an example of a trading node logging configuration that includes some of the options mentioned above:</p>
<div class="language-python codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9CDCFE;--prism-background-color:#1E1E1E"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-python codeBlock_bY9V thin-scrollbar" style="color:#9CDCFE;background-color:#1E1E1E"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9CDCFE"><span class="token keyword" style="color:rgb(86, 156, 214)">from</span><span class="token plain"> posei_trader</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">config </span><span class="token keyword" style="color:rgb(86, 156, 214)">import</span><span class="token plain"> LoggingConfig</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token keyword" style="color:rgb(86, 156, 214)">from</span><span class="token plain"> posei_trader</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">config </span><span class="token keyword" style="color:rgb(86, 156, 214)">import</span><span class="token plain"> TradingNodeConfig</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">config_node </span><span class="token operator" style="color:rgb(212, 212, 212)">=</span><span class="token plain"> TradingNodeConfig</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    trader_id</span><span class="token operator" style="color:rgb(212, 212, 212)">=</span><span class="token string" style="color:rgb(206, 145, 120)">&quot;TESTER-001&quot;</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    logging</span><span class="token operator" style="color:rgb(212, 212, 212)">=</span><span class="token plain">LoggingConfig</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">        log_level</span><span class="token operator" style="color:rgb(212, 212, 212)">=</span><span class="token string" style="color:rgb(206, 145, 120)">&quot;INFO&quot;</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">        log_level_file</span><span class="token operator" style="color:rgb(212, 212, 212)">=</span><span class="token string" style="color:rgb(206, 145, 120)">&quot;DEBUG&quot;</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">        log_file_format</span><span class="token operator" style="color:rgb(212, 212, 212)">=</span><span class="token string" style="color:rgb(206, 145, 120)">&quot;json&quot;</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">        log_component_levels</span><span class="token operator" style="color:rgb(212, 212, 212)">=</span><span class="token punctuation" style="color:rgb(212, 212, 212)">{</span><span class="token plain"> </span><span class="token string" style="color:rgb(206, 145, 120)">&quot;Portfolio&quot;</span><span class="token punctuation" style="color:rgb(212, 212, 212)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(206, 145, 120)">&quot;INFO&quot;</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(212, 212, 212)">}</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain"> </span><span class="token comment" style="color:rgb(106, 153, 85)"># Omitted</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><br></span></code></pre></div></div>
<p>For backtesting, the <code>BacktestEngineConfig</code> class can be used instead of <code>TradingNodeConfig</code>, as the same options are available.</p>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="log-colors">Log Colors<a href="#log-colors" class="hash-link" aria-label="Direct link to Log Colors" title="Direct link to Log Colors">​</a></h3>
<p>ANSI color codes are utilized to enhance the readability of logs when viewed in a terminal.
These color codes can make it easier to distinguish different parts of log messages.
In environments that do not support ANSI color rendering (such as some cloud environments or text editors),
these color codes may not be appropriate as they can appear as raw text.</p>
<p>To accommodate for such scenarios, the <code>LoggingConfig.log_colors</code> option can be set to <code>false</code>.
Disabling <code>log_colors</code> will prevent the addition of ANSI color codes to the log messages, ensuring
compatibility across different environments where color rendering is not supported.</p>
<h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="using-a-logger-directly">Using a Logger directly<a href="#using-a-logger-directly" class="hash-link" aria-label="Direct link to Using a Logger directly" title="Direct link to Using a Logger directly">​</a></h2>
<p>It&#x27;s possible to use <code>Logger</code> objects directly, and these can be initialized anywhere (very similar to the Python built-in <code>logging</code> API).</p>
<p>If you <em><strong>aren&#x27;t</strong></em> using an object which already initializes a <code>PoseiKernel</code> (and logging) such as <code>BacktestEngine</code> or <code>TradingNode</code>,
then you can activate logging in the following way:</p>
<div class="language-python codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9CDCFE;--prism-background-color:#1E1E1E"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-python codeBlock_bY9V thin-scrollbar" style="color:#9CDCFE;background-color:#1E1E1E"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9CDCFE"><span class="token keyword" style="color:rgb(86, 156, 214)">from</span><span class="token plain"> posei_trader</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">common</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">component </span><span class="token keyword" style="color:rgb(86, 156, 214)">import</span><span class="token plain"> init_logging</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token keyword" style="color:rgb(86, 156, 214)">from</span><span class="token plain"> posei_trader</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">common</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">component </span><span class="token keyword" style="color:rgb(86, 156, 214)">import</span><span class="token plain"> Logger</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">log_guard </span><span class="token operator" style="color:rgb(212, 212, 212)">=</span><span class="token plain"> init_logging</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">logger </span><span class="token operator" style="color:rgb(212, 212, 212)">=</span><span class="token plain"> Logger</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token string" style="color:rgb(206, 145, 120)">&quot;MyLogger&quot;</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><br></span></code></pre></div></div>
<div class="theme-admonition theme-admonition-info admonition_xJq3 alert alert--info"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg viewbox="0 0 14 16"><path fill-rule="evenodd" d="M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"></path></svg></span>info</div><div class="admonitionContent_BuS1"><p>See the <code>init_logging</code> <a href="../../api_reference/common/index.htm">API Reference</a> for further details.</p></div></div>
<div class="theme-admonition theme-admonition-warning admonition_xJq3 alert alert--warning"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg viewbox="0 0 16 16"><path fill-rule="evenodd" d="M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"></path></svg></span>warning</div><div class="admonitionContent_BuS1"><p>Only one logging subsystem can be initialized per process with an <code>init_logging</code> call, and the <code>LogGuard</code> which is returned must be kept alive for the lifetime of the program.</p></div></div>
<h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="logguard-managing-log-lifecycle">LogGuard: Managing log lifecycle<a href="#logguard-managing-log-lifecycle" class="hash-link" aria-label="Direct link to LogGuard: Managing log lifecycle" title="Direct link to LogGuard: Managing log lifecycle">​</a></h2>
<p>The <code>LogGuard</code> ensures that the logging subsystem remains active and operational throughout the lifecycle of a process.
It prevents premature shutdown of the logging subsystem when running multiple engines in the same process.</p>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="why-use-logguard">Why use LogGuard?<a href="#why-use-logguard" class="hash-link" aria-label="Direct link to Why use LogGuard?" title="Direct link to Why use LogGuard?">​</a></h3>
<p>Without a <code>LogGuard</code>, any attempt to run sequential engines in the same process may result in errors such as:</p>
<div class="language-text codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9CDCFE;--prism-background-color:#1E1E1E"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#9CDCFE;background-color:#1E1E1E"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9CDCFE"><span class="token plain">Error sending log event: [INFO] ...</span><br></span></code></pre></div></div>
<p>This occurs because the logging subsystem&#x27;s underlying channel and Rust <code>Logger</code> are closed when the first engine is disposed.
As a result, subsequent engines lose access to the logging subsystem, leading to these errors.</p>
<p>By leveraging a <code>LogGuard</code>, you can ensure robust logging behavior across multiple backtests or engine runs in the same process.
The <code>LogGuard</code> retains the resources of the logging subsystem and ensures that logs continue to function correctly,
even as engines are disposed and initialized.</p>
<div class="theme-admonition theme-admonition-note admonition_xJq3 alert alert--secondary"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg viewbox="0 0 14 16"><path fill-rule="evenodd" d="M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"></path></svg></span>note</div><div class="admonitionContent_BuS1"><p>Using <code>LogGuard</code> is critical to maintain consistent logging behavior throughout a process with multiple engines.</p></div></div>
<h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="running-multiple-engines">Running multiple engines<a href="#running-multiple-engines" class="hash-link" aria-label="Direct link to Running multiple engines" title="Direct link to Running multiple engines">​</a></h2>
<p>The following example demonstrates how to use a <code>LogGuard</code> when running multiple engines sequentially in the same process:</p>
<div class="language-python codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9CDCFE;--prism-background-color:#1E1E1E"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-python codeBlock_bY9V thin-scrollbar" style="color:#9CDCFE;background-color:#1E1E1E"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9CDCFE"><span class="token plain">log_guard </span><span class="token operator" style="color:rgb(212, 212, 212)">=</span><span class="token plain"> </span><span class="token boolean">None</span><span class="token plain">  </span><span class="token comment" style="color:rgb(106, 153, 85)"># Initialize LogGuard reference</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token keyword" style="color:rgb(86, 156, 214)">for</span><span class="token plain"> i </span><span class="token keyword" style="color:rgb(86, 156, 214)">in</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(86, 156, 214)">range</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token plain">number_of_backtests</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token punctuation" style="color:rgb(212, 212, 212)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    engine </span><span class="token operator" style="color:rgb(212, 212, 212)">=</span><span class="token plain"> setup_engine</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token comment" style="color:rgb(106, 153, 85)"># Assign reference to LogGuard</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token keyword" style="color:rgb(86, 156, 214)">if</span><span class="token plain"> log_guard </span><span class="token keyword" style="color:rgb(86, 156, 214)">is</span><span class="token plain"> </span><span class="token boolean">None</span><span class="token punctuation" style="color:rgb(212, 212, 212)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">        log_guard </span><span class="token operator" style="color:rgb(212, 212, 212)">=</span><span class="token plain"> engine</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">get_log_guard</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token comment" style="color:rgb(106, 153, 85)"># Add actors and execute the engine</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    actors </span><span class="token operator" style="color:rgb(212, 212, 212)">=</span><span class="token plain"> setup_actors</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    engine</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">add_actors</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token plain">actors</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    engine</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">run</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    engine</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">dispose</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token plain">  </span><span class="token comment" style="color:rgb(106, 153, 85)"># Dispose safely</span><br></span></code></pre></div></div>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="steps">Steps<a href="#steps" class="hash-link" aria-label="Direct link to Steps" title="Direct link to Steps">​</a></h3>
<ul>
<li><strong>Initialize LogGuard once</strong>: The <code>LogGuard</code> is obtained from the first engine (<code>engine.get_log_guard()</code>) and is retained throughout the process. This ensures that the logging subsystem remains active.</li>
<li><strong>Dispose engines safely</strong>: Each engine is safely disposed of after its backtest completes, without affecting the logging subsystem.</li>
<li><strong>Reuse LogGuard</strong>: The same <code>LogGuard</code> instance is reused for subsequent engines, preventing the logging subsystem from shutting down prematurely.</li>
</ul>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="considerations">Considerations<a href="#considerations" class="hash-link" aria-label="Direct link to Considerations" title="Direct link to Considerations">​</a></h3>
<ul>
<li><strong>Single LogGuard per process</strong>: Only one <code>LogGuard</code> can be used per process.</li>
<li><strong>Thread safety</strong>: The logging subsystem, including <code>LogGuard</code>, is thread-safe, ensuring consistent behavior even in multi-threaded environments.</li>
<li><strong>Flush logs on termination</strong>: Always ensure that logs are properly flushed when the process terminates. The <code>LogGuard</code> automatically handles this as it goes out of scope.</li>
</ul></div></article><nav class="docusaurus-mt-lg pagination-nav" aria-label="Docs pages"><a class="pagination-nav__link pagination-nav__link--prev" href="../portfolio/index.htm"><div class="pagination-nav__sublabel">Previous</div><div class="pagination-nav__label">Portfolio</div></a><a class="pagination-nav__link pagination-nav__link--next" href="../backtesting/index.htm"><div class="pagination-nav__sublabel">Next</div><div class="pagination-nav__label">Backtesting</div></a></nav></div></div><div class="col col--3"><div class="tableOfContents_bqdL thin-scrollbar theme-doc-toc-desktop"><ul class="table-of-contents table-of-contents__left-border"><li><a href="#configuration" class="table-of-contents__link toc-highlight">Configuration</a><ul><li><a href="#standard-output-logging" class="table-of-contents__link toc-highlight">Standard output logging</a></li><li><a href="#file-logging" class="table-of-contents__link toc-highlight">File logging</a></li><li><a href="#component-log-filtering" class="table-of-contents__link toc-highlight">Component log filtering</a></li><li><a href="#log-colors" class="table-of-contents__link toc-highlight">Log Colors</a></li></ul></li><li><a href="#using-a-logger-directly" class="table-of-contents__link toc-highlight">Using a Logger directly</a></li><li><a href="#logguard-managing-log-lifecycle" class="table-of-contents__link toc-highlight">LogGuard: Managing log lifecycle</a><ul><li><a href="#why-use-logguard" class="table-of-contents__link toc-highlight">Why use LogGuard?</a></li></ul></li><li><a href="#running-multiple-engines" class="table-of-contents__link toc-highlight">Running multiple engines</a><ul><li><a href="#steps" class="table-of-contents__link toc-highlight">Steps</a></li><li><a href="#considerations" class="table-of-contents__link toc-highlight">Considerations</a></li></ul></li></ul></div></div></div><div class="footer-wrapper MuiBox-root css-0"><div class="social-footer-box MuiBox-root css-0"><style data-emotion="css 17rjyz3">.css-17rjyz3{-webkit-text-decoration:underline;text-decoration:underline;text-decoration-color:rgba(25, 118, 210, 0.4);padding:12px;margin-right:10px;}.css-17rjyz3:hover{text-decoration-color:inherit;}</style><style data-emotion="css jl1bw5">.css-jl1bw5{margin:0;font:inherit;color:#1976d2;-webkit-text-decoration:underline;text-decoration:underline;text-decoration-color:rgba(25, 118, 210, 0.4);padding:12px;margin-right:10px;}.css-jl1bw5:hover{text-decoration-color:inherit;}</style><a class="MuiTypography-root MuiTypography-inherit MuiLink-root MuiLink-underlineAlways github-footer css-jl1bw5" href="https://github.com/poseisysstems" target="_blank"></a><a class="MuiTypography-root MuiTypography-inherit MuiLink-root MuiLink-underlineAlways discord-footer css-jl1bw5" href="" target="_blank"></a><a class="MuiTypography-root MuiTypography-inherit MuiLink-root MuiLink-underlineAlways linkedin-footer css-jl1bw5" href="https://www.linkedin.com/company/poseitrader/" target="_blank"></a><a class="MuiTypography-root MuiTypography-inherit MuiLink-root MuiLink-underlineAlways x-footer css-jl1bw5" href="https://twitter.com/PoseiTrader" target="_blank"></a></div><div class="footer-copyright">© 2025 Posei Systems Pty Ltd. All rights reserved.</div></div></div></div></main></div></div></div></div>
</body>
</html>