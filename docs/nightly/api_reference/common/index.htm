<!doctype html>
<html lang="en" dir="ltr" class="docs-wrapper plugin-docs plugin-id-default docs-version-nightly docs-doc-page docs-doc-id-api_reference/common" data-has-hydrated="false">
<head>
<meta charset="UTF-8">
<meta name="generator" content="Docusaurus v3.8.1">
<title data-rh="true">Common | PoseiTrader Documentation</title><meta data-rh="true" name="viewport" content="width=device-width,initial-scale=1"><meta data-rh="true" name="twitter:card" content="summary_large_image"><meta data-rh="true" property="og:image" content="docs/latestimg/docusaurus-social-card.jpg"><meta data-rh="true" name="twitter:image" content="docs/latestimg/docusaurus-social-card.jpg"><meta data-rh="true" property="og:url" content="docs/latestnightly/api_reference/common"><meta data-rh="true" property="og:locale" content="en"><meta data-rh="true" name="docusaurus_locale" content="en"><meta data-rh="true" name="docsearch:language" content="en"><meta data-rh="true" name="keywords" content="Open-source trading platform, Algorithmic trading software, Event-driven backtesting, Live trading with no code changes, Trade any asset class, Low-latency trading execution, Python API for trading strategies, Custom market data integration, Futures and options trading, Crypto spot and derivatives trading, Equities trading simulation, FX spot trading, Sports betting markets trading, Fast backtesting strategies, Advanced trading orders, Rust-based trading platform, High-performance trading system, Nanosecond resolution market simulation, Trading across multiple venues, Trading platform for hedge funds, Seamless data integration, Customizable trading strategies, AI and ML trading strategies, Posei trading platform, Multi-venue trading, Unlimited backtesting strategies, Fast trading execution solutions, Realistic market simulations, Seamless trading API integration, PoseiTrader Documentation, Docs, PoseiTrader Docs"><meta data-rh="true" name="title" content="PoseiTrader Documentation"><meta data-rh="true" name="og:title" content="PoseiTrader Documentation"><meta data-rh="true" name="og:description" content="PoseiTrader is a high-performance platform for automating trading strategies, built on the powerful Posei framework for backtesting and real-time trading."><meta data-rh="true" name="og:image" content="img/preview.png"><meta data-rh="true" name="og:url" content="/docs/latest"><meta data-rh="true" name="docusaurus_version" content="nightly"><meta data-rh="true" name="docusaurus_tag" content="docs-default-nightly"><meta data-rh="true" name="docsearch:version" content="nightly"><meta data-rh="true" name="docsearch:docusaurus_tag" content="docs-default-nightly"><meta data-rh="true" property="og:title" content="Common | PoseiTrader Documentation"><meta data-rh="true" name="description" content="The common subpackage provides generic/common parts for assembling the frameworks"><meta data-rh="true" property="og:description" content="The common subpackage provides generic/common parts for assembling the frameworks"><link data-rh="true" rel="icon" href="../../../img/shell.ico"><link data-rh="true" rel="canonical" href="index.htm"><link data-rh="true" rel="alternate" href="index.htm" hreflang="en"><link data-rh="true" rel="alternate" href="index.htm" hreflang="x-default"><link data-rh="true" rel="preconnect" href="https://CWRKEEL01M-dsn.algolia.net" crossorigin="anonymous"><script data-rh="true" type="application/ld+json">{"@context":"https://schema.org","@type":"BreadcrumbList","itemListElement":[{"@type":"ListItem","position":1,"name":"Python API","item":"docs/latestnightly/api_reference/"},{"@type":"ListItem","position":2,"name":"Common","item":"docs/latestnightly/api_reference/common"}]}</script><link rel="search" type="application/opensearchdescription+xml" title="PoseiTrader Documentation" href="../../../opensearch.xml">
<script>!function(){var t=window.location.pathname;if(t.startsWith("/docs")&&!t.startsWith("/docs/latest")&&!t.startsWith("/docs/nightly")){var s=t.replace("/docs","/docs/latest");window.location.href=s}}()</script>
<link rel="preconnect" href="https://www.google-analytics.com">
<link rel="preconnect" href="https://www.googletagmanager.com">
<script async src="https://www.googletagmanager.com/gtag/js?id=G-TR4XK597XK"></script>
<script>function gtag(){dataLayer.push(arguments)}window.dataLayer=window.dataLayer||[],gtag("js",new Date),gtag("config","G-TR4XK597XK",{anonymize_ip:!0})</script><link rel="stylesheet" href="../../../assets/css/styles.0f0f692e.css">
<script src="../../../assets/js/runtime~main.92b727d5.js" defer="defer"></script>
<script src="../../../assets/js/main.1cd42d85.js" defer="defer"></script>
</head>
<body class="navigation-with-keyboard">
<svg xmlns="http://www.w3.org/2000/svg" style="display: none;"><defs>
<symbol id="theme-svg-external-link" viewbox="0 0 24 24"><path fill="currentColor" d="M21 13v10h-21v-19h12v2h-10v15h17v-8h2zm3-12h-10.988l4.035 4-6.977 7.07 2.828 2.828 6.977-7.07 4.125 4.172v-11z"></path></symbol>
</defs></svg>
<script>!function(){var t="dark";var e=function(){try{return new URLSearchParams(window.location.search).get("docusaurus-theme")}catch(t){}}()||function(){try{return window.localStorage.getItem("theme")}catch(t){}}();document.documentElement.setAttribute("data-theme",e||t),document.documentElement.setAttribute("data-theme-choice",e||t)}(),function(){try{const c=new URLSearchParams(window.location.search).entries();for(var[t,e]of c)if(t.startsWith("docusaurus-data-")){var a=t.replace("docusaurus-data-","data-");document.documentElement.setAttribute(a,e)}}catch(t){}}()</script><div id="__docusaurus"><div role="region" aria-label="Skip to main content"><a class="skipToContent_fXgn" href="#__docusaurus_skipToContent_fallback">Skip to main content</a></div><nav aria-label="Main" class="theme-layout-navbar navbar navbar--fixed-top navbarHideable_m1mJ"><div class="navbar__inner"><div class="theme-layout-navbar-left navbar__items"><button aria-label="Toggle navigation bar" aria-expanded="false" class="navbar__toggle clean-btn" type="button"><svg width="30" height="30" viewbox="0 0 30 30" aria-hidden="true"><path stroke="currentColor" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" d="M4 7h22M4 15h22M4 23h22"></path></svg></button><a href="../../../../index.htm" target="_blank" rel="noopener noreferrer" class="navbar__brand"><div class="navbar__logo"><img src="../../../img/nt-black-large.webp" alt="PoseiTrader Logo" class="themedComponent_mlkZ themedComponent--light_NVdE"><img src="../../../img/nt-white-large.webp" alt="PoseiTrader Logo" class="themedComponent_mlkZ themedComponent--dark_xIcU"></div><b class="navbar__title text--truncate"></b></a><div class="navbar__item dropdown dropdown--hoverable"><a href="#" aria-haspopup="true" aria-expanded="false" role="button" class="navbar__link">Version</a><ul class="dropdown__menu"><li><a class="dropdown__link" href="../../../latest/index.html">latest</a></li><li><a aria-current="page" class="dropdown__link dropdown__link--active" href="../../index.htm">nightly</a></li></ul></div><div class="navbarSearchContainer_Bca1"><button type="button" class="DocSearch DocSearch-Button" aria-label="Search (Command+K)"><span class="DocSearch-Button-Container"><svg width="20" height="20" class="DocSearch-Search-Icon" viewbox="0 0 20 20" aria-hidden="true"><path d="M14.386 14.386l4.0877 4.0877-4.0877-4.0877c-2.9418 2.9419-7.7115 2.9419-10.6533 0-2.9419-2.9418-2.9419-7.7115 0-10.6533 2.9418-2.9419 7.7115-2.9419 10.6533 0 2.9419 2.9418 2.9419 7.7115 0 10.6533z" stroke="currentColor" fill="none" fill-rule="evenodd" stroke-linecap="round" stroke-linejoin="round"></path></svg><span class="DocSearch-Button-Placeholder">Search</span></span><span class="DocSearch-Button-Keys"></span></button></div></div><div class="theme-layout-navbar-right navbar__items navbar__items--right"><a href="https://github.com/poseisysstems" target="_blank" rel="noopener noreferrer" class="navbar__item navbar__link header-github-link common-social" aria-label="GitHub repository"></a> <a href="https://twitter.com/PoseiTrader" target="_blank" rel="noopener noreferrer" class="navbar__item navbar__link header-x-link common-social" aria-label="X"></a><div class="toggleContainer_T22x colorModeToggle_DEke"><button class="clean-btn toggleButton_yw5v toggleButtonDisabled_BJd7" type="button" disabled="" title="Switch between dark and light mode (currently light mode)" aria-label="Switch between dark and light mode (currently light mode)" aria-live="polite"><div class="switch_Ms1n"><span class="iconWrapper_FHql"><style data-emotion="css lp52so">.css-lp52so{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;width:1em;height:1em;display:inline-block;fill:currentColor;-webkit-flex-shrink:0;-ms-flex-negative:0;flex-shrink:0;-webkit-transition:fill 200ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;transition:fill 200ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;font-size:1.5rem;color:black;font-size:14px;}</style><svg class="MuiSvgIcon-root MuiSvgIcon-fontSizeMedium lightToggleIcon_SFTY css-lp52so" focusable="false" aria-hidden="true" viewbox="0 0 24 24" data-testid="LightModeIcon"><path d="M12 7c-2.76 0-5 2.24-5 5s2.24 5 5 5 5-2.24 5-5-2.24-5-5-5M2 13h2c.55 0 1-.45 1-1s-.45-1-1-1H2c-.55 0-1 .45-1 1s.45 1 1 1m18 0h2c.55 0 1-.45 1-1s-.45-1-1-1h-2c-.55 0-1 .45-1 1s.45 1 1 1M11 2v2c0 .55.45 1 1 1s1-.45 1-1V2c0-.55-.45-1-1-1s-1 .45-1 1m0 18v2c0 .55.45 1 1 1s1-.45 1-1v-2c0-.55-.45-1-1-1s-1 .45-1 1M5.99 4.58c-.39-.39-1.03-.39-1.41 0-.39.39-.39 1.03 0 1.41l1.06 1.06c.39.39 1.03.39 1.41 0s.39-1.03 0-1.41zm12.37 12.37c-.39-.39-1.03-.39-1.41 0-.39.39-.39 1.03 0 1.41l1.06 1.06c.39.39 1.03.39 1.41 0 .39-.39.39-1.03 0-1.41zm1.06-10.96c.39-.39.39-1.03 0-1.41-.39-.39-1.03-.39-1.41 0l-1.06 1.06c-.39.39-.39 1.03 0 1.41s1.03.39 1.41 0zM7.05 18.36c.39-.39.39-1.03 0-1.41-.39-.39-1.03-.39-1.41 0l-1.06 1.06c-.39.39-.39 1.03 0 1.41s1.03.39 1.41 0z"></path></svg><style data-emotion="css 13m6tje">.css-13m6tje{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;width:1em;height:1em;display:inline-block;fill:currentColor;-webkit-flex-shrink:0;-ms-flex-negative:0;flex-shrink:0;-webkit-transition:fill 200ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;transition:fill 200ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;font-size:1.5rem;color:white;font-size:14px;}</style><svg class="MuiSvgIcon-root MuiSvgIcon-fontSizeMedium darkToggleIcon_ekgs css-13m6tje" focusable="false" aria-hidden="true" viewbox="0 0 24 24" data-testid="DarkModeIcon"><path d="M12 3c-4.97 0-9 4.03-9 9s4.03 9 9 9 9-4.03 9-9c0-.46-.04-.92-.1-1.36-.98 1.37-2.58 2.26-4.4 2.26-2.98 0-5.4-2.42-5.4-5.4 0-1.81.89-3.42 2.26-4.4-.44-.06-.9-.1-1.36-.1"></path></svg></span></div></button></div></div></div><div role="presentation" class="navbar-sidebar__backdrop"></div></nav><div id="__docusaurus_skipToContent_fallback" class="theme-layout-main main-wrapper mainWrapper_z2l0"><div class="docsWrapper_hBAB"><button aria-label="Scroll back to top" class="clean-btn theme-back-to-top-button backToTopButton_sjWU" type="button"></button><div class="docRoot_UBD9"><aside class="theme-doc-sidebar-container docSidebarContainer_YfHR"><div class="sidebarViewport_aRkj"><div class="sidebar_njMd sidebarWithHideableNavbar_wUlq"><a href="../../../../index.htm" target="_blank" rel="noopener noreferrer" tabindex="-1" class="sidebarLogo_isFc"><img src="../../../img/nt-black-large.webp" alt="PoseiTrader Logo" class="themedComponent_mlkZ themedComponent--light_NVdE"><img src="../../../img/nt-white-large.webp" alt="PoseiTrader Logo" class="themedComponent_mlkZ themedComponent--dark_xIcU"><b></b></a><nav aria-label="Docs sidebar" class="menu thin-scrollbar menu_SIkG"><ul class="theme-doc-sidebar-menu menu__list"><li class="theme-doc-sidebar-item-link theme-doc-sidebar-item-link-level-1 menu__list-item"><a class="menu__link" href="../../index.htm">PoseiTrader Documentation</a></li><li class="theme-doc-sidebar-item-category theme-doc-sidebar-item-category-level-1 menu__list-item menu__list-item--collapsed"><div class="menu__list-item-collapsible"><a class="menu__link menu__link--sublist" href="../../getting_started/index.htm">Getting Started</a><button aria-label="Expand sidebar category &#x27;Getting Started&#x27;" aria-expanded="false" type="button" class="clean-btn menu__caret"></button></div></li><li class="theme-doc-sidebar-item-category theme-doc-sidebar-item-category-level-1 menu__list-item menu__list-item--collapsed"><div class="menu__list-item-collapsible"><a class="menu__link menu__link--sublist" href="../../concepts/index.htm">Concepts</a><button aria-label="Expand sidebar category &#x27;Concepts&#x27;" aria-expanded="false" type="button" class="clean-btn menu__caret"></button></div></li><li class="theme-doc-sidebar-item-category theme-doc-sidebar-item-category-level-1 menu__list-item menu__list-item--collapsed"><div class="menu__list-item-collapsible"><a class="menu__link menu__link--sublist" href="../../tutorials/index.htm">Tutorials</a><button aria-label="Expand sidebar category &#x27;Tutorials&#x27;" aria-expanded="false" type="button" class="clean-btn menu__caret"></button></div></li><li class="theme-doc-sidebar-item-category theme-doc-sidebar-item-category-level-1 menu__list-item menu__list-item--collapsed"><div class="menu__list-item-collapsible"><a class="menu__link menu__link--sublist" href="../../integrations/index.htm">Integrations</a><button aria-label="Expand sidebar category &#x27;Integrations&#x27;" aria-expanded="false" type="button" class="clean-btn menu__caret"></button></div></li><li class="theme-doc-sidebar-item-category theme-doc-sidebar-item-category-level-1 menu__list-item"><div class="menu__list-item-collapsible"><a class="menu__link menu__link--sublist menu__link--active" href="../index.htm">Python API</a><button aria-label="Collapse sidebar category &#x27;Python API&#x27;" aria-expanded="true" type="button" class="clean-btn menu__caret"></button></div><ul class="menu__list"><li class="theme-doc-sidebar-item-link theme-doc-sidebar-item-link-level-2 menu__list-item"><a class="menu__link" tabindex="0" href="../accounting/index.htm">Accounting</a></li><li class="theme-doc-sidebar-item-category theme-doc-sidebar-item-category-level-2 menu__list-item menu__list-item--collapsed"><div class="menu__list-item-collapsible"><a class="menu__link menu__link--sublist" tabindex="0" href="../adapters/index.htm">Adapters</a><button aria-label="Expand sidebar category &#x27;Adapters&#x27;" aria-expanded="false" type="button" class="clean-btn menu__caret"></button></div></li><li class="theme-doc-sidebar-item-link theme-doc-sidebar-item-link-level-2 menu__list-item"><a class="menu__link" tabindex="0" href="../analysis/index.htm">Analysis</a></li><li class="theme-doc-sidebar-item-link theme-doc-sidebar-item-link-level-2 menu__list-item"><a class="menu__link" tabindex="0" href="../backtest/index.htm">Backtest</a></li><li class="theme-doc-sidebar-item-link theme-doc-sidebar-item-link-level-2 menu__list-item"><a class="menu__link" tabindex="0" href="../cache/index.htm">Cache</a></li><li class="theme-doc-sidebar-item-link theme-doc-sidebar-item-link-level-2 menu__list-item"><a class="menu__link menu__link--active" aria-current="page" tabindex="0" href="index.htm">Common</a></li><li class="theme-doc-sidebar-item-link theme-doc-sidebar-item-link-level-2 menu__list-item"><a class="menu__link" tabindex="0" href="../config/index.htm">Config</a></li><li class="theme-doc-sidebar-item-link theme-doc-sidebar-item-link-level-2 menu__list-item"><a class="menu__link" tabindex="0" href="../core/index.htm">Core</a></li><li class="theme-doc-sidebar-item-link theme-doc-sidebar-item-link-level-2 menu__list-item"><a class="menu__link" tabindex="0" href="../data/index.htm">Data</a></li><li class="theme-doc-sidebar-item-link theme-doc-sidebar-item-link-level-2 menu__list-item"><a class="menu__link" tabindex="0" href="../execution/index.htm">Execution</a></li><li class="theme-doc-sidebar-item-link theme-doc-sidebar-item-link-level-2 menu__list-item"><a class="menu__link" tabindex="0" href="../indicators/index.htm">Indicators</a></li><li class="theme-doc-sidebar-item-link theme-doc-sidebar-item-link-level-2 menu__list-item"><a class="menu__link" tabindex="0" href="../live/index.htm">Live</a></li><li class="theme-doc-sidebar-item-category theme-doc-sidebar-item-category-level-2 menu__list-item menu__list-item--collapsed"><div class="menu__list-item-collapsible"><a class="menu__link menu__link--sublist" tabindex="0" href="../model/index.htm">Model</a><button aria-label="Expand sidebar category &#x27;Model&#x27;" aria-expanded="false" type="button" class="clean-btn menu__caret"></button></div></li><li class="theme-doc-sidebar-item-link theme-doc-sidebar-item-link-level-2 menu__list-item"><a class="menu__link" tabindex="0" href="../persistence/index.htm">Persistence</a></li><li class="theme-doc-sidebar-item-link theme-doc-sidebar-item-link-level-2 menu__list-item"><a class="menu__link" tabindex="0" href="../portfolio/index.htm">Portfolio</a></li><li class="theme-doc-sidebar-item-link theme-doc-sidebar-item-link-level-2 menu__list-item"><a class="menu__link" tabindex="0" href="../risk/index.htm">Risk</a></li><li class="theme-doc-sidebar-item-link theme-doc-sidebar-item-link-level-2 menu__list-item"><a class="menu__link" tabindex="0" href="../serialization/index.htm">Serialization</a></li><li class="theme-doc-sidebar-item-link theme-doc-sidebar-item-link-level-2 menu__list-item"><a class="menu__link" tabindex="0" href="../system/index.htm">System</a></li><li class="theme-doc-sidebar-item-link theme-doc-sidebar-item-link-level-2 menu__list-item"><a class="menu__link" tabindex="0" href="../trading/index.htm">Trading</a></li></ul></li><li class="theme-doc-sidebar-item-link theme-doc-sidebar-item-link-level-1 menu__list-item"><a href="../../../core-nightly/index.html" target="_blank" rel="noopener noreferrer" class="menu__link menuExternalLink_NmtK">Rust API<svg width="13.5" height="13.5" aria-hidden="true" class="iconExternalLink_nPIU"><use href="#theme-svg-external-link"></use></svg></a></li><li class="theme-doc-sidebar-item-category theme-doc-sidebar-item-category-level-1 menu__list-item menu__list-item--collapsed"><div class="menu__list-item-collapsible"><a class="menu__link menu__link--sublist" href="../../developer_guide/index.htm">Developer Guide</a><button aria-label="Expand sidebar category &#x27;Developer Guide&#x27;" aria-expanded="false" type="button" class="clean-btn menu__caret"></button></div></li></ul></nav></div></div></aside><main class="docMainContainer_TBSr"><div class="container padding-top--md padding-bottom--lg"><div><div class="row"><div class="col docItemCol_VOVn"><div class="docItemContainer_Djhp"><article><nav class="theme-doc-breadcrumbs breadcrumbsContainer_Z_bl" aria-label="Breadcrumbs"><ul class="breadcrumbs"><li class="breadcrumbs__item"><a class="breadcrumbs__link" href="../index.htm"><span>Python API</span></a></li><li class="breadcrumbs__item breadcrumbs__item--active"><span class="breadcrumbs__link">Common</span></li></ul></nav><span class="theme-doc-version-badge badge badge--secondary">Version: nightly</span><div class="tocCollapsible_ETCw theme-doc-toc-mobile tocMobile_ITEo"><button type="button" class="clean-btn tocCollapsibleButton_TO0P">On this page</button></div><div class="theme-doc-markdown markdown"><header><h1>Common</h1></header>
<p>The common subpackage provides generic/common parts for assembling the frameworks
various components.</p>
<p>More domain specific concepts are introduced above the core base layer. The
ID cache is implemented, a base Clock with Test and Live
implementations which can control many Timer instances.</p>
<p>Trading domain specific components for generating Order and Identifier objects,
common logging components, a high performance Queue and UUID4 factory.</p>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="class-environment"><em>class</em> Environment<a href="#class-environment" class="hash-link" aria-label="Direct link to class-environment" title="Direct link to class-environment">​</a></h3>
<p>Bases: <code>Enum</code></p>
<p>Represents the environment context for a Posei system.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="backtest--backtest">BACKTEST <em>= &#x27;backtest&#x27;</em><a href="#backtest--backtest" class="hash-link" aria-label="Direct link to backtest--backtest" title="Direct link to backtest--backtest">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="sandbox--sandbox">SANDBOX <em>= &#x27;sandbox&#x27;</em><a href="#sandbox--sandbox" class="hash-link" aria-label="Direct link to sandbox--sandbox" title="Direct link to sandbox--sandbox">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="live--live">LIVE <em>= &#x27;live&#x27;</em><a href="#live--live" class="hash-link" aria-label="Direct link to live--live" title="Direct link to live--live">​</a></h4>
<p><a id="module-posei_trader.common.actor"></a></p>
<p>The Actor class allows traders to implement their own customized components.</p>
<p>A user can inherit from Actor and optionally override any of the
“on” named event handler methods. The class is not entirely initialized in a stand-alone
way, the intended usage is to pass actors to a Trader so that they can be
fully “wired” into the platform. Exceptions will be raised if an Actor
attempts to operate without a managing Trader instance.</p>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="class-actor"><em>class</em> Actor<a href="#class-actor" class="hash-link" aria-label="Direct link to class-actor" title="Direct link to class-actor">​</a></h3>
<p>Bases: <a href="#posei_trader.common.component.Component"><code>Component</code></a></p>
<p>Actor(config: ActorConfig | None = None) -&gt; None</p>
<p>The base class for all actor components.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>config</strong> (<a href="../config/index.htm#posei_trader.common.config.ActorConfig"><em>ActorConfig</em></a> <em>,</em> <em>optional</em>) – The actor configuration.</li>
<li><strong>Raises:</strong>
<strong>TypeError</strong> – If config is not of type ActorConfig.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning">WARNING<a href="#warning" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<ul>
<li>This class should not be used directly, but through a concrete subclass.</li>
<li>Do not call components such as clock and logger in the __init__ prior to registration.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="active_task_idsself--list">active_task_ids(self) → list<a href="#active_task_idsself--list" class="hash-link" aria-label="Direct link to active_task_ids(self) → list" title="Direct link to active_task_ids(self) → list">​</a></h4>
<p>Return the active task identifiers.</p>
<ul>
<li><strong>Return type:</strong>
list[<a href="#posei_trader.common.executor.TaskId">TaskId</a>]</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="add_syntheticself-syntheticinstrument-synthetic--void">add_synthetic(self, SyntheticInstrument synthetic) → void<a href="#add_syntheticself-syntheticinstrument-synthetic--void" class="hash-link" aria-label="Direct link to add_synthetic(self, SyntheticInstrument synthetic) → void" title="Direct link to add_synthetic(self, SyntheticInstrument synthetic) → void">​</a></h4>
<p>Add the created synthetic instrument to the cache.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>synthetic</strong> (<a href="../model/instruments/index.htm#posei_trader.model.instruments.SyntheticInstrument"><em>SyntheticInstrument</em></a>) – The synthetic instrument to add to the cache.</li>
<li><strong>Raises:</strong>
<strong>KeyError</strong> – If synthetic is already in the cache.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="cache">cache<a href="#cache" class="hash-link" aria-label="Direct link to cache" title="Direct link to cache">​</a></h4>
<p>The read-only cache for the actor.</p>
<ul>
<li><strong>Returns:</strong>
CacheFacade</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="cancel_all_tasksself--void">cancel_all_tasks(self) → void<a href="#cancel_all_tasksself--void" class="hash-link" aria-label="Direct link to cancel_all_tasks(self) → void" title="Direct link to cancel_all_tasks(self) → void">​</a></h4>
<p>Cancel all queued and active tasks.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="cancel_taskself-task_id-taskid--void">cancel_task(self, task_id: <a href="#posei_trader.common.executor.TaskId">TaskId</a>) → void<a href="#cancel_taskself-task_id-taskid--void" class="hash-link" aria-label="Direct link to cancel_taskself-task_id-taskid--void" title="Direct link to cancel_taskself-task_id-taskid--void">​</a></h4>
<p>Cancel the task with the given task_id (if queued or active).</p>
<p>If the task is not found then a warning is logged.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>task_id</strong> (<a href="#posei_trader.common.executor.TaskId"><em>TaskId</em></a>) – The task identifier.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="clock">clock<a href="#clock" class="hash-link" aria-label="Direct link to clock" title="Direct link to clock">​</a></h4>
<p>The actors clock.</p>
<ul>
<li><strong>Returns:</strong>
Clock</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="config">config<a href="#config" class="hash-link" aria-label="Direct link to config" title="Direct link to config">​</a></h4>
<p>The actors configuration.</p>
<ul>
<li><strong>Returns:</strong>
PoseiConfig</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="degradeself--void">degrade(self) → void<a href="#degradeself--void" class="hash-link" aria-label="Direct link to degrade(self) → void" title="Direct link to degrade(self) → void">​</a></h4>
<p>Degrade the component.</p>
<p>While executing on_degrade() any exception will be logged and reraised, then the component
will remain in a <code>DEGRADING</code> state.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-1">WARNING<a href="#warning-1" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>Do not override.</p>
<p>If the component is not in a valid state from which to execute this method,
then the component state will not change, and an error will be logged.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="deregister_warning_eventself-type-event--void">deregister_warning_event(self, type event) → void<a href="#deregister_warning_eventself-type-event--void" class="hash-link" aria-label="Direct link to deregister_warning_event(self, type event) → void" title="Direct link to deregister_warning_event(self, type event) → void">​</a></h4>
<p>Deregister the given event type from warning log levels.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>event</strong> (<em>type</em>) – The event class to deregister.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="disposeself--void">dispose(self) → void<a href="#disposeself--void" class="hash-link" aria-label="Direct link to dispose(self) → void" title="Direct link to dispose(self) → void">​</a></h4>
<p>Dispose of the component.</p>
<p>While executing on_dispose() any exception will be logged and reraised, then the component
will remain in a <code>DISPOSING</code> state.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-2">WARNING<a href="#warning-2" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>Do not override.</p>
<p>If the component is not in a valid state from which to execute this method,
then the component state will not change, and an error will be logged.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="faultself--void">fault(self) → void<a href="#faultself--void" class="hash-link" aria-label="Direct link to fault(self) → void" title="Direct link to fault(self) → void">​</a></h4>
<p>Fault the component.</p>
<p>Calling this method multiple times has the same effect as calling it once (it is idempotent).
Once called, it cannot be reversed, and no other methods should be called on this instance.</p>
<p>While executing on_fault() any exception will be logged and reraised, then the component
will remain in a <code>FAULTING</code> state.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-3">WARNING<a href="#warning-3" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>Do not override.</p>
<p>If the component is not in a valid state from which to execute this method,
then the component state will not change, and an error will be logged.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="classmethod-fully_qualified_namecls--str"><em>classmethod</em> fully_qualified_name(cls) → str<a href="#classmethod-fully_qualified_namecls--str" class="hash-link" aria-label="Direct link to classmethod-fully_qualified_namecls--str" title="Direct link to classmethod-fully_qualified_namecls--str">​</a></h4>
<p>Return the fully qualified name for the components class.</p>
<ul>
<li><strong>Return type:</strong>
str</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="greeks">greeks<a href="#greeks" class="hash-link" aria-label="Direct link to greeks" title="Direct link to greeks">​</a></h4>
<p>The read-only greeks calculator for the actor.</p>
<ul>
<li><strong>Returns:</strong>
GreeksCalculator</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="handle_barself-bar-bar--void">handle_bar(self, Bar bar) → void<a href="#handle_barself-bar-bar--void" class="hash-link" aria-label="Direct link to handle_bar(self, Bar bar) → void" title="Direct link to handle_bar(self, Bar bar) → void">​</a></h4>
<p>Handle the given bar data.</p>
<p>If state is <code>RUNNING</code> then passes to on_bar.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>bar</strong> (<a href="../model/data/index.htm#posei_trader.model.data.Bar"><em>Bar</em></a>) – The bar received.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-4">WARNING<a href="#warning-4" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>System method (not intended to be called by user code).</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="handle_barsself-list-bars--void">handle_bars(self, list bars) → void<a href="#handle_barsself-list-bars--void" class="hash-link" aria-label="Direct link to handle_bars(self, list bars) → void" title="Direct link to handle_bars(self, list bars) → void">​</a></h4>
<p>Handle the given historical bar data by handling each bar individually.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>bars</strong> (<em>list</em> <em>[</em><a href="../model/data/index.htm#posei_trader.model.data.Bar"><em>Bar</em></a> <em>]</em>) – The bars to handle.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-5">WARNING<a href="#warning-5" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>System method (not intended to be called by user code).</p>
<ul>
<li><strong>Raises:</strong>
<strong>RuntimeError</strong> – If bar data has incorrectly sorted timestamps (not monotonically increasing).</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="handle_dataself-data-data--void">handle_data(self, Data data) → void<a href="#handle_dataself-data-data--void" class="hash-link" aria-label="Direct link to handle_data(self, Data data) → void" title="Direct link to handle_data(self, Data data) → void">​</a></h4>
<p>Handle the given data.</p>
<p>If state is <code>RUNNING</code> then passes to on_data.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>data</strong> (<a href="../core/index.htm#posei_trader.core.Data"><em>Data</em></a>) – The data received.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-6">WARNING<a href="#warning-6" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>System method (not intended to be called by user code).</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="handle_eventself-event-event--void">handle_event(self, Event event) → void<a href="#handle_eventself-event-event--void" class="hash-link" aria-label="Direct link to handle_event(self, Event event) → void" title="Direct link to handle_event(self, Event event) → void">​</a></h4>
<p>Handle the given event.</p>
<p>If state is <code>RUNNING</code> then passes to on_event.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>event</strong> (<a href="../core/index.htm#posei_trader.core.Event"><em>Event</em></a>) – The event received.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-7">WARNING<a href="#warning-7" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>System method (not intended to be called by user code).</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="handle_historical_dataself-data--void">handle_historical_data(self, data) → void<a href="#handle_historical_dataself-data--void" class="hash-link" aria-label="Direct link to handle_historical_data(self, data) → void" title="Direct link to handle_historical_data(self, data) → void">​</a></h4>
<p>Handle the given historical data.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>data</strong> (<a href="../core/index.htm#posei_trader.core.Data"><em>Data</em></a>) – The historical data received.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-8">WARNING<a href="#warning-8" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>System method (not intended to be called by user code).</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="handle_index_priceself-indexpriceupdate-index_price--void">handle_index_price(self, IndexPriceUpdate index_price) → void<a href="#handle_index_priceself-indexpriceupdate-index_price--void" class="hash-link" aria-label="Direct link to handle_index_price(self, IndexPriceUpdate index_price) → void" title="Direct link to handle_index_price(self, IndexPriceUpdate index_price) → void">​</a></h4>
<p>Handle the given index price update.</p>
<p>If state is <code>RUNNING</code> then passes to on_index_price.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>index_price</strong> (<a href="../model/data/index.htm#posei_trader.model.data.IndexPriceUpdate"><em>IndexPriceUpdate</em></a>) – The index price update received.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-9">WARNING<a href="#warning-9" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>System method (not intended to be called by user code).</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="handle_instrumentself-instrument-instrument--void">handle_instrument(self, Instrument instrument) → void<a href="#handle_instrumentself-instrument-instrument--void" class="hash-link" aria-label="Direct link to handle_instrument(self, Instrument instrument) → void" title="Direct link to handle_instrument(self, Instrument instrument) → void">​</a></h4>
<p>Handle the given instrument.</p>
<p>Passes to on_instrument if state is <code>RUNNING</code>.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>instrument</strong> (<a href="../model/instruments/index.htm#posei_trader.model.instruments.Instrument"><em>Instrument</em></a>) – The instrument received.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-10">WARNING<a href="#warning-10" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>System method (not intended to be called by user code).</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="handle_instrument_closeself-instrumentclose-update--void">handle_instrument_close(self, InstrumentClose update) → void<a href="#handle_instrument_closeself-instrumentclose-update--void" class="hash-link" aria-label="Direct link to handle_instrument_close(self, InstrumentClose update) → void" title="Direct link to handle_instrument_close(self, InstrumentClose update) → void">​</a></h4>
<p>Handle the given instrument close update.</p>
<p>If state is <code>RUNNING</code> then passes to on_instrument_close.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>update</strong> (<a href="../model/data/index.htm#posei_trader.model.data.InstrumentClose"><em>InstrumentClose</em></a>) – The update received.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-11">WARNING<a href="#warning-11" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>System method (not intended to be called by user code).</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="handle_instrument_statusself-instrumentstatus-data--void">handle_instrument_status(self, InstrumentStatus data) → void<a href="#handle_instrument_statusself-instrumentstatus-data--void" class="hash-link" aria-label="Direct link to handle_instrument_status(self, InstrumentStatus data) → void" title="Direct link to handle_instrument_status(self, InstrumentStatus data) → void">​</a></h4>
<p>Handle the given instrument status update.</p>
<p>If state is <code>RUNNING</code> then passes to on_instrument_status.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>data</strong> (<a href="../model/data/index.htm#posei_trader.model.data.InstrumentStatus"><em>InstrumentStatus</em></a>) – The status update received.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-12">WARNING<a href="#warning-12" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>System method (not intended to be called by user code).</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="handle_instrumentsself-list-instruments--void">handle_instruments(self, list instruments) → void<a href="#handle_instrumentsself-list-instruments--void" class="hash-link" aria-label="Direct link to handle_instruments(self, list instruments) → void" title="Direct link to handle_instruments(self, list instruments) → void">​</a></h4>
<p>Handle the given instruments data by handling each instrument individually.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>instruments</strong> (<em>list</em> <em>[</em><a href="../model/instruments/index.htm#posei_trader.model.instruments.Instrument"><em>Instrument</em></a> <em>]</em>) – The instruments received.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-13">WARNING<a href="#warning-13" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>System method (not intended to be called by user code).</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="handle_mark_priceself-markpriceupdate-mark_price--void">handle_mark_price(self, MarkPriceUpdate mark_price) → void<a href="#handle_mark_priceself-markpriceupdate-mark_price--void" class="hash-link" aria-label="Direct link to handle_mark_price(self, MarkPriceUpdate mark_price) → void" title="Direct link to handle_mark_price(self, MarkPriceUpdate mark_price) → void">​</a></h4>
<p>Handle the given mark price update.</p>
<p>If state is <code>RUNNING</code> then passes to on_mark_price.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>mark_price</strong> (<a href="../model/data/index.htm#posei_trader.model.data.MarkPriceUpdate"><em>MarkPriceUpdate</em></a>) – The mark price update received.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-14">WARNING<a href="#warning-14" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>System method (not intended to be called by user code).</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="handle_order_bookself-orderbook-order_book--void">handle_order_book(self, OrderBook order_book) → void<a href="#handle_order_bookself-orderbook-order_book--void" class="hash-link" aria-label="Direct link to handle_order_book(self, OrderBook order_book) → void" title="Direct link to handle_order_book(self, OrderBook order_book) → void">​</a></h4>
<p>Handle the given order book.</p>
<p>Passes to on_order_book if state is <code>RUNNING</code>.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>order_book</strong> (<a href="../model/book/index.htm#posei_trader.model.book.OrderBook"><em>OrderBook</em></a>) – The order book received.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-15">WARNING<a href="#warning-15" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>System method (not intended to be called by user code).</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="handle_order_book_deltasself-deltas--void">handle_order_book_deltas(self, deltas) → void<a href="#handle_order_book_deltasself-deltas--void" class="hash-link" aria-label="Direct link to handle_order_book_deltas(self, deltas) → void" title="Direct link to handle_order_book_deltas(self, deltas) → void">​</a></h4>
<p>Handle the given order book deltas.</p>
<p>Passes to on_order_book_deltas if state is <code>RUNNING</code>.
The deltas will be nautilus_pyo3.OrderBookDeltas if the
pyo3_conversion flag was set for the subscription.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>deltas</strong> (<a href="../model/data/index.htm#posei_trader.model.data.OrderBookDeltas"><em>OrderBookDeltas</em></a> <em>or</em> <em>nautilus_pyo3.OrderBookDeltas</em>) – The order book deltas received.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-16">WARNING<a href="#warning-16" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>System method (not intended to be called by user code).</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="handle_order_book_depthself-orderbookdepth10-depth--void">handle_order_book_depth(self, OrderBookDepth10 depth) → void<a href="#handle_order_book_depthself-orderbookdepth10-depth--void" class="hash-link" aria-label="Direct link to handle_order_book_depth(self, OrderBookDepth10 depth) → void" title="Direct link to handle_order_book_depth(self, OrderBookDepth10 depth) → void">​</a></h4>
<p>Handle the given order book depth</p>
<p>Passes to on_order_book_depth if state is <code>RUNNING</code>.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>depth</strong> (<a href="../model/data/index.htm#posei_trader.model.data.OrderBookDepth10"><em>OrderBookDepth10</em></a>) – The order book depth received.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-17">WARNING<a href="#warning-17" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>System method (not intended to be called by user code).</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="handle_quote_tickself-quotetick-tick--void">handle_quote_tick(self, QuoteTick tick) → void<a href="#handle_quote_tickself-quotetick-tick--void" class="hash-link" aria-label="Direct link to handle_quote_tick(self, QuoteTick tick) → void" title="Direct link to handle_quote_tick(self, QuoteTick tick) → void">​</a></h4>
<p>Handle the given quote tick.</p>
<p>If state is <code>RUNNING</code> then passes to on_quote_tick.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>tick</strong> (<a href="../model/data/index.htm#posei_trader.model.data.QuoteTick"><em>QuoteTick</em></a>) – The tick received.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-18">WARNING<a href="#warning-18" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>System method (not intended to be called by user code).</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="handle_quote_ticksself-list-ticks--void">handle_quote_ticks(self, list ticks) → void<a href="#handle_quote_ticksself-list-ticks--void" class="hash-link" aria-label="Direct link to handle_quote_ticks(self, list ticks) → void" title="Direct link to handle_quote_ticks(self, list ticks) → void">​</a></h4>
<p>Handle the given historical quote tick data by handling each tick individually.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>ticks</strong> (<em>list</em> <em>[</em><a href="../model/data/index.htm#posei_trader.model.data.QuoteTick"><em>QuoteTick</em></a> <em>]</em>) – The ticks received.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-19">WARNING<a href="#warning-19" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>System method (not intended to be called by user code).</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="handle_signalself-data-signal--void">handle_signal(self, Data signal) → void<a href="#handle_signalself-data-signal--void" class="hash-link" aria-label="Direct link to handle_signal(self, Data signal) → void" title="Direct link to handle_signal(self, Data signal) → void">​</a></h4>
<p>Handle the given signal.</p>
<p>If state is <code>RUNNING</code> then passes to on_signal.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>signal</strong> (<a href="../core/index.htm#posei_trader.core.Data"><em>Data</em></a>) – The signal received.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-20">WARNING<a href="#warning-20" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>System method (not intended to be called by user code).</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="handle_trade_tickself-tradetick-tick--void">handle_trade_tick(self, TradeTick tick) → void<a href="#handle_trade_tickself-tradetick-tick--void" class="hash-link" aria-label="Direct link to handle_trade_tick(self, TradeTick tick) → void" title="Direct link to handle_trade_tick(self, TradeTick tick) → void">​</a></h4>
<p>Handle the given trade tick.</p>
<p>If state is <code>RUNNING</code> then passes to on_trade_tick.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>tick</strong> (<a href="../model/data/index.htm#posei_trader.model.data.TradeTick"><em>TradeTick</em></a>) – The tick received.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-21">WARNING<a href="#warning-21" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>System method (not intended to be called by user code).</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="handle_trade_ticksself-list-ticks--void">handle_trade_ticks(self, list ticks) → void<a href="#handle_trade_ticksself-list-ticks--void" class="hash-link" aria-label="Direct link to handle_trade_ticks(self, list ticks) → void" title="Direct link to handle_trade_ticks(self, list ticks) → void">​</a></h4>
<p>Handle the given historical trade tick data by handling each tick individually.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>ticks</strong> (<em>list</em> <em>[</em><a href="../model/data/index.htm#posei_trader.model.data.TradeTick"><em>TradeTick</em></a> <em>]</em>) – The ticks received.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-22">WARNING<a href="#warning-22" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>System method (not intended to be called by user code).</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="has_active_tasksself--bool">has_active_tasks(self) → bool<a href="#has_active_tasksself--bool" class="hash-link" aria-label="Direct link to has_active_tasks(self) → bool" title="Direct link to has_active_tasks(self) → bool">​</a></h4>
<p>Return a value indicating whether there are any active tasks.</p>
<ul>
<li><strong>Return type:</strong>
bool</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="has_any_tasksself--bool">has_any_tasks(self) → bool<a href="#has_any_tasksself--bool" class="hash-link" aria-label="Direct link to has_any_tasks(self) → bool" title="Direct link to has_any_tasks(self) → bool">​</a></h4>
<p>Return a value indicating whether there are any queued OR active tasks.</p>
<ul>
<li><strong>Return type:</strong>
bool</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="has_pending_requestsself--bool">has_pending_requests(self) → bool<a href="#has_pending_requestsself--bool" class="hash-link" aria-label="Direct link to has_pending_requests(self) → bool" title="Direct link to has_pending_requests(self) → bool">​</a></h4>
<p>Return whether the actor is pending processing for any requests.</p>
<ul>
<li><strong>Returns:</strong>
True if any requests are pending, else False.</li>
<li><strong>Return type:</strong>
bool</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="has_queued_tasksself--bool">has_queued_tasks(self) → bool<a href="#has_queued_tasksself--bool" class="hash-link" aria-label="Direct link to has_queued_tasks(self) → bool" title="Direct link to has_queued_tasks(self) → bool">​</a></h4>
<p>Return a value indicating whether there are any queued tasks.</p>
<ul>
<li><strong>Return type:</strong>
bool</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="id">id<a href="#id" class="hash-link" aria-label="Direct link to id" title="Direct link to id">​</a></h4>
<p>The components ID.</p>
<ul>
<li><strong>Returns:</strong>
ComponentId</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="indicators_initializedself--bool">indicators_initialized(self) → bool<a href="#indicators_initializedself--bool" class="hash-link" aria-label="Direct link to indicators_initialized(self) → bool" title="Direct link to indicators_initialized(self) → bool">​</a></h4>
<p>Return a value indicating whether all indicators are initialized.</p>
<ul>
<li><strong>Returns:</strong>
True if all initialized, else False</li>
<li><strong>Return type:</strong>
bool</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="is_degraded">is_degraded<a href="#is_degraded" class="hash-link" aria-label="Direct link to is_degraded" title="Direct link to is_degraded">​</a></h4>
<p>bool</p>
<p>Return whether the current component state is <code>DEGRADED</code>.</p>
<ul>
<li><strong>Return type:</strong>
bool</li>
<li><strong>Type:</strong>
Component.is_degraded</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="is_disposed">is_disposed<a href="#is_disposed" class="hash-link" aria-label="Direct link to is_disposed" title="Direct link to is_disposed">​</a></h4>
<p>bool</p>
<p>Return whether the current component state is <code>DISPOSED</code>.</p>
<ul>
<li><strong>Return type:</strong>
bool</li>
<li><strong>Type:</strong>
Component.is_disposed</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="is_faulted">is_faulted<a href="#is_faulted" class="hash-link" aria-label="Direct link to is_faulted" title="Direct link to is_faulted">​</a></h4>
<p>bool</p>
<p>Return whether the current component state is <code>FAULTED</code>.</p>
<ul>
<li><strong>Return type:</strong>
bool</li>
<li><strong>Type:</strong>
Component.is_faulted</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="is_initialized">is_initialized<a href="#is_initialized" class="hash-link" aria-label="Direct link to is_initialized" title="Direct link to is_initialized">​</a></h4>
<p>bool</p>
<p>Return whether the component has been initialized (component.state &gt;= <code>INITIALIZED</code>).</p>
<ul>
<li><strong>Return type:</strong>
bool</li>
<li><strong>Type:</strong>
Component.is_initialized</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="is_pending_requestself-uuid4-request_id--bool">is_pending_request(self, UUID4 request_id) → bool<a href="#is_pending_requestself-uuid4-request_id--bool" class="hash-link" aria-label="Direct link to is_pending_request(self, UUID4 request_id) → bool" title="Direct link to is_pending_request(self, UUID4 request_id) → bool">​</a></h4>
<p>Return whether the request for the given identifier is pending processing.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>request_id</strong> (<a href="../core/index.htm#posei_trader.core.UUID4"><em>UUID4</em></a>) – The request ID to check.</li>
<li><strong>Returns:</strong>
True if request is pending, else False.</li>
<li><strong>Return type:</strong>
bool</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="is_running">is_running<a href="#is_running" class="hash-link" aria-label="Direct link to is_running" title="Direct link to is_running">​</a></h4>
<p>bool</p>
<p>Return whether the current component state is <code>RUNNING</code>.</p>
<ul>
<li><strong>Return type:</strong>
bool</li>
<li><strong>Type:</strong>
Component.is_running</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="is_stopped">is_stopped<a href="#is_stopped" class="hash-link" aria-label="Direct link to is_stopped" title="Direct link to is_stopped">​</a></h4>
<p>bool</p>
<p>Return whether the current component state is <code>STOPPED</code>.</p>
<ul>
<li><strong>Return type:</strong>
bool</li>
<li><strong>Type:</strong>
Component.is_stopped</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="loadself-dict-state--void">load(self, dict state) → void<a href="#loadself-dict-state--void" class="hash-link" aria-label="Direct link to load(self, dict state) → void" title="Direct link to load(self, dict state) → void">​</a></h4>
<p>Load the actor/strategy state from the give state dictionary.</p>
<p>Calls on_load and passes the state.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>state</strong> (<em>dict</em> *[*<em>str</em> <em>,</em> <em>bytes</em> <em>]</em>) – The strategy state to load.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-23">WARNING<a href="#warning-23" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>Exceptions raised will be caught, logged, and reraised.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="log">log<a href="#log" class="hash-link" aria-label="Direct link to log" title="Direct link to log">​</a></h4>
<p>The actors logger.</p>
<ul>
<li><strong>Returns:</strong>
Logger</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="msgbus">msgbus<a href="#msgbus" class="hash-link" aria-label="Direct link to msgbus" title="Direct link to msgbus">​</a></h4>
<p>The message bus for the actor (if registered).</p>
<ul>
<li><strong>Returns:</strong>
MessageBus or <code>None</code></li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="on_barself-bar-bar--void">on_bar(self, Bar bar) → void<a href="#on_barself-bar-bar--void" class="hash-link" aria-label="Direct link to on_bar(self, Bar bar) → void" title="Direct link to on_bar(self, Bar bar) → void">​</a></h4>
<p>Actions to be performed when running and receives a bar.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>bar</strong> (<a href="../model/data/index.htm#posei_trader.model.data.Bar"><em>Bar</em></a>) – The bar received.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-24">WARNING<a href="#warning-24" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>System method (not intended to be called by user code).</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="on_dataself-data--void">on_data(self, data) → void<a href="#on_dataself-data--void" class="hash-link" aria-label="Direct link to on_data(self, data) → void" title="Direct link to on_data(self, data) → void">​</a></h4>
<p>Actions to be performed when running and receives data.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>data</strong> (<a href="../core/index.htm#posei_trader.core.Data"><em>Data</em></a>) – The data received.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-25">WARNING<a href="#warning-25" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>System method (not intended to be called by user code).</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="on_degradeself--void">on_degrade(self) → void<a href="#on_degradeself--void" class="hash-link" aria-label="Direct link to on_degrade(self) → void" title="Direct link to on_degrade(self) → void">​</a></h4>
<p>Actions to be performed on degrade.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-26">WARNING<a href="#warning-26" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>System method (not intended to be called by user code).</p>
<p>Should be overridden in the actor implementation.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="on_disposeself--void">on_dispose(self) → void<a href="#on_disposeself--void" class="hash-link" aria-label="Direct link to on_dispose(self) → void" title="Direct link to on_dispose(self) → void">​</a></h4>
<p>Actions to be performed on dispose.</p>
<p>Cleanup/release any resources used here.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-27">WARNING<a href="#warning-27" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>System method (not intended to be called by user code).</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="on_eventself-event-event--void">on_event(self, Event event) → void<a href="#on_eventself-event-event--void" class="hash-link" aria-label="Direct link to on_event(self, Event event) → void" title="Direct link to on_event(self, Event event) → void">​</a></h4>
<p>Actions to be performed running and receives an event.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>event</strong> (<a href="../core/index.htm#posei_trader.core.Event"><em>Event</em></a>) – The event received.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-28">WARNING<a href="#warning-28" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>System method (not intended to be called by user code).</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="on_faultself--void">on_fault(self) → void<a href="#on_faultself--void" class="hash-link" aria-label="Direct link to on_fault(self) → void" title="Direct link to on_fault(self) → void">​</a></h4>
<p>Actions to be performed on fault.</p>
<p>Cleanup any resources used by the actor here.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-29">WARNING<a href="#warning-29" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>System method (not intended to be called by user code).</p>
<p>Should be overridden in the actor implementation.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="on_historical_dataself-data--void">on_historical_data(self, data) → void<a href="#on_historical_dataself-data--void" class="hash-link" aria-label="Direct link to on_historical_data(self, data) → void" title="Direct link to on_historical_data(self, data) → void">​</a></h4>
<p>Actions to be performed when running and receives historical data.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>data</strong> (<a href="../core/index.htm#posei_trader.core.Data"><em>Data</em></a>) – The historical data received.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-30">WARNING<a href="#warning-30" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>System method (not intended to be called by user code).</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="on_index_priceself-indexpriceupdate-index_price--void">on_index_price(self, IndexPriceUpdate index_price) → void<a href="#on_index_priceself-indexpriceupdate-index_price--void" class="hash-link" aria-label="Direct link to on_index_price(self, IndexPriceUpdate index_price) → void" title="Direct link to on_index_price(self, IndexPriceUpdate index_price) → void">​</a></h4>
<p>Actions to be performed when running and receives an index price update.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>index_price</strong> (<a href="../model/data/index.htm#posei_trader.model.data.IndexPriceUpdate"><em>IndexPriceUpdate</em></a>) – The index price update received.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-31">WARNING<a href="#warning-31" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>System method (not intended to be called by user code).</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="on_instrumentself-instrument-instrument--void">on_instrument(self, Instrument instrument) → void<a href="#on_instrumentself-instrument-instrument--void" class="hash-link" aria-label="Direct link to on_instrument(self, Instrument instrument) → void" title="Direct link to on_instrument(self, Instrument instrument) → void">​</a></h4>
<p>Actions to be performed when running and receives an instrument.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>instrument</strong> (<a href="../model/instruments/index.htm#posei_trader.model.instruments.Instrument"><em>Instrument</em></a>) – The instrument received.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-32">WARNING<a href="#warning-32" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>System method (not intended to be called by user code).</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="on_instrument_closeself-instrumentclose-update--void">on_instrument_close(self, InstrumentClose update) → void<a href="#on_instrument_closeself-instrumentclose-update--void" class="hash-link" aria-label="Direct link to on_instrument_close(self, InstrumentClose update) → void" title="Direct link to on_instrument_close(self, InstrumentClose update) → void">​</a></h4>
<p>Actions to be performed when running and receives an instrument close
update.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>update</strong> (<a href="../model/data/index.htm#posei_trader.model.data.InstrumentClose"><em>InstrumentClose</em></a>) – The instrument close received.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-33">WARNING<a href="#warning-33" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>System method (not intended to be called by user code).</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="on_instrument_statusself-instrumentstatus-data--void">on_instrument_status(self, InstrumentStatus data) → void<a href="#on_instrument_statusself-instrumentstatus-data--void" class="hash-link" aria-label="Direct link to on_instrument_status(self, InstrumentStatus data) → void" title="Direct link to on_instrument_status(self, InstrumentStatus data) → void">​</a></h4>
<p>Actions to be performed when running and receives an instrument status
update.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>data</strong> (<a href="../model/data/index.htm#posei_trader.model.data.InstrumentStatus"><em>InstrumentStatus</em></a>) – The instrument status update received.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-34">WARNING<a href="#warning-34" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>System method (not intended to be called by user code).</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="on_loadself-dict-state--void">on_load(self, dict state) → void<a href="#on_loadself-dict-state--void" class="hash-link" aria-label="Direct link to on_load(self, dict state) → void" title="Direct link to on_load(self, dict state) → void">​</a></h4>
<p>Actions to be performed when the actor state is loaded.</p>
<p>Saved state values will be contained in the give state dictionary.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>state</strong> (<em>dict</em> *[*<em>str</em> <em>,</em> <em>bytes</em> <em>]</em>) – The strategy state to load.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-35">WARNING<a href="#warning-35" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>System method (not intended to be called by user code).</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="on_mark_priceself-markpriceupdate-mark_price--void">on_mark_price(self, MarkPriceUpdate mark_price) → void<a href="#on_mark_priceself-markpriceupdate-mark_price--void" class="hash-link" aria-label="Direct link to on_mark_price(self, MarkPriceUpdate mark_price) → void" title="Direct link to on_mark_price(self, MarkPriceUpdate mark_price) → void">​</a></h4>
<p>Actions to be performed when running and receives a mark price update.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>mark_price</strong> (<a href="../model/data/index.htm#posei_trader.model.data.MarkPriceUpdate"><em>MarkPriceUpdate</em></a>) – The mark price update received.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-36">WARNING<a href="#warning-36" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>System method (not intended to be called by user code).</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="on_order_bookself-orderbook-order_book--void">on_order_book(self, OrderBook order_book) → void<a href="#on_order_bookself-orderbook-order_book--void" class="hash-link" aria-label="Direct link to on_order_book(self, OrderBook order_book) → void" title="Direct link to on_order_book(self, OrderBook order_book) → void">​</a></h4>
<p>Actions to be performed when running and receives an order book.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>order_book</strong> (<a href="../model/book/index.htm#posei_trader.model.book.OrderBook"><em>OrderBook</em></a>) – The order book received.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-37">WARNING<a href="#warning-37" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>System method (not intended to be called by user code).</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="on_order_book_deltasself-deltas--void">on_order_book_deltas(self, deltas) → void<a href="#on_order_book_deltasself-deltas--void" class="hash-link" aria-label="Direct link to on_order_book_deltas(self, deltas) → void" title="Direct link to on_order_book_deltas(self, deltas) → void">​</a></h4>
<p>Actions to be performed when running and receives order book deltas.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>deltas</strong> (<a href="../model/data/index.htm#posei_trader.model.data.OrderBookDeltas"><em>OrderBookDeltas</em></a> <em>or</em> <em>nautilus_pyo3.OrderBookDeltas</em>) – The order book deltas received.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-38">WARNING<a href="#warning-38" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>System method (not intended to be called by user code).</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="on_order_book_depthself-depth--void">on_order_book_depth(self, depth) → void<a href="#on_order_book_depthself-depth--void" class="hash-link" aria-label="Direct link to on_order_book_depth(self, depth) → void" title="Direct link to on_order_book_depth(self, depth) → void">​</a></h4>
<p>Actions to be performed when running and receives an order book depth.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>depth</strong> (<a href="../model/data/index.htm#posei_trader.model.data.OrderBookDepth10"><em>OrderBookDepth10</em></a>) – The order book depth received.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-39">WARNING<a href="#warning-39" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>System method (not intended to be called by user code).</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="on_quote_tickself-quotetick-tick--void">on_quote_tick(self, QuoteTick tick) → void<a href="#on_quote_tickself-quotetick-tick--void" class="hash-link" aria-label="Direct link to on_quote_tick(self, QuoteTick tick) → void" title="Direct link to on_quote_tick(self, QuoteTick tick) → void">​</a></h4>
<p>Actions to be performed when running and receives a quote tick.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>tick</strong> (<a href="../model/data/index.htm#posei_trader.model.data.QuoteTick"><em>QuoteTick</em></a>) – The tick received.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-40">WARNING<a href="#warning-40" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>System method (not intended to be called by user code).</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="on_resetself--void">on_reset(self) → void<a href="#on_resetself--void" class="hash-link" aria-label="Direct link to on_reset(self) → void" title="Direct link to on_reset(self) → void">​</a></h4>
<p>Actions to be performed on reset.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-41">WARNING<a href="#warning-41" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>System method (not intended to be called by user code).</p>
<p>Should be overridden in a user implementation.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="on_resumeself--void">on_resume(self) → void<a href="#on_resumeself--void" class="hash-link" aria-label="Direct link to on_resume(self) → void" title="Direct link to on_resume(self) → void">​</a></h4>
<p>Actions to be performed on resume.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-42">WARNING<a href="#warning-42" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>System method (not intended to be called by user code).</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="on_saveself--dict">on_save(self) → dict<a href="#on_saveself--dict" class="hash-link" aria-label="Direct link to on_save(self) → dict" title="Direct link to on_save(self) → dict">​</a></h4>
<p>Actions to be performed when the actor state is saved.</p>
<p>Create and return a state dictionary of values to be saved.</p>
<ul>
<li><strong>Returns:</strong>
The strategy state to save.</li>
<li><strong>Return type:</strong>
dict[str, bytes]</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-43">WARNING<a href="#warning-43" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>System method (not intended to be called by user code).</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="on_signalself-signal--void">on_signal(self, signal) → void<a href="#on_signalself-signal--void" class="hash-link" aria-label="Direct link to on_signal(self, signal) → void" title="Direct link to on_signal(self, signal) → void">​</a></h4>
<p>Actions to be performed when running and receives signal data.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>signal</strong> (<a href="../core/index.htm#posei_trader.core.Data"><em>Data</em></a>) – The signal received.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-44">WARNING<a href="#warning-44" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>System method (not intended to be called by user code).</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="on_startself--void">on_start(self) → void<a href="#on_startself--void" class="hash-link" aria-label="Direct link to on_start(self) → void" title="Direct link to on_start(self) → void">​</a></h4>
<p>Actions to be performed on start.</p>
<p>The intent is that this method is called once per trading ‘run’, when
initially starting.</p>
<p>It is recommended to subscribe/request for data here.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-45">WARNING<a href="#warning-45" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>System method (not intended to be called by user code).</p>
<p>Should be overridden in a user implementation.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="on_stopself--void">on_stop(self) → void<a href="#on_stopself--void" class="hash-link" aria-label="Direct link to on_stop(self) → void" title="Direct link to on_stop(self) → void">​</a></h4>
<p>Actions to be performed on stop.</p>
<p>The intent is that this method is called to pause, or when done for day.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-46">WARNING<a href="#warning-46" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>System method (not intended to be called by user code).</p>
<p>Should be overridden in a user implementation.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="on_trade_tickself-tradetick-tick--void">on_trade_tick(self, TradeTick tick) → void<a href="#on_trade_tickself-tradetick-tick--void" class="hash-link" aria-label="Direct link to on_trade_tick(self, TradeTick tick) → void" title="Direct link to on_trade_tick(self, TradeTick tick) → void">​</a></h4>
<p>Actions to be performed when running and receives a trade tick.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>tick</strong> (<a href="../model/data/index.htm#posei_trader.model.data.TradeTick"><em>TradeTick</em></a>) – The tick received.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-47">WARNING<a href="#warning-47" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>System method (not intended to be called by user code).</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="pending_requestsself--set">pending_requests(self) → set<a href="#pending_requestsself--set" class="hash-link" aria-label="Direct link to pending_requests(self) → set" title="Direct link to pending_requests(self) → set">​</a></h4>
<p>Return the request IDs which are currently pending processing.</p>
<ul>
<li><strong>Return type:</strong>
set[<a href="../core/index.htm#posei_trader.core.UUID4">UUID4</a>]</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="portfolio">portfolio<a href="#portfolio" class="hash-link" aria-label="Direct link to portfolio" title="Direct link to portfolio">​</a></h4>
<p>The read-only portfolio for the actor.</p>
<ul>
<li><strong>Returns:</strong>
PortfolioFacade</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="publish_dataself-datatype-data_type-data-data--void">publish_data(self, DataType data_type, Data data) → void<a href="#publish_dataself-datatype-data_type-data-data--void" class="hash-link" aria-label="Direct link to publish_data(self, DataType data_type, Data data) → void" title="Direct link to publish_data(self, DataType data_type, Data data) → void">​</a></h4>
<p>Publish the given data to the message bus.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>data_type</strong> (<a href="../model/data/index.htm#posei_trader.model.data.DataType"><em>DataType</em></a>) – The data type being published.</li>
<li><strong>data</strong> (<a href="../core/index.htm#posei_trader.core.Data"><em>Data</em></a>) – The data to publish.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="publish_signalself-str-name-value-uint64_t-ts_event0--void">publish_signal(self, str name, value, uint64_t ts_event=0) → void<a href="#publish_signalself-str-name-value-uint64_t-ts_event0--void" class="hash-link" aria-label="Direct link to publish_signal(self, str name, value, uint64_t ts_event=0) → void" title="Direct link to publish_signal(self, str name, value, uint64_t ts_event=0) → void">​</a></h4>
<p>Publish the given value as a signal to the message bus.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>name</strong> (<em>str</em>) – The name of the signal being published.
The signal name will be converted to title case, with each word capitalized
(e.g., ‘example’ becomes ‘SignalExample’).</li>
<li><strong>value</strong> (<em>object</em>) – The signal data to publish.</li>
<li><strong>ts_event</strong> (<em>uint64_t</em> <em>,</em> <em>optional</em>) – UNIX timestamp (nanoseconds) when the signal event occurred.
If <code>None</code> then will timestamp current time.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="queue_for_executorself-func-callable-any-tuple-argsnone-dict-kwargsnone">queue_for_executor(self, func: Callable[..., Any], tuple args=None, dict kwargs=None)<a href="#queue_for_executorself-func-callable-any-tuple-argsnone-dict-kwargsnone" class="hash-link" aria-label="Direct link to queue_for_executor(self, func: Callable[..., Any], tuple args=None, dict kwargs=None)" title="Direct link to queue_for_executor(self, func: Callable[..., Any], tuple args=None, dict kwargs=None)">​</a></h4>
<p>Queues the callable func to be executed as fn(*args, **kwargs) sequentially.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>func</strong> (<em>Callable</em>) – The function to be executed.</li>
<li><strong>args</strong> (<em>positional arguments</em>) – The positional arguments for the call to func.</li>
<li><strong>kwargs</strong> (<em>arbitrary keyword arguments</em>) – The keyword arguments for the call to func.</li>
</ul>
</li>
<li><strong>Raises:</strong>
<strong>TypeError</strong> – If func is not of type Callable.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="queued_task_idsself--list">queued_task_ids(self) → list<a href="#queued_task_idsself--list" class="hash-link" aria-label="Direct link to queued_task_ids(self) → list" title="Direct link to queued_task_ids(self) → list">​</a></h4>
<p>Return the queued task identifiers.</p>
<ul>
<li><strong>Return type:</strong>
list[<a href="#posei_trader.common.executor.TaskId">TaskId</a>]</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="register_baseself-portfoliofacade-portfolio-messagebus-msgbus-cachefacade-cache-clock-clock--void">register_base(self, PortfolioFacade portfolio, MessageBus msgbus, CacheFacade cache, Clock clock) → void<a href="#register_baseself-portfoliofacade-portfolio-messagebus-msgbus-cachefacade-cache-clock-clock--void" class="hash-link" aria-label="Direct link to register_base(self, PortfolioFacade portfolio, MessageBus msgbus, CacheFacade cache, Clock clock) → void" title="Direct link to register_base(self, PortfolioFacade portfolio, MessageBus msgbus, CacheFacade cache, Clock clock) → void">​</a></h4>
<p>Register with a trader.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>portfolio</strong> (<a href="../portfolio/index.htm#posei_trader.portfolio.PortfolioFacade"><em>PortfolioFacade</em></a>) – The read-only portfolio for the actor.</li>
<li><strong>msgbus</strong> (<a href="#posei_trader.common.component.MessageBus"><em>MessageBus</em></a>) – The message bus for the actor.</li>
<li><strong>cache</strong> (<a href="../cache/index.htm#posei_trader.cache.base.CacheFacade"><em>CacheFacade</em></a>) – The read-only cache for the actor.</li>
<li><strong>clock</strong> (<a href="#posei_trader.common.component.Clock"><em>Clock</em></a>) – The clock for the actor.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-48">WARNING<a href="#warning-48" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>System method (not intended to be called by user code).</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="register_executorself-loop-asyncioabstracteventloop-executor-executor--void">register_executor(self, loop: asyncio.AbstractEventLoop, executor: Executor) → void<a href="#register_executorself-loop-asyncioabstracteventloop-executor-executor--void" class="hash-link" aria-label="Direct link to register_executor(self, loop: asyncio.AbstractEventLoop, executor: Executor) → void" title="Direct link to register_executor(self, loop: asyncio.AbstractEventLoop, executor: Executor) → void">​</a></h4>
<p>Register the given Executor for the actor.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>loop</strong> (<em>asyncio.AbstractEventLoop</em>) – The event loop of the application.</li>
<li><strong>executor</strong> (<em>concurrent.futures.Executor</em>) – The executor to register.</li>
</ul>
</li>
<li><strong>Raises:</strong>
<strong>TypeError</strong> – If executor is not of type concurrent.futures.Executor</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="register_indicator_for_barsself-bartype-bar_type-indicator-indicator--void">register_indicator_for_bars(self, BarType bar_type, Indicator indicator) → void<a href="#register_indicator_for_barsself-bartype-bar_type-indicator-indicator--void" class="hash-link" aria-label="Direct link to register_indicator_for_bars(self, BarType bar_type, Indicator indicator) → void" title="Direct link to register_indicator_for_bars(self, BarType bar_type, Indicator indicator) → void">​</a></h4>
<p>Register the given indicator with the actor/strategy to receive bar data for the
given bar type.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>bar_type</strong> (<a href="../model/data/index.htm#posei_trader.model.data.BarType"><em>BarType</em></a>) – The bar type for bar updates.</li>
<li><strong>indicator</strong> (<a href="../indicators/index.htm#posei_trader.indicators.base.indicator.Indicator"><em>Indicator</em></a>) – The indicator to register.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="register_indicator_for_quote_ticksself-instrumentid-instrument_id-indicator-indicator--void">register_indicator_for_quote_ticks(self, InstrumentId instrument_id, Indicator indicator) → void<a href="#register_indicator_for_quote_ticksself-instrumentid-instrument_id-indicator-indicator--void" class="hash-link" aria-label="Direct link to register_indicator_for_quote_ticks(self, InstrumentId instrument_id, Indicator indicator) → void" title="Direct link to register_indicator_for_quote_ticks(self, InstrumentId instrument_id, Indicator indicator) → void">​</a></h4>
<p>Register the given indicator with the actor/strategy to receive quote tick
data for the given instrument ID.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>instrument_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.InstrumentId"><em>InstrumentId</em></a>) – The instrument ID for tick updates.</li>
<li><strong>indicator</strong> (<a href="../indicators/index.htm#posei_trader.indicators.base.indicator.Indicator"><em>Indicator</em></a>) – The indicator to register.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="register_indicator_for_trade_ticksself-instrumentid-instrument_id-indicator-indicator--void">register_indicator_for_trade_ticks(self, InstrumentId instrument_id, Indicator indicator) → void<a href="#register_indicator_for_trade_ticksself-instrumentid-instrument_id-indicator-indicator--void" class="hash-link" aria-label="Direct link to register_indicator_for_trade_ticks(self, InstrumentId instrument_id, Indicator indicator) → void" title="Direct link to register_indicator_for_trade_ticks(self, InstrumentId instrument_id, Indicator indicator) → void">​</a></h4>
<p>Register the given indicator with the actor/strategy to receive trade tick
data for the given instrument ID.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>instrument_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.InstrumentId"><em>InstrumentId</em></a>) – The instrument ID for tick updates.</li>
<li><strong>indicator</strong> (<em>indicator</em>) – The indicator to register.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="register_warning_eventself-type-event--void">register_warning_event(self, type event) → void<a href="#register_warning_eventself-type-event--void" class="hash-link" aria-label="Direct link to register_warning_event(self, type event) → void" title="Direct link to register_warning_event(self, type event) → void">​</a></h4>
<p>Register the given event type for warning log levels.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>event</strong> (<em>type</em>) – The event class to register.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="registered_indicators">registered_indicators<a href="#registered_indicators" class="hash-link" aria-label="Direct link to registered_indicators" title="Direct link to registered_indicators">​</a></h4>
<p>Return the registered indicators for the strategy.</p>
<ul>
<li><strong>Return type:</strong>
list[<a href="../indicators/index.htm#posei_trader.indicators.base.indicator.Indicator">Indicator</a>]</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="request_aggregated_barsself-list-bar_types-datetime-startnone-datetime-endnone-int-limit0-clientid-client_idnone-callback-callableuuid4-none--none--none-bool-include_external_datafalse-bool-update_subscriptionsfalse-update_catalog-bool--false-dict-paramsnone--uuid4">request_aggregated_bars(self, list bar_types, datetime start=None, datetime end=None, int limit=0, ClientId client_id=None, callback: Callable[[UUID4], None] | None = None, bool include_external_data=False, bool update_subscriptions=False, update_catalog: bool = False, dict params=None) → <a href="../core/index.htm#posei_trader.core.UUID4">UUID4</a><a href="#request_aggregated_barsself-list-bar_types-datetime-startnone-datetime-endnone-int-limit0-clientid-client_idnone-callback-callableuuid4-none--none--none-bool-include_external_datafalse-bool-update_subscriptionsfalse-update_catalog-bool--false-dict-paramsnone--uuid4" class="hash-link" aria-label="Direct link to request_aggregated_barsself-list-bar_types-datetime-startnone-datetime-endnone-int-limit0-clientid-client_idnone-callback-callableuuid4-none--none--none-bool-include_external_datafalse-bool-update_subscriptionsfalse-update_catalog-bool--false-dict-paramsnone--uuid4" title="Direct link to request_aggregated_barsself-list-bar_types-datetime-startnone-datetime-endnone-int-limit0-clientid-client_idnone-callback-callableuuid4-none--none--none-bool-include_external_datafalse-bool-update_subscriptionsfalse-update_catalog-bool--false-dict-paramsnone--uuid4">​</a></h4>
<p>Request historical aggregated Bar data for multiple bar types.
The first bar is used to determine which market data type will be queried.
This can either be quotes, trades or bars. If bars are queried,
the first bar type needs to have a composite bar that is external (i.e. not internal/aggregated).
This external bar type will be queried.</p>
<p>If end is <code>None</code> then will request up to the most recent data.</p>
<p>Once the response is received, the bar data is forwarded from the message bus
to the on_historical_data handler. Any tick data used for aggregation is also
forwarded to the on_historical_data handler.</p>
<p>If the request fails, then an error is logged.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>bar_types</strong> (<em>list</em> <em>[</em><a href="../model/data/index.htm#posei_trader.model.data.BarType"><em>BarType</em></a> <em>]</em>) – The list of bar types for the request. Composite bars can also be used and need to
figure in the list after a BarType on which it depends.</li>
<li><strong>start</strong> (<em>datetime</em> <em>,</em> <em>optional</em>) – The start datetime (UTC) of request time range.
The inclusiveness depends on individual data client implementation.</li>
<li><strong>end</strong> (<em>datetime</em> <em>,</em> <em>optional</em>) – The end datetime (UTC) of request time range.
The inclusiveness depends on individual data client implementation.</li>
<li><strong>limit</strong> (<em>int</em> <em>,</em> <em>optional</em>) – The limit on the amount of data received (quote ticks, trade ticks or bars).</li>
<li><strong>client_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.ClientId"><em>ClientId</em></a> <em>,</em> <em>optional</em>) – The specific client ID for the command.
If <code>None</code> then will be inferred from the venue in the instrument ID.</li>
<li><strong>callback</strong> (<em>Callable</em> <em>[</em> <em>[</em><a href="../core/index.htm#posei_trader.core.UUID4"><em>UUID4</em></a> <em>]</em> <em>,</em> <em>None</em> <em>]</em> <em>,</em> <em>optional</em>) – The registered callback, to be called with the request ID when the response has
completed processing.</li>
<li><strong>include_external_data</strong> (<em>bool</em> <em>,</em> <em>default False</em>) – If True, includes the queried external data in the response.</li>
<li><strong>update_subscriptions</strong> (<em>bool</em> <em>,</em> <em>default False</em>) – If True, updates the aggregators of any existing or future subscription with the queried external data.</li>
<li><strong>update_catalog</strong> (<em>bool</em> <em>,</em> <em>optional</em>) – Whether to update a catalog with the received data.</li>
<li><strong>params</strong> (<em>dict</em> *[*<em>str</em> <em>,</em> <em>Any</em> <em>]</em> <em>,</em> <em>optional</em>) – Additional parameters potentially used by a specific client.</li>
</ul>
</li>
<li><strong>Returns:</strong>
The request_id for the request.</li>
<li><strong>Return type:</strong>
<a href="../core/index.htm#posei_trader.core.UUID4">UUID4</a></li>
<li><strong>Raises:</strong>
<ul>
<li><strong>ValueError</strong> – If start is not None and &gt; current timestamp (now).</li>
<li><strong>ValueError</strong> – If end is not None and &gt; current timestamp (now).</li>
<li><strong>ValueError</strong> – If start and end are not None and start is &gt;= end.</li>
<li><strong>ValueError</strong> – If bar_types is empty.</li>
<li><strong>TypeError</strong> – If callback is not None and not of type Callable.</li>
<li><strong>TypeError</strong> – If bar_types is empty or contains elements not of type BarType.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="request_barsself-bartype-bar_type-datetime-startnone-datetime-endnone-int-limit0-clientid-client_idnone-callback-callableuuid4-none--none--none-update_catalog-bool--false-dict-paramsnone--uuid4">request_bars(self, BarType bar_type, datetime start=None, datetime end=None, int limit=0, ClientId client_id=None, callback: Callable[[UUID4], None] | None = None, update_catalog: bool = False, dict params=None) → <a href="../core/index.htm#posei_trader.core.UUID4">UUID4</a><a href="#request_barsself-bartype-bar_type-datetime-startnone-datetime-endnone-int-limit0-clientid-client_idnone-callback-callableuuid4-none--none--none-update_catalog-bool--false-dict-paramsnone--uuid4" class="hash-link" aria-label="Direct link to request_barsself-bartype-bar_type-datetime-startnone-datetime-endnone-int-limit0-clientid-client_idnone-callback-callableuuid4-none--none--none-update_catalog-bool--false-dict-paramsnone--uuid4" title="Direct link to request_barsself-bartype-bar_type-datetime-startnone-datetime-endnone-int-limit0-clientid-client_idnone-callback-callableuuid4-none--none--none-update_catalog-bool--false-dict-paramsnone--uuid4">​</a></h4>
<p>Request historical Bar data.</p>
<p>If end is <code>None</code> then will request up to the most recent data.</p>
<p>Once the response is received, the bar data is forwarded from the message bus
to the on_historical_data handler.</p>
<p>If the request fails, then an error is logged.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>bar_type</strong> (<a href="../model/data/index.htm#posei_trader.model.data.BarType"><em>BarType</em></a>) – The bar type for the request.</li>
<li><strong>start</strong> (<em>datetime</em> <em>,</em> <em>optional</em>) – The start datetime (UTC) of request time range.
The inclusiveness depends on individual data client implementation.</li>
<li><strong>end</strong> (<em>datetime</em> <em>,</em> <em>optional</em>) – The end datetime (UTC) of request time range.
The inclusiveness depends on individual data client implementation.</li>
<li><strong>limit</strong> (<em>int</em> <em>,</em> <em>optional</em>) – The limit on the amount of bars received.</li>
<li><strong>client_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.ClientId"><em>ClientId</em></a> <em>,</em> <em>optional</em>) – The specific client ID for the command.
If <code>None</code> then will be inferred from the venue in the instrument ID.</li>
<li><strong>callback</strong> (<em>Callable</em> <em>[</em> <em>[</em><a href="../core/index.htm#posei_trader.core.UUID4"><em>UUID4</em></a> <em>]</em> <em>,</em> <em>None</em> <em>]</em> <em>,</em> <em>optional</em>) – The registered callback, to be called with the request ID when the response has
completed processing.</li>
<li><strong>update_catalog</strong> (<em>bool</em> <em>,</em> <em>optional</em>) – Whether to update a catalog with the received data.</li>
<li><strong>params</strong> (<em>dict</em> *[*<em>str</em> <em>,</em> <em>Any</em> <em>]</em> <em>,</em> <em>optional</em>) – Additional parameters potentially used by a specific client.</li>
</ul>
</li>
<li><strong>Returns:</strong>
The request_id for the request.</li>
<li><strong>Return type:</strong>
<a href="../core/index.htm#posei_trader.core.UUID4">UUID4</a></li>
<li><strong>Raises:</strong>
<ul>
<li><strong>ValueError</strong> – If start is not None and &gt; current timestamp (now).</li>
<li><strong>ValueError</strong> – If end is not None and &gt; current timestamp (now).</li>
<li><strong>ValueError</strong> – If start and end are not None and start is &gt;= end.</li>
<li><strong>TypeError</strong> – If callback is not None and not of type Callable.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="request_dataself-datatype-data_type-clientid-client_id-instrumentid-instrument_idnone-datetime-startnone-datetime-endnone-int-limit0-callback-callableuuid4-none--none--none-update_catalog-bool--false-dict-paramsnone--uuid4">request_data(self, DataType data_type, ClientId client_id, InstrumentId instrument_id=None, datetime start=None, datetime end=None, int limit=0, callback: Callable[[UUID4], None] | None = None, update_catalog: bool = False, dict params=None) → <a href="../core/index.htm#posei_trader.core.UUID4">UUID4</a><a href="#request_dataself-datatype-data_type-clientid-client_id-instrumentid-instrument_idnone-datetime-startnone-datetime-endnone-int-limit0-callback-callableuuid4-none--none--none-update_catalog-bool--false-dict-paramsnone--uuid4" class="hash-link" aria-label="Direct link to request_dataself-datatype-data_type-clientid-client_id-instrumentid-instrument_idnone-datetime-startnone-datetime-endnone-int-limit0-callback-callableuuid4-none--none--none-update_catalog-bool--false-dict-paramsnone--uuid4" title="Direct link to request_dataself-datatype-data_type-clientid-client_id-instrumentid-instrument_idnone-datetime-startnone-datetime-endnone-int-limit0-callback-callableuuid4-none--none--none-update_catalog-bool--false-dict-paramsnone--uuid4">​</a></h4>
<p>Request custom data for the given data type from the given data client.</p>
<p>Once the response is received, the data is forwarded from the message bus
to the on_historical_data handler.</p>
<p>If the request fails, then an error is logged.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>data_type</strong> (<a href="../model/data/index.htm#posei_trader.model.data.DataType"><em>DataType</em></a>) – The data type for the request.</li>
<li><strong>client_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.ClientId"><em>ClientId</em></a>) – The data client ID.</li>
<li><strong>start</strong> (<em>datetime</em> <em>,</em> <em>optional</em>) – The start datetime (UTC) of request time range.
The inclusiveness depends on individual data client implementation.</li>
<li><strong>end</strong> (<em>datetime</em> <em>,</em> <em>optional</em>) – The end datetime (UTC) of request time range.
The inclusiveness depends on individual data client implementation.</li>
<li><strong>limit</strong> (<em>int</em> <em>,</em> <em>optional</em>) – The limit on the amount of data points received.</li>
<li><strong>callback</strong> (<em>Callable</em> <em>[</em> <em>[</em><a href="../core/index.htm#posei_trader.core.UUID4"><em>UUID4</em></a> <em>]</em> <em>,</em> <em>None</em> <em>]</em> <em>,</em> <em>optional</em>) – The registered callback, to be called with the request ID when the response has
completed processing.</li>
<li><strong>update_catalog</strong> (<em>bool</em> <em>,</em> <em>optional</em>) – Whether to update a catalog with the received data.</li>
<li><strong>params</strong> (<em>dict</em> *[*<em>str</em> <em>,</em> <em>Any</em> <em>]</em> <em>,</em> <em>optional</em>) – Additional parameters potentially used by a specific client.</li>
</ul>
</li>
<li><strong>Returns:</strong>
The request_id for the request.</li>
<li><strong>Return type:</strong>
<a href="../core/index.htm#posei_trader.core.UUID4">UUID4</a></li>
<li><strong>Raises:</strong>
<strong>TypeError</strong> – If callback is not None and not of type Callable.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="request_instrumentself-instrumentid-instrument_id-datetime-startnone-datetime-endnone-clientid-client_idnone-callback-callableuuid4-noane--none--none-update_catalog-bool--false-dict-paramsnone--uuid4">request_instrument(self, InstrumentId instrument_id, datetime start=None, datetime end=None, ClientId client_id=None, callback: Callable[[UUID4], Noane] | None = None, update_catalog: bool = False, dict params=None) → <a href="../core/index.htm#posei_trader.core.UUID4">UUID4</a><a href="#request_instrumentself-instrumentid-instrument_id-datetime-startnone-datetime-endnone-clientid-client_idnone-callback-callableuuid4-noane--none--none-update_catalog-bool--false-dict-paramsnone--uuid4" class="hash-link" aria-label="Direct link to request_instrumentself-instrumentid-instrument_id-datetime-startnone-datetime-endnone-clientid-client_idnone-callback-callableuuid4-noane--none--none-update_catalog-bool--false-dict-paramsnone--uuid4" title="Direct link to request_instrumentself-instrumentid-instrument_id-datetime-startnone-datetime-endnone-clientid-client_idnone-callback-callableuuid4-noane--none--none-update_catalog-bool--false-dict-paramsnone--uuid4">​</a></h4>
<p>Request Instrument data for the given instrument ID.</p>
<p>If end is <code>None</code> then will request up to the most recent data.</p>
<p>Once the response is received, the instrument data is forwarded from the message bus
to the on_instrument handler.</p>
<p>If the request fails, then an error is logged.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>instrument_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.InstrumentId"><em>InstrumentId</em></a>) – The instrument ID for the request.</li>
<li><strong>start</strong> (<em>datetime</em> <em>,</em> <em>optional</em>) – The start datetime (UTC) of request time range.
The inclusiveness depends on individual data client implementation.</li>
<li><strong>end</strong> (<em>datetime</em> <em>,</em> <em>optional</em>) – The end datetime (UTC) of request time range.
The inclusiveness depends on individual data client implementation.</li>
<li><strong>client_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.ClientId"><em>ClientId</em></a> <em>,</em> <em>optional</em>) – The specific client ID for the command.
If <code>None</code> then will be inferred from the venue in the instrument ID.</li>
<li><strong>callback</strong> (<em>Callable</em> <em>[</em> <em>[</em><a href="../core/index.htm#posei_trader.core.UUID4"><em>UUID4</em></a> <em>]</em> <em>,</em> <em>None</em> <em>]</em> <em>,</em> <em>optional</em>) – The registered callback, to be called with the request ID when the response has
completed processing.</li>
<li><strong>update_catalog</strong> (<em>bool</em> <em>,</em> <em>optional</em>) – Whether to update a catalog with the received data.</li>
<li><strong>params</strong> (<em>dict</em> *[*<em>str</em> <em>,</em> <em>Any</em> <em>]</em> <em>,</em> <em>optional</em>) – Additional parameters potentially used by a specific client.</li>
</ul>
</li>
<li><strong>Returns:</strong>
The request_id for the request.</li>
<li><strong>Return type:</strong>
<a href="../core/index.htm#posei_trader.core.UUID4">UUID4</a></li>
<li><strong>Raises:</strong>
<ul>
<li><strong>ValueError</strong> – If start is not None and &gt; current timestamp (now).</li>
<li><strong>ValueError</strong> – If end is not None and &gt; current timestamp (now).</li>
<li><strong>ValueError</strong> – If start and end are not None and start is &gt;= end.</li>
<li><strong>TypeError</strong> – If callback is not None and not of type Callable.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="request_instrumentsself-venue-venue-datetime-startnone-datetime-endnone-clientid-client_idnone-callback-callableuuid4-none--none--none-update_catalog-bool--false-dict-paramsnone--uuid4">request_instruments(self, Venue venue, datetime start=None, datetime end=None, ClientId client_id=None, callback: Callable[[UUID4], None] | None = None, update_catalog: bool = False, dict params=None) → <a href="../core/index.htm#posei_trader.core.UUID4">UUID4</a><a href="#request_instrumentsself-venue-venue-datetime-startnone-datetime-endnone-clientid-client_idnone-callback-callableuuid4-none--none--none-update_catalog-bool--false-dict-paramsnone--uuid4" class="hash-link" aria-label="Direct link to request_instrumentsself-venue-venue-datetime-startnone-datetime-endnone-clientid-client_idnone-callback-callableuuid4-none--none--none-update_catalog-bool--false-dict-paramsnone--uuid4" title="Direct link to request_instrumentsself-venue-venue-datetime-startnone-datetime-endnone-clientid-client_idnone-callback-callableuuid4-none--none--none-update_catalog-bool--false-dict-paramsnone--uuid4">​</a></h4>
<p>Request all Instrument data for the given venue.</p>
<p>If end is <code>None</code> then will request up to the most recent data.</p>
<p>Once the response is received, the instrument data is forwarded from the message bus
to the on_instrument handler.</p>
<p>If the request fails, then an error is logged.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>venue</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.Venue"><em>Venue</em></a>) – The venue for the request.</li>
<li><strong>start</strong> (<em>datetime</em> <em>,</em> <em>optional</em>) – The start datetime (UTC) of request time range.
The inclusiveness depends on individual data client implementation.</li>
<li><strong>end</strong> (<em>datetime</em> <em>,</em> <em>optional</em>) – The end datetime (UTC) of request time range.
The inclusiveness depends on individual data client implementation.</li>
<li><strong>client_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.ClientId"><em>ClientId</em></a> <em>,</em> <em>optional</em>) – The specific client ID for the command.
If <code>None</code> then will be inferred from the venue in the instrument ID.</li>
<li><strong>callback</strong> (<em>Callable</em> <em>[</em> <em>[</em><a href="../core/index.htm#posei_trader.core.UUID4"><em>UUID4</em></a> <em>]</em> <em>,</em> <em>None</em> <em>]</em> <em>,</em> <em>optional</em>) – The registered callback, to be called with the request ID when the response has
completed processing.</li>
<li><strong>update_catalog</strong> (<em>bool</em> <em>,</em> <em>optional</em>) – Whether to update a catalog with the received data.</li>
<li><strong>params</strong> (<em>dict</em> *[*<em>str</em> <em>,</em> <em>Any</em> <em>]</em> <em>,</em> <em>optional</em>) – Additional parameters potentially used by a specific client.</li>
</ul>
</li>
<li><strong>Returns:</strong>
The request_id for the request.</li>
<li><strong>Return type:</strong>
<a href="../core/index.htm#posei_trader.core.UUID4">UUID4</a></li>
<li><strong>Raises:</strong>
<ul>
<li><strong>ValueError</strong> – If start is not None and &gt; current timestamp (now).</li>
<li><strong>ValueError</strong> – If end is not None and &gt; current timestamp (now).</li>
<li><strong>ValueError</strong> – If start and end are not None and start is &gt;= end.</li>
<li><strong>TypeError</strong> – If callback is not None and not of type Callable.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="request_order_book_snapshotself-instrumentid-instrument_id-int-limit0-clientid-client_idnone-callback-callableuuid4-none--none--none-dict-paramsnone--uuid4">request_order_book_snapshot(self, InstrumentId instrument_id, int limit=0, ClientId client_id=None, callback: Callable[[UUID4], None] | None = None, dict params=None) → <a href="../core/index.htm#posei_trader.core.UUID4">UUID4</a><a href="#request_order_book_snapshotself-instrumentid-instrument_id-int-limit0-clientid-client_idnone-callback-callableuuid4-none--none--none-dict-paramsnone--uuid4" class="hash-link" aria-label="Direct link to request_order_book_snapshotself-instrumentid-instrument_id-int-limit0-clientid-client_idnone-callback-callableuuid4-none--none--none-dict-paramsnone--uuid4" title="Direct link to request_order_book_snapshotself-instrumentid-instrument_id-int-limit0-clientid-client_idnone-callback-callableuuid4-none--none--none-dict-paramsnone--uuid4">​</a></h4>
<p>Request an order book snapshot.</p>
<p>Once the response is received, the order book data is forwarded from the message bus
to the on_historical_data handler.</p>
<p>If the request fails, then an error is logged.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>instrument_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.InstrumentId"><em>InstrumentId</em></a>) – The instrument ID for the order book snapshot request.</li>
<li><strong>limit</strong> (<em>int</em> <em>,</em> <em>optional</em>) – The limit on the depth of the order book snapshot.</li>
<li><strong>client_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.ClientId"><em>ClientId</em></a> <em>,</em> <em>optional</em>) – The specific client ID for the command.
If None, it will be inferred from the venue in the instrument ID.</li>
<li><strong>callback</strong> (<em>Callable</em> <em>[</em> <em>[</em><a href="../core/index.htm#posei_trader.core.UUID4"><em>UUID4</em></a> <em>]</em> <em>,</em> <em>None</em> <em>]</em> <em>,</em> <em>optional</em>) – The registered callback, to be called with the request ID when the response has completed processing.</li>
<li><strong>params</strong> (<em>dict</em> *[*<em>str</em> <em>,</em> <em>Any</em> <em>]</em> <em>,</em> <em>optional</em>) – Additional parameters potentially used by a specific client.</li>
</ul>
</li>
<li><strong>Returns:</strong>
The request_id for the request.</li>
<li><strong>Return type:</strong>
<a href="../core/index.htm#posei_trader.core.UUID4">UUID4</a></li>
<li><strong>Raises:</strong>
<ul>
<li><strong>ValueError</strong> – If the instrument_id is None.</li>
<li><strong>TypeError</strong> – If callback is not None and not of type Callable.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="request_quote_ticksself-instrumentid-instrument_id-datetime-startnone-datetime-endnone-int-limit0-clientid-client_idnone-callback-callableuuid4-none--none--none-update_catalog-bool--false-dict-paramsnone--uuid4">request_quote_ticks(self, InstrumentId instrument_id, datetime start=None, datetime end=None, int limit=0, ClientId client_id=None, callback: Callable[[UUID4], None] | None = None, update_catalog: bool = False, dict params=None) → <a href="../core/index.htm#posei_trader.core.UUID4">UUID4</a><a href="#request_quote_ticksself-instrumentid-instrument_id-datetime-startnone-datetime-endnone-int-limit0-clientid-client_idnone-callback-callableuuid4-none--none--none-update_catalog-bool--false-dict-paramsnone--uuid4" class="hash-link" aria-label="Direct link to request_quote_ticksself-instrumentid-instrument_id-datetime-startnone-datetime-endnone-int-limit0-clientid-client_idnone-callback-callableuuid4-none--none--none-update_catalog-bool--false-dict-paramsnone--uuid4" title="Direct link to request_quote_ticksself-instrumentid-instrument_id-datetime-startnone-datetime-endnone-int-limit0-clientid-client_idnone-callback-callableuuid4-none--none--none-update_catalog-bool--false-dict-paramsnone--uuid4">​</a></h4>
<p>Request historical QuoteTick data.</p>
<p>If end is <code>None</code> then will request up to the most recent data.</p>
<p>Once the response is received, the quote tick data is forwarded from the message bus
to the on_historical_data handler.</p>
<p>If the request fails, then an error is logged.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>instrument_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.InstrumentId"><em>InstrumentId</em></a>) – The tick instrument ID for the request.</li>
<li><strong>start</strong> (<em>datetime</em> <em>,</em> <em>optional</em>) – The start datetime (UTC) of request time range.
The inclusiveness depends on individual data client implementation.</li>
<li><strong>end</strong> (<em>datetime</em> <em>,</em> <em>optional</em>) – The end datetime (UTC) of request time range.
The inclusiveness depends on individual data client implementation.</li>
<li><strong>limit</strong> (<em>int</em> <em>,</em> <em>optional</em>) – The limit on the amount of quote ticks received.</li>
<li><strong>client_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.ClientId"><em>ClientId</em></a> <em>,</em> <em>optional</em>) – The specific client ID for the command.
If <code>None</code> then will be inferred from the venue in the instrument ID.</li>
<li><strong>callback</strong> (<em>Callable</em> <em>[</em> <em>[</em><a href="../core/index.htm#posei_trader.core.UUID4"><em>UUID4</em></a> <em>]</em> <em>,</em> <em>None</em> <em>]</em> <em>,</em> <em>optional</em>) – The registered callback, to be called with the request ID when the response has
completed processing.</li>
<li><strong>update_catalog</strong> (<em>bool</em> <em>,</em> <em>optional</em>) – Whether to update a catalog with the received data.</li>
<li><strong>params</strong> (<em>dict</em> *[*<em>str</em> <em>,</em> <em>Any</em> <em>]</em> <em>,</em> <em>optional</em>) – Additional parameters potentially used by a specific client.</li>
</ul>
</li>
<li><strong>Returns:</strong>
The request_id for the request.</li>
<li><strong>Return type:</strong>
<a href="../core/index.htm#posei_trader.core.UUID4">UUID4</a></li>
<li><strong>Raises:</strong>
<ul>
<li><strong>ValueError</strong> – If start is not None and &gt; current timestamp (now).</li>
<li><strong>ValueError</strong> – If end is not None and &gt; current timestamp (now).</li>
<li><strong>ValueError</strong> – If start and end are not None and start is &gt;= end.</li>
<li><strong>TypeError</strong> – If callback is not None and not of type Callable.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="request_trade_ticksself-instrumentid-instrument_id-datetime-startnone-datetime-endnone-int-limit0-clientid-client_idnone-callback-callableuuid4-none--none--none-update_catalog-bool--false-dict-paramsnone--uuid4">request_trade_ticks(self, InstrumentId instrument_id, datetime start=None, datetime end=None, int limit=0, ClientId client_id=None, callback: Callable[[UUID4], None] | None = None, update_catalog: bool = False, dict params=None) → <a href="../core/index.htm#posei_trader.core.UUID4">UUID4</a><a href="#request_trade_ticksself-instrumentid-instrument_id-datetime-startnone-datetime-endnone-int-limit0-clientid-client_idnone-callback-callableuuid4-none--none--none-update_catalog-bool--false-dict-paramsnone--uuid4" class="hash-link" aria-label="Direct link to request_trade_ticksself-instrumentid-instrument_id-datetime-startnone-datetime-endnone-int-limit0-clientid-client_idnone-callback-callableuuid4-none--none--none-update_catalog-bool--false-dict-paramsnone--uuid4" title="Direct link to request_trade_ticksself-instrumentid-instrument_id-datetime-startnone-datetime-endnone-int-limit0-clientid-client_idnone-callback-callableuuid4-none--none--none-update_catalog-bool--false-dict-paramsnone--uuid4">​</a></h4>
<p>Request historical TradeTick data.</p>
<p>If end is <code>None</code> then will request up to the most recent data.</p>
<p>Once the response is received, the trade tick data is forwarded from the message bus
to the on_historical_data handler.</p>
<p>If the request fails, then an error is logged.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>instrument_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.InstrumentId"><em>InstrumentId</em></a>) – The tick instrument ID for the request.</li>
<li><strong>start</strong> (<em>datetime</em> <em>,</em> <em>optional</em>) – The start datetime (UTC) of request time range.
The inclusiveness depends on individual data client implementation.</li>
<li><strong>end</strong> (<em>datetime</em> <em>,</em> <em>optional</em>) – The end datetime (UTC) of request time range.
The inclusiveness depends on individual data client implementation.</li>
<li><strong>limit</strong> (<em>int</em> <em>,</em> <em>optional</em>) – The limit on the amount of trade ticks received.</li>
<li><strong>client_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.ClientId"><em>ClientId</em></a> <em>,</em> <em>optional</em>) – The specific client ID for the command.
If <code>None</code> then will be inferred from the venue in the instrument ID.</li>
<li><strong>callback</strong> (<em>Callable</em> <em>[</em> <em>[</em><a href="../core/index.htm#posei_trader.core.UUID4"><em>UUID4</em></a> <em>]</em> <em>,</em> <em>None</em> <em>]</em> <em>,</em> <em>optional</em>) – The registered callback, to be called with the request ID when the response has
completed processing.</li>
<li><strong>update_catalog</strong> (<em>bool</em> <em>,</em> <em>optional</em>) – Whether to update a catalog with the received data.</li>
<li><strong>params</strong> (<em>dict</em> *[*<em>str</em> <em>,</em> <em>Any</em> <em>]</em> <em>,</em> <em>optional</em>) – Additional parameters potentially used by a specific client.</li>
</ul>
</li>
<li><strong>Returns:</strong>
The request_id for the request.</li>
<li><strong>Return type:</strong>
<a href="../core/index.htm#posei_trader.core.UUID4">UUID4</a></li>
<li><strong>Raises:</strong>
<ul>
<li><strong>ValueError</strong> – If start is not None and &gt; current timestamp (now).</li>
<li><strong>ValueError</strong> – If end is not None and &gt; current timestamp (now).</li>
<li><strong>ValueError</strong> – If start and end are not None and start is &gt;= end.</li>
<li><strong>TypeError</strong> – If callback is not None and not of type Callable.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="resetself--void">reset(self) → void<a href="#resetself--void" class="hash-link" aria-label="Direct link to reset(self) → void" title="Direct link to reset(self) → void">​</a></h4>
<p>Reset the component.</p>
<p>All stateful fields are reset to their initial value.</p>
<p>While executing on_reset() any exception will be logged and reraised, then the component
will remain in a <code>RESETTING</code> state.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-49">WARNING<a href="#warning-49" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>Do not override.</p>
<p>If the component is not in a valid state from which to execute this method,
then the component state will not change, and an error will be logged.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="resumeself--void">resume(self) → void<a href="#resumeself--void" class="hash-link" aria-label="Direct link to resume(self) → void" title="Direct link to resume(self) → void">​</a></h4>
<p>Resume the component.</p>
<p>While executing on_resume() any exception will be logged and reraised, then the component
will remain in a <code>RESUMING</code> state.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-50">WARNING<a href="#warning-50" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>Do not override.</p>
<p>If the component is not in a valid state from which to execute this method,
then the component state will not change, and an error will be logged.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="run_in_executorself-func-callable-any-tuple-argsnone-dict-kwargsnone">run_in_executor(self, func: Callable[..., Any], tuple args=None, dict kwargs=None)<a href="#run_in_executorself-func-callable-any-tuple-argsnone-dict-kwargsnone" class="hash-link" aria-label="Direct link to run_in_executor(self, func: Callable[..., Any], tuple args=None, dict kwargs=None)" title="Direct link to run_in_executor(self, func: Callable[..., Any], tuple args=None, dict kwargs=None)">​</a></h4>
<p>Schedules the callable func to be executed as fn(*args, **kwargs).</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>func</strong> (<em>Callable</em>) – The function to be executed.</li>
<li><strong>args</strong> (<em>positional arguments</em>) – The positional arguments for the call to func.</li>
<li><strong>kwargs</strong> (<em>arbitrary keyword arguments</em>) – The keyword arguments for the call to func.</li>
</ul>
</li>
<li><strong>Returns:</strong>
The unique task identifier for the execution.
This also corresponds to any future objects memory address.</li>
<li><strong>Return type:</strong>
<a href="#posei_trader.common.executor.TaskId">TaskId</a></li>
<li><strong>Raises:</strong>
<strong>TypeError</strong> – If func is not of type Callable.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="saveself--dict">save(self) → dict<a href="#saveself--dict" class="hash-link" aria-label="Direct link to save(self) → dict" title="Direct link to save(self) → dict">​</a></h4>
<p>Return the actor/strategy state dictionary to be saved.</p>
<p>Calls on_save.</p>
<ul>
<li><strong>Returns:</strong>
The strategy state to save.</li>
<li><strong>Return type:</strong>
dict[str, bytes]</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-51">WARNING<a href="#warning-51" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>Exceptions raised will be caught, logged, and reraised.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="shutdown_systemself-str-reasonnone--void">shutdown_system(self, str reason=None) → void<a href="#shutdown_systemself-str-reasonnone--void" class="hash-link" aria-label="Direct link to shutdown_system(self, str reason=None) → void" title="Direct link to shutdown_system(self, str reason=None) → void">​</a></h4>
<p>Initiate a system-wide shutdown by generating and publishing a ShutdownSystem command.</p>
<p>The command is handled by the system’s PoseiKernel, which will invoke either stop (synchronously)
or stop_async (asynchronously) depending on the execution context and the presence of an active event loop.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>reason</strong> (<em>str</em> <em>,</em> <em>optional</em>) – The reason for issuing the shutdown command.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="startself--void">start(self) → void<a href="#startself--void" class="hash-link" aria-label="Direct link to start(self) → void" title="Direct link to start(self) → void">​</a></h4>
<p>Start the component.</p>
<p>While executing on_start() any exception will be logged and reraised, then the component
will remain in a <code>STARTING</code> state.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-52">WARNING<a href="#warning-52" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>Do not override.</p>
<p>If the component is not in a valid state from which to execute this method,
then the component state will not change, and an error will be logged.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="state">state<a href="#state" class="hash-link" aria-label="Direct link to state" title="Direct link to state">​</a></h4>
<p>ComponentState</p>
<p>Return the components current state.</p>
<ul>
<li><strong>Return type:</strong>
ComponentState</li>
<li><strong>Type:</strong>
Component.state</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="stopself--void">stop(self) → void<a href="#stopself--void" class="hash-link" aria-label="Direct link to stop(self) → void" title="Direct link to stop(self) → void">​</a></h4>
<p>Stop the component.</p>
<p>While executing on_stop() any exception will be logged and reraised, then the component
will remain in a <code>STOPPING</code> state.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-53">WARNING<a href="#warning-53" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>Do not override.</p>
<p>If the component is not in a valid state from which to execute this method,
then the component state will not change, and an error will be logged.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="subscribe_barsself-bartype-bar_type-clientid-client_idnone-bool-await_partialfalse-bool-update_catalogfalse-dict-paramsnone--void">subscribe_bars(self, BarType bar_type, ClientId client_id=None, bool await_partial=False, bool update_catalog=False, dict params=None) → void<a href="#subscribe_barsself-bartype-bar_type-clientid-client_idnone-bool-await_partialfalse-bool-update_catalogfalse-dict-paramsnone--void" class="hash-link" aria-label="Direct link to subscribe_bars(self, BarType bar_type, ClientId client_id=None, bool await_partial=False, bool update_catalog=False, dict params=None) → void" title="Direct link to subscribe_bars(self, BarType bar_type, ClientId client_id=None, bool await_partial=False, bool update_catalog=False, dict params=None) → void">​</a></h4>
<p>Subscribe to streaming Bar data for the given bar type.</p>
<p>Once subscribed, any matching bar data published on the message bus is forwarded
to the on_bar handler.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>bar_type</strong> (<a href="../model/data/index.htm#posei_trader.model.data.BarType"><em>BarType</em></a>) – The bar type to subscribe to.</li>
<li><strong>client_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.ClientId"><em>ClientId</em></a> <em>,</em> <em>optional</em>) – The specific client ID for the command.
If <code>None</code> then will be inferred from the venue in the instrument ID.</li>
<li><strong>await_partial</strong> (<em>bool</em> <em>,</em> <em>default False</em>) – If the bar aggregator should await the arrival of a historical partial bar prior
to actively aggregating new bars.</li>
<li><strong>update_catalog</strong> (<em>bool</em> <em>,</em> <em>optional</em>) – Whether to update a catalog with the received data.
Only useful when downloading data during a backtest.</li>
<li><strong>params</strong> (<em>dict</em> *[*<em>str</em> <em>,</em> <em>Any</em> <em>]</em> <em>,</em> <em>optional</em>) – Additional parameters potentially used by a specific client.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="subscribe_dataself-datatype-data_type-clientid-client_idnone-instrumentid-instrument_idnone-bool-update_catalogfalse-dict-paramsnone--void">subscribe_data(self, DataType data_type, ClientId client_id=None, InstrumentId instrument_id=None, bool update_catalog=False, dict params=None) → void<a href="#subscribe_dataself-datatype-data_type-clientid-client_idnone-instrumentid-instrument_idnone-bool-update_catalogfalse-dict-paramsnone--void" class="hash-link" aria-label="Direct link to subscribe_data(self, DataType data_type, ClientId client_id=None, InstrumentId instrument_id=None, bool update_catalog=False, dict params=None) → void" title="Direct link to subscribe_data(self, DataType data_type, ClientId client_id=None, InstrumentId instrument_id=None, bool update_catalog=False, dict params=None) → void">​</a></h4>
<p>Subscribe to data of the given data type.</p>
<p>Once subscribed, any matching data published on the message bus is forwarded
to the on_data handler.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>data_type</strong> (<a href="../model/data/index.htm#posei_trader.model.data.DataType"><em>DataType</em></a>) – The data type to subscribe to.</li>
<li><strong>client_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.ClientId"><em>ClientId</em></a> <em>,</em> <em>optional</em>) – The data client ID. If supplied then a Subscribe command will be
sent to the corresponding data client.</li>
<li><strong>update_catalog</strong> (<em>bool</em> <em>,</em> <em>optional</em>) – Whether to update a catalog with the received data.
Only useful when downloading data during a backtest.</li>
<li><strong>params</strong> (<em>dict</em> *[*<em>str</em> <em>,</em> <em>Any</em> <em>]</em> <em>,</em> <em>optional</em>) – Additional parameters potentially used by a specific client.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="subscribe_index_pricesself-instrumentid-instrument_id-clientid-client_idnone-dict-paramsnone--void">subscribe_index_prices(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) → void<a href="#subscribe_index_pricesself-instrumentid-instrument_id-clientid-client_idnone-dict-paramsnone--void" class="hash-link" aria-label="Direct link to subscribe_index_prices(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) → void" title="Direct link to subscribe_index_prices(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) → void">​</a></h4>
<p>Subscribe to streaming IndexPriceUpdate data for the given instrument ID.</p>
<p>Once subscribed, any matching index price updates published on the message bus are forwarded
to the on_index_price handler.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>instrument_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.InstrumentId"><em>InstrumentId</em></a>) – The instrument to subscribe to.</li>
<li><strong>client_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.ClientId"><em>ClientId</em></a> <em>,</em> <em>optional</em>) – The specific client ID for the command.
If <code>None</code> then will be inferred from the venue in the instrument ID.</li>
<li><strong>params</strong> (<em>dict</em> *[*<em>str</em> <em>,</em> <em>Any</em> <em>]</em> <em>,</em> <em>optional</em>) – Additional parameters potentially used by a specific client.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="subscribe_instrumentself-instrumentid-instrument_id-clientid-client_idnone-dict-paramsnone--void">subscribe_instrument(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) → void<a href="#subscribe_instrumentself-instrumentid-instrument_id-clientid-client_idnone-dict-paramsnone--void" class="hash-link" aria-label="Direct link to subscribe_instrument(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) → void" title="Direct link to subscribe_instrument(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) → void">​</a></h4>
<p>Subscribe to update Instrument data for the given instrument ID.</p>
<p>Once subscribed, any matching instrument data published on the message bus is forwarded
to the on_instrument handler.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>instrument_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.InstrumentId"><em>InstrumentId</em></a>) – The instrument ID for the subscription.</li>
<li><strong>client_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.ClientId"><em>ClientId</em></a> <em>,</em> <em>optional</em>) – The specific client ID for the command.
If <code>None</code> then will be inferred from the venue in the instrument ID.</li>
<li><strong>params</strong> (<em>dict</em> *[*<em>str</em> <em>,</em> <em>Any</em> <em>]</em> <em>,</em> <em>optional</em>) – Additional parameters potentially used by a specific client.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="subscribe_instrument_closeself-instrumentid-instrument_id-clientid-client_idnone-dict-paramsnone--void">subscribe_instrument_close(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) → void<a href="#subscribe_instrument_closeself-instrumentid-instrument_id-clientid-client_idnone-dict-paramsnone--void" class="hash-link" aria-label="Direct link to subscribe_instrument_close(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) → void" title="Direct link to subscribe_instrument_close(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) → void">​</a></h4>
<p>Subscribe to close updates for the given instrument ID.</p>
<p>Once subscribed, any matching instrument close data published on the message bus is forwarded
to the on_instrument_close handler.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>instrument_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.InstrumentId"><em>InstrumentId</em></a>) – The instrument to subscribe to status updates for.</li>
<li><strong>client_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.ClientId"><em>ClientId</em></a> <em>,</em> <em>optional</em>) – The specific client ID for the command.
If <code>None</code> then will be inferred from the venue in the instrument ID.</li>
<li><strong>params</strong> (<em>dict</em> *[*<em>str</em> <em>,</em> <em>Any</em> <em>]</em> <em>,</em> <em>optional</em>) – Additional parameters potentially used by a specific client.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="subscribe_instrument_statusself-instrumentid-instrument_id-clientid-client_idnone-dict-paramsnone--void">subscribe_instrument_status(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) → void<a href="#subscribe_instrument_statusself-instrumentid-instrument_id-clientid-client_idnone-dict-paramsnone--void" class="hash-link" aria-label="Direct link to subscribe_instrument_status(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) → void" title="Direct link to subscribe_instrument_status(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) → void">​</a></h4>
<p>Subscribe to status updates for the given instrument ID.</p>
<p>Once subscribed, any matching instrument status data published on the message bus is forwarded
to the on_instrument_status handler.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>instrument_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.InstrumentId"><em>InstrumentId</em></a>) – The instrument to subscribe to status updates for.</li>
<li><strong>client_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.ClientId"><em>ClientId</em></a> <em>,</em> <em>optional</em>) – The specific client ID for the command.
If <code>None</code> then will be inferred from the venue in the instrument ID.</li>
<li><strong>params</strong> (<em>dict</em> *[*<em>str</em> <em>,</em> <em>Any</em> <em>]</em> <em>,</em> <em>optional</em>) – Additional parameters potentially used by a specific client.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="subscribe_instrumentsself-venue-venue-clientid-client_idnone-dict-paramsnone--void">subscribe_instruments(self, Venue venue, ClientId client_id=None, dict params=None) → void<a href="#subscribe_instrumentsself-venue-venue-clientid-client_idnone-dict-paramsnone--void" class="hash-link" aria-label="Direct link to subscribe_instruments(self, Venue venue, ClientId client_id=None, dict params=None) → void" title="Direct link to subscribe_instruments(self, Venue venue, ClientId client_id=None, dict params=None) → void">​</a></h4>
<p>Subscribe to update Instrument data for the given venue.</p>
<p>Once subscribed, any matching instrument data published on the message bus is forwarded
the on_instrument handler.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>venue</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.Venue"><em>Venue</em></a>) – The venue for the subscription.</li>
<li><strong>client_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.ClientId"><em>ClientId</em></a> <em>,</em> <em>optional</em>) – The specific client ID for the command.
If <code>None</code> then will be inferred from the venue.</li>
<li><strong>params</strong> (<em>dict</em> *[*<em>str</em> <em>,</em> <em>Any</em> <em>]</em> <em>,</em> <em>optional</em>) – Additional parameters potentially used by a specific client.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="subscribe_mark_pricesself-instrumentid-instrument_id-clientid-client_idnone-dict-paramsnone--void">subscribe_mark_prices(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) → void<a href="#subscribe_mark_pricesself-instrumentid-instrument_id-clientid-client_idnone-dict-paramsnone--void" class="hash-link" aria-label="Direct link to subscribe_mark_prices(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) → void" title="Direct link to subscribe_mark_prices(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) → void">​</a></h4>
<p>Subscribe to streaming MarkPriceUpdate data for the given instrument ID.</p>
<p>Once subscribed, any matching mark price updates published on the message bus are forwarded
to the on_mark_price handler.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>instrument_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.InstrumentId"><em>InstrumentId</em></a>) – The instrument to subscribe to.</li>
<li><strong>client_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.ClientId"><em>ClientId</em></a> <em>,</em> <em>optional</em>) – The specific client ID for the command.
If <code>None</code> then will be inferred from the venue in the instrument ID.</li>
<li><strong>params</strong> (<em>dict</em> *[*<em>str</em> <em>,</em> <em>Any</em> <em>]</em> <em>,</em> <em>optional</em>) – Additional parameters potentially used by a specific client.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="subscribe_order_book_at_intervalself-instrumentid-instrument_id-booktype-book_typebooktypel2_mbp-int-depth0-int-interval_ms1000-clientid-client_idnone-bool-managedtrue-dict-paramsnone--void">subscribe_order_book_at_interval(self, InstrumentId instrument_id, BookType book_type=BookType.L2_MBP, int depth=0, int interval_ms=1000, ClientId client_id=None, bool managed=True, dict params=None) → void<a href="#subscribe_order_book_at_intervalself-instrumentid-instrument_id-booktype-book_typebooktypel2_mbp-int-depth0-int-interval_ms1000-clientid-client_idnone-bool-managedtrue-dict-paramsnone--void" class="hash-link" aria-label="Direct link to subscribe_order_book_at_interval(self, InstrumentId instrument_id, BookType book_type=BookType.L2_MBP, int depth=0, int interval_ms=1000, ClientId client_id=None, bool managed=True, dict params=None) → void" title="Direct link to subscribe_order_book_at_interval(self, InstrumentId instrument_id, BookType book_type=BookType.L2_MBP, int depth=0, int interval_ms=1000, ClientId client_id=None, bool managed=True, dict params=None) → void">​</a></h4>
<p>Subscribe to an OrderBook at a specified interval for the given instrument ID.</p>
<p>Once subscribed, any matching order book updates published on the message bus are forwarded
to the on_order_book handler.</p>
<p>The DataEngine will only maintain one order book for each instrument.
Because of this - the level, depth and params for the stream will be set
as per the last subscription request (this will also affect all subscribers).</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>instrument_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.InstrumentId"><em>InstrumentId</em></a>) – The order book instrument ID to subscribe to.</li>
<li><strong>book_type</strong> (BookType {<code>L1_MBP</code>, <code>L2_MBP</code>, <code>L3_MBO</code>}) – The order book type.</li>
<li><strong>depth</strong> (<em>int</em> <em>,</em> <em>optional</em>) – The maximum depth for the order book. A depth of 0 is maximum depth.</li>
<li><strong>interval_ms</strong> (<em>int</em> <em>,</em> <em>default 1000</em>) – The order book snapshot interval (milliseconds).</li>
<li><strong>client_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.ClientId"><em>ClientId</em></a> <em>,</em> <em>optional</em>) – The specific client ID for the command.
If <code>None</code> then will be inferred from the venue in the instrument ID.</li>
<li><strong>managed</strong> (<em>bool</em> <em>,</em> <em>default True</em>) – If an order book should be managed by the data engine based on the subscribed feed.</li>
<li><strong>params</strong> (<em>dict</em> *[*<em>str</em> <em>,</em> <em>Any</em> <em>]</em> <em>,</em> <em>optional</em>) – Additional parameters potentially used by a specific client.</li>
</ul>
</li>
<li><strong>Raises:</strong>
<ul>
<li><strong>ValueError</strong> – If depth is negative (&lt; 0).</li>
<li><strong>ValueError</strong> – If interval_ms is not positive (&gt; 0).</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-54">WARNING<a href="#warning-54" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>Consider subscribing to order book deltas if you need intervals less than 100 milliseconds.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="subscribe_order_book_deltasself-instrumentid-instrument_id-booktype-book_typebooktypel2_mbp-int-depth0-clientid-client_idnone-bool-managedtrue-bool-pyo3_conversionfalse-dict-paramsnone--void">subscribe_order_book_deltas(self, InstrumentId instrument_id, BookType book_type=BookType.L2_MBP, int depth=0, ClientId client_id=None, bool managed=True, bool pyo3_conversion=False, dict params=None) → void<a href="#subscribe_order_book_deltasself-instrumentid-instrument_id-booktype-book_typebooktypel2_mbp-int-depth0-clientid-client_idnone-bool-managedtrue-bool-pyo3_conversionfalse-dict-paramsnone--void" class="hash-link" aria-label="Direct link to subscribe_order_book_deltas(self, InstrumentId instrument_id, BookType book_type=BookType.L2_MBP, int depth=0, ClientId client_id=None, bool managed=True, bool pyo3_conversion=False, dict params=None) → void" title="Direct link to subscribe_order_book_deltas(self, InstrumentId instrument_id, BookType book_type=BookType.L2_MBP, int depth=0, ClientId client_id=None, bool managed=True, bool pyo3_conversion=False, dict params=None) → void">​</a></h4>
<p>Subscribe to the order book data stream, being a snapshot then deltas
for the given instrument ID.</p>
<p>Once subscribed, any matching order book data published on the message bus is forwarded
to the on_order_book_deltas handler.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>instrument_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.InstrumentId"><em>InstrumentId</em></a>) – The order book instrument ID to subscribe to.</li>
<li><strong>book_type</strong> (BookType {<code>L1_MBP</code>, <code>L2_MBP</code>, <code>L3_MBO</code>}) – The order book type.</li>
<li><strong>depth</strong> (<em>int</em> <em>,</em> <em>optional</em>) – The maximum depth for the order book. A depth of 0 is maximum depth.</li>
<li><strong>client_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.ClientId"><em>ClientId</em></a> <em>,</em> <em>optional</em>) – The specific client ID for the command.
If <code>None</code> then will be inferred from the venue in the instrument ID.</li>
<li><strong>managed</strong> (<em>bool</em> <em>,</em> <em>default True</em>) – If an order book should be managed by the data engine based on the subscribed feed.</li>
<li><strong>pyo3_conversion</strong> (<em>bool</em> <em>,</em> <em>default False</em>) – If received deltas should be converted to nautilus_pyo3.OrderBookDeltas
prior to being passed to the on_order_book_deltas handler.</li>
<li><strong>params</strong> (<em>dict</em> *[*<em>str</em> <em>,</em> <em>Any</em> <em>]</em> <em>,</em> <em>optional</em>) – Additional parameters potentially used by a specific client.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="subscribe_order_book_depthself-instrumentid-instrument_id-booktype-book_typebooktypel2_mbp-int-depth0-clientid-client_idnone-bool-managedtrue-bool-pyo3_conversionfalse-dict-paramsnone--void">subscribe_order_book_depth(self, InstrumentId instrument_id, BookType book_type=BookType.L2_MBP, int depth=0, ClientId client_id=None, bool managed=True, bool pyo3_conversion=False, dict params=None) → void<a href="#subscribe_order_book_depthself-instrumentid-instrument_id-booktype-book_typebooktypel2_mbp-int-depth0-clientid-client_idnone-bool-managedtrue-bool-pyo3_conversionfalse-dict-paramsnone--void" class="hash-link" aria-label="Direct link to subscribe_order_book_depth(self, InstrumentId instrument_id, BookType book_type=BookType.L2_MBP, int depth=0, ClientId client_id=None, bool managed=True, bool pyo3_conversion=False, dict params=None) → void" title="Direct link to subscribe_order_book_depth(self, InstrumentId instrument_id, BookType book_type=BookType.L2_MBP, int depth=0, ClientId client_id=None, bool managed=True, bool pyo3_conversion=False, dict params=None) → void">​</a></h4>
<p>Subscribe to the order book depth stream for the given instrument ID.</p>
<p>Once subscribed, any matching order book data published on the message bus is forwarded
to the on_order_book_depth handler.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>instrument_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.InstrumentId"><em>InstrumentId</em></a>) – The order book instrument ID to subscribe to.</li>
<li><strong>book_type</strong> (BookType {<code>L1_MBP</code>, <code>L2_MBP</code>, <code>L3_MBO</code>}) – The order book type.</li>
<li><strong>client_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.ClientId"><em>ClientId</em></a> <em>,</em> <em>optional</em>) – The specific client ID for the command.
If <code>None</code> then will be inferred from the venue in the instrument ID.</li>
<li><strong>managed</strong> (<em>bool</em> <em>,</em> <em>default True</em>) – If an order book should be managed by the data engine based on the subscribed feed.</li>
<li><strong>pyo3_conversion</strong> (<em>bool</em> <em>,</em> <em>default False</em>) – If received deltas should be converted to nautilus_pyo3.OrderBookDepth
prior to being passed to the on_order_book_depth handler.</li>
<li><strong>params</strong> (<em>dict</em> *[*<em>str</em> <em>,</em> <em>Any</em> <em>]</em> <em>,</em> <em>optional</em>) – Additional parameters potentially used by a specific client.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="subscribe_quote_ticksself-instrumentid-instrument_id-clientid-client_idnone-bool-update_catalogfalse-dict-paramsnone--void">subscribe_quote_ticks(self, InstrumentId instrument_id, ClientId client_id=None, bool update_catalog=False, dict params=None) → void<a href="#subscribe_quote_ticksself-instrumentid-instrument_id-clientid-client_idnone-bool-update_catalogfalse-dict-paramsnone--void" class="hash-link" aria-label="Direct link to subscribe_quote_ticks(self, InstrumentId instrument_id, ClientId client_id=None, bool update_catalog=False, dict params=None) → void" title="Direct link to subscribe_quote_ticks(self, InstrumentId instrument_id, ClientId client_id=None, bool update_catalog=False, dict params=None) → void">​</a></h4>
<p>Subscribe to streaming QuoteTick data for the given instrument ID.</p>
<p>Once subscribed, any matching quote tick data published on the message bus is forwarded
to the on_quote_tick handler.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>instrument_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.InstrumentId"><em>InstrumentId</em></a>) – The tick instrument to subscribe to.</li>
<li><strong>client_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.ClientId"><em>ClientId</em></a> <em>,</em> <em>optional</em>) – The specific client ID for the command.
If <code>None</code> then will be inferred from the venue in the instrument ID.</li>
<li><strong>update_catalog</strong> (<em>bool</em> <em>,</em> <em>optional</em>) – Whether to update a catalog with the received data.
Only useful when downloading data during a backtest.</li>
<li><strong>params</strong> (<em>dict</em> *[*<em>str</em> <em>,</em> <em>Any</em> <em>]</em> <em>,</em> <em>optional</em>) – Additional parameters potentially used by a specific client.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="subscribe_signalself-str-name--void">subscribe_signal(self, str name=&#x27;&#x27;) → void<a href="#subscribe_signalself-str-name--void" class="hash-link" aria-label="Direct link to subscribe_signal(self, str name=&#x27;&#x27;) → void" title="Direct link to subscribe_signal(self, str name=&#x27;&#x27;) → void">​</a></h4>
<p>Subscribe to a specific signal by name, or to all signals if no name is provided.</p>
<p>Once subscribed, any matching signal data published on the message bus is forwarded
to the on_signal handler.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>name</strong> (<em>str</em> <em>,</em> <em>optional</em>) – The name of the signal to subscribe to. If not provided or an empty
string is passed, the subscription will include all signals.
The signal name is case-insensitive and will be capitalized
(e.g., ‘example’ becomes ‘SignalExample*’).</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="subscribe_trade_ticksself-instrumentid-instrument_id-clientid-client_idnone-bool-update_catalogfalse-dict-paramsnone--void">subscribe_trade_ticks(self, InstrumentId instrument_id, ClientId client_id=None, bool update_catalog=False, dict params=None) → void<a href="#subscribe_trade_ticksself-instrumentid-instrument_id-clientid-client_idnone-bool-update_catalogfalse-dict-paramsnone--void" class="hash-link" aria-label="Direct link to subscribe_trade_ticks(self, InstrumentId instrument_id, ClientId client_id=None, bool update_catalog=False, dict params=None) → void" title="Direct link to subscribe_trade_ticks(self, InstrumentId instrument_id, ClientId client_id=None, bool update_catalog=False, dict params=None) → void">​</a></h4>
<p>Subscribe to streaming TradeTick data for the given instrument ID.</p>
<p>Once subscribed, any matching trade tick data published on the message bus is forwarded
to the on_trade_tick handler.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>instrument_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.InstrumentId"><em>InstrumentId</em></a>) – The tick instrument to subscribe to.</li>
<li><strong>client_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.ClientId"><em>ClientId</em></a> <em>,</em> <em>optional</em>) – The specific client ID for the command.
If <code>None</code> then will be inferred from the venue in the instrument ID.</li>
<li><strong>update_catalog</strong> (<em>bool</em> <em>,</em> <em>optional</em>) – Whether to update a catalog with the received data.
Only useful when downloading data during a backtest.</li>
<li><strong>params</strong> (<em>dict</em> *[*<em>str</em> <em>,</em> <em>Any</em> <em>]</em> <em>,</em> <em>optional</em>) – Additional parameters potentially used by a specific client.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="to_importable_configself--importableactorconfig">to_importable_config(self) → <a href="../config/index.htm#posei_trader.common.config.ImportableActorConfig">ImportableActorConfig</a><a href="#to_importable_configself--importableactorconfig" class="hash-link" aria-label="Direct link to to_importable_configself--importableactorconfig" title="Direct link to to_importable_configself--importableactorconfig">​</a></h4>
<p>Returns an importable configuration for this actor.</p>
<ul>
<li><strong>Return type:</strong>
<a href="../config/index.htm#posei_trader.common.config.ImportableActorConfig">ImportableActorConfig</a></li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="trader_id">trader_id<a href="#trader_id" class="hash-link" aria-label="Direct link to trader_id" title="Direct link to trader_id">​</a></h4>
<p>The trader ID associated with the component.</p>
<ul>
<li><strong>Returns:</strong>
TraderId</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="type">type<a href="#type" class="hash-link" aria-label="Direct link to type" title="Direct link to type">​</a></h4>
<p>The components type.</p>
<ul>
<li><strong>Returns:</strong>
type</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="unsubscribe_barsself-bartype-bar_type-clientid-client_idnone-dict-paramsnone--void">unsubscribe_bars(self, BarType bar_type, ClientId client_id=None, dict params=None) → void<a href="#unsubscribe_barsself-bartype-bar_type-clientid-client_idnone-dict-paramsnone--void" class="hash-link" aria-label="Direct link to unsubscribe_bars(self, BarType bar_type, ClientId client_id=None, dict params=None) → void" title="Direct link to unsubscribe_bars(self, BarType bar_type, ClientId client_id=None, dict params=None) → void">​</a></h4>
<p>Unsubscribe from streaming Bar data for the given bar type.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>bar_type</strong> (<a href="../model/data/index.htm#posei_trader.model.data.BarType"><em>BarType</em></a>) – The bar type to unsubscribe from.</li>
<li><strong>client_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.ClientId"><em>ClientId</em></a> <em>,</em> <em>optional</em>) – The specific client ID for the command.
If <code>None</code> then will be inferred from the venue in the instrument ID.</li>
<li><strong>params</strong> (<em>dict</em> *[*<em>str</em> <em>,</em> <em>Any</em> <em>]</em> <em>,</em> <em>optional</em>) – Additional parameters potentially used by a specific client.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="unsubscribe_dataself-datatype-data_type-clientid-client_idnone-instrumentid-instrument_idnone-dict-paramsnone--void">unsubscribe_data(self, DataType data_type, ClientId client_id=None, InstrumentId instrument_id=None, dict params=None) → void<a href="#unsubscribe_dataself-datatype-data_type-clientid-client_idnone-instrumentid-instrument_idnone-dict-paramsnone--void" class="hash-link" aria-label="Direct link to unsubscribe_data(self, DataType data_type, ClientId client_id=None, InstrumentId instrument_id=None, dict params=None) → void" title="Direct link to unsubscribe_data(self, DataType data_type, ClientId client_id=None, InstrumentId instrument_id=None, dict params=None) → void">​</a></h4>
<p>Unsubscribe from data of the given data type.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>data_type</strong> (<a href="../model/data/index.htm#posei_trader.model.data.DataType"><em>DataType</em></a>) – The data type to unsubscribe from.</li>
<li><strong>client_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.ClientId"><em>ClientId</em></a> <em>,</em> <em>optional</em>) – The data client ID. If supplied then an Unsubscribe command will
be sent to the data client.</li>
<li><strong>params</strong> (<em>dict</em> *[*<em>str</em> <em>,</em> <em>Any</em> <em>]</em> <em>,</em> <em>optional</em>) – Additional parameters potentially used by a specific client.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="unsubscribe_index_pricesself-instrumentid-instrument_id-clientid-client_idnone-dict-paramsnone--void">unsubscribe_index_prices(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) → void<a href="#unsubscribe_index_pricesself-instrumentid-instrument_id-clientid-client_idnone-dict-paramsnone--void" class="hash-link" aria-label="Direct link to unsubscribe_index_prices(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) → void" title="Direct link to unsubscribe_index_prices(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) → void">​</a></h4>
<p>Unsubscribe from streaming IndexPriceUpdate data for the given instrument ID.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>instrument_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.InstrumentId"><em>InstrumentId</em></a>) – The instrument to subscribe to.</li>
<li><strong>client_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.ClientId"><em>ClientId</em></a> <em>,</em> <em>optional</em>) – The specific client ID for the command.
If <code>None</code> then will be inferred from the venue in the instrument ID.</li>
<li><strong>params</strong> (<em>dict</em> *[*<em>str</em> <em>,</em> <em>Any</em> <em>]</em> <em>,</em> <em>optional</em>) – Additional parameters potentially used by a specific client.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="unsubscribe_instrumentself-instrumentid-instrument_id-clientid-client_idnone-dict-paramsnone--void">unsubscribe_instrument(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) → void<a href="#unsubscribe_instrumentself-instrumentid-instrument_id-clientid-client_idnone-dict-paramsnone--void" class="hash-link" aria-label="Direct link to unsubscribe_instrument(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) → void" title="Direct link to unsubscribe_instrument(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) → void">​</a></h4>
<p>Unsubscribe from update Instrument data for the given instrument ID.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>instrument_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.InstrumentId"><em>InstrumentId</em></a>) – The instrument to unsubscribe from.</li>
<li><strong>client_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.ClientId"><em>ClientId</em></a> <em>,</em> <em>optional</em>) – The specific client ID for the command.
If <code>None</code> then will be inferred from the venue in the instrument ID.</li>
<li><strong>params</strong> (<em>dict</em> *[*<em>str</em> <em>,</em> <em>Any</em> <em>]</em> <em>,</em> <em>optional</em>) – Additional parameters potentially used by a specific client.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="unsubscribe_instrument_statusself-instrumentid-instrument_id-clientid-client_idnone-dict-paramsnone--void">unsubscribe_instrument_status(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) → void<a href="#unsubscribe_instrument_statusself-instrumentid-instrument_id-clientid-client_idnone-dict-paramsnone--void" class="hash-link" aria-label="Direct link to unsubscribe_instrument_status(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) → void" title="Direct link to unsubscribe_instrument_status(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) → void">​</a></h4>
<p>Unsubscribe to status updates of the given venue.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>instrument_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.InstrumentId"><em>InstrumentId</em></a>) – The instrument to unsubscribe to status updates for.</li>
<li><strong>client_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.ClientId"><em>ClientId</em></a> <em>,</em> <em>optional</em>) – The specific client ID for the command.
If <code>None</code> then will be inferred from the venue.</li>
<li><strong>params</strong> (<em>dict</em> *[*<em>str</em> <em>,</em> <em>Any</em> <em>]</em> <em>,</em> <em>optional</em>) – Additional parameters potentially used by a specific client.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="unsubscribe_instrumentsself-venue-venue-clientid-client_idnone-dict-paramsnone--void">unsubscribe_instruments(self, Venue venue, ClientId client_id=None, dict params=None) → void<a href="#unsubscribe_instrumentsself-venue-venue-clientid-client_idnone-dict-paramsnone--void" class="hash-link" aria-label="Direct link to unsubscribe_instruments(self, Venue venue, ClientId client_id=None, dict params=None) → void" title="Direct link to unsubscribe_instruments(self, Venue venue, ClientId client_id=None, dict params=None) → void">​</a></h4>
<p>Unsubscribe from update Instrument data for the given venue.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>venue</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.Venue"><em>Venue</em></a>) – The venue for the subscription.</li>
<li><strong>client_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.ClientId"><em>ClientId</em></a> <em>,</em> <em>optional</em>) – The specific client ID for the command.
If <code>None</code> then will be inferred from the venue.</li>
<li><strong>params</strong> (<em>dict</em> *[*<em>str</em> <em>,</em> <em>Any</em> <em>]</em> <em>,</em> <em>optional</em>) – Additional parameters potentially used by a specific client.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="unsubscribe_mark_pricesself-instrumentid-instrument_id-clientid-client_idnone-dict-paramsnone--void">unsubscribe_mark_prices(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) → void<a href="#unsubscribe_mark_pricesself-instrumentid-instrument_id-clientid-client_idnone-dict-paramsnone--void" class="hash-link" aria-label="Direct link to unsubscribe_mark_prices(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) → void" title="Direct link to unsubscribe_mark_prices(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) → void">​</a></h4>
<p>Unsubscribe from streaming MarkPriceUpdate data for the given instrument ID.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>instrument_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.InstrumentId"><em>InstrumentId</em></a>) – The instrument to subscribe to.</li>
<li><strong>client_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.ClientId"><em>ClientId</em></a> <em>,</em> <em>optional</em>) – The specific client ID for the command.
If <code>None</code> then will be inferred from the venue in the instrument ID.</li>
<li><strong>params</strong> (<em>dict</em> *[*<em>str</em> <em>,</em> <em>Any</em> <em>]</em> <em>,</em> <em>optional</em>) – Additional parameters potentially used by a specific client.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="unsubscribe_order_book_at_intervalself-instrumentid-instrument_id-int-interval_ms1000-clientid-client_idnone-dict-paramsnone--void">unsubscribe_order_book_at_interval(self, InstrumentId instrument_id, int interval_ms=1000, ClientId client_id=None, dict params=None) → void<a href="#unsubscribe_order_book_at_intervalself-instrumentid-instrument_id-int-interval_ms1000-clientid-client_idnone-dict-paramsnone--void" class="hash-link" aria-label="Direct link to unsubscribe_order_book_at_interval(self, InstrumentId instrument_id, int interval_ms=1000, ClientId client_id=None, dict params=None) → void" title="Direct link to unsubscribe_order_book_at_interval(self, InstrumentId instrument_id, int interval_ms=1000, ClientId client_id=None, dict params=None) → void">​</a></h4>
<p>Unsubscribe from an OrderBook at a specified interval for the given instrument ID.</p>
<p>The interval must match the previously subscribed interval.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>instrument_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.InstrumentId"><em>InstrumentId</em></a>) – The order book instrument to subscribe to.</li>
<li><strong>interval_ms</strong> (<em>int</em> <em>,</em> <em>default 1000</em>) – The order book snapshot interval (milliseconds).</li>
<li><strong>client_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.ClientId"><em>ClientId</em></a> <em>,</em> <em>optional</em>) – The specific client ID for the command.
If <code>None</code> then will be inferred from the venue in the instrument ID.</li>
<li><strong>params</strong> (<em>dict</em> *[*<em>str</em> <em>,</em> <em>Any</em> <em>]</em> <em>,</em> <em>optional</em>) – Additional parameters potentially used by a specific client.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="unsubscribe_order_book_deltasself-instrumentid-instrument_id-clientid-client_idnone-dict-paramsnone--void">unsubscribe_order_book_deltas(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) → void<a href="#unsubscribe_order_book_deltasself-instrumentid-instrument_id-clientid-client_idnone-dict-paramsnone--void" class="hash-link" aria-label="Direct link to unsubscribe_order_book_deltas(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) → void" title="Direct link to unsubscribe_order_book_deltas(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) → void">​</a></h4>
<p>Unsubscribe the order book deltas stream for the given instrument ID.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>instrument_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.InstrumentId"><em>InstrumentId</em></a>) – The order book instrument to subscribe to.</li>
<li><strong>client_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.ClientId"><em>ClientId</em></a> <em>,</em> <em>optional</em>) – The specific client ID for the command.
If <code>None</code> then will be inferred from the venue in the instrument ID.</li>
<li><strong>params</strong> (<em>dict</em> *[*<em>str</em> <em>,</em> <em>Any</em> <em>]</em> <em>,</em> <em>optional</em>) – Additional parameters potentially used by a specific client.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="unsubscribe_order_book_depthself-instrumentid-instrument_id-clientid-client_idnone-dict-paramsnone--void">unsubscribe_order_book_depth(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) → void<a href="#unsubscribe_order_book_depthself-instrumentid-instrument_id-clientid-client_idnone-dict-paramsnone--void" class="hash-link" aria-label="Direct link to unsubscribe_order_book_depth(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) → void" title="Direct link to unsubscribe_order_book_depth(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) → void">​</a></h4>
<p>Unsubscribe the order book depth stream for the given instrument ID.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>instrument_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.InstrumentId"><em>InstrumentId</em></a>) – The order book instrument to subscribe to.</li>
<li><strong>client_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.ClientId"><em>ClientId</em></a> <em>,</em> <em>optional</em>) – The specific client ID for the command.
If <code>None</code> then will be inferred from the venue in the instrument ID.</li>
<li><strong>params</strong> (<em>dict</em> *[*<em>str</em> <em>,</em> <em>Any</em> <em>]</em> <em>,</em> <em>optional</em>) – Additional parameters potentially used by a specific client.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="unsubscribe_quote_ticksself-instrumentid-instrument_id-clientid-client_idnone-dict-paramsnone--void">unsubscribe_quote_ticks(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) → void<a href="#unsubscribe_quote_ticksself-instrumentid-instrument_id-clientid-client_idnone-dict-paramsnone--void" class="hash-link" aria-label="Direct link to unsubscribe_quote_ticks(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) → void" title="Direct link to unsubscribe_quote_ticks(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) → void">​</a></h4>
<p>Unsubscribe from streaming QuoteTick data for the given instrument ID.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>instrument_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.InstrumentId"><em>InstrumentId</em></a>) – The tick instrument to unsubscribe from.</li>
<li><strong>client_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.ClientId"><em>ClientId</em></a> <em>,</em> <em>optional</em>) – The specific client ID for the command.
If <code>None</code> then will be inferred from the venue in the instrument ID.</li>
<li><strong>params</strong> (<em>dict</em> *[*<em>str</em> <em>,</em> <em>Any</em> <em>]</em> <em>,</em> <em>optional</em>) – Additional parameters potentially used by a specific client.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="unsubscribe_trade_ticksself-instrumentid-instrument_id-clientid-client_idnone-dict-paramsnone--void">unsubscribe_trade_ticks(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) → void<a href="#unsubscribe_trade_ticksself-instrumentid-instrument_id-clientid-client_idnone-dict-paramsnone--void" class="hash-link" aria-label="Direct link to unsubscribe_trade_ticks(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) → void" title="Direct link to unsubscribe_trade_ticks(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) → void">​</a></h4>
<p>Unsubscribe from streaming TradeTick data for the given instrument ID.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>instrument_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.InstrumentId"><em>InstrumentId</em></a>) – The tick instrument ID to unsubscribe from.</li>
<li><strong>client_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.ClientId"><em>ClientId</em></a> <em>,</em> <em>optional</em>) – The specific client ID for the command.
If <code>None</code> then will be inferred from the venue in the instrument ID.</li>
<li><strong>params</strong> (<em>dict</em> *[*<em>str</em> <em>,</em> <em>Any</em> <em>]</em> <em>,</em> <em>optional</em>) – Additional parameters potentially used by a specific client.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="update_syntheticself-syntheticinstrument-synthetic--void">update_synthetic(self, SyntheticInstrument synthetic) → void<a href="#update_syntheticself-syntheticinstrument-synthetic--void" class="hash-link" aria-label="Direct link to update_synthetic(self, SyntheticInstrument synthetic) → void" title="Direct link to update_synthetic(self, SyntheticInstrument synthetic) → void">​</a></h4>
<p>Update the synthetic instrument in the cache.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>synthetic</strong> (<a href="../model/instruments/index.htm#posei_trader.model.instruments.SyntheticInstrument"><em>SyntheticInstrument</em></a>) – The synthetic instrument to update in the cache.</li>
<li><strong>Raises:</strong>
<strong>KeyError</strong> – If synthetic does not already exist in the cache.</li>
</ul>
<p><a id="module-posei_trader.common.factories"></a></p>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="class-orderfactory"><em>class</em> OrderFactory<a href="#class-orderfactory" class="hash-link" aria-label="Direct link to class-orderfactory" title="Direct link to class-orderfactory">​</a></h3>
<p>Bases: <code>object</code></p>
<p>OrderFactory(TraderId trader_id, StrategyId strategy_id, Clock clock, CacheFacade cache: CacheFacade | None = None, bool use_uuid_client_order_ids=False) -&gt; None</p>
<p>A factory class which provides different order types.</p>
<p>The TraderId tag and StrategyId tag will be inserted into all IDs generated.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>trader_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.TraderId"><em>TraderId</em></a>) – The trader ID (only numerical tag sent to venue).</li>
<li><strong>strategy_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.StrategyId"><em>StrategyId</em></a>) – The strategy ID (only numerical tag sent to venue).</li>
<li><strong>clock</strong> (<a href="#posei_trader.common.component.Clock"><em>Clock</em></a>) – The clock for the factory.</li>
<li><strong>cache</strong> (<a href="../cache/index.htm#posei_trader.cache.base.CacheFacade"><em>CacheFacade</em></a> <em>,</em> <em>optional</em>) – The cache facade for the order factory.</li>
<li><strong>use_uuid_client_order_ids</strong> (<em>bool</em> <em>,</em> <em>default False</em>) – If UUID4’s should be used for client order ID values.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="bracketself-instrumentid-instrument_id-orderside-order_side-quantity-quantity-bool-quote_quantityfalse-triggertype-emulation_triggertriggertypeno_trigger-instrumentid-trigger_instrument_idnone-contingencytype-contingency_typecontingencytypeouo-ordertype-entry_order_typeordertypemarket-price-entry_pricenone-price-entry_trigger_pricenone-datetime-expire_timenone-timeinforce-time_in_forcetimeinforcegtc-bool-entry_post_onlyfalse-execalgorithmid-entry_exec_algorithm_idnone-dict-entry_exec_algorithm_paramsnone-list-entry_tagsnone-clientorderid-entry_client_order_idnone-ordertype-tp_order_typeordertypelimit-price-tp_pricenone-price-tp_trigger_pricenone-triggertype-tp_trigger_typetriggertypedefault-price-tp_activation_pricenone-tp_trailing_offset-decimal--none-trailingoffsettype-tp_trailing_offset_typetrailingoffsettypeprice-tp_limit_offset-decimal--none-timeinforce-tp_time_in_forcetimeinforcegtc-bool-tp_post_onlytrue-execalgorithmid-tp_exec_algorithm_idnone-dict-tp_exec_algorithm_paramsnone-list-tp_tagsnone-clientorderid-tp_client_order_idnone-ordertype-sl_order_typeordertypestop_market-price-sl_trigger_pricenone-triggertype-sl_trigger_typetriggertypedefault-price-sl_activation_pricenone-sl_trailing_offset-decimal--none-trailingoffsettype-sl_trailing_offset_typetrailingoffsettypeprice-timeinforce-sl_time_in_forcetimeinforcegtc-execalgorithmid-sl_exec_algorithm_idnone-dict-sl_exec_algorithm_paramsnone-list-sl_tagsnone-clientorderid-sl_client_order_idnone--orderlist">bracket(self, InstrumentId instrument_id, OrderSide order_side, Quantity quantity, bool quote_quantity=False, TriggerType emulation_trigger=TriggerType.NO_TRIGGER, InstrumentId trigger_instrument_id=None, ContingencyType contingency_type=ContingencyType.OUO, OrderType entry_order_type=OrderType.MARKET, Price entry_price=None, Price entry_trigger_price=None, datetime expire_time=None, TimeInForce time_in_force=TimeInForce.GTC, bool entry_post_only=False, ExecAlgorithmId entry_exec_algorithm_id=None, dict entry_exec_algorithm_params=None, list entry_tags=None, ClientOrderId entry_client_order_id=None, OrderType tp_order_type=OrderType.LIMIT, Price tp_price=None, Price tp_trigger_price=None, TriggerType tp_trigger_type=TriggerType.DEFAULT, Price tp_activation_price=None, tp_trailing_offset: Decimal = None, TrailingOffsetType tp_trailing_offset_type=TrailingOffsetType.PRICE, tp_limit_offset: Decimal = None, TimeInForce tp_time_in_force=TimeInForce.GTC, bool tp_post_only=True, ExecAlgorithmId tp_exec_algorithm_id=None, dict tp_exec_algorithm_params=None, list tp_tags=None, ClientOrderId tp_client_order_id=None, OrderType sl_order_type=OrderType.STOP_MARKET, Price sl_trigger_price=None, TriggerType sl_trigger_type=TriggerType.DEFAULT, Price sl_activation_price=None, sl_trailing_offset: Decimal = None, TrailingOffsetType sl_trailing_offset_type=TrailingOffsetType.PRICE, TimeInForce sl_time_in_force=TimeInForce.GTC, ExecAlgorithmId sl_exec_algorithm_id=None, dict sl_exec_algorithm_params=None, list sl_tags=None, ClientOrderId sl_client_order_id=None) → <a href="../model/orders/index.htm#posei_trader.model.orders.OrderList">OrderList</a><a href="#bracketself-instrumentid-instrument_id-orderside-order_side-quantity-quantity-bool-quote_quantityfalse-triggertype-emulation_triggertriggertypeno_trigger-instrumentid-trigger_instrument_idnone-contingencytype-contingency_typecontingencytypeouo-ordertype-entry_order_typeordertypemarket-price-entry_pricenone-price-entry_trigger_pricenone-datetime-expire_timenone-timeinforce-time_in_forcetimeinforcegtc-bool-entry_post_onlyfalse-execalgorithmid-entry_exec_algorithm_idnone-dict-entry_exec_algorithm_paramsnone-list-entry_tagsnone-clientorderid-entry_client_order_idnone-ordertype-tp_order_typeordertypelimit-price-tp_pricenone-price-tp_trigger_pricenone-triggertype-tp_trigger_typetriggertypedefault-price-tp_activation_pricenone-tp_trailing_offset-decimal--none-trailingoffsettype-tp_trailing_offset_typetrailingoffsettypeprice-tp_limit_offset-decimal--none-timeinforce-tp_time_in_forcetimeinforcegtc-bool-tp_post_onlytrue-execalgorithmid-tp_exec_algorithm_idnone-dict-tp_exec_algorithm_paramsnone-list-tp_tagsnone-clientorderid-tp_client_order_idnone-ordertype-sl_order_typeordertypestop_market-price-sl_trigger_pricenone-triggertype-sl_trigger_typetriggertypedefault-price-sl_activation_pricenone-sl_trailing_offset-decimal--none-trailingoffsettype-sl_trailing_offset_typetrailingoffsettypeprice-timeinforce-sl_time_in_forcetimeinforcegtc-execalgorithmid-sl_exec_algorithm_idnone-dict-sl_exec_algorithm_paramsnone-list-sl_tagsnone-clientorderid-sl_client_order_idnone--orderlist" class="hash-link" aria-label="Direct link to bracketself-instrumentid-instrument_id-orderside-order_side-quantity-quantity-bool-quote_quantityfalse-triggertype-emulation_triggertriggertypeno_trigger-instrumentid-trigger_instrument_idnone-contingencytype-contingency_typecontingencytypeouo-ordertype-entry_order_typeordertypemarket-price-entry_pricenone-price-entry_trigger_pricenone-datetime-expire_timenone-timeinforce-time_in_forcetimeinforcegtc-bool-entry_post_onlyfalse-execalgorithmid-entry_exec_algorithm_idnone-dict-entry_exec_algorithm_paramsnone-list-entry_tagsnone-clientorderid-entry_client_order_idnone-ordertype-tp_order_typeordertypelimit-price-tp_pricenone-price-tp_trigger_pricenone-triggertype-tp_trigger_typetriggertypedefault-price-tp_activation_pricenone-tp_trailing_offset-decimal--none-trailingoffsettype-tp_trailing_offset_typetrailingoffsettypeprice-tp_limit_offset-decimal--none-timeinforce-tp_time_in_forcetimeinforcegtc-bool-tp_post_onlytrue-execalgorithmid-tp_exec_algorithm_idnone-dict-tp_exec_algorithm_paramsnone-list-tp_tagsnone-clientorderid-tp_client_order_idnone-ordertype-sl_order_typeordertypestop_market-price-sl_trigger_pricenone-triggertype-sl_trigger_typetriggertypedefault-price-sl_activation_pricenone-sl_trailing_offset-decimal--none-trailingoffsettype-sl_trailing_offset_typetrailingoffsettypeprice-timeinforce-sl_time_in_forcetimeinforcegtc-execalgorithmid-sl_exec_algorithm_idnone-dict-sl_exec_algorithm_paramsnone-list-sl_tagsnone-clientorderid-sl_client_order_idnone--orderlist" title="Direct link to bracketself-instrumentid-instrument_id-orderside-order_side-quantity-quantity-bool-quote_quantityfalse-triggertype-emulation_triggertriggertypeno_trigger-instrumentid-trigger_instrument_idnone-contingencytype-contingency_typecontingencytypeouo-ordertype-entry_order_typeordertypemarket-price-entry_pricenone-price-entry_trigger_pricenone-datetime-expire_timenone-timeinforce-time_in_forcetimeinforcegtc-bool-entry_post_onlyfalse-execalgorithmid-entry_exec_algorithm_idnone-dict-entry_exec_algorithm_paramsnone-list-entry_tagsnone-clientorderid-entry_client_order_idnone-ordertype-tp_order_typeordertypelimit-price-tp_pricenone-price-tp_trigger_pricenone-triggertype-tp_trigger_typetriggertypedefault-price-tp_activation_pricenone-tp_trailing_offset-decimal--none-trailingoffsettype-tp_trailing_offset_typetrailingoffsettypeprice-tp_limit_offset-decimal--none-timeinforce-tp_time_in_forcetimeinforcegtc-bool-tp_post_onlytrue-execalgorithmid-tp_exec_algorithm_idnone-dict-tp_exec_algorithm_paramsnone-list-tp_tagsnone-clientorderid-tp_client_order_idnone-ordertype-sl_order_typeordertypestop_market-price-sl_trigger_pricenone-triggertype-sl_trigger_typetriggertypedefault-price-sl_activation_pricenone-sl_trailing_offset-decimal--none-trailingoffsettype-sl_trailing_offset_typetrailingoffsettypeprice-timeinforce-sl_time_in_forcetimeinforcegtc-execalgorithmid-sl_exec_algorithm_idnone-dict-sl_exec_algorithm_paramsnone-list-sl_tagsnone-clientorderid-sl_client_order_idnone--orderlist">​</a></h4>
<p>Create a bracket order with optional entry of take-profit order types.</p>
<p>The stop-loss order will always be <code>STOP_MARKET</code>.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>instrument_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.InstrumentId"><em>InstrumentId</em></a>) – The orders instrument ID.</li>
<li><strong>order_side</strong> (OrderSide {<code>BUY</code>, <code>SELL</code>}) – The entry orders side.</li>
<li><strong>quantity</strong> (<a href="../model/index.htm#posei_trader.model.Quantity"><em>Quantity</em></a>) – The entry orders quantity (&gt; 0).</li>
<li><strong>quote_quantity</strong> (<em>bool</em>) – If order quantity is denominated in the quote currency.</li>
<li><strong>emulation_trigger</strong> (TriggerType, default <code>NO_TRIGGER</code>) – The type of market price trigger to use for local order emulation.
<ul>
<li><code>NO_TRIGGER</code> (default): Disables local emulation; orders are sent directly to the venue.</li>
<li><code>DEFAULT</code> (the same as <code>BID_ASK</code>): Enables local order emulation by triggering orders based on bid/ask prices.
Additional trigger types are available. See the “Emulated Orders” section in the documentation for more details.</li>
</ul>
</li>
<li><strong>trigger_instrument_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.InstrumentId"><em>InstrumentId</em></a> <em>,</em> <em>optional</em>) – The emulation trigger instrument ID for the order (if <code>None</code> then will be the instrument_id).</li>
<li><strong>contingency_type</strong> (ContingencyType, default <code>OUO</code>) – The contingency type for the TP and SL bracket orders.</li>
<li><strong>entry_order_type</strong> (OrderType {<code>MARKET</code>, <code>LIMIT</code>, <code>LIMIT_IF_TOUCHED</code>, <code>MARKET_IF_TOUCHED</code>, <code>STOP_LIMIT</code>}, default <code>MARKET</code>) – The entry order type.</li>
<li><strong>entry_price</strong> (<a href="../model/index.htm#posei_trader.model.Price"><em>Price</em></a> <em>,</em> <em>optional</em>) – The entry order price (LIMIT).</li>
<li><strong>entry_trigger_price</strong> (<a href="../model/index.htm#posei_trader.model.Price"><em>Price</em></a> <em>,</em> <em>optional</em>) – The entry order trigger price (STOP).</li>
<li><strong>expire_time</strong> (<em>datetime</em> <em>,</em> <em>optional</em>) – The order expiration (for <code>GTD</code> orders).</li>
<li><strong>time_in_force</strong> (TimeInForce, default <code>GTC</code>) – The entry orders time in force.</li>
<li><strong>entry_post_only</strong> (<em>bool</em> <em>,</em> <em>default False</em>) – If the entry order will only provide liquidity (make a market).</li>
<li><strong>entry_exec_algorithm_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.ExecAlgorithmId"><em>ExecAlgorithmId</em></a> <em>,</em> <em>optional</em>) – The entry order execution algorithm ID.</li>
<li><strong>entry_exec_algorithm_params</strong> (<em>dict</em> *[*<em>str</em> <em>,</em> <em>Any</em> <em>]</em> <em>,</em> <em>optional</em>) – The execution algorithm parameters for the order.</li>
<li><strong>entry_tags</strong> (<em>list</em> *[*<em>str</em> <em>]</em> <em>,</em> <em>default</em> <em>[</em> <em>&quot;ENTRY&quot;</em> <em>]</em>) – The custom user tags for the entry order.</li>
<li><strong>entry_client_order_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.ClientOrderId"><em>ClientOrderId</em></a> <em>,</em> <em>optional</em>) – The custom client order ID for the order.
If a client order ID is not provided then one will be generated by the factory.</li>
<li><strong>tp_order_type</strong> (OrderType {<code>LIMIT</code>, <code>LIMIT_IF_TOUCHED</code>, <code>MARKET_IF_TOUCHED</code>}, default <code>LIMIT</code>) – The take-profit order type.</li>
<li><strong>tp_price</strong> (<a href="../model/index.htm#posei_trader.model.Price"><em>Price</em></a> <em>,</em> <em>optional</em>) – The take-profit child order price (LIMIT).</li>
<li><strong>tp_trigger_price</strong> (<a href="../model/index.htm#posei_trader.model.Price"><em>Price</em></a> <em>,</em> <em>optional</em>) – The take-profit child order trigger price (STOP).</li>
<li><strong>tp_trigger_type</strong> (<em>TriggerType</em> <em>,</em> <em>default &#x27;&#x27;DEFAULT&#x27;&#x27;</em>) – The take-profit order’s trigger type</li>
<li><strong>tp_activation_price</strong> (<a href="../model/index.htm#posei_trader.model.Price"><em>Price</em></a> <em>,</em> <em>optional</em>) – The price for the take-profit order to become active.</li>
<li><strong>tp_trailing_offset</strong> (<em>Decimal</em>) – The trailing offset for the take-profit order’s trigger price (STOP).</li>
<li><strong>tp_trailing_offset_type</strong> (TrailingOffsetType, default <code>PRICE</code>) – The trailing offset type for the take-profit order.</li>
<li><strong>tp_limit_offset</strong> (<em>Decimal</em>) – The trailing offset for the take-profit order’s price (LIMIT).</li>
<li><strong>tp_time_in_force</strong> (TimeInForce, default <code>GTC</code>) – The take-profit orders time in force.</li>
<li><strong>tp_post_only</strong> (<em>bool</em> <em>,</em> <em>default False</em>) – If the take-profit order will only provide liquidity (make a market).</li>
<li><strong>tp_exec_algorithm_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.ExecAlgorithmId"><em>ExecAlgorithmId</em></a> <em>,</em> <em>optional</em>) – The take-profit order execution algorithm ID.</li>
<li><strong>tp_exec_algorithm_params</strong> (<em>dict</em> *[*<em>str</em> <em>,</em> <em>Any</em> <em>]</em> <em>,</em> <em>optional</em>) – The execution algorithm parameters for the order.</li>
<li><strong>tp_tags</strong> (<em>list</em> *[*<em>str</em> <em>]</em> <em>,</em> <em>default</em> <em>[</em> <em>&quot;TAKE_PROFIT&quot;</em> <em>]</em>) – The custom user tags for the take-profit order.</li>
<li><strong>tp_client_order_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.ClientOrderId"><em>ClientOrderId</em></a> <em>,</em> <em>optional</em>) – The custom client order ID for the order.
If a client order ID is not provided then one will be generated by the factory.</li>
<li><strong>sl_order_type</strong> (OrderType {<code>STOP_MARKET</code>, <code>TRAILING_STOP_MARKET</code>}, default <code>STOP_MARKET</code>) – The stop-loss order type.</li>
<li><strong>sl_trigger_price</strong> (<a href="../model/index.htm#posei_trader.model.Price"><em>Price</em></a> <em>,</em> <em>optional</em>) – The stop-loss child order trigger price (STOP).</li>
<li><strong>sl_trigger_type</strong> (<em>TriggerType</em> <em>,</em> <em>default &#x27;&#x27;DEFAULT&#x27;&#x27;</em>) – The stop-loss order’s trigger type</li>
<li><strong>sl_activation_price</strong> (<a href="../model/index.htm#posei_trader.model.Price"><em>Price</em></a> <em>,</em> <em>optional</em>) – The price for the stop-loss order to become active.</li>
<li><strong>sl_trailing_offset</strong> (<em>Decimal</em>) – The trailing offset for the stoploss order’s trigger price (STOP).</li>
<li><strong>sl_trailing_offset_type</strong> (TrailingOffsetType, default <code>PRICE</code>) – The trailing offset type for the stop-loss order.</li>
<li><strong>sl_time_in_force</strong> (TimeInForce, default <code>GTC</code>) – The stop-loss orders time in force.</li>
<li><strong>sl_exec_algorithm_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.ExecAlgorithmId"><em>ExecAlgorithmId</em></a> <em>,</em> <em>optional</em>) – The stop-loss order execution algorithm ID.</li>
<li><strong>sl_exec_algorithm_params</strong> (<em>dict</em> *[*<em>str</em> <em>,</em> <em>Any</em> <em>]</em> <em>,</em> <em>optional</em>) – The execution algorithm parameters for the order.</li>
<li><strong>sl_tags</strong> (<em>list</em> *[*<em>str</em> <em>]</em> <em>,</em> <em>default</em> <em>[</em> <em>&quot;STOP_LOSS&quot;</em> <em>]</em>) – The custom user tags for the stop-loss order.</li>
<li><strong>sl_client_order_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.ClientOrderId"><em>ClientOrderId</em></a> <em>,</em> <em>optional</em>) – The custom client order ID for the order.
If a client order ID is not provided then one will be generated by the factory.</li>
</ul>
</li>
<li><strong>Return type:</strong>
<a href="../model/orders/index.htm#posei_trader.model.orders.OrderList">OrderList</a></li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="create_listself-list-orders--orderlist">create_list(self, list orders) → <a href="../model/orders/index.htm#posei_trader.model.orders.OrderList">OrderList</a><a href="#create_listself-list-orders--orderlist" class="hash-link" aria-label="Direct link to create_listself-list-orders--orderlist" title="Direct link to create_listself-list-orders--orderlist">​</a></h4>
<p>Return a new order list containing the given orders.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>orders</strong> (<em>list</em> <em>[</em><a href="../model/orders/index.htm#posei_trader.model.orders.Order"><em>Order</em></a> <em>]</em>) – The orders for the list.</li>
<li><strong>Return type:</strong>
<a href="../model/orders/index.htm#posei_trader.model.orders.OrderList">OrderList</a></li>
<li><strong>Raises:</strong>
<strong>ValueError</strong> – If orders is empty.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="generate_client_order_idself--clientorderid">generate_client_order_id(self) → <a href="../model/identifiers/index.htm#posei_trader.model.identifiers.ClientOrderId">ClientOrderId</a><a href="#generate_client_order_idself--clientorderid" class="hash-link" aria-label="Direct link to generate_client_order_idself--clientorderid" title="Direct link to generate_client_order_idself--clientorderid">​</a></h4>
<p>Generate and return a new client order ID.</p>
<p>The identifier will be the next in the logical sequence.</p>
<ul>
<li><strong>Return type:</strong>
<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.ClientOrderId">ClientOrderId</a></li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="generate_order_list_idself--orderlistid">generate_order_list_id(self) → <a href="../model/identifiers/index.htm#posei_trader.model.identifiers.OrderListId">OrderListId</a><a href="#generate_order_list_idself--orderlistid" class="hash-link" aria-label="Direct link to generate_order_list_idself--orderlistid" title="Direct link to generate_order_list_idself--orderlistid">​</a></h4>
<p>Generate and return a new order list ID.</p>
<p>The identifier will be the next in the logical sequence.</p>
<ul>
<li><strong>Return type:</strong>
<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.OrderListId">OrderListId</a></li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="get_client_order_id_countself">get_client_order_id_count(self)<a href="#get_client_order_id_countself" class="hash-link" aria-label="Direct link to get_client_order_id_count(self)" title="Direct link to get_client_order_id_count(self)">​</a></h4>
<p>Return the client order ID count for the factory.</p>
<ul>
<li><strong>Return type:</strong>
int</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="get_order_list_id_countself">get_order_list_id_count(self)<a href="#get_order_list_id_countself" class="hash-link" aria-label="Direct link to get_order_list_id_count(self)" title="Direct link to get_order_list_id_count(self)">​</a></h4>
<p>Return the order list ID count for the factory.</p>
<ul>
<li><strong>Return type:</strong>
int</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="limitself-instrumentid-instrument_id-orderside-order_side-quantity-quantity-price-price-timeinforce-time_in_forcetimeinforcegtc-datetime-expire_timenone-bool-post_onlyfalse-bool-reduce_onlyfalse-bool-quote_quantityfalse-quantity-display_qtynone-triggertype-emulation_triggertriggertypeno_trigger-instrumentid-trigger_instrument_idnone-execalgorithmid-exec_algorithm_idnone-dict-exec_algorithm_paramsnone-list-tagsnone-clientorderid-client_order_idnone--limitorder">limit(self, InstrumentId instrument_id, OrderSide order_side, Quantity quantity, Price price, TimeInForce time_in_force=TimeInForce.GTC, datetime expire_time=None, bool post_only=False, bool reduce_only=False, bool quote_quantity=False, Quantity display_qty=None, TriggerType emulation_trigger=TriggerType.NO_TRIGGER, InstrumentId trigger_instrument_id=None, ExecAlgorithmId exec_algorithm_id=None, dict exec_algorithm_params=None, list tags=None, ClientOrderId client_order_id=None) → <a href="../model/orders/index.htm#posei_trader.model.orders.LimitOrder">LimitOrder</a><a href="#limitself-instrumentid-instrument_id-orderside-order_side-quantity-quantity-price-price-timeinforce-time_in_forcetimeinforcegtc-datetime-expire_timenone-bool-post_onlyfalse-bool-reduce_onlyfalse-bool-quote_quantityfalse-quantity-display_qtynone-triggertype-emulation_triggertriggertypeno_trigger-instrumentid-trigger_instrument_idnone-execalgorithmid-exec_algorithm_idnone-dict-exec_algorithm_paramsnone-list-tagsnone-clientorderid-client_order_idnone--limitorder" class="hash-link" aria-label="Direct link to limitself-instrumentid-instrument_id-orderside-order_side-quantity-quantity-price-price-timeinforce-time_in_forcetimeinforcegtc-datetime-expire_timenone-bool-post_onlyfalse-bool-reduce_onlyfalse-bool-quote_quantityfalse-quantity-display_qtynone-triggertype-emulation_triggertriggertypeno_trigger-instrumentid-trigger_instrument_idnone-execalgorithmid-exec_algorithm_idnone-dict-exec_algorithm_paramsnone-list-tagsnone-clientorderid-client_order_idnone--limitorder" title="Direct link to limitself-instrumentid-instrument_id-orderside-order_side-quantity-quantity-price-price-timeinforce-time_in_forcetimeinforcegtc-datetime-expire_timenone-bool-post_onlyfalse-bool-reduce_onlyfalse-bool-quote_quantityfalse-quantity-display_qtynone-triggertype-emulation_triggertriggertypeno_trigger-instrumentid-trigger_instrument_idnone-execalgorithmid-exec_algorithm_idnone-dict-exec_algorithm_paramsnone-list-tagsnone-clientorderid-client_order_idnone--limitorder">​</a></h4>
<p>Create a new <code>LIMIT</code> order.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>instrument_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.InstrumentId"><em>InstrumentId</em></a>) – The orders instrument ID.</li>
<li><strong>order_side</strong> (OrderSide {<code>BUY</code>, <code>SELL</code>}) – The orders side.</li>
<li><strong>quantity</strong> (<a href="../model/index.htm#posei_trader.model.Quantity"><em>Quantity</em></a>) – The orders quantity (&gt; 0).</li>
<li><strong>price</strong> (<a href="../model/index.htm#posei_trader.model.Price"><em>Price</em></a>) – The orders price.</li>
<li><strong>time_in_force</strong> (TimeInForce {<code>GTC</code>, <code>IOC</code>, <code>FOK</code>, <code>GTD</code>, <code>DAY</code>, <code>AT_THE_OPEN</code>, <code>AT_THE_CLOSE</code>}, default <code>GTC</code>) – The orders time in force.</li>
<li><strong>expire_time</strong> (<em>datetime</em> <em>,</em> <em>optional</em>) – The order expiration (for <code>GTD</code> orders).</li>
<li><strong>post_only</strong> (<em>bool</em> <em>,</em> <em>default False</em>) – If the order will only provide liquidity (make a market).</li>
<li><strong>reduce_only</strong> (<em>bool</em> <em>,</em> <em>default False</em>) – If the order carries the ‘reduce-only’ execution instruction.</li>
<li><strong>quote_quantity</strong> (<em>bool</em>) – If the order quantity is denominated in the quote currency.</li>
<li><strong>display_qty</strong> (<a href="../model/index.htm#posei_trader.model.Quantity"><em>Quantity</em></a> <em>,</em> <em>optional</em>) – The quantity of the order to display on the public book (iceberg).</li>
<li><strong>emulation_trigger</strong> (TriggerType, default <code>NO_TRIGGER</code>) – The type of market price trigger to use for local order emulation.
<ul>
<li><code>NO_TRIGGER</code> (default): Disables local emulation; orders are sent directly to the venue.</li>
<li><code>DEFAULT</code> (the same as <code>BID_ASK</code>): Enables local order emulation by triggering orders based on bid/ask prices.
Additional trigger types are available. See the “Emulated Orders” section in the documentation for more details.</li>
</ul>
</li>
<li><strong>trigger_instrument_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.InstrumentId"><em>InstrumentId</em></a> <em>,</em> <em>optional</em>) – The emulation trigger instrument ID for the order (if <code>None</code> then will be the instrument_id).</li>
<li><strong>exec_algorithm_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.ExecAlgorithmId"><em>ExecAlgorithmId</em></a> <em>,</em> <em>optional</em>) – The execution algorithm ID for the order.</li>
<li><strong>exec_algorithm_params</strong> (<em>dict</em> *[*<em>str</em> <em>,</em> <em>Any</em> <em>]</em> <em>,</em> <em>optional</em>) – The execution algorithm parameters for the order.</li>
<li><strong>tags</strong> (<em>list</em> *[*<em>str</em> <em>]</em> <em>,</em> <em>optional</em>) – The custom user tags for the order.</li>
<li><strong>client_order_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.ClientOrderId"><em>ClientOrderId</em></a> <em>,</em> <em>optional</em>) – The custom client order ID for the order.
If a client order ID is not provided then one will be generated by the factory.</li>
</ul>
</li>
<li><strong>Return type:</strong>
<a href="../model/orders/index.htm#posei_trader.model.orders.LimitOrder">LimitOrder</a></li>
<li><strong>Raises:</strong>
<ul>
<li><strong>ValueError</strong> – If quantity is not positive (&gt; 0).</li>
<li><strong>ValueError</strong> – If time_in_force is <code>GTD</code> and expire_time &lt;= UNIX epoch.</li>
<li><strong>ValueError</strong> – If display_qty is negative (&lt; 0) or greater than quantity.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="limit_if_touchedself-instrumentid-instrument_id-orderside-order_side-quantity-quantity-price-price-price-trigger_price-triggertype-trigger_typetriggertypedefault-timeinforce-time_in_forcetimeinforcegtc-datetime-expire_timenone-bool-post_onlyfalse-bool-reduce_onlyfalse-bool-quote_quantityfalse-quantity-display_qtynone-triggertype-emulation_triggertriggertypeno_trigger-instrumentid-trigger_instrument_idnone-execalgorithmid-exec_algorithm_idnone-dict-exec_algorithm_paramsnone-list-tagsnone-clientorderid-client_order_idnone--limitiftouchedorder">limit_if_touched(self, InstrumentId instrument_id, OrderSide order_side, Quantity quantity, Price price, Price trigger_price, TriggerType trigger_type=TriggerType.DEFAULT, TimeInForce time_in_force=TimeInForce.GTC, datetime expire_time=None, bool post_only=False, bool reduce_only=False, bool quote_quantity=False, Quantity display_qty=None, TriggerType emulation_trigger=TriggerType.NO_TRIGGER, InstrumentId trigger_instrument_id=None, ExecAlgorithmId exec_algorithm_id=None, dict exec_algorithm_params=None, list tags=None, ClientOrderId client_order_id=None) → <a href="../model/orders/index.htm#posei_trader.model.orders.LimitIfTouchedOrder">LimitIfTouchedOrder</a><a href="#limit_if_touchedself-instrumentid-instrument_id-orderside-order_side-quantity-quantity-price-price-price-trigger_price-triggertype-trigger_typetriggertypedefault-timeinforce-time_in_forcetimeinforcegtc-datetime-expire_timenone-bool-post_onlyfalse-bool-reduce_onlyfalse-bool-quote_quantityfalse-quantity-display_qtynone-triggertype-emulation_triggertriggertypeno_trigger-instrumentid-trigger_instrument_idnone-execalgorithmid-exec_algorithm_idnone-dict-exec_algorithm_paramsnone-list-tagsnone-clientorderid-client_order_idnone--limitiftouchedorder" class="hash-link" aria-label="Direct link to limit_if_touchedself-instrumentid-instrument_id-orderside-order_side-quantity-quantity-price-price-price-trigger_price-triggertype-trigger_typetriggertypedefault-timeinforce-time_in_forcetimeinforcegtc-datetime-expire_timenone-bool-post_onlyfalse-bool-reduce_onlyfalse-bool-quote_quantityfalse-quantity-display_qtynone-triggertype-emulation_triggertriggertypeno_trigger-instrumentid-trigger_instrument_idnone-execalgorithmid-exec_algorithm_idnone-dict-exec_algorithm_paramsnone-list-tagsnone-clientorderid-client_order_idnone--limitiftouchedorder" title="Direct link to limit_if_touchedself-instrumentid-instrument_id-orderside-order_side-quantity-quantity-price-price-price-trigger_price-triggertype-trigger_typetriggertypedefault-timeinforce-time_in_forcetimeinforcegtc-datetime-expire_timenone-bool-post_onlyfalse-bool-reduce_onlyfalse-bool-quote_quantityfalse-quantity-display_qtynone-triggertype-emulation_triggertriggertypeno_trigger-instrumentid-trigger_instrument_idnone-execalgorithmid-exec_algorithm_idnone-dict-exec_algorithm_paramsnone-list-tagsnone-clientorderid-client_order_idnone--limitiftouchedorder">​</a></h4>
<p>Create a new <code>LIMIT_IF_TOUCHED</code> (LIT) conditional order.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>instrument_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.InstrumentId"><em>InstrumentId</em></a>) – The orders instrument ID.</li>
<li><strong>order_side</strong> (OrderSide {<code>BUY</code>, <code>SELL</code>}) – The orders side.</li>
<li><strong>quantity</strong> (<a href="../model/index.htm#posei_trader.model.Quantity"><em>Quantity</em></a>) – The orders quantity (&gt; 0).</li>
<li><strong>price</strong> (<a href="../model/index.htm#posei_trader.model.Price"><em>Price</em></a>) – The orders limit price.</li>
<li><strong>trigger_price</strong> (<a href="../model/index.htm#posei_trader.model.Price"><em>Price</em></a>) – The orders trigger stop price.</li>
<li><strong>trigger_type</strong> (TriggerType, default <code>DEFAULT</code>) – The order trigger type.</li>
<li><strong>time_in_force</strong> (TimeInForce {<code>GTC</code>, <code>IOC</code>, <code>FOK</code>, <code>GTD</code>, <code>DAY</code>}, default <code>GTC</code>) – The orders time in force.</li>
<li><strong>expire_time</strong> (<em>datetime</em> <em>,</em> <em>optional</em>) – The order expiration (for <code>GTD</code> orders).</li>
<li><strong>post_only</strong> (<em>bool</em> <em>,</em> <em>default False</em>) – If the order will only provide liquidity (make a market).</li>
<li><strong>reduce_only</strong> (<em>bool</em> <em>,</em> <em>default False</em>) – If the order carries the ‘reduce-only’ execution instruction.</li>
<li><strong>quote_quantity</strong> (<em>bool</em>) – If the order quantity is denominated in the quote currency.</li>
<li><strong>display_qty</strong> (<a href="../model/index.htm#posei_trader.model.Quantity"><em>Quantity</em></a> <em>,</em> <em>optional</em>) – The quantity of the order to display on the public book (iceberg).</li>
<li><strong>emulation_trigger</strong> (TriggerType, default <code>NO_TRIGGER</code>) – The type of market price trigger to use for local order emulation.
<ul>
<li><code>NO_TRIGGER</code> (default): Disables local emulation; orders are sent directly to the venue.</li>
<li><code>DEFAULT</code> (the same as <code>BID_ASK</code>): Enables local order emulation by triggering orders based on bid/ask prices.
Additional trigger types are available. See the “Emulated Orders” section in the documentation for more details.</li>
</ul>
</li>
<li><strong>trigger_instrument_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.InstrumentId"><em>InstrumentId</em></a> <em>,</em> <em>optional</em>) – The emulation trigger instrument ID for the order (if <code>None</code> then will be the instrument_id).</li>
<li><strong>exec_algorithm_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.ExecAlgorithmId"><em>ExecAlgorithmId</em></a> <em>,</em> <em>optional</em>) – The execution algorithm ID for the order.</li>
<li><strong>exec_algorithm_params</strong> (<em>dict</em> *[*<em>str</em> <em>,</em> <em>Any</em> <em>]</em> <em>,</em> <em>optional</em>) – The execution algorithm parameters for the order.</li>
<li><strong>tags</strong> (<em>list</em> *[*<em>str</em> <em>]</em> <em>,</em> <em>optional</em>) – The custom user tags for the order.</li>
<li><strong>client_order_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.ClientOrderId"><em>ClientOrderId</em></a> <em>,</em> <em>optional</em>) – The custom client order ID for the order.
If a client order ID is not provided then one will be generated by the factory.</li>
</ul>
</li>
<li><strong>Return type:</strong>
<a href="../model/orders/index.htm#posei_trader.model.orders.LimitIfTouchedOrder">LimitIfTouchedOrder</a></li>
<li><strong>Raises:</strong>
<ul>
<li><strong>ValueError</strong> – If quantity is not positive (&gt; 0).</li>
<li><strong>ValueError</strong> – If trigger_type is <code>NO_TRIGGER</code>.</li>
<li><strong>ValueError</strong> – If time_in_force is <code>AT_THE_OPEN</code> or <code>AT_THE_CLOSE</code>.</li>
<li><strong>ValueError</strong> – If time_in_force is <code>GTD</code> and expire_time &lt;= UNIX epoch.</li>
<li><strong>ValueError</strong> – If display_qty is negative (&lt; 0) or greater than quantity.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="marketself-instrumentid-instrument_id-orderside-order_side-quantity-quantity-timeinforce-time_in_forcetimeinforcegtc-bool-reduce_onlyfalse-bool-quote_quantityfalse-execalgorithmid-exec_algorithm_idnone-dict-exec_algorithm_paramsnone-list-tagsnone-clientorderid-client_order_idnone--marketorder">market(self, InstrumentId instrument_id, OrderSide order_side, Quantity quantity, TimeInForce time_in_force=TimeInForce.GTC, bool reduce_only=False, bool quote_quantity=False, ExecAlgorithmId exec_algorithm_id=None, dict exec_algorithm_params=None, list tags=None, ClientOrderId client_order_id=None) → <a href="../model/orders/index.htm#posei_trader.model.orders.MarketOrder">MarketOrder</a><a href="#marketself-instrumentid-instrument_id-orderside-order_side-quantity-quantity-timeinforce-time_in_forcetimeinforcegtc-bool-reduce_onlyfalse-bool-quote_quantityfalse-execalgorithmid-exec_algorithm_idnone-dict-exec_algorithm_paramsnone-list-tagsnone-clientorderid-client_order_idnone--marketorder" class="hash-link" aria-label="Direct link to marketself-instrumentid-instrument_id-orderside-order_side-quantity-quantity-timeinforce-time_in_forcetimeinforcegtc-bool-reduce_onlyfalse-bool-quote_quantityfalse-execalgorithmid-exec_algorithm_idnone-dict-exec_algorithm_paramsnone-list-tagsnone-clientorderid-client_order_idnone--marketorder" title="Direct link to marketself-instrumentid-instrument_id-orderside-order_side-quantity-quantity-timeinforce-time_in_forcetimeinforcegtc-bool-reduce_onlyfalse-bool-quote_quantityfalse-execalgorithmid-exec_algorithm_idnone-dict-exec_algorithm_paramsnone-list-tagsnone-clientorderid-client_order_idnone--marketorder">​</a></h4>
<p>Create a new <code>MARKET</code> order.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>instrument_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.InstrumentId"><em>InstrumentId</em></a>) – The orders instrument ID.</li>
<li><strong>order_side</strong> (OrderSide {<code>BUY</code>, <code>SELL</code>}) – The orders side.</li>
<li><strong>quantity</strong> (<a href="../model/index.htm#posei_trader.model.Quantity"><em>Quantity</em></a>) – The orders quantity (&gt; 0).</li>
<li><strong>time_in_force</strong> (TimeInForce {<code>GTC</code>, <code>IOC</code>, <code>FOK</code>, <code>DAY</code>, <code>AT_THE_OPEN</code>, <code>AT_THE_CLOSE</code>}, default <code>GTC</code>) – The orders time in force. Often not applicable for market orders.</li>
<li><strong>reduce_only</strong> (<em>bool</em> <em>,</em> <em>default False</em>) – If the order carries the ‘reduce-only’ execution instruction.</li>
<li><strong>quote_quantity</strong> (<em>bool</em>) – If the order quantity is denominated in the quote currency.</li>
<li><strong>exec_algorithm_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.ExecAlgorithmId"><em>ExecAlgorithmId</em></a> <em>,</em> <em>optional</em>) – The execution algorithm ID for the order.</li>
<li><strong>exec_algorithm_params</strong> (<em>dict</em> *[*<em>str</em> <em>,</em> <em>Any</em> <em>]</em> <em>,</em> <em>optional</em>) – The execution algorithm parameters for the order.</li>
<li><strong>tags</strong> (<em>list</em> *[*<em>str</em> <em>]</em> <em>,</em> <em>optional</em>) – The custom user tags for the order.</li>
<li><strong>client_order_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.ClientOrderId"><em>ClientOrderId</em></a> <em>,</em> <em>optional</em>) – The custom client order ID for the order.
If a client order ID is not provided then one will be generated by the factory.</li>
</ul>
</li>
<li><strong>Return type:</strong>
<a href="../model/orders/index.htm#posei_trader.model.orders.MarketOrder">MarketOrder</a></li>
<li><strong>Raises:</strong>
<ul>
<li><strong>ValueError</strong> – If quantity is not positive (&gt; 0).</li>
<li><strong>ValueError</strong> – If time_in_force is <code>GTD</code>.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="market_if_touchedself-instrumentid-instrument_id-orderside-order_side-quantity-quantity-price-trigger_price-triggertype-trigger_typetriggertypedefault-timeinforce-time_in_forcetimeinforcegtc-datetime-expire_timenone-bool-reduce_onlyfalse-bool-quote_quantityfalse-triggertype-emulation_triggertriggertypeno_trigger-instrumentid-trigger_instrument_idnone-execalgorithmid-exec_algorithm_idnone-dict-exec_algorithm_paramsnone-list-tagsnone-clientorderid-client_order_idnone--marketiftouchedorder">market_if_touched(self, InstrumentId instrument_id, OrderSide order_side, Quantity quantity, Price trigger_price, TriggerType trigger_type=TriggerType.DEFAULT, TimeInForce time_in_force=TimeInForce.GTC, datetime expire_time=None, bool reduce_only=False, bool quote_quantity=False, TriggerType emulation_trigger=TriggerType.NO_TRIGGER, InstrumentId trigger_instrument_id=None, ExecAlgorithmId exec_algorithm_id=None, dict exec_algorithm_params=None, list tags=None, ClientOrderId client_order_id=None) → <a href="../model/orders/index.htm#posei_trader.model.orders.MarketIfTouchedOrder">MarketIfTouchedOrder</a><a href="#market_if_touchedself-instrumentid-instrument_id-orderside-order_side-quantity-quantity-price-trigger_price-triggertype-trigger_typetriggertypedefault-timeinforce-time_in_forcetimeinforcegtc-datetime-expire_timenone-bool-reduce_onlyfalse-bool-quote_quantityfalse-triggertype-emulation_triggertriggertypeno_trigger-instrumentid-trigger_instrument_idnone-execalgorithmid-exec_algorithm_idnone-dict-exec_algorithm_paramsnone-list-tagsnone-clientorderid-client_order_idnone--marketiftouchedorder" class="hash-link" aria-label="Direct link to market_if_touchedself-instrumentid-instrument_id-orderside-order_side-quantity-quantity-price-trigger_price-triggertype-trigger_typetriggertypedefault-timeinforce-time_in_forcetimeinforcegtc-datetime-expire_timenone-bool-reduce_onlyfalse-bool-quote_quantityfalse-triggertype-emulation_triggertriggertypeno_trigger-instrumentid-trigger_instrument_idnone-execalgorithmid-exec_algorithm_idnone-dict-exec_algorithm_paramsnone-list-tagsnone-clientorderid-client_order_idnone--marketiftouchedorder" title="Direct link to market_if_touchedself-instrumentid-instrument_id-orderside-order_side-quantity-quantity-price-trigger_price-triggertype-trigger_typetriggertypedefault-timeinforce-time_in_forcetimeinforcegtc-datetime-expire_timenone-bool-reduce_onlyfalse-bool-quote_quantityfalse-triggertype-emulation_triggertriggertypeno_trigger-instrumentid-trigger_instrument_idnone-execalgorithmid-exec_algorithm_idnone-dict-exec_algorithm_paramsnone-list-tagsnone-clientorderid-client_order_idnone--marketiftouchedorder">​</a></h4>
<p>Create a new <code>MARKET_IF_TOUCHED</code> (MIT) conditional order.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>instrument_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.InstrumentId"><em>InstrumentId</em></a>) – The orders instrument ID.</li>
<li><strong>order_side</strong> (OrderSide {<code>BUY</code>, <code>SELL</code>}) – The orders side.</li>
<li><strong>quantity</strong> (<a href="../model/index.htm#posei_trader.model.Quantity"><em>Quantity</em></a>) – The orders quantity (&gt; 0).</li>
<li><strong>trigger_price</strong> (<a href="../model/index.htm#posei_trader.model.Price"><em>Price</em></a>) – The orders trigger price (STOP).</li>
<li><strong>trigger_type</strong> (TriggerType, default <code>DEFAULT</code>) – The order trigger type.</li>
<li><strong>time_in_force</strong> (TimeInForce {<code>GTC</code>, <code>IOC</code>, <code>FOK</code>, <code>GTD</code>, <code>DAY</code>}, default <code>GTC</code>) – The orders time in force.</li>
<li><strong>expire_time</strong> (<em>datetime</em> <em>,</em> <em>optional</em>) – The order expiration (for <code>GTD</code> orders).</li>
<li><strong>reduce_only</strong> (<em>bool</em> <em>,</em> <em>default False</em>) – If the order carries the ‘reduce-only’ execution instruction.</li>
<li><strong>quote_quantity</strong> (<em>bool</em>) – If the order quantity is denominated in the quote currency.</li>
<li><strong>emulation_trigger</strong> (TriggerType, default <code>NO_TRIGGER</code>) – The type of market price trigger to use for local order emulation.
<ul>
<li><code>NO_TRIGGER</code> (default): Disables local emulation; orders are sent directly to the venue.</li>
<li><code>DEFAULT</code> (the same as <code>BID_ASK</code>): Enables local order emulation by triggering orders based on bid/ask prices.
Additional trigger types are available. See the “Emulated Orders” section in the documentation for more details.</li>
</ul>
</li>
<li><strong>trigger_instrument_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.InstrumentId"><em>InstrumentId</em></a> <em>,</em> <em>optional</em>) – The emulation trigger instrument ID for the order (if <code>None</code> then will be the instrument_id).</li>
<li><strong>exec_algorithm_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.ExecAlgorithmId"><em>ExecAlgorithmId</em></a> <em>,</em> <em>optional</em>) – The execution algorithm ID for the order.</li>
<li><strong>exec_algorithm_params</strong> (<em>dict</em> *[*<em>str</em> <em>,</em> <em>Any</em> <em>]</em> <em>,</em> <em>optional</em>) – The execution algorithm parameters for the order.</li>
<li><strong>tags</strong> (<em>list</em> *[*<em>str</em> <em>]</em> <em>,</em> <em>optional</em>) – The custom user tags for the order.</li>
<li><strong>client_order_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.ClientOrderId"><em>ClientOrderId</em></a> <em>,</em> <em>optional</em>) – The custom client order ID for the order.
If a client order ID is not provided then one will be generated by the factory.</li>
</ul>
</li>
<li><strong>Return type:</strong>
<a href="../model/orders/index.htm#posei_trader.model.orders.MarketIfTouchedOrder">MarketIfTouchedOrder</a></li>
<li><strong>Raises:</strong>
<ul>
<li><strong>ValueError</strong> – If quantity is not positive (&gt; 0).</li>
<li><strong>ValueError</strong> – If trigger_type is <code>NO_TRIGGER</code>.</li>
<li><strong>ValueError</strong> – If time_in_force is <code>AT_THE_OPEN</code> or <code>AT_THE_CLOSE</code>.</li>
<li><strong>ValueError</strong> – If time_in_force is <code>GTD</code> and expire_time &lt;= UNIX epoch.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="market_to_limitself-instrumentid-instrument_id-orderside-order_side-quantity-quantity-timeinforce-time_in_forcetimeinforcegtc-datetime-expire_timenone-bool-reduce_onlyfalse-bool-quote_quantityfalse-quantity-display_qtynone-execalgorithmid-exec_algorithm_idnone-dict-exec_algorithm_paramsnone-list-tagsnone-clientorderid-client_order_idnone--markettolimitorder">market_to_limit(self, InstrumentId instrument_id, OrderSide order_side, Quantity quantity, TimeInForce time_in_force=TimeInForce.GTC, datetime expire_time=None, bool reduce_only=False, bool quote_quantity=False, Quantity display_qty=None, ExecAlgorithmId exec_algorithm_id=None, dict exec_algorithm_params=None, list tags=None, ClientOrderId client_order_id=None) → <a href="../model/orders/index.htm#posei_trader.model.orders.MarketToLimitOrder">MarketToLimitOrder</a><a href="#market_to_limitself-instrumentid-instrument_id-orderside-order_side-quantity-quantity-timeinforce-time_in_forcetimeinforcegtc-datetime-expire_timenone-bool-reduce_onlyfalse-bool-quote_quantityfalse-quantity-display_qtynone-execalgorithmid-exec_algorithm_idnone-dict-exec_algorithm_paramsnone-list-tagsnone-clientorderid-client_order_idnone--markettolimitorder" class="hash-link" aria-label="Direct link to market_to_limitself-instrumentid-instrument_id-orderside-order_side-quantity-quantity-timeinforce-time_in_forcetimeinforcegtc-datetime-expire_timenone-bool-reduce_onlyfalse-bool-quote_quantityfalse-quantity-display_qtynone-execalgorithmid-exec_algorithm_idnone-dict-exec_algorithm_paramsnone-list-tagsnone-clientorderid-client_order_idnone--markettolimitorder" title="Direct link to market_to_limitself-instrumentid-instrument_id-orderside-order_side-quantity-quantity-timeinforce-time_in_forcetimeinforcegtc-datetime-expire_timenone-bool-reduce_onlyfalse-bool-quote_quantityfalse-quantity-display_qtynone-execalgorithmid-exec_algorithm_idnone-dict-exec_algorithm_paramsnone-list-tagsnone-clientorderid-client_order_idnone--markettolimitorder">​</a></h4>
<p>Create a new <code>MARKET</code> order.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>instrument_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.InstrumentId"><em>InstrumentId</em></a>) – The orders instrument ID.</li>
<li><strong>order_side</strong> (OrderSide {<code>BUY</code>, <code>SELL</code>}) – The orders side.</li>
<li><strong>quantity</strong> (<a href="../model/index.htm#posei_trader.model.Quantity"><em>Quantity</em></a>) – The orders quantity (&gt; 0).</li>
<li><strong>time_in_force</strong> (TimeInForce {<code>GTC</code>, <code>GTD</code>, <code>IOC</code>, <code>FOK</code>}, default <code>GTC</code>) – The orders time in force.</li>
<li><strong>expire_time</strong> (<em>datetime</em> <em>,</em> <em>optional</em>) – The order expiration (for <code>GTD</code> orders).</li>
<li><strong>reduce_only</strong> (<em>bool</em> <em>,</em> <em>default False</em>) – If the order carries the ‘reduce-only’ execution instruction.</li>
<li><strong>quote_quantity</strong> (<em>bool</em>) – If the order quantity is denominated in the quote currency.</li>
<li><strong>display_qty</strong> (<a href="../model/index.htm#posei_trader.model.Quantity"><em>Quantity</em></a> <em>,</em> <em>optional</em>) – The quantity of the limit order to display on the public book (iceberg).</li>
<li><strong>exec_algorithm_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.ExecAlgorithmId"><em>ExecAlgorithmId</em></a> <em>,</em> <em>optional</em>) – The execution algorithm ID for the order.</li>
<li><strong>exec_algorithm_params</strong> (<em>dict</em> *[*<em>str</em> <em>,</em> <em>Any</em> <em>]</em> <em>,</em> <em>optional</em>) – The execution algorithm parameters for the order.</li>
<li><strong>tags</strong> (<em>list</em> *[*<em>str</em> <em>]</em> <em>,</em> <em>optional</em>) – The custom user tags for the order.</li>
<li><strong>client_order_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.ClientOrderId"><em>ClientOrderId</em></a> <em>,</em> <em>optional</em>) – The custom client order ID for the order.
If a client order ID is not provided then one will be generated by the factory.</li>
</ul>
</li>
<li><strong>Return type:</strong>
<a href="../model/orders/index.htm#posei_trader.model.orders.MarketToLimitOrder">MarketToLimitOrder</a></li>
<li><strong>Raises:</strong>
<ul>
<li><strong>ValueError</strong> – If quantity is not positive (&gt; 0).</li>
<li><strong>ValueError</strong> – If time_in_force is <code>AT_THE_OPEN</code> or <code>AT_THE_CLOSE</code>.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="resetself--void-1">reset(self) → void<a href="#resetself--void-1" class="hash-link" aria-label="Direct link to reset(self) → void" title="Direct link to reset(self) → void">​</a></h4>
<p>Reset the order factory.</p>
<p>All stateful fields are reset to their initial value.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="set_client_order_id_countself-int-count--void">set_client_order_id_count(self, int count) → void<a href="#set_client_order_id_countself-int-count--void" class="hash-link" aria-label="Direct link to set_client_order_id_count(self, int count) → void" title="Direct link to set_client_order_id_count(self, int count) → void">​</a></h4>
<p>Set the internal order ID generator count to the given count.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>count</strong> (<em>int</em>) – The count to set.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-55">WARNING<a href="#warning-55" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>System method (not intended to be called by user code).</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="set_order_list_id_countself-int-count--void">set_order_list_id_count(self, int count) → void<a href="#set_order_list_id_countself-int-count--void" class="hash-link" aria-label="Direct link to set_order_list_id_count(self, int count) → void" title="Direct link to set_order_list_id_count(self, int count) → void">​</a></h4>
<p>Set the internal order list ID generator count to the given count.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>count</strong> (<em>int</em>) – The count to set.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-56">WARNING<a href="#warning-56" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>System method (not intended to be called by user code).</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="stop_limitself-instrumentid-instrument_id-orderside-order_side-quantity-quantity-price-price-price-trigger_price-triggertype-trigger_typetriggertypedefault-timeinforce-time_in_forcetimeinforcegtc-datetime-expire_timenone-bool-post_onlyfalse-bool-reduce_onlyfalse-bool-quote_quantityfalse-quantity-display_qtynone-triggertype-emulation_triggertriggertypeno_trigger-instrumentid-trigger_instrument_idnone-execalgorithmid-exec_algorithm_idnone-dict-exec_algorithm_paramsnone-list-tagsnone-clientorderid-client_order_idnone--stoplimitorder">stop_limit(self, InstrumentId instrument_id, OrderSide order_side, Quantity quantity, Price price, Price trigger_price, TriggerType trigger_type=TriggerType.DEFAULT, TimeInForce time_in_force=TimeInForce.GTC, datetime expire_time=None, bool post_only=False, bool reduce_only=False, bool quote_quantity=False, Quantity display_qty=None, TriggerType emulation_trigger=TriggerType.NO_TRIGGER, InstrumentId trigger_instrument_id=None, ExecAlgorithmId exec_algorithm_id=None, dict exec_algorithm_params=None, list tags=None, ClientOrderId client_order_id=None) → <a href="../model/orders/index.htm#posei_trader.model.orders.StopLimitOrder">StopLimitOrder</a><a href="#stop_limitself-instrumentid-instrument_id-orderside-order_side-quantity-quantity-price-price-price-trigger_price-triggertype-trigger_typetriggertypedefault-timeinforce-time_in_forcetimeinforcegtc-datetime-expire_timenone-bool-post_onlyfalse-bool-reduce_onlyfalse-bool-quote_quantityfalse-quantity-display_qtynone-triggertype-emulation_triggertriggertypeno_trigger-instrumentid-trigger_instrument_idnone-execalgorithmid-exec_algorithm_idnone-dict-exec_algorithm_paramsnone-list-tagsnone-clientorderid-client_order_idnone--stoplimitorder" class="hash-link" aria-label="Direct link to stop_limitself-instrumentid-instrument_id-orderside-order_side-quantity-quantity-price-price-price-trigger_price-triggertype-trigger_typetriggertypedefault-timeinforce-time_in_forcetimeinforcegtc-datetime-expire_timenone-bool-post_onlyfalse-bool-reduce_onlyfalse-bool-quote_quantityfalse-quantity-display_qtynone-triggertype-emulation_triggertriggertypeno_trigger-instrumentid-trigger_instrument_idnone-execalgorithmid-exec_algorithm_idnone-dict-exec_algorithm_paramsnone-list-tagsnone-clientorderid-client_order_idnone--stoplimitorder" title="Direct link to stop_limitself-instrumentid-instrument_id-orderside-order_side-quantity-quantity-price-price-price-trigger_price-triggertype-trigger_typetriggertypedefault-timeinforce-time_in_forcetimeinforcegtc-datetime-expire_timenone-bool-post_onlyfalse-bool-reduce_onlyfalse-bool-quote_quantityfalse-quantity-display_qtynone-triggertype-emulation_triggertriggertypeno_trigger-instrumentid-trigger_instrument_idnone-execalgorithmid-exec_algorithm_idnone-dict-exec_algorithm_paramsnone-list-tagsnone-clientorderid-client_order_idnone--stoplimitorder">​</a></h4>
<p>Create a new <code>STOP_LIMIT</code> conditional order.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>instrument_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.InstrumentId"><em>InstrumentId</em></a>) – The orders instrument ID.</li>
<li><strong>order_side</strong> (OrderSide {<code>BUY</code>, <code>SELL</code>}) – The orders side.</li>
<li><strong>quantity</strong> (<a href="../model/index.htm#posei_trader.model.Quantity"><em>Quantity</em></a>) – The orders quantity (&gt; 0).</li>
<li><strong>price</strong> (<a href="../model/index.htm#posei_trader.model.Price"><em>Price</em></a>) – The orders limit price.</li>
<li><strong>trigger_price</strong> (<a href="../model/index.htm#posei_trader.model.Price"><em>Price</em></a>) – The orders trigger stop price.</li>
<li><strong>trigger_type</strong> (TriggerType, default <code>DEFAULT</code>) – The order trigger type.</li>
<li><strong>time_in_force</strong> (TimeInForce {<code>GTC</code>, <code>IOC</code>, <code>FOK</code>, <code>GTD</code>, <code>DAY</code>}, default <code>GTC</code>) – The orders time in force.</li>
<li><strong>expire_time</strong> (<em>datetime</em> <em>,</em> <em>optional</em>) – The order expiration (for <code>GTD</code> orders).</li>
<li><strong>post_only</strong> (<em>bool</em> <em>,</em> <em>default False</em>) – If the order will only provide liquidity (make a market).</li>
<li><strong>reduce_only</strong> (<em>bool</em> <em>,</em> <em>default False</em>) – If the order carries the ‘reduce-only’ execution instruction.</li>
<li><strong>quote_quantity</strong> (<em>bool</em>) – If the order quantity is denominated in the quote currency.</li>
<li><strong>display_qty</strong> (<a href="../model/index.htm#posei_trader.model.Quantity"><em>Quantity</em></a> <em>,</em> <em>optional</em>) – The quantity of the order to display on the public book (iceberg).</li>
<li><strong>emulation_trigger</strong> (TriggerType, default <code>NO_TRIGGER</code>) – The type of market price trigger to use for local order emulation.
<ul>
<li><code>NO_TRIGGER</code> (default): Disables local emulation; orders are sent directly to the venue.</li>
<li><code>DEFAULT</code> (the same as <code>BID_ASK</code>): Enables local order emulation by triggering orders based on bid/ask prices.
Additional trigger types are available. See the “Emulated Orders” section in the documentation for more details.</li>
</ul>
</li>
<li><strong>trigger_instrument_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.InstrumentId"><em>InstrumentId</em></a> <em>,</em> <em>optional</em>) – The emulation trigger instrument ID for the order (if <code>None</code> then will be the instrument_id).</li>
<li><strong>exec_algorithm_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.ExecAlgorithmId"><em>ExecAlgorithmId</em></a> <em>,</em> <em>optional</em>) – The execution algorithm ID for the order.</li>
<li><strong>exec_algorithm_params</strong> (<em>dict</em> *[*<em>str</em> <em>,</em> <em>Any</em> <em>]</em> <em>,</em> <em>optional</em>) – The execution algorithm parameters for the order.</li>
<li><strong>tags</strong> (<em>list</em> *[*<em>str</em> <em>]</em> <em>,</em> <em>optional</em>) – The custom user tags for the order.</li>
<li><strong>client_order_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.ClientOrderId"><em>ClientOrderId</em></a> <em>,</em> <em>optional</em>) – The custom client order ID for the order.
If a client order ID is not provided then one will be generated by the factory.</li>
</ul>
</li>
<li><strong>Return type:</strong>
<a href="../model/orders/index.htm#posei_trader.model.orders.StopLimitOrder">StopLimitOrder</a></li>
<li><strong>Raises:</strong>
<ul>
<li><strong>ValueError</strong> – If quantity is not positive (&gt; 0).</li>
<li><strong>ValueError</strong> – If trigger_type is <code>NO_TRIGGER</code>.</li>
<li><strong>ValueError</strong> – If time_in_force is <code>AT_THE_OPEN</code> or <code>AT_THE_CLOSE</code>.</li>
<li><strong>ValueError</strong> – If time_in_force is <code>GTD</code> and expire_time &lt;= UNIX epoch.</li>
<li><strong>ValueError</strong> – If display_qty is negative (&lt; 0) or greater than quantity.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="stop_marketself-instrumentid-instrument_id-orderside-order_side-quantity-quantity-price-trigger_price-triggertype-trigger_typetriggertypedefault-timeinforce-time_in_forcetimeinforcegtc-datetime-expire_timenone-bool-reduce_onlyfalse-bool-quote_quantityfalse-triggertype-emulation_triggertriggertypeno_trigger-instrumentid-trigger_instrument_idnone-execalgorithmid-exec_algorithm_idnone-dict-exec_algorithm_paramsnone-list-tagsnone-clientorderid-client_order_idnone--stopmarketorder">stop_market(self, InstrumentId instrument_id, OrderSide order_side, Quantity quantity, Price trigger_price, TriggerType trigger_type=TriggerType.DEFAULT, TimeInForce time_in_force=TimeInForce.GTC, datetime expire_time=None, bool reduce_only=False, bool quote_quantity=False, TriggerType emulation_trigger=TriggerType.NO_TRIGGER, InstrumentId trigger_instrument_id=None, ExecAlgorithmId exec_algorithm_id=None, dict exec_algorithm_params=None, list tags=None, ClientOrderId client_order_id=None) → <a href="../model/orders/index.htm#posei_trader.model.orders.StopMarketOrder">StopMarketOrder</a><a href="#stop_marketself-instrumentid-instrument_id-orderside-order_side-quantity-quantity-price-trigger_price-triggertype-trigger_typetriggertypedefault-timeinforce-time_in_forcetimeinforcegtc-datetime-expire_timenone-bool-reduce_onlyfalse-bool-quote_quantityfalse-triggertype-emulation_triggertriggertypeno_trigger-instrumentid-trigger_instrument_idnone-execalgorithmid-exec_algorithm_idnone-dict-exec_algorithm_paramsnone-list-tagsnone-clientorderid-client_order_idnone--stopmarketorder" class="hash-link" aria-label="Direct link to stop_marketself-instrumentid-instrument_id-orderside-order_side-quantity-quantity-price-trigger_price-triggertype-trigger_typetriggertypedefault-timeinforce-time_in_forcetimeinforcegtc-datetime-expire_timenone-bool-reduce_onlyfalse-bool-quote_quantityfalse-triggertype-emulation_triggertriggertypeno_trigger-instrumentid-trigger_instrument_idnone-execalgorithmid-exec_algorithm_idnone-dict-exec_algorithm_paramsnone-list-tagsnone-clientorderid-client_order_idnone--stopmarketorder" title="Direct link to stop_marketself-instrumentid-instrument_id-orderside-order_side-quantity-quantity-price-trigger_price-triggertype-trigger_typetriggertypedefault-timeinforce-time_in_forcetimeinforcegtc-datetime-expire_timenone-bool-reduce_onlyfalse-bool-quote_quantityfalse-triggertype-emulation_triggertriggertypeno_trigger-instrumentid-trigger_instrument_idnone-execalgorithmid-exec_algorithm_idnone-dict-exec_algorithm_paramsnone-list-tagsnone-clientorderid-client_order_idnone--stopmarketorder">​</a></h4>
<p>Create a new <code>STOP_MARKET</code> conditional order.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>instrument_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.InstrumentId"><em>InstrumentId</em></a>) – The orders instrument ID.</li>
<li><strong>order_side</strong> (OrderSide {<code>BUY</code>, <code>SELL</code>}) – The orders side.</li>
<li><strong>quantity</strong> (<a href="../model/index.htm#posei_trader.model.Quantity"><em>Quantity</em></a>) – The orders quantity (&gt; 0).</li>
<li><strong>trigger_price</strong> (<a href="../model/index.htm#posei_trader.model.Price"><em>Price</em></a>) – The orders trigger price (STOP).</li>
<li><strong>trigger_type</strong> (TriggerType, default <code>DEFAULT</code>) – The order trigger type.</li>
<li><strong>time_in_force</strong> (TimeInForce  {<code>GTC</code>, <code>IOC</code>, <code>FOK</code>, <code>GTD</code>, <code>DAY</code>}, default <code>GTC</code>) – The orders time in force.</li>
<li><strong>expire_time</strong> (<em>datetime</em> <em>,</em> <em>optional</em>) – The order expiration (for <code>GTD</code> orders).</li>
<li><strong>reduce_only</strong> (<em>bool</em> <em>,</em> <em>default False</em>) – If the order carries the ‘reduce-only’ execution instruction.</li>
<li><strong>quote_quantity</strong> (<em>bool</em>) – If the order quantity is denominated in the quote currency.</li>
<li><strong>emulation_trigger</strong> (TriggerType, default <code>NO_TRIGGER</code>) – The type of market price trigger to use for local order emulation.
<ul>
<li><code>NO_TRIGGER</code> (default): Disables local emulation; orders are sent directly to the venue.</li>
<li><code>DEFAULT</code> (the same as <code>BID_ASK</code>): Enables local order emulation by triggering orders based on bid/ask prices.
Additional trigger types are available. See the “Emulated Orders” section in the documentation for more details.</li>
</ul>
</li>
<li><strong>trigger_instrument_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.InstrumentId"><em>InstrumentId</em></a> <em>,</em> <em>optional</em>) – The emulation trigger instrument ID for the order (if <code>None</code> then will be the instrument_id).</li>
<li><strong>exec_algorithm_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.ExecAlgorithmId"><em>ExecAlgorithmId</em></a> <em>,</em> <em>optional</em>) – The execution algorithm ID for the order.</li>
<li><strong>exec_algorithm_params</strong> (<em>dict</em> *[*<em>str</em> <em>,</em> <em>Any</em> <em>]</em> <em>,</em> <em>optional</em>) – The execution algorithm parameters for the order.</li>
<li><strong>tags</strong> (<em>list</em> *[*<em>str</em> <em>]</em> <em>,</em> <em>optional</em>) – The custom user tags for the order.</li>
<li><strong>client_order_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.ClientOrderId"><em>ClientOrderId</em></a> <em>,</em> <em>optional</em>) – The custom client order ID for the order.
If a client order ID is not provided then one will be generated by the factory.</li>
</ul>
</li>
<li><strong>Return type:</strong>
<a href="../model/orders/index.htm#posei_trader.model.orders.StopMarketOrder">StopMarketOrder</a></li>
<li><strong>Raises:</strong>
<ul>
<li><strong>ValueError</strong> – If quantity is not positive (&gt; 0).</li>
<li><strong>ValueError</strong> – If trigger_type is <code>NO_TRIGGER</code>.</li>
<li><strong>ValueError</strong> – If time_in_force is <code>AT_THE_OPEN</code> or <code>AT_THE_CLOSE</code>.</li>
<li><strong>ValueError</strong> – If time_in_force is <code>GTD</code> and expire_time &lt;= UNIX epoch.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="strategy_id">strategy_id<a href="#strategy_id" class="hash-link" aria-label="Direct link to strategy_id" title="Direct link to strategy_id">​</a></h4>
<p>The order factories trading strategy ID.</p>
<ul>
<li><strong>Returns:</strong>
StrategyId</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="trader_id-1">trader_id<a href="#trader_id-1" class="hash-link" aria-label="Direct link to trader_id" title="Direct link to trader_id">​</a></h4>
<p>The order factories trader ID.</p>
<ul>
<li><strong>Returns:</strong>
TraderId</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="trailing_stop_limitself-instrumentid-instrument_id-orderside-order_side-quantity-quantity-limit_offset-decimal-trailing_offset-decimal-price-pricenone-price-activation_pricenone-price-trigger_pricenone-triggertype-trigger_typetriggertypedefault-trailingoffsettype-trailing_offset_typetrailingoffsettypeprice-timeinforce-time_in_forcetimeinforcegtc-datetime-expire_timenone-bool-post_onlyfalse-bool-reduce_onlyfalse-bool-quote_quantityfalse-quantity-display_qtynone-triggertype-emulation_triggertriggertypeno_trigger-instrumentid-trigger_instrument_idnone-execalgorithmid-exec_algorithm_idnone-dict-exec_algorithm_paramsnone-list-tagsnone-clientorderid-client_order_idnone--trailingstoplimitorder">trailing_stop_limit(self, InstrumentId instrument_id, OrderSide order_side, Quantity quantity, limit_offset: Decimal, trailing_offset: Decimal, Price price=None, Price activation_price=None, Price trigger_price=None, TriggerType trigger_type=TriggerType.DEFAULT, TrailingOffsetType trailing_offset_type=TrailingOffsetType.PRICE, TimeInForce time_in_force=TimeInForce.GTC, datetime expire_time=None, bool post_only=False, bool reduce_only=False, bool quote_quantity=False, Quantity display_qty=None, TriggerType emulation_trigger=TriggerType.NO_TRIGGER, InstrumentId trigger_instrument_id=None, ExecAlgorithmId exec_algorithm_id=None, dict exec_algorithm_params=None, list tags=None, ClientOrderId client_order_id=None) → <a href="../model/orders/index.htm#posei_trader.model.orders.TrailingStopLimitOrder">TrailingStopLimitOrder</a><a href="#trailing_stop_limitself-instrumentid-instrument_id-orderside-order_side-quantity-quantity-limit_offset-decimal-trailing_offset-decimal-price-pricenone-price-activation_pricenone-price-trigger_pricenone-triggertype-trigger_typetriggertypedefault-trailingoffsettype-trailing_offset_typetrailingoffsettypeprice-timeinforce-time_in_forcetimeinforcegtc-datetime-expire_timenone-bool-post_onlyfalse-bool-reduce_onlyfalse-bool-quote_quantityfalse-quantity-display_qtynone-triggertype-emulation_triggertriggertypeno_trigger-instrumentid-trigger_instrument_idnone-execalgorithmid-exec_algorithm_idnone-dict-exec_algorithm_paramsnone-list-tagsnone-clientorderid-client_order_idnone--trailingstoplimitorder" class="hash-link" aria-label="Direct link to trailing_stop_limitself-instrumentid-instrument_id-orderside-order_side-quantity-quantity-limit_offset-decimal-trailing_offset-decimal-price-pricenone-price-activation_pricenone-price-trigger_pricenone-triggertype-trigger_typetriggertypedefault-trailingoffsettype-trailing_offset_typetrailingoffsettypeprice-timeinforce-time_in_forcetimeinforcegtc-datetime-expire_timenone-bool-post_onlyfalse-bool-reduce_onlyfalse-bool-quote_quantityfalse-quantity-display_qtynone-triggertype-emulation_triggertriggertypeno_trigger-instrumentid-trigger_instrument_idnone-execalgorithmid-exec_algorithm_idnone-dict-exec_algorithm_paramsnone-list-tagsnone-clientorderid-client_order_idnone--trailingstoplimitorder" title="Direct link to trailing_stop_limitself-instrumentid-instrument_id-orderside-order_side-quantity-quantity-limit_offset-decimal-trailing_offset-decimal-price-pricenone-price-activation_pricenone-price-trigger_pricenone-triggertype-trigger_typetriggertypedefault-trailingoffsettype-trailing_offset_typetrailingoffsettypeprice-timeinforce-time_in_forcetimeinforcegtc-datetime-expire_timenone-bool-post_onlyfalse-bool-reduce_onlyfalse-bool-quote_quantityfalse-quantity-display_qtynone-triggertype-emulation_triggertriggertypeno_trigger-instrumentid-trigger_instrument_idnone-execalgorithmid-exec_algorithm_idnone-dict-exec_algorithm_paramsnone-list-tagsnone-clientorderid-client_order_idnone--trailingstoplimitorder">​</a></h4>
<p>Create a new <code>TRAILING_STOP_LIMIT</code> conditional order.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>instrument_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.InstrumentId"><em>InstrumentId</em></a>) – The orders instrument ID.</li>
<li><strong>order_side</strong> (OrderSide {<code>BUY</code>, <code>SELL</code>}) – The orders side.</li>
<li><strong>quantity</strong> (<a href="../model/index.htm#posei_trader.model.Quantity"><em>Quantity</em></a>) – The orders quantity (&gt; 0).</li>
<li><strong>trailing_offset</strong> (<em>Decimal</em>) – The trailing offset for the trigger price (STOP).</li>
<li><strong>limit_offset</strong> (<em>Decimal</em>) – The trailing offset for the order price (LIMIT).</li>
<li><strong>price</strong> (<a href="../model/index.htm#posei_trader.model.Price"><em>Price</em></a> <em>,</em> <em>optional</em>) – The order price (LIMIT). If <code>None</code> then will typically default to the
delta of market price and limit_offset.</li>
<li><strong>activation_price</strong> (<a href="../model/index.htm#posei_trader.model.Price"><em>Price</em></a> <em>,</em> <em>optional</em>) – The price for the order to become active. If <code>None</code> then the order will be activated right after the order is accepted.</li>
<li><strong>trigger_price</strong> (<a href="../model/index.htm#posei_trader.model.Price"><em>Price</em></a> <em>,</em> <em>optional</em>) – The order trigger price (STOP). If <code>None</code> then will typically default
to the delta of market price and trailing_offset.</li>
<li><strong>trigger_type</strong> (TriggerType, default <code>DEFAULT</code>) – The order trigger type.</li>
<li><strong>trailing_offset_type</strong> (TrailingOffsetType, default <code>PRICE</code>) – The order trailing offset type.</li>
<li><strong>time_in_force</strong> (TimeInForce {<code>GTC</code>, <code>IOC</code>, <code>FOK</code>, <code>GTD</code>, <code>DAY</code>}, default <code>GTC</code>) – The orders time in force.</li>
<li><strong>expire_time</strong> (<em>datetime</em> <em>,</em> <em>optional</em>) – The order expiration (for <code>GTD</code> orders).</li>
<li><strong>post_only</strong> (<em>bool</em> <em>,</em> <em>default False</em>) – If the order will only provide liquidity (make a market).</li>
<li><strong>reduce_only</strong> (<em>bool</em> <em>,</em> <em>default False</em>) – If the order carries the ‘reduce-only’ execution instruction.</li>
<li><strong>quote_quantity</strong> (<em>bool</em>) – If the order quantity is denominated in the quote currency.</li>
<li><strong>display_qty</strong> (<a href="../model/index.htm#posei_trader.model.Quantity"><em>Quantity</em></a> <em>,</em> <em>optional</em>) – The quantity of the order to display on the public book (iceberg).</li>
<li><strong>emulation_trigger</strong> (TriggerType, default <code>NO_TRIGGER</code>) – The type of market price trigger to use for local order emulation.
<ul>
<li><code>NO_TRIGGER</code> (default): Disables local emulation; orders are sent directly to the venue.</li>
<li><code>DEFAULT</code> (the same as <code>BID_ASK</code>): Enables local order emulation by triggering orders based on bid/ask prices.
Additional trigger types are available. See the “Emulated Orders” section in the documentation for more details.</li>
</ul>
</li>
<li><strong>trigger_instrument_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.InstrumentId"><em>InstrumentId</em></a> <em>,</em> <em>optional</em>) – The emulation trigger instrument ID for the order (if <code>None</code> then will be the instrument_id).</li>
<li><strong>exec_algorithm_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.ExecAlgorithmId"><em>ExecAlgorithmId</em></a> <em>,</em> <em>optional</em>) – The execution algorithm ID for the order.</li>
<li><strong>exec_algorithm_params</strong> (<em>dict</em> *[*<em>str</em> <em>,</em> <em>Any</em> <em>]</em> <em>,</em> <em>optional</em>) – The execution algorithm parameters for the order.</li>
<li><strong>tags</strong> (<em>list</em> *[*<em>str</em> <em>]</em> <em>,</em> <em>optional</em>) – The custom user tags for the order.</li>
<li><strong>client_order_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.ClientOrderId"><em>ClientOrderId</em></a> <em>,</em> <em>optional</em>) – The custom client order ID for the order.
If a client order ID is not provided then one will be generated by the factory.</li>
</ul>
</li>
<li><strong>Return type:</strong>
<a href="../model/orders/index.htm#posei_trader.model.orders.TrailingStopLimitOrder">TrailingStopLimitOrder</a></li>
<li><strong>Raises:</strong>
<ul>
<li><strong>ValueError</strong> – If quantity is not positive (&gt; 0).</li>
<li><strong>ValueError</strong> – If trigger_type is <code>NO_TRIGGER</code>.</li>
<li><strong>ValueError</strong> – If trailing_offset_type is <code>NO_TRAILING_OFFSET</code>.</li>
<li><strong>ValueError</strong> – If time_in_force is <code>AT_THE_OPEN</code> or <code>AT_THE_CLOSE</code>.</li>
<li><strong>ValueError</strong> – If time_in_force is <code>GTD</code> and expire_time &lt;= UNIX epoch.</li>
<li><strong>ValueError</strong> – If display_qty is negative (&lt; 0) or greater than quantity.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="trailing_stop_marketself-instrumentid-instrument_id-orderside-order_side-quantity-quantity-trailing_offset-decimal-price-activation_pricenone-price-trigger_pricenone-triggertype-trigger_typetriggertypedefault-trailingoffsettype-trailing_offset_typetrailingoffsettypeprice-timeinforce-time_in_forcetimeinforcegtc-datetime-expire_timenone-bool-reduce_onlyfalse-bool-quote_quantityfalse-triggertype-emulation_triggertriggertypeno_trigger-instrumentid-trigger_instrument_idnone-execalgorithmid-exec_algorithm_idnone-dict-exec_algorithm_paramsnone-list-tagsnone-clientorderid-client_order_idnone--trailingstopmarketorder">trailing_stop_market(self, InstrumentId instrument_id, OrderSide order_side, Quantity quantity, trailing_offset: Decimal, Price activation_price=None, Price trigger_price=None, TriggerType trigger_type=TriggerType.DEFAULT, TrailingOffsetType trailing_offset_type=TrailingOffsetType.PRICE, TimeInForce time_in_force=TimeInForce.GTC, datetime expire_time=None, bool reduce_only=False, bool quote_quantity=False, TriggerType emulation_trigger=TriggerType.NO_TRIGGER, InstrumentId trigger_instrument_id=None, ExecAlgorithmId exec_algorithm_id=None, dict exec_algorithm_params=None, list tags=None, ClientOrderId client_order_id=None) → <a href="../model/orders/index.htm#posei_trader.model.orders.TrailingStopMarketOrder">TrailingStopMarketOrder</a><a href="#trailing_stop_marketself-instrumentid-instrument_id-orderside-order_side-quantity-quantity-trailing_offset-decimal-price-activation_pricenone-price-trigger_pricenone-triggertype-trigger_typetriggertypedefault-trailingoffsettype-trailing_offset_typetrailingoffsettypeprice-timeinforce-time_in_forcetimeinforcegtc-datetime-expire_timenone-bool-reduce_onlyfalse-bool-quote_quantityfalse-triggertype-emulation_triggertriggertypeno_trigger-instrumentid-trigger_instrument_idnone-execalgorithmid-exec_algorithm_idnone-dict-exec_algorithm_paramsnone-list-tagsnone-clientorderid-client_order_idnone--trailingstopmarketorder" class="hash-link" aria-label="Direct link to trailing_stop_marketself-instrumentid-instrument_id-orderside-order_side-quantity-quantity-trailing_offset-decimal-price-activation_pricenone-price-trigger_pricenone-triggertype-trigger_typetriggertypedefault-trailingoffsettype-trailing_offset_typetrailingoffsettypeprice-timeinforce-time_in_forcetimeinforcegtc-datetime-expire_timenone-bool-reduce_onlyfalse-bool-quote_quantityfalse-triggertype-emulation_triggertriggertypeno_trigger-instrumentid-trigger_instrument_idnone-execalgorithmid-exec_algorithm_idnone-dict-exec_algorithm_paramsnone-list-tagsnone-clientorderid-client_order_idnone--trailingstopmarketorder" title="Direct link to trailing_stop_marketself-instrumentid-instrument_id-orderside-order_side-quantity-quantity-trailing_offset-decimal-price-activation_pricenone-price-trigger_pricenone-triggertype-trigger_typetriggertypedefault-trailingoffsettype-trailing_offset_typetrailingoffsettypeprice-timeinforce-time_in_forcetimeinforcegtc-datetime-expire_timenone-bool-reduce_onlyfalse-bool-quote_quantityfalse-triggertype-emulation_triggertriggertypeno_trigger-instrumentid-trigger_instrument_idnone-execalgorithmid-exec_algorithm_idnone-dict-exec_algorithm_paramsnone-list-tagsnone-clientorderid-client_order_idnone--trailingstopmarketorder">​</a></h4>
<p>Create a new <code>TRAILING_STOP_MARKET</code> conditional order.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>instrument_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.InstrumentId"><em>InstrumentId</em></a>) – The orders instrument ID.</li>
<li><strong>order_side</strong> (OrderSide {<code>BUY</code>, <code>SELL</code>}) – The orders side.</li>
<li><strong>quantity</strong> (<a href="../model/index.htm#posei_trader.model.Quantity"><em>Quantity</em></a>) – The orders quantity (&gt; 0).</li>
<li><strong>trailing_offset</strong> (<em>Decimal</em>) – The trailing offset for the trigger price (STOP).</li>
<li><strong>activation_price</strong> (<a href="../model/index.htm#posei_trader.model.Price"><em>Price</em></a> <em>,</em> <em>optional</em>) – The price for the order to become active. If <code>None</code> then the order will be activated right after the order is accepted.</li>
<li><strong>trigger_price</strong> (<a href="../model/index.htm#posei_trader.model.Price"><em>Price</em></a> <em>,</em> <em>optional</em>) – The order trigger price (STOP). If <code>None</code> then will typically default
to the delta of market price and trailing_offset.</li>
<li><strong>trigger_type</strong> (TriggerType, default <code>DEFAULT</code>) – The order trigger type.</li>
<li><strong>trailing_offset_type</strong> (TrailingOffsetType, default <code>PRICE</code>) – The order trailing offset type.</li>
<li><strong>time_in_force</strong> (TimeInForce {<code>GTC</code>, <code>IOC</code>, <code>FOK</code>, <code>GTD</code>, <code>DAY</code>}, default <code>GTC</code>) – The orders time in force.</li>
<li><strong>expire_time</strong> (<em>datetime</em> <em>,</em> <em>optional</em>) – The order expiration (for <code>GTD</code> orders).</li>
<li><strong>reduce_only</strong> (<em>bool</em> <em>,</em> <em>default False</em>) – If the order carries the ‘reduce-only’ execution instruction.</li>
<li><strong>quote_quantity</strong> (<em>bool</em>) – If the order quantity is denominated in the quote currency.</li>
<li><strong>emulation_trigger</strong> (TriggerType, default <code>NO_TRIGGER</code>) – The type of market price trigger to use for local order emulation.
<ul>
<li><code>NO_TRIGGER</code> (default): Disables local emulation; orders are sent directly to the venue.</li>
<li><code>DEFAULT</code> (the same as <code>BID_ASK</code>): Enables local order emulation by triggering orders based on bid/ask prices.
Additional trigger types are available. See the “Emulated Orders” section in the documentation for more details.</li>
</ul>
</li>
<li><strong>exec_algorithm_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.ExecAlgorithmId"><em>ExecAlgorithmId</em></a> <em>,</em> <em>optional</em>) – The execution algorithm ID for the order.</li>
<li><strong>exec_algorithm_params</strong> (<em>dict</em> *[*<em>str</em> <em>,</em> <em>Any</em> <em>]</em> <em>,</em> <em>optional</em>) – The execution algorithm parameters for the order.</li>
<li><strong>tags</strong> (<em>list</em> *[*<em>str</em> <em>]</em> <em>,</em> <em>optional</em>) – The custom user tags for the order.</li>
<li><strong>client_order_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.ClientOrderId"><em>ClientOrderId</em></a> <em>,</em> <em>optional</em>) – The custom client order ID for the order.
If a client order ID is not provided then one will be generated by the factory.</li>
</ul>
</li>
<li><strong>Return type:</strong>
<a href="../model/orders/index.htm#posei_trader.model.orders.TrailingStopMarketOrder">TrailingStopMarketOrder</a></li>
<li><strong>Raises:</strong>
<ul>
<li><strong>ValueError</strong> – If quantity is not positive (&gt; 0).</li>
<li><strong>ValueError</strong> – If trigger_type is <code>NO_TRIGGER</code>.</li>
<li><strong>ValueError</strong> – If trailing_offset_type is <code>NO_TRAILING_OFFSET</code>.</li>
<li><strong>ValueError</strong> – If time_in_force is <code>AT_THE_OPEN</code> or <code>AT_THE_CLOSE</code>.</li>
<li><strong>ValueError</strong> – If time_in_force is <code>GTD</code> and expire_time &lt;= UNIX epoch.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="use_uuid_client_order_ids">use_uuid_client_order_ids<a href="#use_uuid_client_order_ids" class="hash-link" aria-label="Direct link to use_uuid_client_order_ids" title="Direct link to use_uuid_client_order_ids">​</a></h4>
<p>If UUID4’s should be used for client order ID values.</p>
<ul>
<li><strong>Returns:</strong>
bool</li>
</ul>
<h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="component">Component<a href="#component" class="hash-link" aria-label="Direct link to Component" title="Direct link to Component">​</a></h2>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="class-clock"><em>class</em> Clock<a href="#class-clock" class="hash-link" aria-label="Direct link to class-clock" title="Direct link to class-clock">​</a></h3>
<p>Bases: <code>object</code></p>
<p>The base class for all clocks.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-57">WARNING<a href="#warning-57" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>This class should not be used directly, but through a concrete subclass.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="cancel_timerself-str-name--void">cancel_timer(self, str name) → void<a href="#cancel_timerself-str-name--void" class="hash-link" aria-label="Direct link to cancel_timer(self, str name) → void" title="Direct link to cancel_timer(self, str name) → void">​</a></h4>
<p>Cancel the timer corresponding to the given label.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>name</strong> (<em>str</em>) – The name for the timer to cancel.</li>
<li><strong>Raises:</strong>
<ul>
<li><strong>ValueError</strong> – If name is not a valid string.</li>
<li><strong>KeyError</strong> – If name is not an active timer name for this clock.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="cancel_timersself--void">cancel_timers(self) → void<a href="#cancel_timersself--void" class="hash-link" aria-label="Direct link to cancel_timers(self) → void" title="Direct link to cancel_timers(self) → void">​</a></h4>
<p>Cancel all timers.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="local_nowself-tzinfo-tznone--datetime">local_now(self, tzinfo tz=None) → datetime<a href="#local_nowself-tzinfo-tznone--datetime" class="hash-link" aria-label="Direct link to local_now(self, tzinfo tz=None) → datetime" title="Direct link to local_now(self, tzinfo tz=None) → datetime">​</a></h4>
<p>Return the current datetime of the clock in the given local timezone.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>tz</strong> (<em>tzinfo</em> <em>,</em> <em>optional</em>) – The local timezone (if None the system local timezone is assumed for
the target timezone).</li>
<li><strong>Returns:</strong>
tz-aware in local timezone.</li>
<li><strong>Return type:</strong>
datetime</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="next_time_nsself-str-name--uint64_t">next_time_ns(self, str name) → uint64_t<a href="#next_time_nsself-str-name--uint64_t" class="hash-link" aria-label="Direct link to next_time_ns(self, str name) → uint64_t" title="Direct link to next_time_ns(self, str name) → uint64_t">​</a></h4>
<p>Find a particular timer.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>name</strong> (<em>str</em>) – The name of the timer.</li>
<li><strong>Return type:</strong>
uint64_t</li>
<li><strong>Raises:</strong>
<strong>ValueError</strong> – If name is not a valid string.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="register_default_handlerself-handler-callabletimeevent-none--void">register_default_handler(self, handler: Callable[[<a href="#posei_trader.common.component.TimeEvent">TimeEvent</a>], None]) → void<a href="#register_default_handlerself-handler-callabletimeevent-none--void" class="hash-link" aria-label="Direct link to register_default_handlerself-handler-callabletimeevent-none--void" title="Direct link to register_default_handlerself-handler-callabletimeevent-none--void">​</a></h4>
<p>Register the given handler as the clocks default handler.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>handler</strong> (<em>Callable</em> <em>[</em> <em>[</em><a href="#posei_trader.common.component.TimeEvent"><em>TimeEvent</em></a> <em>]</em> <em>,</em> <em>None</em> <em>]</em>) – The handler to register.</li>
<li><strong>Raises:</strong>
<strong>TypeError</strong> – If handler is not of type Callable.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="set_time_alertself-str-name-datetime-alert_time-callback-callabletimeevent-none--none-bool-overridefalse-bool-allow_pasttrue--void">set_time_alert(self, str name, datetime alert_time, callback: Callable[[TimeEvent], None] = None, bool override=False, bool allow_past=True) → void<a href="#set_time_alertself-str-name-datetime-alert_time-callback-callabletimeevent-none--none-bool-overridefalse-bool-allow_pasttrue--void" class="hash-link" aria-label="Direct link to set_time_alert(self, str name, datetime alert_time, callback: Callable[[TimeEvent], None] = None, bool override=False, bool allow_past=True) → void" title="Direct link to set_time_alert(self, str name, datetime alert_time, callback: Callable[[TimeEvent], None] = None, bool override=False, bool allow_past=True) → void">​</a></h4>
<p>Set a time alert for the given time.</p>
<p>When the time is reached the handler will be passed the TimeEvent
containing the timers unique name. If no handler is passed then the
default handler (if registered) will receive the TimeEvent.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>name</strong> (<em>str</em>) – The name for the alert (must be unique for this clock).</li>
<li><strong>alert_time</strong> (<em>datetime</em>) – The time for the alert.</li>
<li><strong>callback</strong> (<em>Callable</em> <em>[</em> <em>[</em><a href="#posei_trader.common.component.TimeEvent"><em>TimeEvent</em></a> <em>]</em> <em>,</em> <em>None</em> <em>]</em> <em>,</em> <em>optional</em>) – The callback to receive time events.</li>
<li><strong>override</strong> (<em>bool</em> <em>,</em> <em>default False</em>) – If override is set to True an alert with a given name can be overwritten if it exists already.</li>
<li><strong>allow_past</strong> (<em>bool</em> <em>,</em> <em>default True</em>) – If True, allows an alert_time in the past and adjusts it to the current time
for immediate firing. If False, raises an error when the alert_time is in the
past, requiring it to be in the future.</li>
</ul>
</li>
<li><strong>Raises:</strong>
<ul>
<li><strong>ValueError</strong> – If name is not a valid string.</li>
<li><strong>KeyError</strong> – If name is not unique for this clock.</li>
<li><strong>TypeError</strong> – If handler is not of type Callable or <code>None</code>.</li>
<li><strong>ValueError</strong> – If handler is <code>None</code> and no default handler is registered.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-58">WARNING<a href="#warning-58" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>If alert_time is in the past or at current time, then an immediate
time event will be generated (rather than being invalid and failing a condition check).</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="set_time_alert_nsself-str-name-uint64_t-alert_time_ns-callback-callabletimeevent-none--none-bool-allow_pasttrue--void">set_time_alert_ns(self, str name, uint64_t alert_time_ns, callback: Callable[[TimeEvent], None] = None, bool allow_past=True) → void<a href="#set_time_alert_nsself-str-name-uint64_t-alert_time_ns-callback-callabletimeevent-none--none-bool-allow_pasttrue--void" class="hash-link" aria-label="Direct link to set_time_alert_ns(self, str name, uint64_t alert_time_ns, callback: Callable[[TimeEvent], None] = None, bool allow_past=True) → void" title="Direct link to set_time_alert_ns(self, str name, uint64_t alert_time_ns, callback: Callable[[TimeEvent], None] = None, bool allow_past=True) → void">​</a></h4>
<p>Set a time alert for the given time.</p>
<p>When the time is reached the handler will be passed the TimeEvent
containing the timers unique name. If no callback is passed then the
default handler (if registered) will receive the TimeEvent.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>name</strong> (<em>str</em>) – The name for the alert (must be unique for this clock).</li>
<li><strong>alert_time_ns</strong> (<em>uint64_t</em>) – The UNIX timestamp (nanoseconds) for the alert.</li>
<li><strong>callback</strong> (<em>Callable</em> <em>[</em> <em>[</em><a href="#posei_trader.common.component.TimeEvent"><em>TimeEvent</em></a> <em>]</em> <em>,</em> <em>None</em> <em>]</em> <em>,</em> <em>optional</em>) – The callback to receive time events.</li>
<li><strong>allow_past</strong> (<em>bool</em> <em>,</em> <em>default True</em>) – If True, allows an alert_time_ns in the past and adjusts it to the current time
for immediate firing. If False, panics when the alert_time_ns is in the
past, requiring it to be in the future.</li>
</ul>
</li>
<li><strong>Raises:</strong>
<ul>
<li><strong>ValueError</strong> – If name is not a valid string.</li>
<li><strong>ValueError</strong> – If name is not unique for this clock.</li>
<li><strong>TypeError</strong> – If callback is not of type Callable or <code>None</code>.</li>
<li><strong>ValueError</strong> – If callback is <code>None</code> and no default handler is registered.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-59">WARNING<a href="#warning-59" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>If alert_time_ns is in the past or at current time, then an immediate
time event will be generated (rather than being invalid and failing a condition check).</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="set_timerself-str-name-timedelta-interval-datetime-start_timenone-datetime-stop_timenone-callback-callabletimeevent-none--none--none-bool-allow_pasttrue-bool-fire_immediatelyfalse--void">set_timer(self, str name, timedelta interval, datetime start_time=None, datetime stop_time=None, callback: Callable[[TimeEvent], None] | None = None, bool allow_past=True, bool fire_immediately=False) → void<a href="#set_timerself-str-name-timedelta-interval-datetime-start_timenone-datetime-stop_timenone-callback-callabletimeevent-none--none--none-bool-allow_pasttrue-bool-fire_immediatelyfalse--void" class="hash-link" aria-label="Direct link to set_timer(self, str name, timedelta interval, datetime start_time=None, datetime stop_time=None, callback: Callable[[TimeEvent], None] | None = None, bool allow_past=True, bool fire_immediately=False) → void" title="Direct link to set_timer(self, str name, timedelta interval, datetime start_time=None, datetime stop_time=None, callback: Callable[[TimeEvent], None] | None = None, bool allow_past=True, bool fire_immediately=False) → void">​</a></h4>
<p>Set a timer to run.</p>
<p>The timer will run from the start time (optionally until the stop time).
When the intervals are reached the handlers will be passed the
TimeEvent containing the timers unique name. If no handler is passed
then the default handler (if registered) will receive the TimeEvent.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>name</strong> (<em>str</em>) – The name for the timer (must be unique for this clock).</li>
<li><strong>interval</strong> (<em>timedelta</em>) – The time interval for the timer.</li>
<li><strong>start_time</strong> (<em>datetime</em> <em>,</em> <em>optional</em>) – The start time for the timer (if None then starts immediately).</li>
<li><strong>stop_time</strong> (<em>datetime</em> <em>,</em> <em>optional</em>) – The stop time for the timer (if None then repeats indefinitely).</li>
<li><strong>callback</strong> (<em>Callable</em> <em>[</em> <em>[</em><a href="#posei_trader.common.component.TimeEvent"><em>TimeEvent</em></a> <em>]</em> <em>,</em> <em>None</em> <em>]</em> <em>,</em> <em>optional</em>) – The callback to receive time events.</li>
<li><strong>allow_past</strong> (<em>bool</em> <em>,</em> <em>default True</em>) – If True, allows timers where the next event time may be in the past.
If False, raises an error when the next event time would be in the past.</li>
<li><strong>fire_immediately</strong> (<em>bool</em> <em>,</em> <em>default False</em>) – If True, the timer will fire immediately at the start time,
then fire again after each interval. If False, the timer will
fire after the first interval has elapsed (default behavior).</li>
</ul>
</li>
<li><strong>Raises:</strong>
<ul>
<li><strong>ValueError</strong> – If name is not a valid string.</li>
<li><strong>KeyError</strong> – If name is not unique for this clock.</li>
<li><strong>ValueError</strong> – If interval is not positive (&gt; 0).</li>
<li><strong>ValueError</strong> – If stop_time is not <code>None</code> and stop_time &lt; time now.</li>
<li><strong>ValueError</strong> – If stop_time is not <code>None</code> and start_time + interval &gt; stop_time.</li>
<li><strong>TypeError</strong> – If handler is not of type Callable or <code>None</code>.</li>
<li><strong>ValueError</strong> – If handler is <code>None</code> and no default handler is registered.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="set_timer_nsself-str-name-uint64_t-interval_ns-uint64_t-start_time_ns-uint64_t-stop_time_ns-callback-callabletimeevent-none--none--none-bool-allow_pasttrue-bool-fire_immediatelyfalse--void">set_timer_ns(self, str name, uint64_t interval_ns, uint64_t start_time_ns, uint64_t stop_time_ns, callback: Callable[[TimeEvent], None] | None = None, bool allow_past=True, bool fire_immediately=False) → void<a href="#set_timer_nsself-str-name-uint64_t-interval_ns-uint64_t-start_time_ns-uint64_t-stop_time_ns-callback-callabletimeevent-none--none--none-bool-allow_pasttrue-bool-fire_immediatelyfalse--void" class="hash-link" aria-label="Direct link to set_timer_ns(self, str name, uint64_t interval_ns, uint64_t start_time_ns, uint64_t stop_time_ns, callback: Callable[[TimeEvent], None] | None = None, bool allow_past=True, bool fire_immediately=False) → void" title="Direct link to set_timer_ns(self, str name, uint64_t interval_ns, uint64_t start_time_ns, uint64_t stop_time_ns, callback: Callable[[TimeEvent], None] | None = None, bool allow_past=True, bool fire_immediately=False) → void">​</a></h4>
<p>Set a timer to run.</p>
<p>The timer will run from the start time until the stop time.
When the intervals are reached the handlers will be passed the
TimeEvent containing the timers unique name. If no handler is passed
then the default handler (if registered) will receive the TimeEvent.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>name</strong> (<em>str</em>) – The name for the timer (must be unique for this clock).</li>
<li><strong>interval_ns</strong> (<em>uint64_t</em>) – The time interval (nanoseconds) for the timer.</li>
<li><strong>start_time_ns</strong> (<em>uint64_t</em>) – The start UNIX timestamp (nanoseconds) for the timer.</li>
<li><strong>stop_time_ns</strong> (<em>uint64_t</em>) – The stop UNIX timestamp (nanoseconds) for the timer.</li>
<li><strong>callback</strong> (<em>Callable</em> <em>[</em> <em>[</em><a href="#posei_trader.common.component.TimeEvent"><em>TimeEvent</em></a> <em>]</em> <em>,</em> <em>None</em> <em>]</em> <em>,</em> <em>optional</em>) – The callback to receive time events.</li>
<li><strong>allow_past</strong> (<em>bool</em> <em>,</em> <em>default True</em>) – If True, allows timers where the next event time may be in the past.
If False, raises an error when the next event time would be in the past.</li>
<li><strong>fire_immediately</strong> (<em>bool</em> <em>,</em> <em>default False</em>) – If True, the timer will fire immediately at the start time,
then fire again after each interval. If False, the timer will
fire after the first interval has elapsed (default behavior).</li>
</ul>
</li>
<li><strong>Raises:</strong>
<ul>
<li><strong>ValueError</strong> – If name is not a valid string.</li>
<li><strong>KeyError</strong> – If name is not unique for this clock.</li>
<li><strong>ValueError</strong> – If interval is not positive (&gt; 0).</li>
<li><strong>ValueError</strong> – If stop_time is not <code>None</code> and stop_time &lt; time now.</li>
<li><strong>ValueError</strong> – If stop_time is not <code>None</code> and start_time + interval &gt; stop_time.</li>
<li><strong>TypeError</strong> – If callback is not of type Callable or <code>None</code>.</li>
<li><strong>ValueError</strong> – If callback is <code>None</code> and no default handler is registered.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="timer_count">timer_count<a href="#timer_count" class="hash-link" aria-label="Direct link to timer_count" title="Direct link to timer_count">​</a></h4>
<p>int</p>
<p>Return the count of <em>active</em> timers running in the clock.</p>
<ul>
<li><strong>Return type:</strong>
int</li>
<li><strong>Type:</strong>
Clock.timer_count</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="timer_names">timer_names<a href="#timer_names" class="hash-link" aria-label="Direct link to timer_names" title="Direct link to timer_names">​</a></h4>
<p>list[str]</p>
<p>Return the names of <em>active</em> timers running in the clock.</p>
<ul>
<li><strong>Return type:</strong>
list[str]</li>
<li><strong>Type:</strong>
Clock.timer_names</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="timestampself--double">timestamp(self) → double<a href="#timestampself--double" class="hash-link" aria-label="Direct link to timestamp(self) → double" title="Direct link to timestamp(self) → double">​</a></h4>
<p>Return the current UNIX timestamp in seconds.</p>
<ul>
<li><strong>Return type:</strong>
double</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="timestamp_msself--uint64_t">timestamp_ms(self) → uint64_t<a href="#timestamp_msself--uint64_t" class="hash-link" aria-label="Direct link to timestamp_ms(self) → uint64_t" title="Direct link to timestamp_ms(self) → uint64_t">​</a></h4>
<p>Return the current UNIX timestamp in milliseconds (ms).</p>
<ul>
<li><strong>Return type:</strong>
uint64_t</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="timestamp_nsself--uint64_t">timestamp_ns(self) → uint64_t<a href="#timestamp_nsself--uint64_t" class="hash-link" aria-label="Direct link to timestamp_ns(self) → uint64_t" title="Direct link to timestamp_ns(self) → uint64_t">​</a></h4>
<p>Return the current UNIX timestamp in nanoseconds (ns).</p>
<ul>
<li><strong>Return type:</strong>
uint64_t</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="timestamp_usself--uint64_t">timestamp_us(self) → uint64_t<a href="#timestamp_usself--uint64_t" class="hash-link" aria-label="Direct link to timestamp_us(self) → uint64_t" title="Direct link to timestamp_us(self) → uint64_t">​</a></h4>
<p>Return the current UNIX timestamp in microseconds (μs).</p>
<ul>
<li><strong>Return type:</strong>
uint64_t</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="utc_nowself--datetime">utc_now(self) → datetime<a href="#utc_nowself--datetime" class="hash-link" aria-label="Direct link to utc_now(self) → datetime" title="Direct link to utc_now(self) → datetime">​</a></h4>
<p>Return the current time (UTC).</p>
<ul>
<li><strong>Returns:</strong>
The current tz-aware UTC time of the clock.</li>
<li><strong>Return type:</strong>
datetime</li>
</ul>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="class-component"><em>class</em> Component<a href="#class-component" class="hash-link" aria-label="Direct link to class-component" title="Direct link to class-component">​</a></h3>
<p>Bases: <code>object</code></p>
<p>Component(Clock clock, TraderId trader_id=None, Identifier component_id=None, str component_name=None, MessageBus msgbus=None, config: PoseiConfig | None = None)</p>
<p>The base class for all system components.</p>
<p>A component is not considered initialized until a message bus is registered
(this either happens when one is passed to the constructor, or when
registered with a trader).</p>
<p>Thus, if the component does not receive a message bus through the constructor,
then it will be in a <code>PRE_INITIALIZED</code> state, otherwise if one is passed
then it will be in an <code>INITIALIZED</code> state.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>clock</strong> (<a href="#posei_trader.common.component.Clock"><em>Clock</em></a>) – The clock for the component.</li>
<li><strong>trader_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.TraderId"><em>TraderId</em></a> <em>,</em> <em>optional</em>) – The trader ID associated with the component.</li>
<li><strong>component_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.Identifier"><em>Identifier</em></a> <em>,</em> <em>optional</em>) – The component ID. If <code>None</code> is passed then the identifier will be
taken from type(self).<em>_name</em>_.</li>
<li><strong>component_name</strong> (<em>str</em> <em>,</em> <em>optional</em>) – The custom component name.</li>
<li><strong>msgbus</strong> (<a href="#posei_trader.common.component.MessageBus"><em>MessageBus</em></a> <em>,</em> <em>optional</em>) – The message bus for the component (required before initialized).</li>
<li><strong>config</strong> (<a href="../config/index.htm#posei_trader.common.config.PoseiConfig"><em>PoseiConfig</em></a> <em>,</em> <em>optional</em>) – The configuration for the component.</li>
</ul>
</li>
<li><strong>Raises:</strong>
<ul>
<li><strong>ValueError</strong> – If component_name is not a valid string.</li>
<li><strong>TypeError</strong> – If config is not of type PoseiConfig.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-60">WARNING<a href="#warning-60" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>This class should not be used directly, but through a concrete subclass.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="degradeself--void-1">degrade(self) → void<a href="#degradeself--void-1" class="hash-link" aria-label="Direct link to degrade(self) → void" title="Direct link to degrade(self) → void">​</a></h4>
<p>Degrade the component.</p>
<p>While executing on_degrade() any exception will be logged and reraised, then the component
will remain in a <code>DEGRADING</code> state.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-61">WARNING<a href="#warning-61" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>Do not override.</p>
<p>If the component is not in a valid state from which to execute this method,
then the component state will not change, and an error will be logged.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="disposeself--void-1">dispose(self) → void<a href="#disposeself--void-1" class="hash-link" aria-label="Direct link to dispose(self) → void" title="Direct link to dispose(self) → void">​</a></h4>
<p>Dispose of the component.</p>
<p>While executing on_dispose() any exception will be logged and reraised, then the component
will remain in a <code>DISPOSING</code> state.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-62">WARNING<a href="#warning-62" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>Do not override.</p>
<p>If the component is not in a valid state from which to execute this method,
then the component state will not change, and an error will be logged.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="faultself--void-1">fault(self) → void<a href="#faultself--void-1" class="hash-link" aria-label="Direct link to fault(self) → void" title="Direct link to fault(self) → void">​</a></h4>
<p>Fault the component.</p>
<p>Calling this method multiple times has the same effect as calling it once (it is idempotent).
Once called, it cannot be reversed, and no other methods should be called on this instance.</p>
<p>While executing on_fault() any exception will be logged and reraised, then the component
will remain in a <code>FAULTING</code> state.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-63">WARNING<a href="#warning-63" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>Do not override.</p>
<p>If the component is not in a valid state from which to execute this method,
then the component state will not change, and an error will be logged.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="classmethod-fully_qualified_namecls--str-1"><em>classmethod</em> fully_qualified_name(cls) → str<a href="#classmethod-fully_qualified_namecls--str-1" class="hash-link" aria-label="Direct link to classmethod-fully_qualified_namecls--str-1" title="Direct link to classmethod-fully_qualified_namecls--str-1">​</a></h4>
<p>Return the fully qualified name for the components class.</p>
<ul>
<li><strong>Return type:</strong>
str</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="id-1">id<a href="#id-1" class="hash-link" aria-label="Direct link to id" title="Direct link to id">​</a></h4>
<p>The components ID.</p>
<ul>
<li><strong>Returns:</strong>
ComponentId</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="is_degraded-1">is_degraded<a href="#is_degraded-1" class="hash-link" aria-label="Direct link to is_degraded" title="Direct link to is_degraded">​</a></h4>
<p>bool</p>
<p>Return whether the current component state is <code>DEGRADED</code>.</p>
<ul>
<li><strong>Return type:</strong>
bool</li>
<li><strong>Type:</strong>
Component.is_degraded</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="is_disposed-1">is_disposed<a href="#is_disposed-1" class="hash-link" aria-label="Direct link to is_disposed" title="Direct link to is_disposed">​</a></h4>
<p>bool</p>
<p>Return whether the current component state is <code>DISPOSED</code>.</p>
<ul>
<li><strong>Return type:</strong>
bool</li>
<li><strong>Type:</strong>
Component.is_disposed</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="is_faulted-1">is_faulted<a href="#is_faulted-1" class="hash-link" aria-label="Direct link to is_faulted" title="Direct link to is_faulted">​</a></h4>
<p>bool</p>
<p>Return whether the current component state is <code>FAULTED</code>.</p>
<ul>
<li><strong>Return type:</strong>
bool</li>
<li><strong>Type:</strong>
Component.is_faulted</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="is_initialized-1">is_initialized<a href="#is_initialized-1" class="hash-link" aria-label="Direct link to is_initialized" title="Direct link to is_initialized">​</a></h4>
<p>bool</p>
<p>Return whether the component has been initialized (component.state &gt;= <code>INITIALIZED</code>).</p>
<ul>
<li><strong>Return type:</strong>
bool</li>
<li><strong>Type:</strong>
Component.is_initialized</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="is_running-1">is_running<a href="#is_running-1" class="hash-link" aria-label="Direct link to is_running" title="Direct link to is_running">​</a></h4>
<p>bool</p>
<p>Return whether the current component state is <code>RUNNING</code>.</p>
<ul>
<li><strong>Return type:</strong>
bool</li>
<li><strong>Type:</strong>
Component.is_running</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="is_stopped-1">is_stopped<a href="#is_stopped-1" class="hash-link" aria-label="Direct link to is_stopped" title="Direct link to is_stopped">​</a></h4>
<p>bool</p>
<p>Return whether the current component state is <code>STOPPED</code>.</p>
<ul>
<li><strong>Return type:</strong>
bool</li>
<li><strong>Type:</strong>
Component.is_stopped</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="resetself--void-2">reset(self) → void<a href="#resetself--void-2" class="hash-link" aria-label="Direct link to reset(self) → void" title="Direct link to reset(self) → void">​</a></h4>
<p>Reset the component.</p>
<p>All stateful fields are reset to their initial value.</p>
<p>While executing on_reset() any exception will be logged and reraised, then the component
will remain in a <code>RESETTING</code> state.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-64">WARNING<a href="#warning-64" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>Do not override.</p>
<p>If the component is not in a valid state from which to execute this method,
then the component state will not change, and an error will be logged.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="resumeself--void-1">resume(self) → void<a href="#resumeself--void-1" class="hash-link" aria-label="Direct link to resume(self) → void" title="Direct link to resume(self) → void">​</a></h4>
<p>Resume the component.</p>
<p>While executing on_resume() any exception will be logged and reraised, then the component
will remain in a <code>RESUMING</code> state.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-65">WARNING<a href="#warning-65" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>Do not override.</p>
<p>If the component is not in a valid state from which to execute this method,
then the component state will not change, and an error will be logged.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="shutdown_systemself-str-reasonnone--void-1">shutdown_system(self, str reason=None) → void<a href="#shutdown_systemself-str-reasonnone--void-1" class="hash-link" aria-label="Direct link to shutdown_system(self, str reason=None) → void" title="Direct link to shutdown_system(self, str reason=None) → void">​</a></h4>
<p>Initiate a system-wide shutdown by generating and publishing a ShutdownSystem command.</p>
<p>The command is handled by the system’s PoseiKernel, which will invoke either stop (synchronously)
or stop_async (asynchronously) depending on the execution context and the presence of an active event loop.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>reason</strong> (<em>str</em> <em>,</em> <em>optional</em>) – The reason for issuing the shutdown command.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="startself--void-1">start(self) → void<a href="#startself--void-1" class="hash-link" aria-label="Direct link to start(self) → void" title="Direct link to start(self) → void">​</a></h4>
<p>Start the component.</p>
<p>While executing on_start() any exception will be logged and reraised, then the component
will remain in a <code>STARTING</code> state.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-66">WARNING<a href="#warning-66" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>Do not override.</p>
<p>If the component is not in a valid state from which to execute this method,
then the component state will not change, and an error will be logged.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="state-1">state<a href="#state-1" class="hash-link" aria-label="Direct link to state" title="Direct link to state">​</a></h4>
<p>ComponentState</p>
<p>Return the components current state.</p>
<ul>
<li><strong>Return type:</strong>
ComponentState</li>
<li><strong>Type:</strong>
Component.state</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="stopself--void-1">stop(self) → void<a href="#stopself--void-1" class="hash-link" aria-label="Direct link to stop(self) → void" title="Direct link to stop(self) → void">​</a></h4>
<p>Stop the component.</p>
<p>While executing on_stop() any exception will be logged and reraised, then the component
will remain in a <code>STOPPING</code> state.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-67">WARNING<a href="#warning-67" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>Do not override.</p>
<p>If the component is not in a valid state from which to execute this method,
then the component state will not change, and an error will be logged.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="trader_id-2">trader_id<a href="#trader_id-2" class="hash-link" aria-label="Direct link to trader_id" title="Direct link to trader_id">​</a></h4>
<p>The trader ID associated with the component.</p>
<ul>
<li><strong>Returns:</strong>
TraderId</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="type-1">type<a href="#type-1" class="hash-link" aria-label="Direct link to type" title="Direct link to type">​</a></h4>
<p>The components type.</p>
<ul>
<li><strong>Returns:</strong>
type</li>
</ul>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="class-componentfsmfactory"><em>class</em> ComponentFSMFactory<a href="#class-componentfsmfactory" class="hash-link" aria-label="Direct link to class-componentfsmfactory" title="Direct link to class-componentfsmfactory">​</a></h3>
<p>Bases: <code>object</code></p>
<p>Provides a generic component Finite-State Machine.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="static-get_state_transition_table--dict"><em>static</em> get_state_transition_table() → dict<a href="#static-get_state_transition_table--dict" class="hash-link" aria-label="Direct link to static-get_state_transition_table--dict" title="Direct link to static-get_state_transition_table--dict">​</a></h4>
<p>The default state transition table.</p>
<ul>
<li><strong>Returns:</strong>
C Enums.</li>
<li><strong>Return type:</strong>
dict[int, int]</li>
</ul>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="class-liveclock"><em>class</em> LiveClock<a href="#class-liveclock" class="hash-link" aria-label="Direct link to class-liveclock" title="Direct link to class-liveclock">​</a></h3>
<p>Bases: <a href="#posei_trader.common.component.Clock"><code>Clock</code></a></p>
<p>LiveClock()</p>
<p>Provides a monotonic clock for live trading.</p>
<p>All times are tz-aware UTC.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>loop</strong> (<em>asyncio.AbstractEventLoop</em>) – The event loop for the clocks timers.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="cancel_timerself-str-name--void-1">cancel_timer(self, str name) → void<a href="#cancel_timerself-str-name--void-1" class="hash-link" aria-label="Direct link to cancel_timer(self, str name) → void" title="Direct link to cancel_timer(self, str name) → void">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="cancel_timersself--void-1">cancel_timers(self) → void<a href="#cancel_timersself--void-1" class="hash-link" aria-label="Direct link to cancel_timers(self) → void" title="Direct link to cancel_timers(self) → void">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="local_nowself-tzinfo-tznone--datetime-1">local_now(self, tzinfo tz=None) → datetime<a href="#local_nowself-tzinfo-tznone--datetime-1" class="hash-link" aria-label="Direct link to local_now(self, tzinfo tz=None) → datetime" title="Direct link to local_now(self, tzinfo tz=None) → datetime">​</a></h4>
<p>Return the current datetime of the clock in the given local timezone.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>tz</strong> (<em>tzinfo</em> <em>,</em> <em>optional</em>) – The local timezone (if None the system local timezone is assumed for
the target timezone).</li>
<li><strong>Returns:</strong>
tz-aware in local timezone.</li>
<li><strong>Return type:</strong>
datetime</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="next_time_nsself-str-name--uint64_t-1">next_time_ns(self, str name) → uint64_t<a href="#next_time_nsself-str-name--uint64_t-1" class="hash-link" aria-label="Direct link to next_time_ns(self, str name) → uint64_t" title="Direct link to next_time_ns(self, str name) → uint64_t">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="register_default_handlerself-callback-callabletimeevent-none--void">register_default_handler(self, callback: Callable[[<a href="#posei_trader.common.component.TimeEvent">TimeEvent</a>], None]) → void<a href="#register_default_handlerself-callback-callabletimeevent-none--void" class="hash-link" aria-label="Direct link to register_default_handlerself-callback-callabletimeevent-none--void" title="Direct link to register_default_handlerself-callback-callabletimeevent-none--void">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="set_time_alertself-str-name-datetime-alert_time-callback-callabletimeevent-none--none-bool-overridefalse-bool-allow_pasttrue--void-1">set_time_alert(self, str name, datetime alert_time, callback: Callable[[TimeEvent], None] = None, bool override=False, bool allow_past=True) → void<a href="#set_time_alertself-str-name-datetime-alert_time-callback-callabletimeevent-none--none-bool-overridefalse-bool-allow_pasttrue--void-1" class="hash-link" aria-label="Direct link to set_time_alert(self, str name, datetime alert_time, callback: Callable[[TimeEvent], None] = None, bool override=False, bool allow_past=True) → void" title="Direct link to set_time_alert(self, str name, datetime alert_time, callback: Callable[[TimeEvent], None] = None, bool override=False, bool allow_past=True) → void">​</a></h4>
<p>Set a time alert for the given time.</p>
<p>When the time is reached the handler will be passed the TimeEvent
containing the timers unique name. If no handler is passed then the
default handler (if registered) will receive the TimeEvent.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>name</strong> (<em>str</em>) – The name for the alert (must be unique for this clock).</li>
<li><strong>alert_time</strong> (<em>datetime</em>) – The time for the alert.</li>
<li><strong>callback</strong> (<em>Callable</em> <em>[</em> <em>[</em><a href="#posei_trader.common.component.TimeEvent"><em>TimeEvent</em></a> <em>]</em> <em>,</em> <em>None</em> <em>]</em> <em>,</em> <em>optional</em>) – The callback to receive time events.</li>
<li><strong>override</strong> (<em>bool</em> <em>,</em> <em>default False</em>) – If override is set to True an alert with a given name can be overwritten if it exists already.</li>
<li><strong>allow_past</strong> (<em>bool</em> <em>,</em> <em>default True</em>) – If True, allows an alert_time in the past and adjusts it to the current time
for immediate firing. If False, raises an error when the alert_time is in the
past, requiring it to be in the future.</li>
</ul>
</li>
<li><strong>Raises:</strong>
<ul>
<li><strong>ValueError</strong> – If name is not a valid string.</li>
<li><strong>KeyError</strong> – If name is not unique for this clock.</li>
<li><strong>TypeError</strong> – If handler is not of type Callable or <code>None</code>.</li>
<li><strong>ValueError</strong> – If handler is <code>None</code> and no default handler is registered.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-68">WARNING<a href="#warning-68" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>If alert_time is in the past or at current time, then an immediate
time event will be generated (rather than being invalid and failing a condition check).</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="set_time_alert_nsself-str-name-uint64_t-alert_time_ns-callback-callabletimeevent-none--none--none-bool-allow_pasttrue--void">set_time_alert_ns(self, str name, uint64_t alert_time_ns, callback: Callable[[TimeEvent], None] | None = None, bool allow_past=True) → void<a href="#set_time_alert_nsself-str-name-uint64_t-alert_time_ns-callback-callabletimeevent-none--none--none-bool-allow_pasttrue--void" class="hash-link" aria-label="Direct link to set_time_alert_ns(self, str name, uint64_t alert_time_ns, callback: Callable[[TimeEvent], None] | None = None, bool allow_past=True) → void" title="Direct link to set_time_alert_ns(self, str name, uint64_t alert_time_ns, callback: Callable[[TimeEvent], None] | None = None, bool allow_past=True) → void">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="set_timerself-str-name-timedelta-interval-datetime-start_timenone-datetime-stop_timenone-callback-callabletimeevent-none--none--none-bool-allow_pasttrue-bool-fire_immediatelyfalse--void-1">set_timer(self, str name, timedelta interval, datetime start_time=None, datetime stop_time=None, callback: Callable[[TimeEvent], None] | None = None, bool allow_past=True, bool fire_immediately=False) → void<a href="#set_timerself-str-name-timedelta-interval-datetime-start_timenone-datetime-stop_timenone-callback-callabletimeevent-none--none--none-bool-allow_pasttrue-bool-fire_immediatelyfalse--void-1" class="hash-link" aria-label="Direct link to set_timer(self, str name, timedelta interval, datetime start_time=None, datetime stop_time=None, callback: Callable[[TimeEvent], None] | None = None, bool allow_past=True, bool fire_immediately=False) → void" title="Direct link to set_timer(self, str name, timedelta interval, datetime start_time=None, datetime stop_time=None, callback: Callable[[TimeEvent], None] | None = None, bool allow_past=True, bool fire_immediately=False) → void">​</a></h4>
<p>Set a timer to run.</p>
<p>The timer will run from the start time (optionally until the stop time).
When the intervals are reached the handlers will be passed the
TimeEvent containing the timers unique name. If no handler is passed
then the default handler (if registered) will receive the TimeEvent.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>name</strong> (<em>str</em>) – The name for the timer (must be unique for this clock).</li>
<li><strong>interval</strong> (<em>timedelta</em>) – The time interval for the timer.</li>
<li><strong>start_time</strong> (<em>datetime</em> <em>,</em> <em>optional</em>) – The start time for the timer (if None then starts immediately).</li>
<li><strong>stop_time</strong> (<em>datetime</em> <em>,</em> <em>optional</em>) – The stop time for the timer (if None then repeats indefinitely).</li>
<li><strong>callback</strong> (<em>Callable</em> <em>[</em> <em>[</em><a href="#posei_trader.common.component.TimeEvent"><em>TimeEvent</em></a> <em>]</em> <em>,</em> <em>None</em> <em>]</em> <em>,</em> <em>optional</em>) – The callback to receive time events.</li>
<li><strong>allow_past</strong> (<em>bool</em> <em>,</em> <em>default True</em>) – If True, allows timers where the next event time may be in the past.
If False, raises an error when the next event time would be in the past.</li>
<li><strong>fire_immediately</strong> (<em>bool</em> <em>,</em> <em>default False</em>) – If True, the timer will fire immediately at the start time,
then fire again after each interval. If False, the timer will
fire after the first interval has elapsed (default behavior).</li>
</ul>
</li>
<li><strong>Raises:</strong>
<ul>
<li><strong>ValueError</strong> – If name is not a valid string.</li>
<li><strong>KeyError</strong> – If name is not unique for this clock.</li>
<li><strong>ValueError</strong> – If interval is not positive (&gt; 0).</li>
<li><strong>ValueError</strong> – If stop_time is not <code>None</code> and stop_time &lt; time now.</li>
<li><strong>ValueError</strong> – If stop_time is not <code>None</code> and start_time + interval &gt; stop_time.</li>
<li><strong>TypeError</strong> – If handler is not of type Callable or <code>None</code>.</li>
<li><strong>ValueError</strong> – If handler is <code>None</code> and no default handler is registered.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="set_timer_nsself-str-name-uint64_t-interval_ns-uint64_t-start_time_ns-uint64_t-stop_time_ns-callback-callabletimeevent-none--none--none-bool-allow_pasttrue-bool-fire_immediatelyfalse--void-1">set_timer_ns(self, str name, uint64_t interval_ns, uint64_t start_time_ns, uint64_t stop_time_ns, callback: Callable[[TimeEvent], None] | None = None, bool allow_past=True, bool fire_immediately=False) → void<a href="#set_timer_nsself-str-name-uint64_t-interval_ns-uint64_t-start_time_ns-uint64_t-stop_time_ns-callback-callabletimeevent-none--none--none-bool-allow_pasttrue-bool-fire_immediatelyfalse--void-1" class="hash-link" aria-label="Direct link to set_timer_ns(self, str name, uint64_t interval_ns, uint64_t start_time_ns, uint64_t stop_time_ns, callback: Callable[[TimeEvent], None] | None = None, bool allow_past=True, bool fire_immediately=False) → void" title="Direct link to set_timer_ns(self, str name, uint64_t interval_ns, uint64_t start_time_ns, uint64_t stop_time_ns, callback: Callable[[TimeEvent], None] | None = None, bool allow_past=True, bool fire_immediately=False) → void">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="timer_count-1">timer_count<a href="#timer_count-1" class="hash-link" aria-label="Direct link to timer_count" title="Direct link to timer_count">​</a></h4>
<p>int</p>
<ul>
<li><strong>Type:</strong>
LiveClock.timer_count</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="timer_names-1">timer_names<a href="#timer_names-1" class="hash-link" aria-label="Direct link to timer_names" title="Direct link to timer_names">​</a></h4>
<p>list[str]</p>
<ul>
<li><strong>Type:</strong>
LiveClock.timer_names</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="timestampself--double-1">timestamp(self) → double<a href="#timestampself--double-1" class="hash-link" aria-label="Direct link to timestamp(self) → double" title="Direct link to timestamp(self) → double">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="timestamp_msself--uint64_t-1">timestamp_ms(self) → uint64_t<a href="#timestamp_msself--uint64_t-1" class="hash-link" aria-label="Direct link to timestamp_ms(self) → uint64_t" title="Direct link to timestamp_ms(self) → uint64_t">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="timestamp_nsself--uint64_t-1">timestamp_ns(self) → uint64_t<a href="#timestamp_nsself--uint64_t-1" class="hash-link" aria-label="Direct link to timestamp_ns(self) → uint64_t" title="Direct link to timestamp_ns(self) → uint64_t">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="timestamp_usself--uint64_t-1">timestamp_us(self) → uint64_t<a href="#timestamp_usself--uint64_t-1" class="hash-link" aria-label="Direct link to timestamp_us(self) → uint64_t" title="Direct link to timestamp_us(self) → uint64_t">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="utc_nowself--datetime-1">utc_now(self) → datetime<a href="#utc_nowself--datetime-1" class="hash-link" aria-label="Direct link to utc_now(self) → datetime" title="Direct link to utc_now(self) → datetime">​</a></h4>
<p>Return the current time (UTC).</p>
<ul>
<li><strong>Returns:</strong>
The current tz-aware UTC time of the clock.</li>
<li><strong>Return type:</strong>
datetime</li>
</ul>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="class-logguard"><em>class</em> LogGuard<a href="#class-logguard" class="hash-link" aria-label="Direct link to class-logguard" title="Direct link to class-logguard">​</a></h3>
<p>Bases: <code>object</code></p>
<p>Provides a LogGuard which serves as a token to signal the initialization
of the logging subsystem. It also ensures that the global logger is flushed
of any buffered records when the instance is destroyed.</p>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="class-logger"><em>class</em> Logger<a href="#class-logger" class="hash-link" aria-label="Direct link to class-logger" title="Direct link to class-logger">​</a></h3>
<p>Bases: <code>object</code></p>
<p>Logger(str name) -&gt; None</p>
<p>Provides a logger adapter into the logging subsystem.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>name</strong> (<em>str</em>) – The name of the logger. This will appear within each log line.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="debugself-str-message-logcolor-colorlogcolornormal--void">debug(self, str message, LogColor color=LogColor.NORMAL) → void<a href="#debugself-str-message-logcolor-colorlogcolornormal--void" class="hash-link" aria-label="Direct link to debug(self, str message, LogColor color=LogColor.NORMAL) → void" title="Direct link to debug(self, str message, LogColor color=LogColor.NORMAL) → void">​</a></h4>
<p>Log the given DEBUG level message.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>message</strong> (<em>str</em>) – The log message text (valid UTF-8).</li>
<li><strong>color</strong> (<em>LogColor</em> <em>,</em> <em>optional</em>) – The log message color.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="errorself-str-message-logcolor-colorlogcolorred--void">error(self, str message, LogColor color=LogColor.RED) → void<a href="#errorself-str-message-logcolor-colorlogcolorred--void" class="hash-link" aria-label="Direct link to error(self, str message, LogColor color=LogColor.RED) → void" title="Direct link to error(self, str message, LogColor color=LogColor.RED) → void">​</a></h4>
<p>Log the given ERROR level message.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>message</strong> (<em>str</em>) – The log message text (valid UTF-8).</li>
<li><strong>color</strong> (<em>LogColor</em> <em>,</em> <em>optional</em>) – The log message color.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="exceptionself-str-message-ex--void">exception(self, str message, ex) → void<a href="#exceptionself-str-message-ex--void" class="hash-link" aria-label="Direct link to exception(self, str message, ex) → void" title="Direct link to exception(self, str message, ex) → void">​</a></h4>
<p>Log the given exception including stack trace information.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>message</strong> (<em>str</em>) – The log message text (valid UTF-8).</li>
<li><strong>ex</strong> (<em>Exception</em>) – The exception to log.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="infoself-str-message-logcolor-colorlogcolornormal--void">info(self, str message, LogColor color=LogColor.NORMAL) → void<a href="#infoself-str-message-logcolor-colorlogcolornormal--void" class="hash-link" aria-label="Direct link to info(self, str message, LogColor color=LogColor.NORMAL) → void" title="Direct link to info(self, str message, LogColor color=LogColor.NORMAL) → void">​</a></h4>
<p>Log the given INFO level message.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>message</strong> (<em>str</em>) – The log message text (valid UTF-8).</li>
<li><strong>color</strong> (<em>LogColor</em> <em>,</em> <em>optional</em>) – The log message color.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="name">name<a href="#name" class="hash-link" aria-label="Direct link to name" title="Direct link to name">​</a></h4>
<p>str</p>
<p>Return the name of the logger.</p>
<ul>
<li><strong>Return type:</strong>
str</li>
<li><strong>Type:</strong>
Logger.name</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warningself-str-message-logcolor-colorlogcoloryellow--void">warning(self, str message, LogColor color=LogColor.YELLOW) → void<a href="#warningself-str-message-logcolor-colorlogcoloryellow--void" class="hash-link" aria-label="Direct link to warning(self, str message, LogColor color=LogColor.YELLOW) → void" title="Direct link to warning(self, str message, LogColor color=LogColor.YELLOW) → void">​</a></h4>
<p>Log the given WARNING level message.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>message</strong> (<em>str</em>) – The log message text (valid UTF-8).</li>
<li><strong>color</strong> (<em>LogColor</em> <em>,</em> <em>optional</em>) – The log message color.</li>
</ul>
</li>
</ul>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="class-messagebus"><em>class</em> MessageBus<a href="#class-messagebus" class="hash-link" aria-label="Direct link to class-messagebus" title="Direct link to class-messagebus">​</a></h3>
<p>Bases: <code>object</code></p>
<p>MessageBus(TraderId trader_id, Clock clock, UUID4 instance_id=None, str name=None, Serializer serializer=None, database: nautilus_pyo3.RedisMessageBusDatabase | None = None, config: Any | None = None) -&gt; None</p>
<p>Provides a generic message bus to facilitate various messaging patterns.</p>
<p>The bus provides both a producer and consumer API for Pub/Sub, Req/Rep, as
well as direct point-to-point messaging to registered endpoints.</p>
<p>Pub/Sub wildcard patterns for hierarchical topics are possible:
: - * asterisk represents one or more characters in a pattern.</p>
<ul>
<li>? question mark represents a single character in a pattern.</li>
</ul>
<p>Given a topic and pattern potentially containing wildcard characters, i.e.
* and ?, where ? can match any single character in the topic, and *
can match any number of characters including zero characters.</p>
<p>The asterisk in a wildcard matches any character zero or more times. For
example, comp* matches anything beginning with comp which means comp,
complete, and computer are all matched.</p>
<p>A question mark matches a single character once. For example, c?mp matches
camp and comp. The question mark can also be used more than once.
For example, c??p would match both of the above examples and coop.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>trader_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.TraderId"><em>TraderId</em></a>) – The trader ID associated with the message bus.</li>
<li><strong>clock</strong> (<a href="#posei_trader.common.component.Clock"><em>Clock</em></a>) – The clock for the message bus.</li>
<li><strong>name</strong> (<em>str</em> <em>,</em> <em>optional</em>) – The custom name for the message bus.</li>
<li><strong>serializer</strong> (<a href="../serialization/index.htm#posei_trader.serialization.base.Serializer"><em>Serializer</em></a> <em>,</em> <em>optional</em>) – The serializer for database operations.</li>
<li><strong>database</strong> (<em>nautilus_pyo3.RedisMessageBusDatabase</em> <em>,</em> <em>optional</em>) – The backing database for the message bus.</li>
<li><strong>config</strong> (<a href="../config/index.htm#posei_trader.common.config.MessageBusConfig"><em>MessageBusConfig</em></a> <em>,</em> <em>optional</em>) – The configuration for the message bus.</li>
</ul>
</li>
<li><strong>Raises:</strong>
<strong>ValueError</strong> – If name is not <code>None</code> and not a valid string.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-69">WARNING<a href="#warning-69" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>This message bus is not thread-safe and must be called from the same thread
as the event loop.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="add_listenerself-listener-nautilus_pyo3messagebuslistener--void">add_listener(self, listener: nautilus_pyo3.MessageBusListener) → void<a href="#add_listenerself-listener-nautilus_pyo3messagebuslistener--void" class="hash-link" aria-label="Direct link to add_listener(self, listener: nautilus_pyo3.MessageBusListener) → void" title="Direct link to add_listener(self, listener: nautilus_pyo3.MessageBusListener) → void">​</a></h4>
<p>Adds the given listener to the message bus.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>listener</strong> (<em>nautilus_pyo3.MessageBusListener</em>) – The listener to add.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="add_streaming_typeself-type-cls--void">add_streaming_type(self, type cls) → void<a href="#add_streaming_typeself-type-cls--void" class="hash-link" aria-label="Direct link to add_streaming_type(self, type cls) → void" title="Direct link to add_streaming_type(self, type cls) → void">​</a></h4>
<p>Register the given type for external-&gt;internal message bus streaming.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>type</strong> (<em>cls</em>) – The type to add for streaming.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="deregisterself-str-endpoint-handler-callableany-none--void">deregister(self, str endpoint, handler: Callable[[Any], None]) → void<a href="#deregisterself-str-endpoint-handler-callableany-none--void" class="hash-link" aria-label="Direct link to deregister(self, str endpoint, handler: Callable[[Any], None]) → void" title="Direct link to deregister(self, str endpoint, handler: Callable[[Any], None]) → void">​</a></h4>
<p>Deregister the given handler from the endpoint address.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>endpoint</strong> (<em>str</em>) – The endpoint address to deregister.</li>
<li><strong>handler</strong> (<em>Callable</em> <em>[</em> *[*<em>Any</em> <em>]</em> <em>,</em> <em>None</em> <em>]</em>) – The handler to deregister.</li>
</ul>
</li>
<li><strong>Raises:</strong>
<ul>
<li><strong>ValueError</strong> – If endpoint is not a valid string.</li>
<li><strong>ValueError</strong> – If handler is not of type Callable.</li>
<li><strong>KeyError</strong> – If endpoint is not registered.</li>
<li><strong>ValueError</strong> – If handler is not registered at the endpoint.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="disposeself--void-2">dispose(self) → void<a href="#disposeself--void-2" class="hash-link" aria-label="Direct link to dispose(self) → void" title="Direct link to dispose(self) → void">​</a></h4>
<p>Dispose of the message bus which will close the internal channel and thread.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="endpointsself--list">endpoints(self) → list<a href="#endpointsself--list" class="hash-link" aria-label="Direct link to endpoints(self) → list" title="Direct link to endpoints(self) → list">​</a></h4>
<p>Return all endpoint addresses registered with the message bus.</p>
<ul>
<li><strong>Return type:</strong>
list[str]</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="has_backing">has_backing<a href="#has_backing" class="hash-link" aria-label="Direct link to has_backing" title="Direct link to has_backing">​</a></h4>
<p>If the message bus has a database backing.</p>
<ul>
<li><strong>Returns:</strong>
bool</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="has_subscribersself-str-patternnone--bool">has_subscribers(self, str pattern=None) → bool<a href="#has_subscribersself-str-patternnone--bool" class="hash-link" aria-label="Direct link to has_subscribers(self, str pattern=None) → bool" title="Direct link to has_subscribers(self, str pattern=None) → bool">​</a></h4>
<p>If the message bus has subscribers for the give topic pattern.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>pattern</strong> (<em>str</em> <em>,</em> <em>optional</em>) – The topic filter. May include wildcard characters * and ?.
If <code>None</code> then query is for <strong>all</strong> topics.</li>
<li><strong>Return type:</strong>
bool</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="is_pending_requestself-uuid4-request_id--bool-1">is_pending_request(self, UUID4 request_id) → bool<a href="#is_pending_requestself-uuid4-request_id--bool-1" class="hash-link" aria-label="Direct link to is_pending_request(self, UUID4 request_id) → bool" title="Direct link to is_pending_request(self, UUID4 request_id) → bool">​</a></h4>
<p>Return if the given request_id is still pending a response.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>request_id</strong> (<a href="../core/index.htm#posei_trader.core.UUID4"><em>UUID4</em></a>) – The request ID to check (to match the correlation_id).</li>
<li><strong>Return type:</strong>
bool</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="is_streaming_typeself-type-cls--bool">is_streaming_type(self, type cls) → bool<a href="#is_streaming_typeself-type-cls--bool" class="hash-link" aria-label="Direct link to is_streaming_type(self, type cls) → bool" title="Direct link to is_streaming_type(self, type cls) → bool">​</a></h4>
<p>Return whether the given type has been registered for external message streaming.</p>
<ul>
<li><strong>Returns:</strong>
True if registered, else False.</li>
<li><strong>Return type:</strong>
bool</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="is_subscribedself-str-topic-handler-callableany-none--bool">is_subscribed(self, str topic, handler: Callable[[Any], None]) → bool<a href="#is_subscribedself-str-topic-handler-callableany-none--bool" class="hash-link" aria-label="Direct link to is_subscribed(self, str topic, handler: Callable[[Any], None]) → bool" title="Direct link to is_subscribed(self, str topic, handler: Callable[[Any], None]) → bool">​</a></h4>
<p>Return if topic and handler is subscribed to the message bus.</p>
<p>Does not consider any previous priority.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>topic</strong> (<em>str</em>) – The topic of the subscription.</li>
<li><strong>handler</strong> (<em>Callable</em> <em>[</em> *[*<em>Any</em> <em>]</em> <em>,</em> <em>None</em> <em>]</em>) – The handler of the subscription.</li>
</ul>
</li>
<li><strong>Return type:</strong>
bool</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="pub_count">pub_count<a href="#pub_count" class="hash-link" aria-label="Direct link to pub_count" title="Direct link to pub_count">​</a></h4>
<p>The count of messages published by the bus.</p>
<ul>
<li><strong>Returns:</strong>
uint64_t</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="publishself-str-topic-msg-any-bool-external_pubtrue--void">publish(self, str topic, msg: Any, bool external_pub=True) → void<a href="#publishself-str-topic-msg-any-bool-external_pubtrue--void" class="hash-link" aria-label="Direct link to publish(self, str topic, msg: Any, bool external_pub=True) → void" title="Direct link to publish(self, str topic, msg: Any, bool external_pub=True) → void">​</a></h4>
<p>Publish the given message for the given topic.</p>
<p>Subscription handlers will receive the message in priority order
(highest first).</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>topic</strong> (<em>str</em>) – The topic to publish on.</li>
<li><strong>msg</strong> (<em>object</em>) – The message to publish.</li>
<li><strong>external_pub</strong> (<em>bool</em> <em>,</em> <em>default True</em>) – If the message should also be published externally.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="registerself-str-endpoint-handler-callableany-none--void">register(self, str endpoint, handler: Callable[[Any], None]) → void<a href="#registerself-str-endpoint-handler-callableany-none--void" class="hash-link" aria-label="Direct link to register(self, str endpoint, handler: Callable[[Any], None]) → void" title="Direct link to register(self, str endpoint, handler: Callable[[Any], None]) → void">​</a></h4>
<p>Register the given handler to receive messages at the endpoint address.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>endpoint</strong> (<em>str</em>) – The endpoint address to register.</li>
<li><strong>handler</strong> (<em>Callable</em> <em>[</em> *[*<em>Any</em> <em>]</em> <em>,</em> <em>None</em> <em>]</em>) – The handler for the registration.</li>
</ul>
</li>
<li><strong>Raises:</strong>
<ul>
<li><strong>ValueError</strong> – If endpoint is not a valid string.</li>
<li><strong>ValueError</strong> – If handler is not of type Callable.</li>
<li><strong>KeyError</strong> – If endpoint already registered.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="req_count">req_count<a href="#req_count" class="hash-link" aria-label="Direct link to req_count" title="Direct link to req_count">​</a></h4>
<p>The count of requests processed by the bus.</p>
<ul>
<li><strong>Returns:</strong>
uint64_t</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="requestself-str-endpoint-request-request--void">request(self, str endpoint, Request request) → void<a href="#requestself-str-endpoint-request-request--void" class="hash-link" aria-label="Direct link to request(self, str endpoint, Request request) → void" title="Direct link to request(self, str endpoint, Request request) → void">​</a></h4>
<p>Handle the given request.</p>
<p>Will log an error if the correlation ID already exists.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>endpoint</strong> (<em>str</em>) – The endpoint address to send the request to.</li>
<li><strong>request</strong> (<a href="../core/index.htm#posei_trader.core.Request"><em>Request</em></a>) – The request to handle.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="res_count">res_count<a href="#res_count" class="hash-link" aria-label="Direct link to res_count" title="Direct link to res_count">​</a></h4>
<p>The count of responses processed by the bus.</p>
<ul>
<li><strong>Returns:</strong>
uint64_t</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="responseself-response-response--void">response(self, Response response) → void<a href="#responseself-response-response--void" class="hash-link" aria-label="Direct link to response(self, Response response) → void" title="Direct link to response(self, Response response) → void">​</a></h4>
<p>Handle the given response.</p>
<p>Will log an error if the correlation ID is not found.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>response</strong> (<a href="../core/index.htm#posei_trader.core.Response"><em>Response</em></a>) – The response to handle</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="sendself-str-endpoint-msg-any--void">send(self, str endpoint, msg: Any) → void<a href="#sendself-str-endpoint-msg-any--void" class="hash-link" aria-label="Direct link to send(self, str endpoint, msg: Any) → void" title="Direct link to send(self, str endpoint, msg: Any) → void">​</a></h4>
<p>Send the given message to the given endpoint address.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>endpoint</strong> (<em>str</em>) – The endpoint address to send the message to.</li>
<li><strong>msg</strong> (<em>object</em>) – The message to send.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="sent_count">sent_count<a href="#sent_count" class="hash-link" aria-label="Direct link to sent_count" title="Direct link to sent_count">​</a></h4>
<p>The count of messages sent through the bus.</p>
<ul>
<li><strong>Returns:</strong>
uint64_t</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="serializer">serializer<a href="#serializer" class="hash-link" aria-label="Direct link to serializer" title="Direct link to serializer">​</a></h4>
<p>The serializer for the bus.</p>
<ul>
<li><strong>Returns:</strong>
Serializer</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="subscribeself-str-topic-handler-callableany-none-int-priority0--void">subscribe(self, str topic, handler: Callable[[Any], None], int priority=0) → void<a href="#subscribeself-str-topic-handler-callableany-none-int-priority0--void" class="hash-link" aria-label="Direct link to subscribe(self, str topic, handler: Callable[[Any], None], int priority=0) → void" title="Direct link to subscribe(self, str topic, handler: Callable[[Any], None], int priority=0) → void">​</a></h4>
<p>Subscribe to the given message topic with the given callback handler.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>topic</strong> (<em>str</em>) – The topic for the subscription. May include wildcard characters
* and ?.</li>
<li><strong>handler</strong> (<em>Callable</em> <em>[</em> *[*<em>Any</em> <em>]</em> <em>,</em> <em>None</em> <em>]</em>) – The handler for the subscription.</li>
<li><strong>priority</strong> (<em>int</em> <em>,</em> <em>optional</em>) – The priority for the subscription. Determines the ordering of
handlers receiving messages being processed, higher priority
handlers will receive messages prior to lower priority handlers.</li>
</ul>
</li>
<li><strong>Raises:</strong>
<ul>
<li><strong>ValueError</strong> – If topic is not a valid string.</li>
<li><strong>ValueError</strong> – If handler is not of type Callable.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-70">WARNING<a href="#warning-70" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>Assigning priority handling is an advanced feature which <em>shouldn’t
normally be needed by most users</em>. <strong>Only assign a higher priority to the
subscription if you are certain of what you’re doing</strong>. If an inappropriate
priority is assigned then the handler may receive messages before core
system components have been able to process necessary calculations and
produce potential side effects for logically sound behavior.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="subscriptionsself-str-patternnone--list">subscriptions(self, str pattern=None) → list<a href="#subscriptionsself-str-patternnone--list" class="hash-link" aria-label="Direct link to subscriptions(self, str pattern=None) → list" title="Direct link to subscriptions(self, str pattern=None) → list">​</a></h4>
<p>Return all subscriptions matching the given topic pattern.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>pattern</strong> (<em>str</em> <em>,</em> <em>optional</em>) – The topic pattern filter. May include wildcard characters * and ?.
If <code>None</code> then query is for <strong>all</strong> topics.</li>
<li><strong>Return type:</strong>
list[<a href="#posei_trader.common.component.Subscription">Subscription</a>]</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="topicsself--list">topics(self) → list<a href="#topicsself--list" class="hash-link" aria-label="Direct link to topics(self) → list" title="Direct link to topics(self) → list">​</a></h4>
<p>Return all topics with active subscribers.</p>
<ul>
<li><strong>Return type:</strong>
list[str]</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="trader_id-3">trader_id<a href="#trader_id-3" class="hash-link" aria-label="Direct link to trader_id" title="Direct link to trader_id">​</a></h4>
<p>The trader ID associated with the bus.</p>
<ul>
<li><strong>Returns:</strong>
TraderId</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="unsubscribeself-str-topic-handler-callableany-none--void">unsubscribe(self, str topic, handler: Callable[[Any], None]) → void<a href="#unsubscribeself-str-topic-handler-callableany-none--void" class="hash-link" aria-label="Direct link to unsubscribe(self, str topic, handler: Callable[[Any], None]) → void" title="Direct link to unsubscribe(self, str topic, handler: Callable[[Any], None]) → void">​</a></h4>
<p>Unsubscribe the given callback handler from the given message topic.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>topic</strong> (<em>str</em> <em>,</em> <em>optional</em>) – The topic to unsubscribe from. May include wildcard characters *
and ?.</li>
<li><strong>handler</strong> (<em>Callable</em> <em>[</em> *[*<em>Any</em> <em>]</em> <em>,</em> <em>None</em> <em>]</em>) – The handler for the subscription.</li>
</ul>
</li>
<li><strong>Raises:</strong>
<ul>
<li><strong>ValueError</strong> – If topic is not a valid string.</li>
<li><strong>ValueError</strong> – If handler is not of type Callable.</li>
</ul>
</li>
</ul>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="class-subscription"><em>class</em> Subscription<a href="#class-subscription" class="hash-link" aria-label="Direct link to class-subscription" title="Direct link to class-subscription">​</a></h3>
<p>Bases: <code>object</code></p>
<p>Subscription(str topic, handler: Callable[[Any], None], int priority=0)</p>
<p>Represents a subscription to a particular topic.</p>
<p>This is an internal class intended to be used by the message bus to organize
topics and their subscribers.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>topic</strong> (<em>str</em>) – The topic for the subscription. May include wildcard characters * and ?.</li>
<li><strong>handler</strong> (<em>Callable</em> <em>[</em> *[*<em>Message</em> <em>]</em> <em>,</em> <em>None</em> <em>]</em>) – The handler for the subscription.</li>
<li><strong>priority</strong> (<em>int</em>) – The priority for the subscription.</li>
</ul>
</li>
<li><strong>Raises:</strong>
<ul>
<li><strong>ValueError</strong> – If topic is not a valid string.</li>
<li><strong>ValueError</strong> – If handler is not of type Callable.</li>
<li><strong>ValueError</strong> – If priority is negative (&lt; 0).</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="handler">handler<a href="#handler" class="hash-link" aria-label="Direct link to handler" title="Direct link to handler">​</a></h4>
<p>The handler for the subscription.</p>
<ul>
<li><strong>Returns:</strong>
Callable</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="priority">priority<a href="#priority" class="hash-link" aria-label="Direct link to priority" title="Direct link to priority">​</a></h4>
<p>The priority for the subscription.</p>
<ul>
<li><strong>Returns:</strong>
int</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="topic">topic<a href="#topic" class="hash-link" aria-label="Direct link to topic" title="Direct link to topic">​</a></h4>
<p>The topic for the subscription.</p>
<ul>
<li><strong>Returns:</strong>
str</li>
</ul>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="class-testclock"><em>class</em> TestClock<a href="#class-testclock" class="hash-link" aria-label="Direct link to class-testclock" title="Direct link to class-testclock">​</a></h3>
<p>Bases: <a href="#posei_trader.common.component.Clock"><code>Clock</code></a></p>
<p>TestClock()</p>
<p>Provides a monotonic clock for backtesting and unit testing.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="advance_timeself-uint64_t-to_time_ns-bool-set_timetrue--list">advance_time(self, uint64_t to_time_ns, bool set_time=True) → list<a href="#advance_timeself-uint64_t-to_time_ns-bool-set_timetrue--list" class="hash-link" aria-label="Direct link to advance_time(self, uint64_t to_time_ns, bool set_time=True) → list" title="Direct link to advance_time(self, uint64_t to_time_ns, bool set_time=True) → list">​</a></h4>
<p>Advance the clocks time to the given to_time_ns.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>to_time_ns</strong> (<em>uint64_t</em>) – The UNIX timestamp (nanoseconds) to advance the clock to.</li>
<li><strong>set_time</strong> (<em>bool</em>) – If the clock should also be set to the given to_time_ns.</li>
</ul>
</li>
<li><strong>Returns:</strong>
Sorted chronologically.</li>
<li><strong>Return type:</strong>
list[<a href="#posei_trader.common.component.TimeEventHandler">TimeEventHandler</a>]</li>
<li><strong>Raises:</strong>
<strong>ValueError</strong> – If to_time_ns is &lt; the clocks current time.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="cancel_timerself-str-name--void-2">cancel_timer(self, str name) → void<a href="#cancel_timerself-str-name--void-2" class="hash-link" aria-label="Direct link to cancel_timer(self, str name) → void" title="Direct link to cancel_timer(self, str name) → void">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="cancel_timersself--void-2">cancel_timers(self) → void<a href="#cancel_timersself--void-2" class="hash-link" aria-label="Direct link to cancel_timers(self) → void" title="Direct link to cancel_timers(self) → void">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="local_nowself-tzinfo-tznone--datetime-2">local_now(self, tzinfo tz=None) → datetime<a href="#local_nowself-tzinfo-tznone--datetime-2" class="hash-link" aria-label="Direct link to local_now(self, tzinfo tz=None) → datetime" title="Direct link to local_now(self, tzinfo tz=None) → datetime">​</a></h4>
<p>Return the current datetime of the clock in the given local timezone.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>tz</strong> (<em>tzinfo</em> <em>,</em> <em>optional</em>) – The local timezone (if None the system local timezone is assumed for
the target timezone).</li>
<li><strong>Returns:</strong>
tz-aware in local timezone.</li>
<li><strong>Return type:</strong>
datetime</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="next_time_nsself-str-name--uint64_t-2">next_time_ns(self, str name) → uint64_t<a href="#next_time_nsself-str-name--uint64_t-2" class="hash-link" aria-label="Direct link to next_time_ns(self, str name) → uint64_t" title="Direct link to next_time_ns(self, str name) → uint64_t">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="register_default_handlerself-callback-callabletimeevent-none--void-1">register_default_handler(self, callback: Callable[[<a href="#posei_trader.common.component.TimeEvent">TimeEvent</a>], None]) → void<a href="#register_default_handlerself-callback-callabletimeevent-none--void-1" class="hash-link" aria-label="Direct link to register_default_handlerself-callback-callabletimeevent-none--void-1" title="Direct link to register_default_handlerself-callback-callabletimeevent-none--void-1">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="set_timeself-uint64_t-to_time_ns--void">set_time(self, uint64_t to_time_ns) → void<a href="#set_timeself-uint64_t-to_time_ns--void" class="hash-link" aria-label="Direct link to set_time(self, uint64_t to_time_ns) → void" title="Direct link to set_time(self, uint64_t to_time_ns) → void">​</a></h4>
<p>Set the clocks datetime to the given time (UTC).</p>
<ul>
<li><strong>Parameters:</strong>
<strong>to_time_ns</strong> (<em>uint64_t</em>) – The UNIX timestamp (nanoseconds) to set.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="set_time_alertself-str-name-datetime-alert_time-callback-callabletimeevent-none--none-bool-overridefalse-bool-allow_pasttrue--void-2">set_time_alert(self, str name, datetime alert_time, callback: Callable[[TimeEvent], None] = None, bool override=False, bool allow_past=True) → void<a href="#set_time_alertself-str-name-datetime-alert_time-callback-callabletimeevent-none--none-bool-overridefalse-bool-allow_pasttrue--void-2" class="hash-link" aria-label="Direct link to set_time_alert(self, str name, datetime alert_time, callback: Callable[[TimeEvent], None] = None, bool override=False, bool allow_past=True) → void" title="Direct link to set_time_alert(self, str name, datetime alert_time, callback: Callable[[TimeEvent], None] = None, bool override=False, bool allow_past=True) → void">​</a></h4>
<p>Set a time alert for the given time.</p>
<p>When the time is reached the handler will be passed the TimeEvent
containing the timers unique name. If no handler is passed then the
default handler (if registered) will receive the TimeEvent.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>name</strong> (<em>str</em>) – The name for the alert (must be unique for this clock).</li>
<li><strong>alert_time</strong> (<em>datetime</em>) – The time for the alert.</li>
<li><strong>callback</strong> (<em>Callable</em> <em>[</em> <em>[</em><a href="#posei_trader.common.component.TimeEvent"><em>TimeEvent</em></a> <em>]</em> <em>,</em> <em>None</em> <em>]</em> <em>,</em> <em>optional</em>) – The callback to receive time events.</li>
<li><strong>override</strong> (<em>bool</em> <em>,</em> <em>default False</em>) – If override is set to True an alert with a given name can be overwritten if it exists already.</li>
<li><strong>allow_past</strong> (<em>bool</em> <em>,</em> <em>default True</em>) – If True, allows an alert_time in the past and adjusts it to the current time
for immediate firing. If False, raises an error when the alert_time is in the
past, requiring it to be in the future.</li>
</ul>
</li>
<li><strong>Raises:</strong>
<ul>
<li><strong>ValueError</strong> – If name is not a valid string.</li>
<li><strong>KeyError</strong> – If name is not unique for this clock.</li>
<li><strong>TypeError</strong> – If handler is not of type Callable or <code>None</code>.</li>
<li><strong>ValueError</strong> – If handler is <code>None</code> and no default handler is registered.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-71">WARNING<a href="#warning-71" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>If alert_time is in the past or at current time, then an immediate
time event will be generated (rather than being invalid and failing a condition check).</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="set_time_alert_nsself-str-name-uint64_t-alert_time_ns-callback-callabletimeevent-none--none--none-bool-allow_pasttrue--void-1">set_time_alert_ns(self, str name, uint64_t alert_time_ns, callback: Callable[[TimeEvent], None] | None = None, bool allow_past=True) → void<a href="#set_time_alert_nsself-str-name-uint64_t-alert_time_ns-callback-callabletimeevent-none--none--none-bool-allow_pasttrue--void-1" class="hash-link" aria-label="Direct link to set_time_alert_ns(self, str name, uint64_t alert_time_ns, callback: Callable[[TimeEvent], None] | None = None, bool allow_past=True) → void" title="Direct link to set_time_alert_ns(self, str name, uint64_t alert_time_ns, callback: Callable[[TimeEvent], None] | None = None, bool allow_past=True) → void">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="set_timerself-str-name-timedelta-interval-datetime-start_timenone-datetime-stop_timenone-callback-callabletimeevent-none--none--none-bool-allow_pasttrue-bool-fire_immediatelyfalse--void-2">set_timer(self, str name, timedelta interval, datetime start_time=None, datetime stop_time=None, callback: Callable[[TimeEvent], None] | None = None, bool allow_past=True, bool fire_immediately=False) → void<a href="#set_timerself-str-name-timedelta-interval-datetime-start_timenone-datetime-stop_timenone-callback-callabletimeevent-none--none--none-bool-allow_pasttrue-bool-fire_immediatelyfalse--void-2" class="hash-link" aria-label="Direct link to set_timer(self, str name, timedelta interval, datetime start_time=None, datetime stop_time=None, callback: Callable[[TimeEvent], None] | None = None, bool allow_past=True, bool fire_immediately=False) → void" title="Direct link to set_timer(self, str name, timedelta interval, datetime start_time=None, datetime stop_time=None, callback: Callable[[TimeEvent], None] | None = None, bool allow_past=True, bool fire_immediately=False) → void">​</a></h4>
<p>Set a timer to run.</p>
<p>The timer will run from the start time (optionally until the stop time).
When the intervals are reached the handlers will be passed the
TimeEvent containing the timers unique name. If no handler is passed
then the default handler (if registered) will receive the TimeEvent.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>name</strong> (<em>str</em>) – The name for the timer (must be unique for this clock).</li>
<li><strong>interval</strong> (<em>timedelta</em>) – The time interval for the timer.</li>
<li><strong>start_time</strong> (<em>datetime</em> <em>,</em> <em>optional</em>) – The start time for the timer (if None then starts immediately).</li>
<li><strong>stop_time</strong> (<em>datetime</em> <em>,</em> <em>optional</em>) – The stop time for the timer (if None then repeats indefinitely).</li>
<li><strong>callback</strong> (<em>Callable</em> <em>[</em> <em>[</em><a href="#posei_trader.common.component.TimeEvent"><em>TimeEvent</em></a> <em>]</em> <em>,</em> <em>None</em> <em>]</em> <em>,</em> <em>optional</em>) – The callback to receive time events.</li>
<li><strong>allow_past</strong> (<em>bool</em> <em>,</em> <em>default True</em>) – If True, allows timers where the next event time may be in the past.
If False, raises an error when the next event time would be in the past.</li>
<li><strong>fire_immediately</strong> (<em>bool</em> <em>,</em> <em>default False</em>) – If True, the timer will fire immediately at the start time,
then fire again after each interval. If False, the timer will
fire after the first interval has elapsed (default behavior).</li>
</ul>
</li>
<li><strong>Raises:</strong>
<ul>
<li><strong>ValueError</strong> – If name is not a valid string.</li>
<li><strong>KeyError</strong> – If name is not unique for this clock.</li>
<li><strong>ValueError</strong> – If interval is not positive (&gt; 0).</li>
<li><strong>ValueError</strong> – If stop_time is not <code>None</code> and stop_time &lt; time now.</li>
<li><strong>ValueError</strong> – If stop_time is not <code>None</code> and start_time + interval &gt; stop_time.</li>
<li><strong>TypeError</strong> – If handler is not of type Callable or <code>None</code>.</li>
<li><strong>ValueError</strong> – If handler is <code>None</code> and no default handler is registered.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="set_timer_nsself-str-name-uint64_t-interval_ns-uint64_t-start_time_ns-uint64_t-stop_time_ns-callback-callabletimeevent-none--none--none-bool-allow_pasttrue-bool-fire_immediatelyfalse--void-2">set_timer_ns(self, str name, uint64_t interval_ns, uint64_t start_time_ns, uint64_t stop_time_ns, callback: Callable[[TimeEvent], None] | None = None, bool allow_past=True, bool fire_immediately=False) → void<a href="#set_timer_nsself-str-name-uint64_t-interval_ns-uint64_t-start_time_ns-uint64_t-stop_time_ns-callback-callabletimeevent-none--none--none-bool-allow_pasttrue-bool-fire_immediatelyfalse--void-2" class="hash-link" aria-label="Direct link to set_timer_ns(self, str name, uint64_t interval_ns, uint64_t start_time_ns, uint64_t stop_time_ns, callback: Callable[[TimeEvent], None] | None = None, bool allow_past=True, bool fire_immediately=False) → void" title="Direct link to set_timer_ns(self, str name, uint64_t interval_ns, uint64_t start_time_ns, uint64_t stop_time_ns, callback: Callable[[TimeEvent], None] | None = None, bool allow_past=True, bool fire_immediately=False) → void">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="timer_count-2">timer_count<a href="#timer_count-2" class="hash-link" aria-label="Direct link to timer_count" title="Direct link to timer_count">​</a></h4>
<p>int</p>
<ul>
<li><strong>Type:</strong>
TestClock.timer_count</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="timer_names-2">timer_names<a href="#timer_names-2" class="hash-link" aria-label="Direct link to timer_names" title="Direct link to timer_names">​</a></h4>
<p>list[str]</p>
<ul>
<li><strong>Type:</strong>
TestClock.timer_names</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="timestampself--double-2">timestamp(self) → double<a href="#timestampself--double-2" class="hash-link" aria-label="Direct link to timestamp(self) → double" title="Direct link to timestamp(self) → double">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="timestamp_msself--uint64_t-2">timestamp_ms(self) → uint64_t<a href="#timestamp_msself--uint64_t-2" class="hash-link" aria-label="Direct link to timestamp_ms(self) → uint64_t" title="Direct link to timestamp_ms(self) → uint64_t">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="timestamp_nsself--uint64_t-2">timestamp_ns(self) → uint64_t<a href="#timestamp_nsself--uint64_t-2" class="hash-link" aria-label="Direct link to timestamp_ns(self) → uint64_t" title="Direct link to timestamp_ns(self) → uint64_t">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="timestamp_usself--uint64_t-2">timestamp_us(self) → uint64_t<a href="#timestamp_usself--uint64_t-2" class="hash-link" aria-label="Direct link to timestamp_us(self) → uint64_t" title="Direct link to timestamp_us(self) → uint64_t">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="utc_nowself--datetime-2">utc_now(self) → datetime<a href="#utc_nowself--datetime-2" class="hash-link" aria-label="Direct link to utc_now(self) → datetime" title="Direct link to utc_now(self) → datetime">​</a></h4>
<p>Return the current time (UTC).</p>
<ul>
<li><strong>Returns:</strong>
The current tz-aware UTC time of the clock.</li>
<li><strong>Return type:</strong>
datetime</li>
</ul>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="class-throttler"><em>class</em> Throttler<a href="#class-throttler" class="hash-link" aria-label="Direct link to class-throttler" title="Direct link to class-throttler">​</a></h3>
<p>Bases: <code>object</code></p>
<p>Throttler(str name, int limit, timedelta interval, Clock clock, output_send: Callable[[Any], None], output_drop: Callable[[Any], None] | None = None) -&gt; None</p>
<p>Provides a generic throttler which can either buffer or drop messages.</p>
<p>Will throttle messages to the given maximum limit-interval rate.
If an output_drop handler is provided, then will drop messages which
would exceed the rate limit. Otherwise will buffer messages until within
the rate limit, then send.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>name</strong> (<em>str</em>) – The unique name of the throttler.</li>
<li><strong>limit</strong> (<em>int</em>) – The limit setting for the throttling.</li>
<li><strong>interval</strong> (<em>timedelta</em>) – The interval setting for the throttling.</li>
<li><strong>clock</strong> (<a href="#posei_trader.common.component.Clock"><em>Clock</em></a>) – The clock for the throttler.</li>
<li><strong>output_send</strong> (<em>Callable</em> <em>[</em> *[*<em>Any</em> <em>]</em> <em>,</em> <em>None</em> <em>]</em>) – The output handler to send messages from the throttler.</li>
<li><strong>output_drop</strong> (<em>Callable</em> <em>[</em> *[*<em>Any</em> <em>]</em> <em>,</em> <em>None</em> <em>]</em> <em>,</em> <em>optional</em>) – The output handler to drop messages from the throttler.
If <code>None</code> then messages will be buffered.</li>
</ul>
</li>
<li><strong>Raises:</strong>
<ul>
<li><strong>ValueError</strong> – If name is not a valid string.</li>
<li><strong>ValueError</strong> – If limit is not positive (&gt; 0).</li>
<li><strong>ValueError</strong> – If interval is not positive (&gt; 0).</li>
<li><strong>ValueError</strong> – If output_send is not of type Callable.</li>
<li><strong>ValueError</strong> – If output_drop is not of type Callable or <code>None</code>.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-72">WARNING<a href="#warning-72" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>This throttler is not thread-safe and must be called from the same thread as
the event loop.</p>
<p>The internal buffer queue is unbounded and so a bounded queue should be
upstream.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="interval">interval<a href="#interval" class="hash-link" aria-label="Direct link to interval" title="Direct link to interval">​</a></h4>
<p>The interval for the throttler rate.</p>
<ul>
<li><strong>Returns:</strong>
timedelta</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="is_limiting">is_limiting<a href="#is_limiting" class="hash-link" aria-label="Direct link to is_limiting" title="Direct link to is_limiting">​</a></h4>
<p>If the throttler is currently limiting messages (buffering or dropping).</p>
<ul>
<li><strong>Returns:</strong>
bool</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="limit">limit<a href="#limit" class="hash-link" aria-label="Direct link to limit" title="Direct link to limit">​</a></h4>
<p>The limit for the throttler rate.</p>
<ul>
<li><strong>Returns:</strong>
int</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="name-1">name<a href="#name-1" class="hash-link" aria-label="Direct link to name" title="Direct link to name">​</a></h4>
<p>The name of the throttler.</p>
<ul>
<li><strong>Returns:</strong>
str</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="qsize">qsize<a href="#qsize" class="hash-link" aria-label="Direct link to qsize" title="Direct link to qsize">​</a></h4>
<p>int</p>
<p>Return the qsize of the internal buffer.</p>
<ul>
<li><strong>Return type:</strong>
int</li>
<li><strong>Type:</strong>
Throttler.qsize</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="recv_count">recv_count<a href="#recv_count" class="hash-link" aria-label="Direct link to recv_count" title="Direct link to recv_count">​</a></h4>
<p>If count of messages received by the throttler.</p>
<ul>
<li><strong>Returns:</strong>
int</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="resetself--void-3">reset(self) → void<a href="#resetself--void-3" class="hash-link" aria-label="Direct link to reset(self) → void" title="Direct link to reset(self) → void">​</a></h4>
<p>Reset the state of the throttler.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="sendself-msg--void">send(self, msg) → void<a href="#sendself-msg--void" class="hash-link" aria-label="Direct link to send(self, msg) → void" title="Direct link to send(self, msg) → void">​</a></h4>
<p>Send the given message through the throttler.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>msg</strong> (<em>object</em>) – The message to send.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="sent_count-1">sent_count<a href="#sent_count-1" class="hash-link" aria-label="Direct link to sent_count" title="Direct link to sent_count">​</a></h4>
<p>If count of messages sent from the throttler.</p>
<ul>
<li><strong>Returns:</strong>
int</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="usedself--double">used(self) → double<a href="#usedself--double" class="hash-link" aria-label="Direct link to used(self) → double" title="Direct link to used(self) → double">​</a></h4>
<p>Return the percentage of maximum rate currently used.</p>
<ul>
<li><strong>Returns:</strong>
[0, 1.0].</li>
<li><strong>Return type:</strong>
double</li>
</ul>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="class-timeevent"><em>class</em> TimeEvent<a href="#class-timeevent" class="hash-link" aria-label="Direct link to class-timeevent" title="Direct link to class-timeevent">​</a></h3>
<p>Bases: <a href="../core/index.htm#posei_trader.core.message.Event"><code>Event</code></a></p>
<p>TimeEvent(str name, UUID4 event_id, uint64_t ts_event, uint64_t ts_init)</p>
<p>Represents a time event occurring at the event timestamp.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>name</strong> (<em>str</em>) – The event name.</li>
<li><strong>event_id</strong> (<a href="../core/index.htm#posei_trader.core.UUID4"><em>UUID4</em></a>) – The event ID.</li>
<li><strong>ts_event</strong> (<em>uint64_t</em>) – UNIX timestamp (nanoseconds) when the time event occurred.</li>
<li><strong>ts_init</strong> (<em>uint64_t</em>) – UNIX timestamp (nanoseconds) when the object was initialized.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="id-2">id<a href="#id-2" class="hash-link" aria-label="Direct link to id" title="Direct link to id">​</a></h4>
<p>UUID4</p>
<p>The event message identifier.</p>
<ul>
<li><strong>Return type:</strong>
<a href="../core/index.htm#posei_trader.core.UUID4">UUID4</a></li>
<li><strong>Type:</strong>
TimeEvent.id</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="name-2">name<a href="#name-2" class="hash-link" aria-label="Direct link to name" title="Direct link to name">​</a></h4>
<p>str</p>
<p>Return the name of the time event.</p>
<ul>
<li><strong>Return type:</strong>
str</li>
<li><strong>Type:</strong>
TimeEvent.name</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="ts_event">ts_event<a href="#ts_event" class="hash-link" aria-label="Direct link to ts_event" title="Direct link to ts_event">​</a></h4>
<p>int</p>
<p>UNIX timestamp (nanoseconds) when the event occurred.</p>
<ul>
<li><strong>Return type:</strong>
int</li>
<li><strong>Type:</strong>
TimeEvent.ts_event</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="ts_init">ts_init<a href="#ts_init" class="hash-link" aria-label="Direct link to ts_init" title="Direct link to ts_init">​</a></h4>
<p>int</p>
<p>UNIX timestamp (nanoseconds) when the object was initialized.</p>
<ul>
<li><strong>Return type:</strong>
int</li>
<li><strong>Type:</strong>
TimeEvent.ts_init</li>
</ul>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="class-timeeventhandler"><em>class</em> TimeEventHandler<a href="#class-timeeventhandler" class="hash-link" aria-label="Direct link to class-timeeventhandler" title="Direct link to class-timeeventhandler">​</a></h3>
<p>Bases: <code>object</code></p>
<p>TimeEventHandler(TimeEvent event, handler: Callable[[TimeEvent], None])</p>
<p>Represents a time event with its associated handler.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="event">event<a href="#event" class="hash-link" aria-label="Direct link to event" title="Direct link to event">​</a></h4>
<p>The handlers event.</p>
<ul>
<li><strong>Returns:</strong>
TimeEvent</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="handleself--void">handle(self) → void<a href="#handleself--void" class="hash-link" aria-label="Direct link to handle(self) → void" title="Direct link to handle(self) → void">​</a></h4>
<p>Call the handler with the contained time event.</p>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="component_state_from_strstr-value--componentstate">component_state_from_str(str value) → ComponentState<a href="#component_state_from_strstr-value--componentstate" class="hash-link" aria-label="Direct link to component_state_from_str(str value) → ComponentState" title="Direct link to component_state_from_str(str value) → ComponentState">​</a></h3>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="component_state_to_strcomponentstate-value--str">component_state_to_str(ComponentState value) → str<a href="#component_state_to_strcomponentstate-value--str" class="hash-link" aria-label="Direct link to component_state_to_str(ComponentState value) → str" title="Direct link to component_state_to_str(ComponentState value) → str">​</a></h3>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="component_trigger_from_strstr-value--componenttrigger">component_trigger_from_str(str value) → ComponentTrigger<a href="#component_trigger_from_strstr-value--componenttrigger" class="hash-link" aria-label="Direct link to component_trigger_from_str(str value) → ComponentTrigger" title="Direct link to component_trigger_from_str(str value) → ComponentTrigger">​</a></h3>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="component_trigger_to_strcomponenttrigger-value--str">component_trigger_to_str(ComponentTrigger value) → str<a href="#component_trigger_to_strcomponenttrigger-value--str" class="hash-link" aria-label="Direct link to component_trigger_to_str(ComponentTrigger value) → str" title="Direct link to component_trigger_to_str(ComponentTrigger value) → str">​</a></h3>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="create_pyo3_conversion_wrappercallback--callable">create_pyo3_conversion_wrapper(callback) → Callable<a href="#create_pyo3_conversion_wrappercallback--callable" class="hash-link" aria-label="Direct link to create_pyo3_conversion_wrapper(callback) → Callable" title="Direct link to create_pyo3_conversion_wrapper(callback) → Callable">​</a></h3>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="deregister_component_clockuuid4-instance_id-clock-clock--void">deregister_component_clock(UUID4 instance_id, Clock clock) → void<a href="#deregister_component_clockuuid4-instance_id-clock-clock--void" class="hash-link" aria-label="Direct link to deregister_component_clock(UUID4 instance_id, Clock clock) → void" title="Direct link to deregister_component_clock(UUID4 instance_id, Clock clock) → void">​</a></h3>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="flush_logger--void">flush_logger() → void<a href="#flush_logger--void" class="hash-link" aria-label="Direct link to flush_logger() → void" title="Direct link to flush_logger() → void">​</a></h3>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="init_loggingtraderid-trader_idnone-str-machine_idnone-uuid4-instance_idnone-loglevel-level_stdoutloglevelinfo-loglevel-level_filelogleveloff-str-directorynone-str-file_namenone-str-file_formatnone-dict-component_levels-dictcomponentid-loglevel--none-bool-colorstrue-bool-bypassfalse-bool-print_configfalse-uint64_t-max_file_size0-uint32_t-max_backup_count5--logguard">init_logging(TraderId trader_id=None, str machine_id=None, UUID4 instance_id=None, LogLevel level_stdout=LogLevel.INFO, LogLevel level_file=LogLevel.OFF, str directory=None, str file_name=None, str file_format=None, dict component_levels: dict[ComponentId, LogLevel] = None, bool colors=True, bool bypass=False, bool print_config=False, uint64_t max_file_size=0, uint32_t max_backup_count=5) → <a href="#posei_trader.common.component.LogGuard">LogGuard</a><a href="#init_loggingtraderid-trader_idnone-str-machine_idnone-uuid4-instance_idnone-loglevel-level_stdoutloglevelinfo-loglevel-level_filelogleveloff-str-directorynone-str-file_namenone-str-file_formatnone-dict-component_levels-dictcomponentid-loglevel--none-bool-colorstrue-bool-bypassfalse-bool-print_configfalse-uint64_t-max_file_size0-uint32_t-max_backup_count5--logguard" class="hash-link" aria-label="Direct link to init_loggingtraderid-trader_idnone-str-machine_idnone-uuid4-instance_idnone-loglevel-level_stdoutloglevelinfo-loglevel-level_filelogleveloff-str-directorynone-str-file_namenone-str-file_formatnone-dict-component_levels-dictcomponentid-loglevel--none-bool-colorstrue-bool-bypassfalse-bool-print_configfalse-uint64_t-max_file_size0-uint32_t-max_backup_count5--logguard" title="Direct link to init_loggingtraderid-trader_idnone-str-machine_idnone-uuid4-instance_idnone-loglevel-level_stdoutloglevelinfo-loglevel-level_filelogleveloff-str-directorynone-str-file_namenone-str-file_formatnone-dict-component_levels-dictcomponentid-loglevel--none-bool-colorstrue-bool-bypassfalse-bool-print_configfalse-uint64_t-max_file_size0-uint32_t-max_backup_count5--logguard">​</a></h3>
<p>Initialize the logging subsystem.</p>
<p>Provides an interface into the logging subsystem implemented in Rust.</p>
<p>This function should only be called once per process, at the beginning of the application
run. Subsequent calls will raise a RuntimeError, as there can only be one LogGuard
per initialized system.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>trader_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.TraderId"><em>TraderId</em></a> <em>,</em> <em>optional</em>) – The trader ID for the logger.</li>
<li><strong>machine_id</strong> (<em>str</em> <em>,</em> <em>optional</em>) – The machine ID.</li>
<li><strong>instance_id</strong> (<a href="../core/index.htm#posei_trader.core.UUID4"><em>UUID4</em></a> <em>,</em> <em>optional</em>) – The instance ID.</li>
<li><strong>level_stdout</strong> (LogLevel, default <code>INFO</code>) – The minimum log level to write to stdout.</li>
<li><strong>level_file</strong> (LogLevel, default <code>OFF</code>) – The minimum log level to write to a file.</li>
<li><strong>directory</strong> (<em>str</em> <em>,</em> <em>optional</em>) – The path to the log file directory.
If <code>None</code> then will write to the current working directory.</li>
<li><strong>file_name</strong> (<em>str</em> <em>,</em> <em>optional</em>) – The custom log file name (will use a ‘.log’ suffix for plain text or ‘.json’ for JSON).
If <code>None</code> will not log to a file (unless file_auto is True).</li>
<li><strong>file_format</strong> (<em>str { &#x27;JSON&#x27; }</em> <em>,</em> <em>optional</em>) – The log file format. If <code>None</code> (default) then will log in plain text.
If set to ‘JSON’ then logs will be in JSON format.</li>
<li><strong>component_levels</strong> (<em>dict</em> <em>[</em><a href="../model/identifiers/index.htm#posei_trader.model.identifiers.ComponentId"><em>ComponentId</em></a> <em>,</em> <em>LogLevel</em> <em>]</em>) – The additional per component log level filters, where keys are component
IDs (e.g. actor/strategy IDs) and values are log levels.</li>
<li><strong>colors</strong> (<em>bool</em> <em>,</em> <em>default True</em>) – If ANSI codes should be used to produce colored log lines.</li>
<li><strong>bypass</strong> (<em>bool</em> <em>,</em> <em>default False</em>) – If the output for the core logging subsystem is bypassed (useful for logging tests).</li>
<li><strong>print_config</strong> (<em>bool</em> <em>,</em> <em>default False</em>) – If the core logging configuration should be printed to stdout on initialization.</li>
<li><strong>max_file_size</strong> (<em>uint64_t</em> <em>,</em> <em>default 0</em>) – The maximum size of log files in bytes before rotation occurs.
If set to 0, file rotation is disabled.</li>
<li><strong>max_backup_count</strong> (<em>uint32_t</em> <em>,</em> <em>default 5</em>) – The maximum number of backup log files to keep when rotating.</li>
</ul>
</li>
<li><strong>Return type:</strong>
<a href="#posei_trader.common.component.LogGuard">LogGuard</a></li>
<li><strong>Raises:</strong>
<strong>RuntimeError</strong> – If the logging subsystem has already been initialized.</li>
</ul>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="is_backtest_force_stop--bool">is_backtest_force_stop() → bool<a href="#is_backtest_force_stop--bool" class="hash-link" aria-label="Direct link to is_backtest_force_stop() → bool" title="Direct link to is_backtest_force_stop() → bool">​</a></h3>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="is_logging_initialized--bool">is_logging_initialized() → bool<a href="#is_logging_initialized--bool" class="hash-link" aria-label="Direct link to is_logging_initialized() → bool" title="Direct link to is_logging_initialized() → bool">​</a></h3>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="is_logging_pyo3--bool">is_logging_pyo3() → bool<a href="#is_logging_pyo3--bool" class="hash-link" aria-label="Direct link to is_logging_pyo3() → bool" title="Direct link to is_logging_pyo3() → bool">​</a></h3>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="is_matching_pystr-topic-str-pattern--bool">is_matching_py(str topic, str pattern) → bool<a href="#is_matching_pystr-topic-str-pattern--bool" class="hash-link" aria-label="Direct link to is_matching_py(str topic, str pattern) → bool" title="Direct link to is_matching_py(str topic, str pattern) → bool">​</a></h3>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="log_color_from_strstr-value--logcolor">log_color_from_str(str value) → LogColor<a href="#log_color_from_strstr-value--logcolor" class="hash-link" aria-label="Direct link to log_color_from_str(str value) → LogColor" title="Direct link to log_color_from_str(str value) → LogColor">​</a></h3>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="log_color_to_strlogcolor-value--str">log_color_to_str(LogColor value) → str<a href="#log_color_to_strlogcolor-value--str" class="hash-link" aria-label="Direct link to log_color_to_str(LogColor value) → str" title="Direct link to log_color_to_str(LogColor value) → str">​</a></h3>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="log_headertraderid-trader_id-str-machine_id-uuid4-instance_id-str-component--void">log_header(TraderId trader_id, str machine_id, UUID4 instance_id, str component) → void<a href="#log_headertraderid-trader_id-str-machine_id-uuid4-instance_id-str-component--void" class="hash-link" aria-label="Direct link to log_header(TraderId trader_id, str machine_id, UUID4 instance_id, str component) → void" title="Direct link to log_header(TraderId trader_id, str machine_id, UUID4 instance_id, str component) → void">​</a></h3>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="log_level_from_strstr-value--loglevel">log_level_from_str(str value) → LogLevel<a href="#log_level_from_strstr-value--loglevel" class="hash-link" aria-label="Direct link to log_level_from_str(str value) → LogLevel" title="Direct link to log_level_from_str(str value) → LogLevel">​</a></h3>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="log_level_to_strloglevel-value--str">log_level_to_str(LogLevel value) → str<a href="#log_level_to_strloglevel-value--str" class="hash-link" aria-label="Direct link to log_level_to_str(LogLevel value) → str" title="Direct link to log_level_to_str(LogLevel value) → str">​</a></h3>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="log_sysinfostr-component--void">log_sysinfo(str component) → void<a href="#log_sysinfostr-component--void" class="hash-link" aria-label="Direct link to log_sysinfo(str component) → void" title="Direct link to log_sysinfo(str component) → void">​</a></h3>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="register_component_clockuuid4-instance_id-clock-clock--void">register_component_clock(UUID4 instance_id, Clock clock) → void<a href="#register_component_clockuuid4-instance_id-clock-clock--void" class="hash-link" aria-label="Direct link to register_component_clock(UUID4 instance_id, Clock clock) → void" title="Direct link to register_component_clock(UUID4 instance_id, Clock clock) → void">​</a></h3>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="remove_instance_component_clocksuuid4-instance_id--void">remove_instance_component_clocks(UUID4 instance_id) → void<a href="#remove_instance_component_clocksuuid4-instance_id--void" class="hash-link" aria-label="Direct link to remove_instance_component_clocks(UUID4 instance_id) → void" title="Direct link to remove_instance_component_clocks(UUID4 instance_id) → void">​</a></h3>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="set_backtest_force_stopbool-value--void">set_backtest_force_stop(bool value) → void<a href="#set_backtest_force_stopbool-value--void" class="hash-link" aria-label="Direct link to set_backtest_force_stop(bool value) → void" title="Direct link to set_backtest_force_stop(bool value) → void">​</a></h3>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="set_logging_pyo3bool-value--void">set_logging_pyo3(bool value) → void<a href="#set_logging_pyo3bool-value--void" class="hash-link" aria-label="Direct link to set_logging_pyo3(bool value) → void" title="Direct link to set_logging_pyo3(bool value) → void">​</a></h3>
<h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="executor">Executor<a href="#executor" class="hash-link" aria-label="Direct link to Executor" title="Direct link to Executor">​</a></h2>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="class-taskid"><em>class</em> TaskId<a href="#class-taskid" class="hash-link" aria-label="Direct link to class-taskid" title="Direct link to class-taskid">​</a></h3>
<p>Bases: <code>object</code></p>
<p>Represents a unique identifier for a task managed by the ActorExecutor.</p>
<p>This ID can be associated with a task that is either queued for execution or
actively executing as an asyncio.Future.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="value--str">value <em>: str</em><a href="#value--str" class="hash-link" aria-label="Direct link to value--str" title="Direct link to value--str">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="classmethod-create--taskid"><em>classmethod</em> create() → <a href="#posei_trader.common.executor.TaskId">TaskId</a><a href="#classmethod-create--taskid" class="hash-link" aria-label="Direct link to classmethod-create--taskid" title="Direct link to classmethod-create--taskid">​</a></h4>
<p>Create and return a new task identifier with a UUID v4 value.</p>
<ul>
<li><strong>Return type:</strong>
<a href="#posei_trader.common.executor.TaskId">TaskId</a></li>
</ul>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="class-actorexecutor"><em>class</em> ActorExecutor<a href="#class-actorexecutor" class="hash-link" aria-label="Direct link to class-actorexecutor" title="Direct link to class-actorexecutor">​</a></h3>
<p>Bases: <code>object</code></p>
<p>Provides an executor for Actor and Strategy classes.</p>
<p>The executor is designed to handle asynchronous tasks for Actor and Strategy classes.
This custom executor queues and executes tasks within a given event loop and is tailored for
single-threaded applications.</p>
<p>The ActorExecutor maintains its internal state to manage both queued and active tasks,
providing facilities for scheduling, cancellation, and monitoring. It can be used to create
more controlled execution flows within complex asynchronous systems.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>loop</strong> (<em>AbstractEventLoop</em>) – The event loop for the application.</li>
<li><strong>executor</strong> (<em>Executor</em>) – The inner executor to register.</li>
<li><strong>logger</strong> (<a href="#posei_trader.common.component.Logger"><em>Logger</em></a> <em>,</em> <em>optional</em>) – The logger for the executor.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-73">WARNING<a href="#warning-73" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>This executor is not thread-safe and must be invoked from the same thread in which
it was created. Special care should be taken to ensure thread consistency when integrating
with multi-threaded applications.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="reset--none">reset() → None<a href="#reset--none" class="hash-link" aria-label="Direct link to reset() → None" title="Direct link to reset() → None">​</a></h4>
<p>Reset the executor.</p>
<p>This will cancel all queued and active tasks, and drain the internal queue
without executing those tasks.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="get_futuretask_id-taskid--future--none">get_future(task_id: <a href="#posei_trader.common.executor.TaskId">TaskId</a>) → Future | None<a href="#get_futuretask_id-taskid--future--none" class="hash-link" aria-label="Direct link to get_futuretask_id-taskid--future--none" title="Direct link to get_futuretask_id-taskid--future--none">​</a></h4>
<p>Return the executing Future with the given task_id (if found).</p>
<ul>
<li><strong>Parameters:</strong>
<strong>task_id</strong> (<a href="#posei_trader.common.executor.TaskId"><em>TaskId</em></a>) – The task identifier for the future.</li>
<li><strong>Return type:</strong>
asyncio.Future or <code>None</code></li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="async-shutdown--none"><em>async</em> shutdown() → None<a href="#async-shutdown--none" class="hash-link" aria-label="Direct link to async-shutdown--none" title="Direct link to async-shutdown--none">​</a></h4>
<p>Shutdown the executor in an async context.</p>
<p>This will cancel the inner worker task.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="queue_for_executorfunc-callable-any-args-any-kwargs-any--taskid">queue_for_executor(func: Callable[[...], Any], *args: Any, **kwargs: Any) → <a href="#posei_trader.common.executor.TaskId">TaskId</a><a href="#queue_for_executorfunc-callable-any-args-any-kwargs-any--taskid" class="hash-link" aria-label="Direct link to queue_for_executorfunc-callable-any-args-any-kwargs-any--taskid" title="Direct link to queue_for_executorfunc-callable-any-args-any-kwargs-any--taskid">​</a></h4>
<p>Enqueue the given func to be executed sequentially.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>func</strong> (<em>Callable</em>) – The function to be executed.</li>
<li><strong>args</strong> (<em>positional arguments</em>) – The positional arguments for the call to func.</li>
<li><strong>kwargs</strong> (<em>arbitrary keyword arguments</em>) – The keyword arguments for the call to func.</li>
</ul>
</li>
<li><strong>Return type:</strong>
<a href="#posei_trader.common.executor.TaskId">TaskId</a></li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="run_in_executorfunc-callable-any-args-any-kwargs-any--taskid">run_in_executor(func: Callable[[...], Any], *args: Any, **kwargs: Any) → <a href="#posei_trader.common.executor.TaskId">TaskId</a><a href="#run_in_executorfunc-callable-any-args-any-kwargs-any--taskid" class="hash-link" aria-label="Direct link to run_in_executorfunc-callable-any-args-any-kwargs-any--taskid" title="Direct link to run_in_executorfunc-callable-any-args-any-kwargs-any--taskid">​</a></h4>
<p>Arrange for the given func to be called in the executor.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>func</strong> (<em>Callable</em>) – The function to be executed.</li>
<li><strong>args</strong> (<em>positional arguments</em>) – The positional arguments for the call to func.</li>
<li><strong>kwargs</strong> (<em>arbitrary keyword arguments</em>) – The keyword arguments for the call to func.</li>
</ul>
</li>
<li><strong>Return type:</strong>
<a href="#posei_trader.common.executor.TaskId">TaskId</a></li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="queued_task_ids--listtaskid">queued_task_ids() → list[<a href="#posei_trader.common.executor.TaskId">TaskId</a>]<a href="#queued_task_ids--listtaskid" class="hash-link" aria-label="Direct link to queued_task_ids--listtaskid" title="Direct link to queued_task_ids--listtaskid">​</a></h4>
<p>Return the queued task identifiers.</p>
<ul>
<li><strong>Return type:</strong>
list[<a href="#posei_trader.common.executor.TaskId">TaskId</a>]</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="active_task_ids--listtaskid">active_task_ids() → list[<a href="#posei_trader.common.executor.TaskId">TaskId</a>]<a href="#active_task_ids--listtaskid" class="hash-link" aria-label="Direct link to active_task_ids--listtaskid" title="Direct link to active_task_ids--listtaskid">​</a></h4>
<p>Return the active task identifiers.</p>
<ul>
<li><strong>Return type:</strong>
list[<a href="#posei_trader.common.executor.TaskId">TaskId</a>]</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="has_queued_tasks--bool">has_queued_tasks() → bool<a href="#has_queued_tasks--bool" class="hash-link" aria-label="Direct link to has_queued_tasks() → bool" title="Direct link to has_queued_tasks() → bool">​</a></h4>
<p>Return a value indicating whether there are any queued tasks.</p>
<ul>
<li><strong>Return type:</strong>
bool</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="has_active_tasks--bool">has_active_tasks() → bool<a href="#has_active_tasks--bool" class="hash-link" aria-label="Direct link to has_active_tasks() → bool" title="Direct link to has_active_tasks() → bool">​</a></h4>
<p>Return a value indicating whether there are any active tasks.</p>
<ul>
<li><strong>Return type:</strong>
bool</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="cancel_tasktask_id-taskid--none">cancel_task(task_id: <a href="#posei_trader.common.executor.TaskId">TaskId</a>) → None<a href="#cancel_tasktask_id-taskid--none" class="hash-link" aria-label="Direct link to cancel_tasktask_id-taskid--none" title="Direct link to cancel_tasktask_id-taskid--none">​</a></h4>
<p>Cancel the task with the given task_id (if queued or active).</p>
<p>If the task is not found then a warning is logged.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>task_id</strong> (<a href="#posei_trader.common.executor.TaskId"><em>TaskId</em></a>) – The active task identifier.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="cancel_all_tasks--none">cancel_all_tasks() → None<a href="#cancel_all_tasks--none" class="hash-link" aria-label="Direct link to cancel_all_tasks() → None" title="Direct link to cancel_all_tasks() → None">​</a></h4>
<p>Cancel all active and queued tasks.</p>
<h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="generators">Generators<a href="#generators" class="hash-link" aria-label="Direct link to Generators" title="Direct link to Generators">​</a></h2>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="class-clientorderidgenerator"><em>class</em> ClientOrderIdGenerator<a href="#class-clientorderidgenerator" class="hash-link" aria-label="Direct link to class-clientorderidgenerator" title="Direct link to class-clientorderidgenerator">​</a></h3>
<p>Bases: <a href="#posei_trader.common.generators.IdentifierGenerator"><code>IdentifierGenerator</code></a></p>
<p>ClientOrderIdGenerator(TraderId trader_id, StrategyId strategy_id, Clock clock, int initial_count=0)</p>
<p>Provides a generator for unique</p>
<div class="language-text codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9CDCFE;--prism-background-color:#1E1E1E"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#9CDCFE;background-color:#1E1E1E"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9CDCFE"><span class="token plain">`</span><br></span></code></pre></div></div>
<p>ClientOrderId`(s).</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>trader_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.TraderId"><em>TraderId</em></a>) – The trader ID for the generator.</li>
<li><strong>strategy_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.StrategyId"><em>StrategyId</em></a>) – The strategy ID for the generator.</li>
<li><strong>clock</strong> (<a href="#posei_trader.common.component.Clock"><em>Clock</em></a>) – The clock for the generator.</li>
<li><strong>initial_count</strong> (<em>int</em>) – The initial count for the generator.</li>
</ul>
</li>
<li><strong>Raises:</strong>
<strong>ValueError</strong> – If initial_count is negative (&lt; 0).</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="count">count<a href="#count" class="hash-link" aria-label="Direct link to count" title="Direct link to count">​</a></h4>
<p>The count of IDs generated.</p>
<ul>
<li><strong>Returns:</strong>
int</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="generateself--clientorderid">generate(self) → <a href="../model/identifiers/index.htm#posei_trader.model.identifiers.ClientOrderId">ClientOrderId</a><a href="#generateself--clientorderid" class="hash-link" aria-label="Direct link to generateself--clientorderid" title="Direct link to generateself--clientorderid">​</a></h4>
<p>Return a unique client order ID.</p>
<ul>
<li><strong>Return type:</strong>
<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.ClientOrderId">ClientOrderId</a></li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="resetself--void-4">reset(self) → void<a href="#resetself--void-4" class="hash-link" aria-label="Direct link to reset(self) → void" title="Direct link to reset(self) → void">​</a></h4>
<p>Reset the ID generator.</p>
<p>All stateful fields are reset to their initial value.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="set_countself-int-count--void">set_count(self, int count) → void<a href="#set_countself-int-count--void" class="hash-link" aria-label="Direct link to set_count(self, int count) → void" title="Direct link to set_count(self, int count) → void">​</a></h4>
<p>Set the internal counter to the given count.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>count</strong> (<em>int</em>) – The count to set.</li>
</ul>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="class-identifiergenerator"><em>class</em> IdentifierGenerator<a href="#class-identifiergenerator" class="hash-link" aria-label="Direct link to class-identifiergenerator" title="Direct link to class-identifiergenerator">​</a></h3>
<p>Bases: <code>object</code></p>
<p>IdentifierGenerator(TraderId trader_id, Clock clock)</p>
<p>Provides a generator for unique ID strings.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>trader_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.TraderId"><em>TraderId</em></a>) – The ID tag for the trader.</li>
<li><strong>clock</strong> (<a href="#posei_trader.common.component.Clock"><em>Clock</em></a>) – The internal clock.</li>
</ul>
</li>
</ul>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="class-orderlistidgenerator"><em>class</em> OrderListIdGenerator<a href="#class-orderlistidgenerator" class="hash-link" aria-label="Direct link to class-orderlistidgenerator" title="Direct link to class-orderlistidgenerator">​</a></h3>
<p>Bases: <a href="#posei_trader.common.generators.IdentifierGenerator"><code>IdentifierGenerator</code></a></p>
<p>OrderListIdGenerator(TraderId trader_id, StrategyId strategy_id, Clock clock, int initial_count=0)</p>
<p>Provides a generator for unique</p>
<div class="language-text codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9CDCFE;--prism-background-color:#1E1E1E"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#9CDCFE;background-color:#1E1E1E"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9CDCFE"><span class="token plain">`</span><br></span></code></pre></div></div>
<p>OrderListId`(s).</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>trader_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.TraderId"><em>TraderId</em></a>) – The trader ID for the generator.</li>
<li><strong>strategy_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.StrategyId"><em>StrategyId</em></a>) – The strategy ID for the generator.</li>
<li><strong>clock</strong> (<a href="#posei_trader.common.component.Clock"><em>Clock</em></a>) – The clock for the generator.</li>
<li><strong>initial_count</strong> (<em>int</em>) – The initial count for the generator.</li>
</ul>
</li>
<li><strong>Raises:</strong>
<strong>ValueError</strong> – If initial_count is negative (&lt; 0).</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="count-1">count<a href="#count-1" class="hash-link" aria-label="Direct link to count" title="Direct link to count">​</a></h4>
<p>The count of IDs generated.</p>
<ul>
<li><strong>Returns:</strong>
int</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="generateself--orderlistid">generate(self) → <a href="../model/identifiers/index.htm#posei_trader.model.identifiers.OrderListId">OrderListId</a><a href="#generateself--orderlistid" class="hash-link" aria-label="Direct link to generateself--orderlistid" title="Direct link to generateself--orderlistid">​</a></h4>
<p>Return a unique order list ID.</p>
<ul>
<li><strong>Return type:</strong>
<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.OrderListId">OrderListId</a></li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="resetself--void-5">reset(self) → void<a href="#resetself--void-5" class="hash-link" aria-label="Direct link to reset(self) → void" title="Direct link to reset(self) → void">​</a></h4>
<p>Reset the ID generator.</p>
<p>All stateful fields are reset to their initial value.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="set_countself-int-count--void-1">set_count(self, int count) → void<a href="#set_countself-int-count--void-1" class="hash-link" aria-label="Direct link to set_count(self, int count) → void" title="Direct link to set_count(self, int count) → void">​</a></h4>
<p>Set the internal counter to the given count.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>count</strong> (<em>int</em>) – The count to set.</li>
</ul>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="class-positionidgenerator"><em>class</em> PositionIdGenerator<a href="#class-positionidgenerator" class="hash-link" aria-label="Direct link to class-positionidgenerator" title="Direct link to class-positionidgenerator">​</a></h3>
<p>Bases: <a href="#posei_trader.common.generators.IdentifierGenerator"><code>IdentifierGenerator</code></a></p>
<p>PositionIdGenerator(TraderId trader_id, Clock clock)</p>
<p>Provides a generator for unique PositionId(s).</p>
<ul>
<li><strong>Parameters:</strong>
<strong>trader_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.TraderId"><em>TraderId</em></a>) – The trader ID tag for the generator.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="generateself-strategyid-strategy_id-bool-flippedfalse--positionid">generate(self, StrategyId strategy_id, bool flipped=False) → <a href="../model/identifiers/index.htm#posei_trader.model.identifiers.PositionId">PositionId</a><a href="#generateself-strategyid-strategy_id-bool-flippedfalse--positionid" class="hash-link" aria-label="Direct link to generateself-strategyid-strategy_id-bool-flippedfalse--positionid" title="Direct link to generateself-strategyid-strategy_id-bool-flippedfalse--positionid">​</a></h4>
<p>Return a unique position ID.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>strategy_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.StrategyId"><em>StrategyId</em></a>) – The strategy ID associated with the position.</li>
<li><strong>flipped</strong> (<em>bool</em>) – If the position is being flipped. If True, then the generated id
will be appended with ‘F’.</li>
</ul>
</li>
<li><strong>Return type:</strong>
<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.PositionId">PositionId</a></li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="get_countself-strategyid-strategy_id--int">get_count(self, StrategyId strategy_id) → int<a href="#get_countself-strategyid-strategy_id--int" class="hash-link" aria-label="Direct link to get_count(self, StrategyId strategy_id) → int" title="Direct link to get_count(self, StrategyId strategy_id) → int">​</a></h4>
<p>Return the internal position count for the given strategy ID.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>strategy_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.StrategyId"><em>StrategyId</em></a>) – The strategy ID associated with the count.</li>
<li><strong>Return type:</strong>
int</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="resetself--void-6">reset(self) → void<a href="#resetself--void-6" class="hash-link" aria-label="Direct link to reset(self) → void" title="Direct link to reset(self) → void">​</a></h4>
<p>Reset the ID generator.</p>
<p>All stateful fields are reset to their initial value.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="set_countself-strategyid-strategy_id-int-count--void">set_count(self, StrategyId strategy_id, int count) → void<a href="#set_countself-strategyid-strategy_id-int-count--void" class="hash-link" aria-label="Direct link to set_count(self, StrategyId strategy_id, int count) → void" title="Direct link to set_count(self, StrategyId strategy_id, int count) → void">​</a></h4>
<p>Set the internal position count for the given strategy ID.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>strategy_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.StrategyId"><em>StrategyId</em></a>) – The strategy ID associated with the count.</li>
<li><strong>count</strong> (<em>int</em>) – The count to set.</li>
</ul>
</li>
<li><strong>Raises:</strong>
<strong>ValueError</strong> – If count is negative (&lt; 0).</li>
</ul>
<p><a id="module-posei_trader.common.providers"></a></p>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="class-instrumentprovider"><em>class</em> InstrumentProvider<a href="#class-instrumentprovider" class="hash-link" aria-label="Direct link to class-instrumentprovider" title="Direct link to class-instrumentprovider">​</a></h3>
<p>Bases: <code>object</code></p>
<p>The base class for all instrument providers.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>config</strong> (<a href="../config/index.htm#posei_trader.common.config.InstrumentProviderConfig"><em>InstrumentProviderConfig</em></a> <em>,</em> <em>optional</em>) – The instrument provider config.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-74">WARNING<a href="#warning-74" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>This class should not be used directly, but through a concrete subclass.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="property-count--int"><em>property</em> count <em>: int</em><a href="#property-count--int" class="hash-link" aria-label="Direct link to property-count--int" title="Direct link to property-count--int">​</a></h4>
<p>Return the count of instruments held by the provider.</p>
<ul>
<li><strong>Return type:</strong>
int</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="async-load_all_asyncfilters-dict--none--none--none"><em>async</em> load_all_async(filters: dict | None = None) → None<a href="#async-load_all_asyncfilters-dict--none--none--none" class="hash-link" aria-label="Direct link to async-load_all_asyncfilters-dict--none--none--none" title="Direct link to async-load_all_asyncfilters-dict--none--none--none">​</a></h4>
<p>Load the latest instruments into the provider asynchronously, optionally
applying the given filters.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="async-load_ids_asyncinstrument_ids-listinstrumentid-filters-dict--none--none--none"><em>async</em> load_ids_async(instrument_ids: list[<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.InstrumentId">InstrumentId</a>], filters: dict | None = None) → None<a href="#async-load_ids_asyncinstrument_ids-listinstrumentid-filters-dict--none--none--none" class="hash-link" aria-label="Direct link to async-load_ids_asyncinstrument_ids-listinstrumentid-filters-dict--none--none--none" title="Direct link to async-load_ids_asyncinstrument_ids-listinstrumentid-filters-dict--none--none--none">​</a></h4>
<p>Load the instruments for the given IDs into the provider, optionally applying
the given filters.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>instrument_ids</strong> (<em>list</em> <em>[</em><a href="../model/identifiers/index.htm#posei_trader.model.identifiers.InstrumentId"><em>InstrumentId</em></a> <em>]</em>) – The instrument IDs to load.</li>
<li><strong>filters</strong> (<em>frozendict</em> *[*<em>str</em> <em>,</em> <em>Any</em> <em>] or</em> <em>dict</em> *[*<em>str</em> <em>,</em> <em>Any</em> <em>]</em> <em>,</em> <em>optional</em>) – The venue specific instrument loading filters to apply.</li>
</ul>
</li>
<li><strong>Raises:</strong>
<strong>ValueError</strong> – If any instrument_id.venue is not equal to self.venue.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="async-load_asyncinstrument_id-instrumentid-filters-dict--none--none--none"><em>async</em> load_async(instrument_id: <a href="../model/identifiers/index.htm#posei_trader.model.identifiers.InstrumentId">InstrumentId</a>, filters: dict | None = None) → None<a href="#async-load_asyncinstrument_id-instrumentid-filters-dict--none--none--none" class="hash-link" aria-label="Direct link to async-load_asyncinstrument_id-instrumentid-filters-dict--none--none--none" title="Direct link to async-load_asyncinstrument_id-instrumentid-filters-dict--none--none--none">​</a></h4>
<p>Load the instrument for the given ID into the provider asynchronously,
optionally applying the given filters.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>instrument_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.InstrumentId"><em>InstrumentId</em></a>) – The instrument ID to load.</li>
<li><strong>filters</strong> (<em>frozendict</em> *[*<em>str</em> <em>,</em> <em>Any</em> <em>] or</em> <em>dict</em> *[*<em>str</em> <em>,</em> <em>Any</em> <em>]</em> <em>,</em> <em>optional</em>) – The venue specific instrument loading filters to apply.</li>
</ul>
</li>
<li><strong>Raises:</strong>
<strong>ValueError</strong> – If instrument_id.venue is not equal to self.venue.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="async-initializereload-bool--false--none"><em>async</em> initialize(reload: bool = False) → None<a href="#async-initializereload-bool--false--none" class="hash-link" aria-label="Direct link to async-initializereload-bool--false--none" title="Direct link to async-initializereload-bool--false--none">​</a></h4>
<p>Initialize the instrument provider.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>reload</strong> (<em>bool</em> <em>,</em> <em>default False</em>) – If True, then will always reload instruments.
If False, then will immediately return if already loaded.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="load_allfilters-dict--none--none--none">load_all(filters: dict | None = None) → None<a href="#load_allfilters-dict--none--none--none" class="hash-link" aria-label="Direct link to load_all(filters: dict | None = None) → None" title="Direct link to load_all(filters: dict | None = None) → None">​</a></h4>
<p>Load the latest instruments into the provider, optionally applying the given
filters.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>filters</strong> (<em>frozendict</em> *[*<em>str</em> <em>,</em> <em>Any</em> <em>] or</em> <em>dict</em> *[*<em>str</em> <em>,</em> <em>Any</em> <em>]</em> <em>,</em> <em>optional</em>) – The venue specific instrument loading filters to apply.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="load_idsinstrument_ids-listinstrumentid-filters-dict--none--none--none">load_ids(instrument_ids: list[<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.InstrumentId">InstrumentId</a>], filters: dict | None = None) → None<a href="#load_idsinstrument_ids-listinstrumentid-filters-dict--none--none--none" class="hash-link" aria-label="Direct link to load_idsinstrument_ids-listinstrumentid-filters-dict--none--none--none" title="Direct link to load_idsinstrument_ids-listinstrumentid-filters-dict--none--none--none">​</a></h4>
<p>Load the instruments for the given IDs into the provider, optionally applying
the given filters.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>instrument_ids</strong> (<em>list</em> <em>[</em><a href="../model/identifiers/index.htm#posei_trader.model.identifiers.InstrumentId"><em>InstrumentId</em></a> <em>]</em>) – The instrument IDs to load.</li>
<li><strong>filters</strong> (<em>frozendict</em> *[*<em>str</em> <em>,</em> <em>Any</em> <em>] or</em> <em>dict</em> *[*<em>str</em> <em>,</em> <em>Any</em> <em>]</em> <em>,</em> <em>optional</em>) – The venue specific instrument loading filters to apply.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="loadinstrument_id-instrumentid-filters-dict--none--none--none">load(instrument_id: <a href="../model/identifiers/index.htm#posei_trader.model.identifiers.InstrumentId">InstrumentId</a>, filters: dict | None = None) → None<a href="#loadinstrument_id-instrumentid-filters-dict--none--none--none" class="hash-link" aria-label="Direct link to loadinstrument_id-instrumentid-filters-dict--none--none--none" title="Direct link to loadinstrument_id-instrumentid-filters-dict--none--none--none">​</a></h4>
<p>Load the instrument for the given ID into the provider, optionally applying the
given filters.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>instrument_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.InstrumentId"><em>InstrumentId</em></a>) – The instrument ID to load.</li>
<li><strong>filters</strong> (<em>frozendict</em> *[*<em>str</em> <em>,</em> <em>Any</em> <em>] or</em> <em>dict</em> *[*<em>str</em> <em>,</em> <em>Any</em> <em>]</em> <em>,</em> <em>optional</em>) – The venue specific instrument loading filters to apply.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="add_currencycurrency-currency--none">add_currency(currency: <a href="../model/objects/index.htm#posei_trader.model.objects.Currency">Currency</a>) → None<a href="#add_currencycurrency-currency--none" class="hash-link" aria-label="Direct link to add_currencycurrency-currency--none" title="Direct link to add_currencycurrency-currency--none">​</a></h4>
<p>Add the given currency to the provider.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>currency</strong> (<a href="../model/index.htm#posei_trader.model.Currency"><em>Currency</em></a>) – The currency to add.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="addinstrument-instrument--none">add(instrument: <a href="../model/instruments/index.htm#posei_trader.model.instruments.base.Instrument">Instrument</a>) → None<a href="#addinstrument-instrument--none" class="hash-link" aria-label="Direct link to addinstrument-instrument--none" title="Direct link to addinstrument-instrument--none">​</a></h4>
<p>Add the given instrument to the provider.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>instrument</strong> (<a href="../model/instruments/index.htm#posei_trader.model.instruments.Instrument"><em>Instrument</em></a>) – The instrument to add.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="add_bulkinstruments-listinstrument--none">add_bulk(instruments: list[<a href="../model/instruments/index.htm#posei_trader.model.instruments.base.Instrument">Instrument</a>]) → None<a href="#add_bulkinstruments-listinstrument--none" class="hash-link" aria-label="Direct link to add_bulkinstruments-listinstrument--none" title="Direct link to add_bulkinstruments-listinstrument--none">​</a></h4>
<p>Add the given instruments bulk to the provider.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>instruments</strong> (<em>list</em> <em>[</em><a href="../model/instruments/index.htm#posei_trader.model.instruments.Instrument"><em>Instrument</em></a> <em>]</em>) – The instruments to add.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="list_all--listinstrument">list_all() → list[<a href="../model/instruments/index.htm#posei_trader.model.instruments.base.Instrument">Instrument</a>]<a href="#list_all--listinstrument" class="hash-link" aria-label="Direct link to list_all--listinstrument" title="Direct link to list_all--listinstrument">​</a></h4>
<p>Return all loaded instruments.</p>
<ul>
<li><strong>Return type:</strong>
list[<a href="../model/instruments/index.htm#posei_trader.model.instruments.Instrument">Instrument</a>]</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="get_all--dictinstrumentid-instrument">get_all() → dict[<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.InstrumentId">InstrumentId</a>, <a href="../model/instruments/index.htm#posei_trader.model.instruments.base.Instrument">Instrument</a>]<a href="#get_all--dictinstrumentid-instrument" class="hash-link" aria-label="Direct link to get_all--dictinstrumentid-instrument" title="Direct link to get_all--dictinstrumentid-instrument">​</a></h4>
<p>Return all loaded instruments as a map keyed by instrument ID.</p>
<p>If no instruments loaded, will return an empty dict.</p>
<ul>
<li><strong>Return type:</strong>
dict[<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.InstrumentId">InstrumentId</a>, <a href="../model/instruments/index.htm#posei_trader.model.instruments.Instrument">Instrument</a>]</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="currencies--dictstr-currency">currencies() → dict[str, <a href="../model/objects/index.htm#posei_trader.model.objects.Currency">Currency</a>]<a href="#currencies--dictstr-currency" class="hash-link" aria-label="Direct link to currencies--dictstr-currency" title="Direct link to currencies--dictstr-currency">​</a></h4>
<p>Return all currencies held by the instrument provider.</p>
<ul>
<li><strong>Return type:</strong>
dict[str, <a href="../model/index.htm#posei_trader.model.Currency">Currency</a>]</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="currencycode-str--currency--none">currency(code: str) → <a href="../model/objects/index.htm#posei_trader.model.objects.Currency">Currency</a> | None<a href="#currencycode-str--currency--none" class="hash-link" aria-label="Direct link to currencycode-str--currency--none" title="Direct link to currencycode-str--currency--none">​</a></h4>
<p>Return the currency with the given code (if found).</p>
<ul>
<li><strong>Parameters:</strong>
<strong>code</strong> (<em>str</em>) – The currency code.</li>
<li><strong>Return type:</strong>
Currency or <code>None</code></li>
<li><strong>Raises:</strong>
<strong>ValueError</strong> – If code is not a valid string.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="findinstrument_id-instrumentid--instrument--none">find(instrument_id: <a href="../model/identifiers/index.htm#posei_trader.model.identifiers.InstrumentId">InstrumentId</a>) → <a href="../model/instruments/index.htm#posei_trader.model.instruments.base.Instrument">Instrument</a> | None<a href="#findinstrument_id-instrumentid--instrument--none" class="hash-link" aria-label="Direct link to findinstrument_id-instrumentid--instrument--none" title="Direct link to findinstrument_id-instrumentid--instrument--none">​</a></h4>
<p>Return the instrument for the given instrument ID (if found).</p>
<ul>
<li><strong>Parameters:</strong>
<strong>instrument_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.InstrumentId"><em>InstrumentId</em></a>) – The ID for the instrument</li>
<li><strong>Return type:</strong>
Instrument or <code>None</code></li>
</ul></div></article><nav class="docusaurus-mt-lg pagination-nav" aria-label="Docs pages"><a class="pagination-nav__link pagination-nav__link--prev" href="../cache/index.htm"><div class="pagination-nav__sublabel">Previous</div><div class="pagination-nav__label">Cache</div></a><a class="pagination-nav__link pagination-nav__link--next" href="../config/index.htm"><div class="pagination-nav__sublabel">Next</div><div class="pagination-nav__label">Config</div></a></nav></div></div><div class="col col--3"><div class="tableOfContents_bqdL thin-scrollbar theme-doc-toc-desktop"><ul class="table-of-contents table-of-contents__left-border"><li><a href="#class-environment" class="table-of-contents__link toc-highlight"><em>class</em> Environment</a></li><li><a href="#class-actor" class="table-of-contents__link toc-highlight"><em>class</em> Actor</a></li><li><a href="#class-orderfactory" class="table-of-contents__link toc-highlight"><em>class</em> OrderFactory</a></li><li><a href="#component" class="table-of-contents__link toc-highlight">Component</a><ul><li><a href="#class-clock" class="table-of-contents__link toc-highlight"><em>class</em> Clock</a></li><li><a href="#class-component" class="table-of-contents__link toc-highlight"><em>class</em> Component</a></li><li><a href="#class-componentfsmfactory" class="table-of-contents__link toc-highlight"><em>class</em> ComponentFSMFactory</a></li><li><a href="#class-liveclock" class="table-of-contents__link toc-highlight"><em>class</em> LiveClock</a></li><li><a href="#class-logguard" class="table-of-contents__link toc-highlight"><em>class</em> LogGuard</a></li><li><a href="#class-logger" class="table-of-contents__link toc-highlight"><em>class</em> Logger</a></li><li><a href="#class-messagebus" class="table-of-contents__link toc-highlight"><em>class</em> MessageBus</a></li><li><a href="#class-subscription" class="table-of-contents__link toc-highlight"><em>class</em> Subscription</a></li><li><a href="#class-testclock" class="table-of-contents__link toc-highlight"><em>class</em> TestClock</a></li><li><a href="#class-throttler" class="table-of-contents__link toc-highlight"><em>class</em> Throttler</a></li><li><a href="#class-timeevent" class="table-of-contents__link toc-highlight"><em>class</em> TimeEvent</a></li><li><a href="#class-timeeventhandler" class="table-of-contents__link toc-highlight"><em>class</em> TimeEventHandler</a></li><li><a href="#component_state_from_strstr-value--componentstate" class="table-of-contents__link toc-highlight">component_state_from_str(str value) → ComponentState</a></li><li><a href="#component_state_to_strcomponentstate-value--str" class="table-of-contents__link toc-highlight">component_state_to_str(ComponentState value) → str</a></li><li><a href="#component_trigger_from_strstr-value--componenttrigger" class="table-of-contents__link toc-highlight">component_trigger_from_str(str value) → ComponentTrigger</a></li><li><a href="#component_trigger_to_strcomponenttrigger-value--str" class="table-of-contents__link toc-highlight">component_trigger_to_str(ComponentTrigger value) → str</a></li><li><a href="#create_pyo3_conversion_wrappercallback--callable" class="table-of-contents__link toc-highlight">create_pyo3_conversion_wrapper(callback) → Callable</a></li><li><a href="#deregister_component_clockuuid4-instance_id-clock-clock--void" class="table-of-contents__link toc-highlight">deregister_component_clock(UUID4 instance_id, Clock clock) → void</a></li><li><a href="#flush_logger--void" class="table-of-contents__link toc-highlight">flush_logger() → void</a></li><li><a href="#init_loggingtraderid-trader_idnone-str-machine_idnone-uuid4-instance_idnone-loglevel-level_stdoutloglevelinfo-loglevel-level_filelogleveloff-str-directorynone-str-file_namenone-str-file_formatnone-dict-component_levels-dictcomponentid-loglevel--none-bool-colorstrue-bool-bypassfalse-bool-print_configfalse-uint64_t-max_file_size0-uint32_t-max_backup_count5--logguard" class="table-of-contents__link toc-highlight">init_logging(TraderId trader_id=None, str machine_id=None, UUID4 instance_id=None, LogLevel level_stdout=LogLevel.INFO, LogLevel level_file=LogLevel.OFF, str directory=None, str file_name=None, str file_format=None, dict component_levels: dict[ComponentId, LogLevel] = None, bool colors=True, bool bypass=False, bool print_config=False, uint64_t max_file_size=0, uint32_t max_backup_count=5) → LogGuard</a></li><li><a href="#is_backtest_force_stop--bool" class="table-of-contents__link toc-highlight">is_backtest_force_stop() → bool</a></li><li><a href="#is_logging_initialized--bool" class="table-of-contents__link toc-highlight">is_logging_initialized() → bool</a></li><li><a href="#is_logging_pyo3--bool" class="table-of-contents__link toc-highlight">is_logging_pyo3() → bool</a></li><li><a href="#is_matching_pystr-topic-str-pattern--bool" class="table-of-contents__link toc-highlight">is_matching_py(str topic, str pattern) → bool</a></li><li><a href="#log_color_from_strstr-value--logcolor" class="table-of-contents__link toc-highlight">log_color_from_str(str value) → LogColor</a></li><li><a href="#log_color_to_strlogcolor-value--str" class="table-of-contents__link toc-highlight">log_color_to_str(LogColor value) → str</a></li><li><a href="#log_headertraderid-trader_id-str-machine_id-uuid4-instance_id-str-component--void" class="table-of-contents__link toc-highlight">log_header(TraderId trader_id, str machine_id, UUID4 instance_id, str component) → void</a></li><li><a href="#log_level_from_strstr-value--loglevel" class="table-of-contents__link toc-highlight">log_level_from_str(str value) → LogLevel</a></li><li><a href="#log_level_to_strloglevel-value--str" class="table-of-contents__link toc-highlight">log_level_to_str(LogLevel value) → str</a></li><li><a href="#log_sysinfostr-component--void" class="table-of-contents__link toc-highlight">log_sysinfo(str component) → void</a></li><li><a href="#register_component_clockuuid4-instance_id-clock-clock--void" class="table-of-contents__link toc-highlight">register_component_clock(UUID4 instance_id, Clock clock) → void</a></li><li><a href="#remove_instance_component_clocksuuid4-instance_id--void" class="table-of-contents__link toc-highlight">remove_instance_component_clocks(UUID4 instance_id) → void</a></li><li><a href="#set_backtest_force_stopbool-value--void" class="table-of-contents__link toc-highlight">set_backtest_force_stop(bool value) → void</a></li><li><a href="#set_logging_pyo3bool-value--void" class="table-of-contents__link toc-highlight">set_logging_pyo3(bool value) → void</a></li></ul></li><li><a href="#executor" class="table-of-contents__link toc-highlight">Executor</a><ul><li><a href="#class-taskid" class="table-of-contents__link toc-highlight"><em>class</em> TaskId</a></li><li><a href="#class-actorexecutor" class="table-of-contents__link toc-highlight"><em>class</em> ActorExecutor</a></li></ul></li><li><a href="#generators" class="table-of-contents__link toc-highlight">Generators</a><ul><li><a href="#class-clientorderidgenerator" class="table-of-contents__link toc-highlight"><em>class</em> ClientOrderIdGenerator</a></li><li><a href="#class-identifiergenerator" class="table-of-contents__link toc-highlight"><em>class</em> IdentifierGenerator</a></li><li><a href="#class-orderlistidgenerator" class="table-of-contents__link toc-highlight"><em>class</em> OrderListIdGenerator</a></li><li><a href="#class-positionidgenerator" class="table-of-contents__link toc-highlight"><em>class</em> PositionIdGenerator</a></li><li><a href="#class-instrumentprovider" class="table-of-contents__link toc-highlight"><em>class</em> InstrumentProvider</a></li></ul></li></ul></div></div></div><div class="footer-wrapper MuiBox-root css-0"><div class="social-footer-box MuiBox-root css-0"><style data-emotion="css 17rjyz3">.css-17rjyz3{-webkit-text-decoration:underline;text-decoration:underline;text-decoration-color:rgba(25, 118, 210, 0.4);padding:12px;margin-right:10px;}.css-17rjyz3:hover{text-decoration-color:inherit;}</style><style data-emotion="css jl1bw5">.css-jl1bw5{margin:0;font:inherit;color:#1976d2;-webkit-text-decoration:underline;text-decoration:underline;text-decoration-color:rgba(25, 118, 210, 0.4);padding:12px;margin-right:10px;}.css-jl1bw5:hover{text-decoration-color:inherit;}</style><a class="MuiTypography-root MuiTypography-inherit MuiLink-root MuiLink-underlineAlways github-footer css-jl1bw5" href="https://github.com/poseisysstems" target="_blank"></a><a class="MuiTypography-root MuiTypography-inherit MuiLink-root MuiLink-underlineAlways discord-footer css-jl1bw5" href="" target="_blank"></a><a class="MuiTypography-root MuiTypography-inherit MuiLink-root MuiLink-underlineAlways linkedin-footer css-jl1bw5" href="https://www.linkedin.com/company/poseitrader/" target="_blank"></a><a class="MuiTypography-root MuiTypography-inherit MuiLink-root MuiLink-underlineAlways x-footer css-jl1bw5" href="https://twitter.com/PoseiTrader" target="_blank"></a></div><div class="footer-copyright">© 2025 Posei Systems Pty Ltd. All rights reserved.</div></div></div></div></main></div></div></div></div>
</body>
</html>