<!doctype html>
<html lang="en" dir="ltr" class="docs-wrapper plugin-docs plugin-id-default docs-version-nightly docs-doc-page docs-doc-id-api_reference/config" data-has-hydrated="false">
<head>
<meta charset="UTF-8">
<meta name="generator" content="Docusaurus v3.8.1">
<title data-rh="true">Config | PoseiTrader Documentation</title><meta data-rh="true" name="viewport" content="width=device-width,initial-scale=1"><meta data-rh="true" name="twitter:card" content="summary_large_image"><meta data-rh="true" property="og:image" content="docs/latestimg/docusaurus-social-card.jpg"><meta data-rh="true" name="twitter:image" content="docs/latestimg/docusaurus-social-card.jpg"><meta data-rh="true" property="og:url" content="docs/latestnightly/api_reference/config"><meta data-rh="true" property="og:locale" content="en"><meta data-rh="true" name="docusaurus_locale" content="en"><meta data-rh="true" name="docsearch:language" content="en"><meta data-rh="true" name="keywords" content="Open-source trading platform, Algorithmic trading software, Event-driven backtesting, Live trading with no code changes, Trade any asset class, Low-latency trading execution, Python API for trading strategies, Custom market data integration, Futures and options trading, Crypto spot and derivatives trading, Equities trading simulation, FX spot trading, Sports betting markets trading, Fast backtesting strategies, Advanced trading orders, Rust-based trading platform, High-performance trading system, Nanosecond resolution market simulation, Trading across multiple venues, Trading platform for hedge funds, Seamless data integration, Customizable trading strategies, AI and ML trading strategies, Posei trading platform, Multi-venue trading, Unlimited backtesting strategies, Fast trading execution solutions, Realistic market simulations, Seamless trading API integration, PoseiTrader Documentation, Docs, PoseiTrader Docs"><meta data-rh="true" name="title" content="PoseiTrader Documentation"><meta data-rh="true" name="og:title" content="PoseiTrader Documentation"><meta data-rh="true" name="og:description" content="PoseiTrader is a high-performance platform for automating trading strategies, built on the powerful Posei framework for backtesting and real-time trading."><meta data-rh="true" name="og:image" content="img/preview.png"><meta data-rh="true" name="og:url" content="https://nautilustrader.io/docs"><meta data-rh="true" name="docusaurus_version" content="nightly"><meta data-rh="true" name="docusaurus_tag" content="docs-default-nightly"><meta data-rh="true" name="docsearch:version" content="nightly"><meta data-rh="true" name="docsearch:docusaurus_tag" content="docs-default-nightly"><meta data-rh="true" property="og:title" content="Config | PoseiTrader Documentation"><meta data-rh="true" name="description" content="Backtest"><meta data-rh="true" property="og:description" content="Backtest"><link data-rh="true" rel="icon" href="../../../img/shell.ico"><link data-rh="true" rel="canonical" href="index.htm"><link data-rh="true" rel="alternate" href="index.htm" hreflang="en"><link data-rh="true" rel="alternate" href="index.htm" hreflang="x-default"><link data-rh="true" rel="preconnect" href="https://CWRKEEL01M-dsn.algolia.net" crossorigin="anonymous"><script data-rh="true" type="application/ld+json">{"@context":"https://schema.org","@type":"BreadcrumbList","itemListElement":[{"@type":"ListItem","position":1,"name":"Python API","item":"docs/latestnightly/api_reference/"},{"@type":"ListItem","position":2,"name":"Config","item":"docs/latestnightly/api_reference/config"}]}</script><link rel="search" type="application/opensearchdescription+xml" title="PoseiTrader Documentation" href="../../../opensearch.xml">
<script>!function(){var t=window.location.pathname;if(t.startsWith("/docs")&&!t.startsWith("/docs/latest")&&!t.startsWith("/docs/nightly")){var s=t.replace("/docs","/docs/latest");window.location.href=s}}()</script>
<link rel="preconnect" href="https://www.google-analytics.com">
<link rel="preconnect" href="https://www.googletagmanager.com">
<script async src="https://www.googletagmanager.com/gtag/js?id=G-TR4XK597XK"></script>
<script>function gtag(){dataLayer.push(arguments)}window.dataLayer=window.dataLayer||[],gtag("js",new Date),gtag("config","G-TR4XK597XK",{anonymize_ip:!0})</script><link rel="stylesheet" href="../../../assets/css/styles.0f0f692e.css">
<script src="../../../assets/js/runtime~main.92b727d5.js" defer="defer"></script>
<script src="../../../assets/js/main.1cd42d85.js" defer="defer"></script>
</head>
<body class="navigation-with-keyboard">
<svg xmlns="http://www.w3.org/2000/svg" style="display: none;"><defs>
<symbol id="theme-svg-external-link" viewbox="0 0 24 24"><path fill="currentColor" d="M21 13v10h-21v-19h12v2h-10v15h17v-8h2zm3-12h-10.988l4.035 4-6.977 7.07 2.828 2.828 6.977-7.07 4.125 4.172v-11z"></path></symbol>
</defs></svg>
<script>!function(){var t="dark";var e=function(){try{return new URLSearchParams(window.location.search).get("docusaurus-theme")}catch(t){}}()||function(){try{return window.localStorage.getItem("theme")}catch(t){}}();document.documentElement.setAttribute("data-theme",e||t),document.documentElement.setAttribute("data-theme-choice",e||t)}(),function(){try{const c=new URLSearchParams(window.location.search).entries();for(var[t,e]of c)if(t.startsWith("docusaurus-data-")){var a=t.replace("docusaurus-data-","data-");document.documentElement.setAttribute(a,e)}}catch(t){}}()</script><div id="__docusaurus"><div role="region" aria-label="Skip to main content"><a class="skipToContent_fXgn" href="#__docusaurus_skipToContent_fallback">Skip to main content</a></div><nav aria-label="Main" class="theme-layout-navbar navbar navbar--fixed-top navbarHideable_m1mJ"><div class="navbar__inner"><div class="theme-layout-navbar-left navbar__items"><button aria-label="Toggle navigation bar" aria-expanded="false" class="navbar__toggle clean-btn" type="button"><svg width="30" height="30" viewbox="0 0 30 30" aria-hidden="true"><path stroke="currentColor" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" d="M4 7h22M4 15h22M4 23h22"></path></svg></button><a href="../../../../index.htm" target="_blank" rel="noopener noreferrer" class="navbar__brand"><div class="navbar__logo"><img src="../../../img/nt-black-large.webp" alt="PoseiTrader Logo" class="themedComponent_mlkZ themedComponent--light_NVdE"><img src="../../../img/nt-white-large.webp" alt="PoseiTrader Logo" class="themedComponent_mlkZ themedComponent--dark_xIcU"></div><b class="navbar__title text--truncate"></b></a><div class="navbar__item dropdown dropdown--hoverable"><a href="#" aria-haspopup="true" aria-expanded="false" role="button" class="navbar__link">Version</a><ul class="dropdown__menu"><li><a class="dropdown__link" href="../../../latest/index.html">latest</a></li><li><a aria-current="page" class="dropdown__link dropdown__link--active" href="../../index.htm">nightly</a></li></ul></div><div class="navbarSearchContainer_Bca1"><button type="button" class="DocSearch DocSearch-Button" aria-label="Search (Command+K)"><span class="DocSearch-Button-Container"><svg width="20" height="20" class="DocSearch-Search-Icon" viewbox="0 0 20 20" aria-hidden="true"><path d="M14.386 14.386l4.0877 4.0877-4.0877-4.0877c-2.9418 2.9419-7.7115 2.9419-10.6533 0-2.9419-2.9418-2.9419-7.7115 0-10.6533 2.9418-2.9419 7.7115-2.9419 10.6533 0 2.9419 2.9418 2.9419 7.7115 0 10.6533z" stroke="currentColor" fill="none" fill-rule="evenodd" stroke-linecap="round" stroke-linejoin="round"></path></svg><span class="DocSearch-Button-Placeholder">Search</span></span><span class="DocSearch-Button-Keys"></span></button></div></div><div class="theme-layout-navbar-right navbar__items navbar__items--right"><a href="https://github.com/poseisysstems" target="_blank" rel="noopener noreferrer" class="navbar__item navbar__link header-github-link common-social" aria-label="GitHub repository"></a> <a href="https://twitter.com/PoseiTrader" target="_blank" rel="noopener noreferrer" class="navbar__item navbar__link header-x-link common-social" aria-label="X"></a><div class="toggleContainer_T22x colorModeToggle_DEke"><button class="clean-btn toggleButton_yw5v toggleButtonDisabled_BJd7" type="button" disabled="" title="Switch between dark and light mode (currently light mode)" aria-label="Switch between dark and light mode (currently light mode)" aria-live="polite"><div class="switch_Ms1n"><span class="iconWrapper_FHql"><style data-emotion="css lp52so">.css-lp52so{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;width:1em;height:1em;display:inline-block;fill:currentColor;-webkit-flex-shrink:0;-ms-flex-negative:0;flex-shrink:0;-webkit-transition:fill 200ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;transition:fill 200ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;font-size:1.5rem;color:black;font-size:14px;}</style><svg class="MuiSvgIcon-root MuiSvgIcon-fontSizeMedium lightToggleIcon_SFTY css-lp52so" focusable="false" aria-hidden="true" viewbox="0 0 24 24" data-testid="LightModeIcon"><path d="M12 7c-2.76 0-5 2.24-5 5s2.24 5 5 5 5-2.24 5-5-2.24-5-5-5M2 13h2c.55 0 1-.45 1-1s-.45-1-1-1H2c-.55 0-1 .45-1 1s.45 1 1 1m18 0h2c.55 0 1-.45 1-1s-.45-1-1-1h-2c-.55 0-1 .45-1 1s.45 1 1 1M11 2v2c0 .55.45 1 1 1s1-.45 1-1V2c0-.55-.45-1-1-1s-1 .45-1 1m0 18v2c0 .55.45 1 1 1s1-.45 1-1v-2c0-.55-.45-1-1-1s-1 .45-1 1M5.99 4.58c-.39-.39-1.03-.39-1.41 0-.39.39-.39 1.03 0 1.41l1.06 1.06c.39.39 1.03.39 1.41 0s.39-1.03 0-1.41zm12.37 12.37c-.39-.39-1.03-.39-1.41 0-.39.39-.39 1.03 0 1.41l1.06 1.06c.39.39 1.03.39 1.41 0 .39-.39.39-1.03 0-1.41zm1.06-10.96c.39-.39.39-1.03 0-1.41-.39-.39-1.03-.39-1.41 0l-1.06 1.06c-.39.39-.39 1.03 0 1.41s1.03.39 1.41 0zM7.05 18.36c.39-.39.39-1.03 0-1.41-.39-.39-1.03-.39-1.41 0l-1.06 1.06c-.39.39-.39 1.03 0 1.41s1.03.39 1.41 0z"></path></svg><style data-emotion="css 13m6tje">.css-13m6tje{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;width:1em;height:1em;display:inline-block;fill:currentColor;-webkit-flex-shrink:0;-ms-flex-negative:0;flex-shrink:0;-webkit-transition:fill 200ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;transition:fill 200ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;font-size:1.5rem;color:white;font-size:14px;}</style><svg class="MuiSvgIcon-root MuiSvgIcon-fontSizeMedium darkToggleIcon_ekgs css-13m6tje" focusable="false" aria-hidden="true" viewbox="0 0 24 24" data-testid="DarkModeIcon"><path d="M12 3c-4.97 0-9 4.03-9 9s4.03 9 9 9 9-4.03 9-9c0-.46-.04-.92-.1-1.36-.98 1.37-2.58 2.26-4.4 2.26-2.98 0-5.4-2.42-5.4-5.4 0-1.81.89-3.42 2.26-4.4-.44-.06-.9-.1-1.36-.1"></path></svg></span></div></button></div></div></div><div role="presentation" class="navbar-sidebar__backdrop"></div></nav><div id="__docusaurus_skipToContent_fallback" class="theme-layout-main main-wrapper mainWrapper_z2l0"><div class="docsWrapper_hBAB"><button aria-label="Scroll back to top" class="clean-btn theme-back-to-top-button backToTopButton_sjWU" type="button"></button><div class="docRoot_UBD9"><aside class="theme-doc-sidebar-container docSidebarContainer_YfHR"><div class="sidebarViewport_aRkj"><div class="sidebar_njMd sidebarWithHideableNavbar_wUlq"><a href="../../../../index.htm" target="_blank" rel="noopener noreferrer" tabindex="-1" class="sidebarLogo_isFc"><img src="../../../img/nt-black-large.webp" alt="PoseiTrader Logo" class="themedComponent_mlkZ themedComponent--light_NVdE"><img src="../../../img/nt-white-large.webp" alt="PoseiTrader Logo" class="themedComponent_mlkZ themedComponent--dark_xIcU"><b></b></a><nav aria-label="Docs sidebar" class="menu thin-scrollbar menu_SIkG"><ul class="theme-doc-sidebar-menu menu__list"><li class="theme-doc-sidebar-item-link theme-doc-sidebar-item-link-level-1 menu__list-item"><a class="menu__link" href="../../index.htm">PoseiTrader Documentation</a></li><li class="theme-doc-sidebar-item-category theme-doc-sidebar-item-category-level-1 menu__list-item menu__list-item--collapsed"><div class="menu__list-item-collapsible"><a class="menu__link menu__link--sublist" href="../../getting_started/index.htm">Getting Started</a><button aria-label="Expand sidebar category &#x27;Getting Started&#x27;" aria-expanded="false" type="button" class="clean-btn menu__caret"></button></div></li><li class="theme-doc-sidebar-item-category theme-doc-sidebar-item-category-level-1 menu__list-item menu__list-item--collapsed"><div class="menu__list-item-collapsible"><a class="menu__link menu__link--sublist" href="../../concepts/index.htm">Concepts</a><button aria-label="Expand sidebar category &#x27;Concepts&#x27;" aria-expanded="false" type="button" class="clean-btn menu__caret"></button></div></li><li class="theme-doc-sidebar-item-category theme-doc-sidebar-item-category-level-1 menu__list-item menu__list-item--collapsed"><div class="menu__list-item-collapsible"><a class="menu__link menu__link--sublist" href="../../tutorials/index.htm">Tutorials</a><button aria-label="Expand sidebar category &#x27;Tutorials&#x27;" aria-expanded="false" type="button" class="clean-btn menu__caret"></button></div></li><li class="theme-doc-sidebar-item-category theme-doc-sidebar-item-category-level-1 menu__list-item menu__list-item--collapsed"><div class="menu__list-item-collapsible"><a class="menu__link menu__link--sublist" href="../../integrations/index.htm">Integrations</a><button aria-label="Expand sidebar category &#x27;Integrations&#x27;" aria-expanded="false" type="button" class="clean-btn menu__caret"></button></div></li><li class="theme-doc-sidebar-item-category theme-doc-sidebar-item-category-level-1 menu__list-item"><div class="menu__list-item-collapsible"><a class="menu__link menu__link--sublist menu__link--active" href="../index.htm">Python API</a><button aria-label="Collapse sidebar category &#x27;Python API&#x27;" aria-expanded="true" type="button" class="clean-btn menu__caret"></button></div><ul class="menu__list"><li class="theme-doc-sidebar-item-link theme-doc-sidebar-item-link-level-2 menu__list-item"><a class="menu__link" tabindex="0" href="../accounting/index.htm">Accounting</a></li><li class="theme-doc-sidebar-item-category theme-doc-sidebar-item-category-level-2 menu__list-item menu__list-item--collapsed"><div class="menu__list-item-collapsible"><a class="menu__link menu__link--sublist" tabindex="0" href="../adapters/index.htm">Adapters</a><button aria-label="Expand sidebar category &#x27;Adapters&#x27;" aria-expanded="false" type="button" class="clean-btn menu__caret"></button></div></li><li class="theme-doc-sidebar-item-link theme-doc-sidebar-item-link-level-2 menu__list-item"><a class="menu__link" tabindex="0" href="../analysis/index.htm">Analysis</a></li><li class="theme-doc-sidebar-item-link theme-doc-sidebar-item-link-level-2 menu__list-item"><a class="menu__link" tabindex="0" href="../backtest/index.htm">Backtest</a></li><li class="theme-doc-sidebar-item-link theme-doc-sidebar-item-link-level-2 menu__list-item"><a class="menu__link" tabindex="0" href="../cache/index.htm">Cache</a></li><li class="theme-doc-sidebar-item-link theme-doc-sidebar-item-link-level-2 menu__list-item"><a class="menu__link" tabindex="0" href="../common/index.htm">Common</a></li><li class="theme-doc-sidebar-item-link theme-doc-sidebar-item-link-level-2 menu__list-item"><a class="menu__link menu__link--active" aria-current="page" tabindex="0" href="index.htm">Config</a></li><li class="theme-doc-sidebar-item-link theme-doc-sidebar-item-link-level-2 menu__list-item"><a class="menu__link" tabindex="0" href="../core/index.htm">Core</a></li><li class="theme-doc-sidebar-item-link theme-doc-sidebar-item-link-level-2 menu__list-item"><a class="menu__link" tabindex="0" href="../data/index.htm">Data</a></li><li class="theme-doc-sidebar-item-link theme-doc-sidebar-item-link-level-2 menu__list-item"><a class="menu__link" tabindex="0" href="../execution/index.htm">Execution</a></li><li class="theme-doc-sidebar-item-link theme-doc-sidebar-item-link-level-2 menu__list-item"><a class="menu__link" tabindex="0" href="../indicators/index.htm">Indicators</a></li><li class="theme-doc-sidebar-item-link theme-doc-sidebar-item-link-level-2 menu__list-item"><a class="menu__link" tabindex="0" href="../live/index.htm">Live</a></li><li class="theme-doc-sidebar-item-category theme-doc-sidebar-item-category-level-2 menu__list-item menu__list-item--collapsed"><div class="menu__list-item-collapsible"><a class="menu__link menu__link--sublist" tabindex="0" href="../model/index.htm">Model</a><button aria-label="Expand sidebar category &#x27;Model&#x27;" aria-expanded="false" type="button" class="clean-btn menu__caret"></button></div></li><li class="theme-doc-sidebar-item-link theme-doc-sidebar-item-link-level-2 menu__list-item"><a class="menu__link" tabindex="0" href="../persistence/index.htm">Persistence</a></li><li class="theme-doc-sidebar-item-link theme-doc-sidebar-item-link-level-2 menu__list-item"><a class="menu__link" tabindex="0" href="../portfolio/index.htm">Portfolio</a></li><li class="theme-doc-sidebar-item-link theme-doc-sidebar-item-link-level-2 menu__list-item"><a class="menu__link" tabindex="0" href="../risk/index.htm">Risk</a></li><li class="theme-doc-sidebar-item-link theme-doc-sidebar-item-link-level-2 menu__list-item"><a class="menu__link" tabindex="0" href="../serialization/index.htm">Serialization</a></li><li class="theme-doc-sidebar-item-link theme-doc-sidebar-item-link-level-2 menu__list-item"><a class="menu__link" tabindex="0" href="../system/index.htm">System</a></li><li class="theme-doc-sidebar-item-link theme-doc-sidebar-item-link-level-2 menu__list-item"><a class="menu__link" tabindex="0" href="../trading/index.htm">Trading</a></li></ul></li><li class="theme-doc-sidebar-item-link theme-doc-sidebar-item-link-level-1 menu__list-item"><a href="../../../core-nightly/index.html" target="_blank" rel="noopener noreferrer" class="menu__link menuExternalLink_NmtK">Rust API<svg width="13.5" height="13.5" aria-hidden="true" class="iconExternalLink_nPIU"><use href="#theme-svg-external-link"></use></svg></a></li><li class="theme-doc-sidebar-item-category theme-doc-sidebar-item-category-level-1 menu__list-item menu__list-item--collapsed"><div class="menu__list-item-collapsible"><a class="menu__link menu__link--sublist" href="../../developer_guide/index.htm">Developer Guide</a><button aria-label="Expand sidebar category &#x27;Developer Guide&#x27;" aria-expanded="false" type="button" class="clean-btn menu__caret"></button></div></li></ul></nav></div></div></aside><main class="docMainContainer_TBSr"><div class="container padding-top--md padding-bottom--lg"><div><div class="row"><div class="col docItemCol_VOVn"><div class="docItemContainer_Djhp"><article><nav class="theme-doc-breadcrumbs breadcrumbsContainer_Z_bl" aria-label="Breadcrumbs"><ul class="breadcrumbs"><li class="breadcrumbs__item"><a class="breadcrumbs__link" href="../index.htm"><span>Python API</span></a></li><li class="breadcrumbs__item breadcrumbs__item--active"><span class="breadcrumbs__link">Config</span></li></ul></nav><span class="theme-doc-version-badge badge badge--secondary">Version: nightly</span><div class="tocCollapsible_ETCw theme-doc-toc-mobile tocMobile_ITEo"><button type="button" class="clean-btn tocCollapsibleButton_TO0P">On this page</button></div><div class="theme-doc-markdown markdown"><header><h1>Config</h1></header>
<h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="backtest">Backtest<a href="#backtest" class="hash-link" aria-label="Direct link to Backtest" title="Direct link to Backtest">​</a></h2>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="parse_filters_exprs-str--none">parse_filters_expr(s: str | None)<a href="#parse_filters_exprs-str--none" class="hash-link" aria-label="Direct link to parse_filters_expr(s: str | None)" title="Direct link to parse_filters_expr(s: str | None)">​</a></h3>
<p>Parse a pyarrow.dataset filter expression from a string.</p>
<div class="language-pycon codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9CDCFE;--prism-background-color:#1E1E1E"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-pycon codeBlock_bY9V thin-scrollbar" style="color:#9CDCFE;background-color:#1E1E1E"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9CDCFE"><span class="token plain">&gt;&gt;&gt; parse_filters_expr(&#x27;field(&quot;Currency&quot;) == &quot;CHF&quot;&#x27;)</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">&lt;pyarrow.dataset.Expression (Currency == &quot;CHF&quot;)&gt;</span><br></span></code></pre></div></div>
<div class="language-pycon codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9CDCFE;--prism-background-color:#1E1E1E"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-pycon codeBlock_bY9V thin-scrollbar" style="color:#9CDCFE;background-color:#1E1E1E"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9CDCFE"><span class="token plain">&gt;&gt;&gt; parse_filters_expr(&quot;print(&#x27;hello&#x27;)&quot;)</span><br></span></code></pre></div></div>
<div class="language-pycon codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9CDCFE;--prism-background-color:#1E1E1E"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-pycon codeBlock_bY9V thin-scrollbar" style="color:#9CDCFE;background-color:#1E1E1E"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9CDCFE"><span class="token plain">&gt;&gt;&gt; parse_filters_expr(&quot;None&quot;)</span><br></span></code></pre></div></div>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="class-backtestvenueconfig"><em>class</em> BacktestVenueConfig<a href="#class-backtestvenueconfig" class="hash-link" aria-label="Direct link to class-backtestvenueconfig" title="Direct link to class-backtestvenueconfig">​</a></h3>
<p>Bases: <a href="#posei_trader.common.config.PoseiConfig"><code>PoseiConfig</code></a></p>
<p>Represents a venue configuration for one specific backtest engine.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>name</strong> (<em>str</em>) – The name of the venue.</li>
<li><strong>oms_type</strong> (<em>str</em>) – The order management system type for the exchange. If <code>HEDGING</code> will
generate new position IDs.</li>
<li><strong>account_type</strong> (<em>str</em>) – The account type for the exchange.</li>
<li><strong>starting_balances</strong> (<em>list</em> <em>[</em><a href="../model/index.htm#posei_trader.model.Money"><em>Money</em></a> <em>|</em> <em>str</em> <em>]</em>) – The starting account balances (specify one for a single asset account).</li>
<li><strong>base_currency</strong> (<a href="../model/index.htm#posei_trader.model.Currency"><em>Currency</em></a> <em>|</em> <em>str</em> <em>,</em> <em>optional</em>) – The account base currency for the exchange. Use <code>None</code> for multi-currency accounts.</li>
<li><strong>default_leverage</strong> (<em>float</em> <em>,</em> <em>optional</em>) – The account default leverage (for margin accounts).</li>
<li><strong>leverages</strong> (<em>dict</em> *[*<em>str</em> <em>,</em> <em>float</em> <em>]</em> <em>,</em> <em>optional</em>) – The instrument specific leverage configuration (for margin accounts).</li>
<li><strong>book_type</strong> (<em>str</em>) – The default order book type.</li>
<li><strong>routing</strong> (<em>bool</em> <em>,</em> <em>default False</em>) – If multi-venue routing should be enabled for the execution client.</li>
<li><strong>frozen_account</strong> (<em>bool</em> <em>,</em> <em>default False</em>) – If the account for this exchange is frozen (balances will not change).</li>
<li><strong>reject_stop_orders</strong> (<em>bool</em> <em>,</em> <em>default True</em>) – If stop orders are rejected on submission if trigger price is in the market.</li>
<li><strong>support_gtd_orders</strong> (<em>bool</em> <em>,</em> <em>default True</em>) – If orders with GTD time in force will be supported by the venue.</li>
<li><strong>support_contingent_orders</strong> (<em>bool</em> <em>,</em> <em>default True</em>) – If contingent orders will be supported/respected by the venue.
If False, then it’s expected the strategy will be managing any contingent orders.</li>
<li><strong>use_position_ids</strong> (<em>bool</em> <em>,</em> <em>default True</em>) – If venue position IDs will be generated on order fills.</li>
<li><strong>use_random_ids</strong> (<em>bool</em> <em>,</em> <em>default False</em>) – If all venue generated identifiers will be random UUID4’s.</li>
<li><strong>use_reduce_only</strong> (<em>bool</em> <em>,</em> <em>default True</em>) – If the reduce_only execution instruction on orders will be honored.</li>
<li><strong>bar_execution</strong> (<em>bool</em> <em>,</em> <em>default True</em>) – If bars should be processed by the matching engine(s) (and move the market).</li>
<li><strong>bar_adaptive_high_low_ordering</strong> (<em>bool</em> <em>,</em> <em>default False</em>) – Determines whether the processing order of bar prices is adaptive based on a heuristic.
This setting is only relevant when bar_execution is True.
If False, bar prices are always processed in the fixed order: Open, High, Low, Close.
If True, the processing order adapts with the heuristic:
<ul>
<li>If High is closer to Open than Low then the processing order is Open, High, Low, Close.</li>
<li>If Low is closer to Open than High then the processing order is Open, Low, High, Close.</li>
</ul>
</li>
<li><strong>trade_execution</strong> (<em>bool</em> <em>,</em> <em>default False</em>) – If trades should be processed by the matching engine(s) (and move the market).</li>
<li><strong>modules</strong> (<em>list</em> <em>[</em><a href="#posei_trader.common.config.ImportableActorConfig"><em>ImportableActorConfig</em></a> <em>]</em> <em>,</em> <em>optional</em>) – The simulation modules for the venue.</li>
<li><strong>fill_model</strong> (<a href="#posei_trader.backtest.config.ImportableFillModelConfig"><em>ImportableFillModelConfig</em></a> <em>,</em> <em>optional</em>) – The fill model for the venue.</li>
<li><strong>latency_model</strong> (<a href="#posei_trader.backtest.config.ImportableLatencyModelConfig"><em>ImportableLatencyModelConfig</em></a> <em>,</em> <em>optional</em>) – The latency model for the venue.</li>
<li><strong>fee_model</strong> (<a href="#posei_trader.backtest.config.ImportableFeeModelConfig"><em>ImportableFeeModelConfig</em></a> <em>,</em> <em>optional</em>) – The fee model for the venue.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="name--str">name <em>: str</em><a href="#name--str" class="hash-link" aria-label="Direct link to name--str" title="Direct link to name--str">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="oms_type--str">oms_type <em>: str</em><a href="#oms_type--str" class="hash-link" aria-label="Direct link to oms_type--str" title="Direct link to oms_type--str">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="account_type--str">account_type <em>: str</em><a href="#account_type--str" class="hash-link" aria-label="Direct link to account_type--str" title="Direct link to account_type--str">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="starting_balances--liststr">starting_balances <em>: list[str]</em><a href="#starting_balances--liststr" class="hash-link" aria-label="Direct link to starting_balances--liststr" title="Direct link to starting_balances--liststr">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="base_currency--str--none">base_currency <em>: str | None</em><a href="#base_currency--str--none" class="hash-link" aria-label="Direct link to base_currency--str--none" title="Direct link to base_currency--str--none">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="default_leverage--float">default_leverage <em>: float</em><a href="#default_leverage--float" class="hash-link" aria-label="Direct link to default_leverage--float" title="Direct link to default_leverage--float">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="leverages--dictstr-float--none">leverages <em>: dict[str, float] | None</em><a href="#leverages--dictstr-float--none" class="hash-link" aria-label="Direct link to leverages--dictstr-float--none" title="Direct link to leverages--dictstr-float--none">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="book_type--str">book_type <em>: str</em><a href="#book_type--str" class="hash-link" aria-label="Direct link to book_type--str" title="Direct link to book_type--str">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="routing--bool">routing <em>: bool</em><a href="#routing--bool" class="hash-link" aria-label="Direct link to routing--bool" title="Direct link to routing--bool">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="frozen_account--bool">frozen_account <em>: bool</em><a href="#frozen_account--bool" class="hash-link" aria-label="Direct link to frozen_account--bool" title="Direct link to frozen_account--bool">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="reject_stop_orders--bool">reject_stop_orders <em>: bool</em><a href="#reject_stop_orders--bool" class="hash-link" aria-label="Direct link to reject_stop_orders--bool" title="Direct link to reject_stop_orders--bool">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="support_gtd_orders--bool">support_gtd_orders <em>: bool</em><a href="#support_gtd_orders--bool" class="hash-link" aria-label="Direct link to support_gtd_orders--bool" title="Direct link to support_gtd_orders--bool">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="support_contingent_orders--bool">support_contingent_orders <em>: bool</em><a href="#support_contingent_orders--bool" class="hash-link" aria-label="Direct link to support_contingent_orders--bool" title="Direct link to support_contingent_orders--bool">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="use_position_ids--bool">use_position_ids <em>: bool</em><a href="#use_position_ids--bool" class="hash-link" aria-label="Direct link to use_position_ids--bool" title="Direct link to use_position_ids--bool">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="use_random_ids--bool">use_random_ids <em>: bool</em><a href="#use_random_ids--bool" class="hash-link" aria-label="Direct link to use_random_ids--bool" title="Direct link to use_random_ids--bool">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="use_reduce_only--bool">use_reduce_only <em>: bool</em><a href="#use_reduce_only--bool" class="hash-link" aria-label="Direct link to use_reduce_only--bool" title="Direct link to use_reduce_only--bool">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="bar_execution--bool">bar_execution <em>: bool</em><a href="#bar_execution--bool" class="hash-link" aria-label="Direct link to bar_execution--bool" title="Direct link to bar_execution--bool">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="bar_adaptive_high_low_ordering--bool">bar_adaptive_high_low_ordering <em>: bool</em><a href="#bar_adaptive_high_low_ordering--bool" class="hash-link" aria-label="Direct link to bar_adaptive_high_low_ordering--bool" title="Direct link to bar_adaptive_high_low_ordering--bool">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="trade_execution--bool">trade_execution <em>: bool</em><a href="#trade_execution--bool" class="hash-link" aria-label="Direct link to trade_execution--bool" title="Direct link to trade_execution--bool">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="modules--listimportableactorconfig--none">modules <em>: list[<a href="#posei_trader.common.config.ImportableActorConfig">ImportableActorConfig</a>] | None</em><a href="#modules--listimportableactorconfig--none" class="hash-link" aria-label="Direct link to modules--listimportableactorconfig--none" title="Direct link to modules--listimportableactorconfig--none">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="fill_model--importablefillmodelconfig--none">fill_model <em>: <a href="#posei_trader.backtest.config.ImportableFillModelConfig">ImportableFillModelConfig</a> | None</em><a href="#fill_model--importablefillmodelconfig--none" class="hash-link" aria-label="Direct link to fill_model--importablefillmodelconfig--none" title="Direct link to fill_model--importablefillmodelconfig--none">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="latency_model--importablelatencymodelconfig--none">latency_model <em>: <a href="#posei_trader.backtest.config.ImportableLatencyModelConfig">ImportableLatencyModelConfig</a> | None</em><a href="#latency_model--importablelatencymodelconfig--none" class="hash-link" aria-label="Direct link to latency_model--importablelatencymodelconfig--none" title="Direct link to latency_model--importablelatencymodelconfig--none">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="fee_model--importablefeemodelconfig--none">fee_model <em>: <a href="#posei_trader.backtest.config.ImportableFeeModelConfig">ImportableFeeModelConfig</a> | None</em><a href="#fee_model--importablefeemodelconfig--none" class="hash-link" aria-label="Direct link to fee_model--importablefeemodelconfig--none" title="Direct link to fee_model--importablefeemodelconfig--none">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="dict--dictstr-any">dict() → dict[str, Any]<a href="#dict--dictstr-any" class="hash-link" aria-label="Direct link to dict() → dict[str, Any]" title="Direct link to dict() → dict[str, Any]">​</a></h4>
<p>Return a dictionary representation of the configuration.</p>
<ul>
<li><strong>Return type:</strong>
dict[str, Any]</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="classmethod-fully_qualified_name--str"><em>classmethod</em> fully_qualified_name() → str<a href="#classmethod-fully_qualified_name--str" class="hash-link" aria-label="Direct link to classmethod-fully_qualified_name--str" title="Direct link to classmethod-fully_qualified_name--str">​</a></h4>
<p>Return the fully qualified name for the PoseiConfig class.</p>
<ul>
<li><strong>Return type:</strong>
str</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="property-id--str"><em>property</em> id <em>: str</em><a href="#property-id--str" class="hash-link" aria-label="Direct link to property-id--str" title="Direct link to property-id--str">​</a></h4>
<p>Return the hashed identifier for the configuration.</p>
<ul>
<li><strong>Return type:</strong>
str</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="json--bytes">json() → bytes<a href="#json--bytes" class="hash-link" aria-label="Direct link to json() → bytes" title="Direct link to json() → bytes">​</a></h4>
<p>Return serialized JSON encoded bytes.</p>
<ul>
<li><strong>Return type:</strong>
bytes</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="json_primitives--dictstr-any">json_primitives() → dict[str, Any]<a href="#json_primitives--dictstr-any" class="hash-link" aria-label="Direct link to json_primitives() → dict[str, Any]" title="Direct link to json_primitives() → dict[str, Any]">​</a></h4>
<p>Return a dictionary representation of the configuration with JSON primitive
types as values.</p>
<ul>
<li><strong>Return type:</strong>
dict[str, Any]</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="classmethod-json_schema--dictstr-any"><em>classmethod</em> json_schema() → dict[str, Any]<a href="#classmethod-json_schema--dictstr-any" class="hash-link" aria-label="Direct link to classmethod-json_schema--dictstr-any" title="Direct link to classmethod-json_schema--dictstr-any">​</a></h4>
<p>Generate a JSON schema for this configuration class.</p>
<ul>
<li><strong>Return type:</strong>
dict[str, Any]</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="classmethod-parseraw-bytes--str--any"><em>classmethod</em> parse(raw: bytes | str) → Any<a href="#classmethod-parseraw-bytes--str--any" class="hash-link" aria-label="Direct link to classmethod-parseraw-bytes--str--any" title="Direct link to classmethod-parseraw-bytes--str--any">​</a></h4>
<p>Return a decoded object of the given cls.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>cls</strong> (<em>type</em>) – The type to decode to.</li>
<li><strong>raw</strong> (<em>bytes</em> <em>or</em> <em>str</em>) – The raw bytes or JSON string to decode.</li>
</ul>
</li>
<li><strong>Return type:</strong>
Any</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="validate--bool">validate() → bool<a href="#validate--bool" class="hash-link" aria-label="Direct link to validate() → bool" title="Direct link to validate() → bool">​</a></h4>
<p>Return whether the configuration can be represented as valid JSON.</p>
<ul>
<li><strong>Return type:</strong>
bool</li>
</ul>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="class-backtestdataconfig"><em>class</em> BacktestDataConfig<a href="#class-backtestdataconfig" class="hash-link" aria-label="Direct link to class-backtestdataconfig" title="Direct link to class-backtestdataconfig">​</a></h3>
<p>Bases: <a href="#posei_trader.common.config.PoseiConfig"><code>PoseiConfig</code></a></p>
<p>Represents the data configuration for one specific backtest run.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>catalog_path</strong> (<em>str</em>) – The path to the data catalog.</li>
<li><strong>data_cls</strong> (<em>str</em>) – The data type for the configuration.</li>
<li><strong>catalog_fs_protocol</strong> (<em>str</em> <em>,</em> <em>optional</em>) – The fsspec filesystem protocol for the catalog.</li>
<li><strong>catalog_fs_storage_options</strong> (<em>dict</em> <em>,</em> <em>optional</em>) – The fsspec storage options.</li>
<li><strong>instrument_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.InstrumentId"><em>InstrumentId</em></a> <em>|</em> <em>str</em> <em>,</em> <em>optional</em>) – The instrument ID for the data configuration.</li>
<li><strong>start_time</strong> (<em>str</em> <em>or</em> <em>int</em> <em>,</em> <em>optional</em>) – The start time for the data configuration.
Can be an ISO 8601 format datetime string, or UNIX nanoseconds integer.</li>
<li><strong>end_time</strong> (<em>str</em> <em>or</em> <em>int</em> <em>,</em> <em>optional</em>) – The end time for the data configuration.
Can be an ISO 8601 format datetime string, or UNIX nanoseconds integer.</li>
<li><strong>filter_expr</strong> (<em>str</em> <em>,</em> <em>optional</em>) – The additional filter expressions for the data catalog query.</li>
<li><strong>client_id</strong> (<em>str</em> <em>,</em> <em>optional</em>) – The client ID for the data configuration.</li>
<li><strong>metadata</strong> (<em>dict</em> <em>or</em> <em>callable</em> <em>,</em> <em>optional</em>) – The metadata for the data catalog query.</li>
<li><strong>bar_spec</strong> (<a href="../model/data/index.htm#posei_trader.model.data.BarSpecification"><em>BarSpecification</em></a> <em>|</em> <em>str</em> <em>,</em> <em>optional</em>) – The bar specification for the data catalog query.</li>
<li><strong>instrument_ids</strong> (<em>list</em> <em>[</em><a href="../model/identifiers/index.htm#posei_trader.model.identifiers.InstrumentId"><em>InstrumentId</em></a> <em>|</em> <em>str</em> <em>]</em> <em>,</em> <em>optional</em>) – The instrument IDs for the data catalog query.
Can be used if instrument_id is not specified.
If bar_spec is specified an equivalent list of bar_types will be constructed.</li>
<li><strong>bar_types</strong> (<em>list</em> <em>[</em><a href="../model/data/index.htm#posei_trader.model.data.BarType"><em>BarType</em></a> <em>|</em> <em>str</em> <em>]</em> <em>,</em> <em>optional</em>) – The bar types for the data catalog query.
Can be used if instrument_id is not specified.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="catalog_path--str">catalog_path <em>: str</em><a href="#catalog_path--str" class="hash-link" aria-label="Direct link to catalog_path--str" title="Direct link to catalog_path--str">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="data_cls--str">data_cls <em>: str</em><a href="#data_cls--str" class="hash-link" aria-label="Direct link to data_cls--str" title="Direct link to data_cls--str">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="catalog_fs_protocol--str--none">catalog_fs_protocol <em>: str | None</em><a href="#catalog_fs_protocol--str--none" class="hash-link" aria-label="Direct link to catalog_fs_protocol--str--none" title="Direct link to catalog_fs_protocol--str--none">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="catalog_fs_storage_options--dict--none">catalog_fs_storage_options <em>: dict | None</em><a href="#catalog_fs_storage_options--dict--none" class="hash-link" aria-label="Direct link to catalog_fs_storage_options--dict--none" title="Direct link to catalog_fs_storage_options--dict--none">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="instrument_id--instrumentid--none">instrument_id <em>: <a href="../model/identifiers/index.htm#posei_trader.model.identifiers.InstrumentId">InstrumentId</a> | None</em><a href="#instrument_id--instrumentid--none" class="hash-link" aria-label="Direct link to instrument_id--instrumentid--none" title="Direct link to instrument_id--instrumentid--none">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="start_time--str--int--none">start_time <em>: str | int | None</em><a href="#start_time--str--int--none" class="hash-link" aria-label="Direct link to start_time--str--int--none" title="Direct link to start_time--str--int--none">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="end_time--str--int--none">end_time <em>: str | int | None</em><a href="#end_time--str--int--none" class="hash-link" aria-label="Direct link to end_time--str--int--none" title="Direct link to end_time--str--int--none">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="filter_expr--str--none">filter_expr <em>: str | None</em><a href="#filter_expr--str--none" class="hash-link" aria-label="Direct link to filter_expr--str--none" title="Direct link to filter_expr--str--none">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="client_id--str--none">client_id <em>: str | None</em><a href="#client_id--str--none" class="hash-link" aria-label="Direct link to client_id--str--none" title="Direct link to client_id--str--none">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="metadata--dict--any--none">metadata <em>: dict | Any | None</em><a href="#metadata--dict--any--none" class="hash-link" aria-label="Direct link to metadata--dict--any--none" title="Direct link to metadata--dict--any--none">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="bar_spec--str--none">bar_spec <em>: str | None</em><a href="#bar_spec--str--none" class="hash-link" aria-label="Direct link to bar_spec--str--none" title="Direct link to bar_spec--str--none">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="instrument_ids--liststr--none">instrument_ids <em>: list[str] | None</em><a href="#instrument_ids--liststr--none" class="hash-link" aria-label="Direct link to instrument_ids--liststr--none" title="Direct link to instrument_ids--liststr--none">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="bar_types--liststr--none">bar_types <em>: list[str] | None</em><a href="#bar_types--liststr--none" class="hash-link" aria-label="Direct link to bar_types--liststr--none" title="Direct link to bar_types--liststr--none">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="property-data_type--type"><em>property</em> data_type <em>: type</em><a href="#property-data_type--type" class="hash-link" aria-label="Direct link to property-data_type--type" title="Direct link to property-data_type--type">​</a></h4>
<p>Return a type for the specified data_cls for the configuration.</p>
<ul>
<li><strong>Return type:</strong>
type</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="property-query--dictstr-any"><em>property</em> query <em>: dict[str, Any]</em><a href="#property-query--dictstr-any" class="hash-link" aria-label="Direct link to property-query--dictstr-any" title="Direct link to property-query--dictstr-any">​</a></h4>
<p>Return a catalog query object for the configuration.</p>
<ul>
<li><strong>Return type:</strong>
dict[str, Any]</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="property-start_time_nanos--int"><em>property</em> start_time_nanos <em>: int</em><a href="#property-start_time_nanos--int" class="hash-link" aria-label="Direct link to property-start_time_nanos--int" title="Direct link to property-start_time_nanos--int">​</a></h4>
<p>Return the data configuration start time in UNIX nanoseconds.</p>
<p>Will be zero if no start_time was specified.</p>
<ul>
<li><strong>Return type:</strong>
int</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="property-end_time_nanos--int"><em>property</em> end_time_nanos <em>: int</em><a href="#property-end_time_nanos--int" class="hash-link" aria-label="Direct link to property-end_time_nanos--int" title="Direct link to property-end_time_nanos--int">​</a></h4>
<p>Return the data configuration end time in UNIX nanoseconds.</p>
<p>Will be sys.maxsize if no end_time was specified.</p>
<ul>
<li><strong>Return type:</strong>
int</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="dict--dictstr-any-1">dict() → dict[str, Any]<a href="#dict--dictstr-any-1" class="hash-link" aria-label="Direct link to dict() → dict[str, Any]" title="Direct link to dict() → dict[str, Any]">​</a></h4>
<p>Return a dictionary representation of the configuration.</p>
<ul>
<li><strong>Return type:</strong>
dict[str, Any]</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="classmethod-fully_qualified_name--str-1"><em>classmethod</em> fully_qualified_name() → str<a href="#classmethod-fully_qualified_name--str-1" class="hash-link" aria-label="Direct link to classmethod-fully_qualified_name--str-1" title="Direct link to classmethod-fully_qualified_name--str-1">​</a></h4>
<p>Return the fully qualified name for the PoseiConfig class.</p>
<ul>
<li><strong>Return type:</strong>
str</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="property-id--str-1"><em>property</em> id <em>: str</em><a href="#property-id--str-1" class="hash-link" aria-label="Direct link to property-id--str-1" title="Direct link to property-id--str-1">​</a></h4>
<p>Return the hashed identifier for the configuration.</p>
<ul>
<li><strong>Return type:</strong>
str</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="json--bytes-1">json() → bytes<a href="#json--bytes-1" class="hash-link" aria-label="Direct link to json() → bytes" title="Direct link to json() → bytes">​</a></h4>
<p>Return serialized JSON encoded bytes.</p>
<ul>
<li><strong>Return type:</strong>
bytes</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="json_primitives--dictstr-any-1">json_primitives() → dict[str, Any]<a href="#json_primitives--dictstr-any-1" class="hash-link" aria-label="Direct link to json_primitives() → dict[str, Any]" title="Direct link to json_primitives() → dict[str, Any]">​</a></h4>
<p>Return a dictionary representation of the configuration with JSON primitive
types as values.</p>
<ul>
<li><strong>Return type:</strong>
dict[str, Any]</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="classmethod-json_schema--dictstr-any-1"><em>classmethod</em> json_schema() → dict[str, Any]<a href="#classmethod-json_schema--dictstr-any-1" class="hash-link" aria-label="Direct link to classmethod-json_schema--dictstr-any-1" title="Direct link to classmethod-json_schema--dictstr-any-1">​</a></h4>
<p>Generate a JSON schema for this configuration class.</p>
<ul>
<li><strong>Return type:</strong>
dict[str, Any]</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="classmethod-parseraw-bytes--str--any-1"><em>classmethod</em> parse(raw: bytes | str) → Any<a href="#classmethod-parseraw-bytes--str--any-1" class="hash-link" aria-label="Direct link to classmethod-parseraw-bytes--str--any-1" title="Direct link to classmethod-parseraw-bytes--str--any-1">​</a></h4>
<p>Return a decoded object of the given cls.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>cls</strong> (<em>type</em>) – The type to decode to.</li>
<li><strong>raw</strong> (<em>bytes</em> <em>or</em> <em>str</em>) – The raw bytes or JSON string to decode.</li>
</ul>
</li>
<li><strong>Return type:</strong>
Any</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="validate--bool-1">validate() → bool<a href="#validate--bool-1" class="hash-link" aria-label="Direct link to validate() → bool" title="Direct link to validate() → bool">​</a></h4>
<p>Return whether the configuration can be represented as valid JSON.</p>
<ul>
<li><strong>Return type:</strong>
bool</li>
</ul>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="class-backtestengineconfig"><em>class</em> BacktestEngineConfig<a href="#class-backtestengineconfig" class="hash-link" aria-label="Direct link to class-backtestengineconfig" title="Direct link to class-backtestengineconfig">​</a></h3>
<p>Bases: <a href="#posei_trader.system.config.PoseiKernelConfig"><code>PoseiKernelConfig</code></a></p>
<p>Configuration for <code>BacktestEngine</code> instances.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>trader_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.TraderId"><em>TraderId</em></a>) – The trader ID for the node (must be a name and ID tag separated by a hyphen).</li>
<li><strong>log_level</strong> (<em>str</em> <em>,</em> <em>default &quot;INFO&quot;</em>) – The stdout log level for the node.</li>
<li><strong>loop_debug</strong> (<em>bool</em> <em>,</em> <em>default False</em>) – If the asyncio event loop should be in debug mode.</li>
<li><strong>cache</strong> (<a href="#posei_trader.cache.config.CacheConfig"><em>CacheConfig</em></a> <em>,</em> <em>optional</em>) – The cache configuration.</li>
<li><strong>data_engine</strong> (<a href="#posei_trader.data.config.DataEngineConfig"><em>DataEngineConfig</em></a> <em>,</em> <em>optional</em>) – The live data engine configuration.</li>
<li><strong>risk_engine</strong> (<a href="#posei_trader.risk.config.RiskEngineConfig"><em>RiskEngineConfig</em></a> <em>,</em> <em>optional</em>) – The live risk engine configuration.</li>
<li><strong>exec_engine</strong> (<a href="#posei_trader.execution.config.ExecEngineConfig"><em>ExecEngineConfig</em></a> <em>,</em> <em>optional</em>) – The live execution engine configuration.</li>
<li><strong>streaming</strong> (<a href="#posei_trader.persistence.config.StreamingConfig"><em>StreamingConfig</em></a> <em>,</em> <em>optional</em>) – The configuration for streaming to feather files.</li>
<li><strong>strategies</strong> (<em>list</em> <em>[</em><a href="#posei_trader.trading.config.ImportableStrategyConfig"><em>ImportableStrategyConfig</em></a> <em>]</em>) – The strategy configurations for the kernel.</li>
<li><strong>actors</strong> (<em>list</em> <em>[</em><a href="#posei_trader.common.config.ImportableActorConfig"><em>ImportableActorConfig</em></a> <em>]</em>) – The actor configurations for the kernel.</li>
<li><strong>exec_algorithms</strong> (<em>list</em> <em>[</em><a href="#posei_trader.execution.config.ImportableExecAlgorithmConfig"><em>ImportableExecAlgorithmConfig</em></a> <em>]</em>) – The execution algorithm configurations for the kernel.</li>
<li><strong>controller</strong> (<a href="#posei_trader.trading.config.ImportableControllerConfig"><em>ImportableControllerConfig</em></a> <em>,</em> <em>optional</em>) – The trader controller for the kernel.</li>
<li><strong>load_state</strong> (<em>bool</em> <em>,</em> <em>default True</em>) – If trading strategy state should be loaded from the database on start.</li>
<li><strong>save_state</strong> (<em>bool</em> <em>,</em> <em>default True</em>) – If trading strategy state should be saved to the database on stop.</li>
<li><strong>bypass_logging</strong> (<em>bool</em> <em>,</em> <em>default False</em>) – If logging should be bypassed.</li>
<li><strong>run_analysis</strong> (<em>bool</em> <em>,</em> <em>default True</em>) – If post backtest performance analysis should be run.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="environment--environment">environment <em>: <a href="../common/index.htm#posei_trader.common.Environment">Environment</a></em><a href="#environment--environment" class="hash-link" aria-label="Direct link to environment--environment" title="Direct link to environment--environment">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="trader_id--traderid">trader_id <em>: <a href="../model/identifiers/index.htm#posei_trader.model.identifiers.TraderId">TraderId</a></em><a href="#trader_id--traderid" class="hash-link" aria-label="Direct link to trader_id--traderid" title="Direct link to trader_id--traderid">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="data_engine--dataengineconfig">data_engine <em>: <a href="#posei_trader.data.config.DataEngineConfig">DataEngineConfig</a></em><a href="#data_engine--dataengineconfig" class="hash-link" aria-label="Direct link to data_engine--dataengineconfig" title="Direct link to data_engine--dataengineconfig">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="risk_engine--riskengineconfig">risk_engine <em>: <a href="#posei_trader.risk.config.RiskEngineConfig">RiskEngineConfig</a></em><a href="#risk_engine--riskengineconfig" class="hash-link" aria-label="Direct link to risk_engine--riskengineconfig" title="Direct link to risk_engine--riskengineconfig">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="exec_engine--execengineconfig">exec_engine <em>: <a href="#posei_trader.execution.config.ExecEngineConfig">ExecEngineConfig</a></em><a href="#exec_engine--execengineconfig" class="hash-link" aria-label="Direct link to exec_engine--execengineconfig" title="Direct link to exec_engine--execengineconfig">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="run_analysis--bool">run_analysis <em>: bool</em><a href="#run_analysis--bool" class="hash-link" aria-label="Direct link to run_analysis--bool" title="Direct link to run_analysis--bool">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="actors--listimportableactorconfig">actors <em>: list[<a href="#posei_trader.common.config.ImportableActorConfig">ImportableActorConfig</a>]</em><a href="#actors--listimportableactorconfig" class="hash-link" aria-label="Direct link to actors--listimportableactorconfig" title="Direct link to actors--listimportableactorconfig">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="cache--cacheconfig--none">cache <em>: <a href="#posei_trader.cache.config.CacheConfig">CacheConfig</a> | None</em><a href="#cache--cacheconfig--none" class="hash-link" aria-label="Direct link to cache--cacheconfig--none" title="Direct link to cache--cacheconfig--none">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="catalogs--listdatacatalogconfig">catalogs <em>: list[<a href="#posei_trader.persistence.config.DataCatalogConfig">DataCatalogConfig</a>]</em><a href="#catalogs--listdatacatalogconfig" class="hash-link" aria-label="Direct link to catalogs--listdatacatalogconfig" title="Direct link to catalogs--listdatacatalogconfig">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="controller--importablecontrollerconfig--none">controller <em>: <a href="#posei_trader.trading.config.ImportableControllerConfig">ImportableControllerConfig</a> | None</em><a href="#controller--importablecontrollerconfig--none" class="hash-link" aria-label="Direct link to controller--importablecontrollerconfig--none" title="Direct link to controller--importablecontrollerconfig--none">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="dict--dictstr-any-2">dict() → dict[str, Any]<a href="#dict--dictstr-any-2" class="hash-link" aria-label="Direct link to dict() → dict[str, Any]" title="Direct link to dict() → dict[str, Any]">​</a></h4>
<p>Return a dictionary representation of the configuration.</p>
<ul>
<li><strong>Return type:</strong>
dict[str, Any]</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="emulator--orderemulatorconfig--none">emulator <em>: <a href="#posei_trader.common.config.OrderEmulatorConfig">OrderEmulatorConfig</a> | None</em><a href="#emulator--orderemulatorconfig--none" class="hash-link" aria-label="Direct link to emulator--orderemulatorconfig--none" title="Direct link to emulator--orderemulatorconfig--none">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="exec_algorithms--listimportableexecalgorithmconfig">exec_algorithms <em>: list[<a href="#posei_trader.execution.config.ImportableExecAlgorithmConfig">ImportableExecAlgorithmConfig</a>]</em><a href="#exec_algorithms--listimportableexecalgorithmconfig" class="hash-link" aria-label="Direct link to exec_algorithms--listimportableexecalgorithmconfig" title="Direct link to exec_algorithms--listimportableexecalgorithmconfig">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="classmethod-fully_qualified_name--str-2"><em>classmethod</em> fully_qualified_name() → str<a href="#classmethod-fully_qualified_name--str-2" class="hash-link" aria-label="Direct link to classmethod-fully_qualified_name--str-2" title="Direct link to classmethod-fully_qualified_name--str-2">​</a></h4>
<p>Return the fully qualified name for the PoseiConfig class.</p>
<ul>
<li><strong>Return type:</strong>
str</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="property-id--str-2"><em>property</em> id <em>: str</em><a href="#property-id--str-2" class="hash-link" aria-label="Direct link to property-id--str-2" title="Direct link to property-id--str-2">​</a></h4>
<p>Return the hashed identifier for the configuration.</p>
<ul>
<li><strong>Return type:</strong>
str</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="instance_id--uuid4--none">instance_id <em>: <a href="../core/index.htm#posei_trader.core.UUID4">UUID4</a> | None</em><a href="#instance_id--uuid4--none" class="hash-link" aria-label="Direct link to instance_id--uuid4--none" title="Direct link to instance_id--uuid4--none">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="json--bytes-2">json() → bytes<a href="#json--bytes-2" class="hash-link" aria-label="Direct link to json() → bytes" title="Direct link to json() → bytes">​</a></h4>
<p>Return serialized JSON encoded bytes.</p>
<ul>
<li><strong>Return type:</strong>
bytes</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="json_primitives--dictstr-any-2">json_primitives() → dict[str, Any]<a href="#json_primitives--dictstr-any-2" class="hash-link" aria-label="Direct link to json_primitives() → dict[str, Any]" title="Direct link to json_primitives() → dict[str, Any]">​</a></h4>
<p>Return a dictionary representation of the configuration with JSON primitive
types as values.</p>
<ul>
<li><strong>Return type:</strong>
dict[str, Any]</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="classmethod-json_schema--dictstr-any-2"><em>classmethod</em> json_schema() → dict[str, Any]<a href="#classmethod-json_schema--dictstr-any-2" class="hash-link" aria-label="Direct link to classmethod-json_schema--dictstr-any-2" title="Direct link to classmethod-json_schema--dictstr-any-2">​</a></h4>
<p>Generate a JSON schema for this configuration class.</p>
<ul>
<li><strong>Return type:</strong>
dict[str, Any]</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="load_state--bool">load_state <em>: bool</em><a href="#load_state--bool" class="hash-link" aria-label="Direct link to load_state--bool" title="Direct link to load_state--bool">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="logging--loggingconfig--none">logging <em>: <a href="#posei_trader.common.config.LoggingConfig">LoggingConfig</a> | None</em><a href="#logging--loggingconfig--none" class="hash-link" aria-label="Direct link to logging--loggingconfig--none" title="Direct link to logging--loggingconfig--none">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="loop_debug--bool">loop_debug <em>: bool</em><a href="#loop_debug--bool" class="hash-link" aria-label="Direct link to loop_debug--bool" title="Direct link to loop_debug--bool">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="message_bus--messagebusconfig--none">message_bus <em>: <a href="#posei_trader.common.config.MessageBusConfig">MessageBusConfig</a> | None</em><a href="#message_bus--messagebusconfig--none" class="hash-link" aria-label="Direct link to message_bus--messagebusconfig--none" title="Direct link to message_bus--messagebusconfig--none">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="classmethod-parseraw-bytes--str--any-2"><em>classmethod</em> parse(raw: bytes | str) → Any<a href="#classmethod-parseraw-bytes--str--any-2" class="hash-link" aria-label="Direct link to classmethod-parseraw-bytes--str--any-2" title="Direct link to classmethod-parseraw-bytes--str--any-2">​</a></h4>
<p>Return a decoded object of the given cls.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>cls</strong> (<em>type</em>) – The type to decode to.</li>
<li><strong>raw</strong> (<em>bytes</em> <em>or</em> <em>str</em>) – The raw bytes or JSON string to decode.</li>
</ul>
</li>
<li><strong>Return type:</strong>
Any</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="portfolio--portfolioconfig--none">portfolio <em>: PortfolioConfig | None</em><a href="#portfolio--portfolioconfig--none" class="hash-link" aria-label="Direct link to portfolio--portfolioconfig--none" title="Direct link to portfolio--portfolioconfig--none">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="save_state--bool">save_state <em>: bool</em><a href="#save_state--bool" class="hash-link" aria-label="Direct link to save_state--bool" title="Direct link to save_state--bool">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="strategies--listimportablestrategyconfig">strategies <em>: list[<a href="#posei_trader.trading.config.ImportableStrategyConfig">ImportableStrategyConfig</a>]</em><a href="#strategies--listimportablestrategyconfig" class="hash-link" aria-label="Direct link to strategies--listimportablestrategyconfig" title="Direct link to strategies--listimportablestrategyconfig">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="streaming--streamingconfig--none">streaming <em>: <a href="#posei_trader.persistence.config.StreamingConfig">StreamingConfig</a> | None</em><a href="#streaming--streamingconfig--none" class="hash-link" aria-label="Direct link to streaming--streamingconfig--none" title="Direct link to streaming--streamingconfig--none">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="timeout_connection--positivefloat">timeout_connection <em>: PositiveFloat</em><a href="#timeout_connection--positivefloat" class="hash-link" aria-label="Direct link to timeout_connection--positivefloat" title="Direct link to timeout_connection--positivefloat">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="timeout_disconnection--positivefloat">timeout_disconnection <em>: PositiveFloat</em><a href="#timeout_disconnection--positivefloat" class="hash-link" aria-label="Direct link to timeout_disconnection--positivefloat" title="Direct link to timeout_disconnection--positivefloat">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="timeout_portfolio--positivefloat">timeout_portfolio <em>: PositiveFloat</em><a href="#timeout_portfolio--positivefloat" class="hash-link" aria-label="Direct link to timeout_portfolio--positivefloat" title="Direct link to timeout_portfolio--positivefloat">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="timeout_post_stop--positivefloat">timeout_post_stop <em>: PositiveFloat</em><a href="#timeout_post_stop--positivefloat" class="hash-link" aria-label="Direct link to timeout_post_stop--positivefloat" title="Direct link to timeout_post_stop--positivefloat">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="timeout_reconciliation--positivefloat">timeout_reconciliation <em>: PositiveFloat</em><a href="#timeout_reconciliation--positivefloat" class="hash-link" aria-label="Direct link to timeout_reconciliation--positivefloat" title="Direct link to timeout_reconciliation--positivefloat">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="timeout_shutdown--positivefloat">timeout_shutdown <em>: PositiveFloat</em><a href="#timeout_shutdown--positivefloat" class="hash-link" aria-label="Direct link to timeout_shutdown--positivefloat" title="Direct link to timeout_shutdown--positivefloat">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="validate--bool-2">validate() → bool<a href="#validate--bool-2" class="hash-link" aria-label="Direct link to validate() → bool" title="Direct link to validate() → bool">​</a></h4>
<p>Return whether the configuration can be represented as valid JSON.</p>
<ul>
<li><strong>Return type:</strong>
bool</li>
</ul>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="class-backtestrunconfig"><em>class</em> BacktestRunConfig<a href="#class-backtestrunconfig" class="hash-link" aria-label="Direct link to class-backtestrunconfig" title="Direct link to class-backtestrunconfig">​</a></h3>
<p>Bases: <a href="#posei_trader.common.config.PoseiConfig"><code>PoseiConfig</code></a></p>
<p>Represents the configuration for one specific backtest run.</p>
<p>This includes a backtest engine with its actors and strategies, with the
external inputs of venues and data.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>venues</strong> (<em>list</em> <em>[</em><a href="#posei_trader.backtest.config.BacktestVenueConfig"><em>BacktestVenueConfig</em></a> <em>]</em>) – The venue configurations for the backtest run.</li>
<li><strong>data</strong> (<em>list</em> <em>[</em><a href="#posei_trader.backtest.config.BacktestDataConfig"><em>BacktestDataConfig</em></a> <em>]</em>) – The data configurations for the backtest run.</li>
<li><strong>engine</strong> (<a href="#posei_trader.backtest.config.BacktestEngineConfig"><em>BacktestEngineConfig</em></a>) – The backtest engine configuration (the core system kernel).</li>
<li><strong>chunk_size</strong> (<em>int</em> <em>,</em> <em>optional</em>) – The number of data points to process in each chunk during streaming mode.
If None, the backtest will run without streaming, loading all data at once.</li>
<li><strong>raise_exception</strong> (<em>bool</em> <em>,</em> <em>default False</em>) – If exceptions during an engine build or run should be raised to interrupt the nodes process.</li>
<li><strong>dispose_on_completion</strong> (<em>bool</em> <em>,</em> <em>default True</em>) – If the backtest engine should be disposed on completion of the run.
If True, then will drop data and all state.
If False, then will <em>only</em> drop data.</li>
<li><strong>start</strong> (<em>datetime</em> <em>or</em> <em>str</em> <em>or</em> <em>int</em> <em>,</em> <em>optional</em>) – The start datetime (UTC) for the backtest run.
If <code>None</code> engine runs from the start of the data.</li>
<li><strong>end</strong> (<em>datetime</em> <em>or</em> <em>str</em> <em>or</em> <em>int</em> <em>,</em> <em>optional</em>) – The end datetime (UTC) for the backtest run.
If <code>None</code> engine runs to the end of the data.</li>
<li><strong>data_clients</strong> (<em>dict</em> *[*<em>str</em> <em>,</em> <em>type</em> <em>[</em><a href="#posei_trader.live.config.LiveDataClientConfig"><em>LiveDataClientConfig</em></a> <em>]</em> <em>]</em> <em>,</em> <em>optional</em>) – The data clients configuration for the backtest run.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="venues--listbacktestvenueconfig">venues <em>: list[<a href="#posei_trader.backtest.config.BacktestVenueConfig">BacktestVenueConfig</a>]</em><a href="#venues--listbacktestvenueconfig" class="hash-link" aria-label="Direct link to venues--listbacktestvenueconfig" title="Direct link to venues--listbacktestvenueconfig">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="data--listbacktestdataconfig">data <em>: list[<a href="#posei_trader.backtest.config.BacktestDataConfig">BacktestDataConfig</a>]</em><a href="#data--listbacktestdataconfig" class="hash-link" aria-label="Direct link to data--listbacktestdataconfig" title="Direct link to data--listbacktestdataconfig">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="engine--backtestengineconfig--none">engine <em>: <a href="#posei_trader.backtest.config.BacktestEngineConfig">BacktestEngineConfig</a> | None</em><a href="#engine--backtestengineconfig--none" class="hash-link" aria-label="Direct link to engine--backtestengineconfig--none" title="Direct link to engine--backtestengineconfig--none">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="chunk_size--int--none">chunk_size <em>: int | None</em><a href="#chunk_size--int--none" class="hash-link" aria-label="Direct link to chunk_size--int--none" title="Direct link to chunk_size--int--none">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="raise_exception--bool">raise_exception <em>: bool</em><a href="#raise_exception--bool" class="hash-link" aria-label="Direct link to raise_exception--bool" title="Direct link to raise_exception--bool">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="dispose_on_completion--bool">dispose_on_completion <em>: bool</em><a href="#dispose_on_completion--bool" class="hash-link" aria-label="Direct link to dispose_on_completion--bool" title="Direct link to dispose_on_completion--bool">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="start--str--int--none">start <em>: str | int | None</em><a href="#start--str--int--none" class="hash-link" aria-label="Direct link to start--str--int--none" title="Direct link to start--str--int--none">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="end--str--int--none">end <em>: str | int | None</em><a href="#end--str--int--none" class="hash-link" aria-label="Direct link to end--str--int--none" title="Direct link to end--str--int--none">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="data_clients--dictstr-typelivedataclientconfig--none">data_clients <em>: dict[str, type[<a href="#posei_trader.live.config.LiveDataClientConfig">LiveDataClientConfig</a>]] | None</em><a href="#data_clients--dictstr-typelivedataclientconfig--none" class="hash-link" aria-label="Direct link to data_clients--dictstr-typelivedataclientconfig--none" title="Direct link to data_clients--dictstr-typelivedataclientconfig--none">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="dict--dictstr-any-3">dict() → dict[str, Any]<a href="#dict--dictstr-any-3" class="hash-link" aria-label="Direct link to dict() → dict[str, Any]" title="Direct link to dict() → dict[str, Any]">​</a></h4>
<p>Return a dictionary representation of the configuration.</p>
<ul>
<li><strong>Return type:</strong>
dict[str, Any]</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="classmethod-fully_qualified_name--str-3"><em>classmethod</em> fully_qualified_name() → str<a href="#classmethod-fully_qualified_name--str-3" class="hash-link" aria-label="Direct link to classmethod-fully_qualified_name--str-3" title="Direct link to classmethod-fully_qualified_name--str-3">​</a></h4>
<p>Return the fully qualified name for the PoseiConfig class.</p>
<ul>
<li><strong>Return type:</strong>
str</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="property-id--str-3"><em>property</em> id <em>: str</em><a href="#property-id--str-3" class="hash-link" aria-label="Direct link to property-id--str-3" title="Direct link to property-id--str-3">​</a></h4>
<p>Return the hashed identifier for the configuration.</p>
<ul>
<li><strong>Return type:</strong>
str</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="json--bytes-3">json() → bytes<a href="#json--bytes-3" class="hash-link" aria-label="Direct link to json() → bytes" title="Direct link to json() → bytes">​</a></h4>
<p>Return serialized JSON encoded bytes.</p>
<ul>
<li><strong>Return type:</strong>
bytes</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="json_primitives--dictstr-any-3">json_primitives() → dict[str, Any]<a href="#json_primitives--dictstr-any-3" class="hash-link" aria-label="Direct link to json_primitives() → dict[str, Any]" title="Direct link to json_primitives() → dict[str, Any]">​</a></h4>
<p>Return a dictionary representation of the configuration with JSON primitive
types as values.</p>
<ul>
<li><strong>Return type:</strong>
dict[str, Any]</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="classmethod-json_schema--dictstr-any-3"><em>classmethod</em> json_schema() → dict[str, Any]<a href="#classmethod-json_schema--dictstr-any-3" class="hash-link" aria-label="Direct link to classmethod-json_schema--dictstr-any-3" title="Direct link to classmethod-json_schema--dictstr-any-3">​</a></h4>
<p>Generate a JSON schema for this configuration class.</p>
<ul>
<li><strong>Return type:</strong>
dict[str, Any]</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="classmethod-parseraw-bytes--str--any-3"><em>classmethod</em> parse(raw: bytes | str) → Any<a href="#classmethod-parseraw-bytes--str--any-3" class="hash-link" aria-label="Direct link to classmethod-parseraw-bytes--str--any-3" title="Direct link to classmethod-parseraw-bytes--str--any-3">​</a></h4>
<p>Return a decoded object of the given cls.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>cls</strong> (<em>type</em>) – The type to decode to.</li>
<li><strong>raw</strong> (<em>bytes</em> <em>or</em> <em>str</em>) – The raw bytes or JSON string to decode.</li>
</ul>
</li>
<li><strong>Return type:</strong>
Any</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="validate--bool-3">validate() → bool<a href="#validate--bool-3" class="hash-link" aria-label="Direct link to validate() → bool" title="Direct link to validate() → bool">​</a></h4>
<p>Return whether the configuration can be represented as valid JSON.</p>
<ul>
<li><strong>Return type:</strong>
bool</li>
</ul>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="class-simulationmoduleconfig"><em>class</em> SimulationModuleConfig<a href="#class-simulationmoduleconfig" class="hash-link" aria-label="Direct link to class-simulationmoduleconfig" title="Direct link to class-simulationmoduleconfig">​</a></h3>
<p>Bases: <a href="#posei_trader.common.config.ActorConfig"><code>ActorConfig</code></a></p>
<p>Configuration for <code>SimulationModule</code> instances.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="component_id--componentid--none">component_id <em>: <a href="../model/identifiers/index.htm#posei_trader.model.identifiers.ComponentId">ComponentId</a> | None</em><a href="#component_id--componentid--none" class="hash-link" aria-label="Direct link to component_id--componentid--none" title="Direct link to component_id--componentid--none">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="dict--dictstr-any-4">dict() → dict[str, Any]<a href="#dict--dictstr-any-4" class="hash-link" aria-label="Direct link to dict() → dict[str, Any]" title="Direct link to dict() → dict[str, Any]">​</a></h4>
<p>Return a dictionary representation of the configuration.</p>
<ul>
<li><strong>Return type:</strong>
dict[str, Any]</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="classmethod-fully_qualified_name--str-4"><em>classmethod</em> fully_qualified_name() → str<a href="#classmethod-fully_qualified_name--str-4" class="hash-link" aria-label="Direct link to classmethod-fully_qualified_name--str-4" title="Direct link to classmethod-fully_qualified_name--str-4">​</a></h4>
<p>Return the fully qualified name for the PoseiConfig class.</p>
<ul>
<li><strong>Return type:</strong>
str</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="property-id--str-4"><em>property</em> id <em>: str</em><a href="#property-id--str-4" class="hash-link" aria-label="Direct link to property-id--str-4" title="Direct link to property-id--str-4">​</a></h4>
<p>Return the hashed identifier for the configuration.</p>
<ul>
<li><strong>Return type:</strong>
str</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="json--bytes-4">json() → bytes<a href="#json--bytes-4" class="hash-link" aria-label="Direct link to json() → bytes" title="Direct link to json() → bytes">​</a></h4>
<p>Return serialized JSON encoded bytes.</p>
<ul>
<li><strong>Return type:</strong>
bytes</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="json_primitives--dictstr-any-4">json_primitives() → dict[str, Any]<a href="#json_primitives--dictstr-any-4" class="hash-link" aria-label="Direct link to json_primitives() → dict[str, Any]" title="Direct link to json_primitives() → dict[str, Any]">​</a></h4>
<p>Return a dictionary representation of the configuration with JSON primitive
types as values.</p>
<ul>
<li><strong>Return type:</strong>
dict[str, Any]</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="classmethod-json_schema--dictstr-any-4"><em>classmethod</em> json_schema() → dict[str, Any]<a href="#classmethod-json_schema--dictstr-any-4" class="hash-link" aria-label="Direct link to classmethod-json_schema--dictstr-any-4" title="Direct link to classmethod-json_schema--dictstr-any-4">​</a></h4>
<p>Generate a JSON schema for this configuration class.</p>
<ul>
<li><strong>Return type:</strong>
dict[str, Any]</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="log_commands--bool">log_commands <em>: bool</em><a href="#log_commands--bool" class="hash-link" aria-label="Direct link to log_commands--bool" title="Direct link to log_commands--bool">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="log_events--bool">log_events <em>: bool</em><a href="#log_events--bool" class="hash-link" aria-label="Direct link to log_events--bool" title="Direct link to log_events--bool">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="classmethod-parseraw-bytes--str--any-4"><em>classmethod</em> parse(raw: bytes | str) → Any<a href="#classmethod-parseraw-bytes--str--any-4" class="hash-link" aria-label="Direct link to classmethod-parseraw-bytes--str--any-4" title="Direct link to classmethod-parseraw-bytes--str--any-4">​</a></h4>
<p>Return a decoded object of the given cls.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>cls</strong> (<em>type</em>) – The type to decode to.</li>
<li><strong>raw</strong> (<em>bytes</em> <em>or</em> <em>str</em>) – The raw bytes or JSON string to decode.</li>
</ul>
</li>
<li><strong>Return type:</strong>
Any</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="validate--bool-4">validate() → bool<a href="#validate--bool-4" class="hash-link" aria-label="Direct link to validate() → bool" title="Direct link to validate() → bool">​</a></h4>
<p>Return whether the configuration can be represented as valid JSON.</p>
<ul>
<li><strong>Return type:</strong>
bool</li>
</ul>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="class-fillmodelconfig"><em>class</em> FillModelConfig<a href="#class-fillmodelconfig" class="hash-link" aria-label="Direct link to class-fillmodelconfig" title="Direct link to class-fillmodelconfig">​</a></h3>
<p>Bases: <a href="#posei_trader.common.config.PoseiConfig"><code>PoseiConfig</code></a></p>
<p>Configuration for <code>FillModel</code> instances.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>prob_fill_on_limit</strong> (<em>float</em> <em>,</em> <em>default 1.0</em>) – The probability of limit order filling if the market rests on its price.</li>
<li><strong>prob_fill_on_stop</strong> (<em>float</em> <em>,</em> <em>default 1.0</em>) – The probability of stop orders filling if the market rests on its price.</li>
<li><strong>prob_slippage</strong> (<em>float</em> <em>,</em> <em>default 0.0</em>) – The probability of order fill prices slipping by one tick.</li>
<li><strong>random_seed</strong> (<em>int</em> <em>,</em> <em>optional</em>) – The random seed (if None then no random seed).</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="prob_fill_on_limit--float">prob_fill_on_limit <em>: float</em><a href="#prob_fill_on_limit--float" class="hash-link" aria-label="Direct link to prob_fill_on_limit--float" title="Direct link to prob_fill_on_limit--float">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="prob_fill_on_stop--float">prob_fill_on_stop <em>: float</em><a href="#prob_fill_on_stop--float" class="hash-link" aria-label="Direct link to prob_fill_on_stop--float" title="Direct link to prob_fill_on_stop--float">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="prob_slippage--float">prob_slippage <em>: float</em><a href="#prob_slippage--float" class="hash-link" aria-label="Direct link to prob_slippage--float" title="Direct link to prob_slippage--float">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="random_seed--int--none">random_seed <em>: int | None</em><a href="#random_seed--int--none" class="hash-link" aria-label="Direct link to random_seed--int--none" title="Direct link to random_seed--int--none">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="dict--dictstr-any-5">dict() → dict[str, Any]<a href="#dict--dictstr-any-5" class="hash-link" aria-label="Direct link to dict() → dict[str, Any]" title="Direct link to dict() → dict[str, Any]">​</a></h4>
<p>Return a dictionary representation of the configuration.</p>
<ul>
<li><strong>Return type:</strong>
dict[str, Any]</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="classmethod-fully_qualified_name--str-5"><em>classmethod</em> fully_qualified_name() → str<a href="#classmethod-fully_qualified_name--str-5" class="hash-link" aria-label="Direct link to classmethod-fully_qualified_name--str-5" title="Direct link to classmethod-fully_qualified_name--str-5">​</a></h4>
<p>Return the fully qualified name for the PoseiConfig class.</p>
<ul>
<li><strong>Return type:</strong>
str</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="property-id--str-5"><em>property</em> id <em>: str</em><a href="#property-id--str-5" class="hash-link" aria-label="Direct link to property-id--str-5" title="Direct link to property-id--str-5">​</a></h4>
<p>Return the hashed identifier for the configuration.</p>
<ul>
<li><strong>Return type:</strong>
str</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="json--bytes-5">json() → bytes<a href="#json--bytes-5" class="hash-link" aria-label="Direct link to json() → bytes" title="Direct link to json() → bytes">​</a></h4>
<p>Return serialized JSON encoded bytes.</p>
<ul>
<li><strong>Return type:</strong>
bytes</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="json_primitives--dictstr-any-5">json_primitives() → dict[str, Any]<a href="#json_primitives--dictstr-any-5" class="hash-link" aria-label="Direct link to json_primitives() → dict[str, Any]" title="Direct link to json_primitives() → dict[str, Any]">​</a></h4>
<p>Return a dictionary representation of the configuration with JSON primitive
types as values.</p>
<ul>
<li><strong>Return type:</strong>
dict[str, Any]</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="classmethod-json_schema--dictstr-any-5"><em>classmethod</em> json_schema() → dict[str, Any]<a href="#classmethod-json_schema--dictstr-any-5" class="hash-link" aria-label="Direct link to classmethod-json_schema--dictstr-any-5" title="Direct link to classmethod-json_schema--dictstr-any-5">​</a></h4>
<p>Generate a JSON schema for this configuration class.</p>
<ul>
<li><strong>Return type:</strong>
dict[str, Any]</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="classmethod-parseraw-bytes--str--any-5"><em>classmethod</em> parse(raw: bytes | str) → Any<a href="#classmethod-parseraw-bytes--str--any-5" class="hash-link" aria-label="Direct link to classmethod-parseraw-bytes--str--any-5" title="Direct link to classmethod-parseraw-bytes--str--any-5">​</a></h4>
<p>Return a decoded object of the given cls.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>cls</strong> (<em>type</em>) – The type to decode to.</li>
<li><strong>raw</strong> (<em>bytes</em> <em>or</em> <em>str</em>) – The raw bytes or JSON string to decode.</li>
</ul>
</li>
<li><strong>Return type:</strong>
Any</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="validate--bool-5">validate() → bool<a href="#validate--bool-5" class="hash-link" aria-label="Direct link to validate() → bool" title="Direct link to validate() → bool">​</a></h4>
<p>Return whether the configuration can be represented as valid JSON.</p>
<ul>
<li><strong>Return type:</strong>
bool</li>
</ul>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="class-importablefillmodelconfig"><em>class</em> ImportableFillModelConfig<a href="#class-importablefillmodelconfig" class="hash-link" aria-label="Direct link to class-importablefillmodelconfig" title="Direct link to class-importablefillmodelconfig">​</a></h3>
<p>Bases: <a href="#posei_trader.common.config.PoseiConfig"><code>PoseiConfig</code></a></p>
<p>Configuration for a fill model instance.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>fill_model_path</strong> (<em>str</em>) – The fully qualified name of the fill model class.</li>
<li><strong>config_path</strong> (<em>str</em>) – The fully qualified name of the config class.</li>
<li><strong>config</strong> (<em>dict</em> *[*<em>str</em> <em>,</em> <em>Any</em> <em>]</em>) – The fill model configuration.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="fill_model_path--str">fill_model_path <em>: str</em><a href="#fill_model_path--str" class="hash-link" aria-label="Direct link to fill_model_path--str" title="Direct link to fill_model_path--str">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="config_path--str">config_path <em>: str</em><a href="#config_path--str" class="hash-link" aria-label="Direct link to config_path--str" title="Direct link to config_path--str">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="config--dictstr-any">config <em>: dict[str, Any]</em><a href="#config--dictstr-any" class="hash-link" aria-label="Direct link to config--dictstr-any" title="Direct link to config--dictstr-any">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="dict--dictstr-any-6">dict() → dict[str, Any]<a href="#dict--dictstr-any-6" class="hash-link" aria-label="Direct link to dict() → dict[str, Any]" title="Direct link to dict() → dict[str, Any]">​</a></h4>
<p>Return a dictionary representation of the configuration.</p>
<ul>
<li><strong>Return type:</strong>
dict[str, Any]</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="classmethod-fully_qualified_name--str-6"><em>classmethod</em> fully_qualified_name() → str<a href="#classmethod-fully_qualified_name--str-6" class="hash-link" aria-label="Direct link to classmethod-fully_qualified_name--str-6" title="Direct link to classmethod-fully_qualified_name--str-6">​</a></h4>
<p>Return the fully qualified name for the PoseiConfig class.</p>
<ul>
<li><strong>Return type:</strong>
str</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="property-id--str-6"><em>property</em> id <em>: str</em><a href="#property-id--str-6" class="hash-link" aria-label="Direct link to property-id--str-6" title="Direct link to property-id--str-6">​</a></h4>
<p>Return the hashed identifier for the configuration.</p>
<ul>
<li><strong>Return type:</strong>
str</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="json--bytes-6">json() → bytes<a href="#json--bytes-6" class="hash-link" aria-label="Direct link to json() → bytes" title="Direct link to json() → bytes">​</a></h4>
<p>Return serialized JSON encoded bytes.</p>
<ul>
<li><strong>Return type:</strong>
bytes</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="json_primitives--dictstr-any-6">json_primitives() → dict[str, Any]<a href="#json_primitives--dictstr-any-6" class="hash-link" aria-label="Direct link to json_primitives() → dict[str, Any]" title="Direct link to json_primitives() → dict[str, Any]">​</a></h4>
<p>Return a dictionary representation of the configuration with JSON primitive
types as values.</p>
<ul>
<li><strong>Return type:</strong>
dict[str, Any]</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="classmethod-json_schema--dictstr-any-6"><em>classmethod</em> json_schema() → dict[str, Any]<a href="#classmethod-json_schema--dictstr-any-6" class="hash-link" aria-label="Direct link to classmethod-json_schema--dictstr-any-6" title="Direct link to classmethod-json_schema--dictstr-any-6">​</a></h4>
<p>Generate a JSON schema for this configuration class.</p>
<ul>
<li><strong>Return type:</strong>
dict[str, Any]</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="classmethod-parseraw-bytes--str--any-6"><em>classmethod</em> parse(raw: bytes | str) → Any<a href="#classmethod-parseraw-bytes--str--any-6" class="hash-link" aria-label="Direct link to classmethod-parseraw-bytes--str--any-6" title="Direct link to classmethod-parseraw-bytes--str--any-6">​</a></h4>
<p>Return a decoded object of the given cls.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>cls</strong> (<em>type</em>) – The type to decode to.</li>
<li><strong>raw</strong> (<em>bytes</em> <em>or</em> <em>str</em>) – The raw bytes or JSON string to decode.</li>
</ul>
</li>
<li><strong>Return type:</strong>
Any</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="validate--bool-6">validate() → bool<a href="#validate--bool-6" class="hash-link" aria-label="Direct link to validate() → bool" title="Direct link to validate() → bool">​</a></h4>
<p>Return whether the configuration can be represented as valid JSON.</p>
<ul>
<li><strong>Return type:</strong>
bool</li>
</ul>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="class-fillmodelfactory"><em>class</em> FillModelFactory<a href="#class-fillmodelfactory" class="hash-link" aria-label="Direct link to class-fillmodelfactory" title="Direct link to class-fillmodelfactory">​</a></h3>
<p>Bases: <code>object</code></p>
<p>Provides fill model creation from importable configurations.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="static-createconfig-importablefillmodelconfig"><em>static</em> create(config: <a href="#posei_trader.backtest.config.ImportableFillModelConfig">ImportableFillModelConfig</a>)<a href="#static-createconfig-importablefillmodelconfig" class="hash-link" aria-label="Direct link to static-createconfig-importablefillmodelconfig" title="Direct link to static-createconfig-importablefillmodelconfig">​</a></h4>
<p>Create a fill model from the given configuration.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>config</strong> (<a href="#posei_trader.backtest.config.ImportableFillModelConfig"><em>ImportableFillModelConfig</em></a>) – The configuration for the building step.</li>
<li><strong>Return type:</strong>
<a href="../backtest/index.htm#posei_trader.backtest.models.FillModel">FillModel</a></li>
<li><strong>Raises:</strong>
<strong>TypeError</strong> – If config is not of type ImportableFillModelConfig.</li>
</ul>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="class-latencymodelconfig"><em>class</em> LatencyModelConfig<a href="#class-latencymodelconfig" class="hash-link" aria-label="Direct link to class-latencymodelconfig" title="Direct link to class-latencymodelconfig">​</a></h3>
<p>Bases: <a href="#posei_trader.common.config.PoseiConfig"><code>PoseiConfig</code></a></p>
<p>Configuration for <code>LatencyModel</code> instances.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>base_latency_nanos</strong> (<em>int</em> <em>,</em> <em>default 1_000_000_000</em>) – The base latency (nanoseconds) for the model.</li>
<li><strong>insert_latency_nanos</strong> (<em>int</em> <em>,</em> <em>default 0</em>) – The order insert latency (nanoseconds) for the model.</li>
<li><strong>update_latency_nanos</strong> (<em>int</em> <em>,</em> <em>default 0</em>) – The order update latency (nanoseconds) for the model.</li>
<li><strong>cancel_latency_nanos</strong> (<em>int</em> <em>,</em> <em>default 0</em>) – The order cancel latency (nanoseconds) for the model.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="base_latency_nanos--annotatedint-msgspecmetage0">base_latency_nanos <em>: Annotated[int, msgspec.Meta(ge=0)]</em><a href="#base_latency_nanos--annotatedint-msgspecmetage0" class="hash-link" aria-label="Direct link to base_latency_nanos--annotatedint-msgspecmetage0" title="Direct link to base_latency_nanos--annotatedint-msgspecmetage0">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="insert_latency_nanos--annotatedint-msgspecmetage0">insert_latency_nanos <em>: Annotated[int, msgspec.Meta(ge=0)]</em><a href="#insert_latency_nanos--annotatedint-msgspecmetage0" class="hash-link" aria-label="Direct link to insert_latency_nanos--annotatedint-msgspecmetage0" title="Direct link to insert_latency_nanos--annotatedint-msgspecmetage0">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="update_latency_nanos--annotatedint-msgspecmetage0">update_latency_nanos <em>: Annotated[int, msgspec.Meta(ge=0)]</em><a href="#update_latency_nanos--annotatedint-msgspecmetage0" class="hash-link" aria-label="Direct link to update_latency_nanos--annotatedint-msgspecmetage0" title="Direct link to update_latency_nanos--annotatedint-msgspecmetage0">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="cancel_latency_nanos--annotatedint-msgspecmetage0">cancel_latency_nanos <em>: Annotated[int, msgspec.Meta(ge=0)]</em><a href="#cancel_latency_nanos--annotatedint-msgspecmetage0" class="hash-link" aria-label="Direct link to cancel_latency_nanos--annotatedint-msgspecmetage0" title="Direct link to cancel_latency_nanos--annotatedint-msgspecmetage0">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="dict--dictstr-any-7">dict() → dict[str, Any]<a href="#dict--dictstr-any-7" class="hash-link" aria-label="Direct link to dict() → dict[str, Any]" title="Direct link to dict() → dict[str, Any]">​</a></h4>
<p>Return a dictionary representation of the configuration.</p>
<ul>
<li><strong>Return type:</strong>
dict[str, Any]</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="classmethod-fully_qualified_name--str-7"><em>classmethod</em> fully_qualified_name() → str<a href="#classmethod-fully_qualified_name--str-7" class="hash-link" aria-label="Direct link to classmethod-fully_qualified_name--str-7" title="Direct link to classmethod-fully_qualified_name--str-7">​</a></h4>
<p>Return the fully qualified name for the PoseiConfig class.</p>
<ul>
<li><strong>Return type:</strong>
str</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="property-id--str-7"><em>property</em> id <em>: str</em><a href="#property-id--str-7" class="hash-link" aria-label="Direct link to property-id--str-7" title="Direct link to property-id--str-7">​</a></h4>
<p>Return the hashed identifier for the configuration.</p>
<ul>
<li><strong>Return type:</strong>
str</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="json--bytes-7">json() → bytes<a href="#json--bytes-7" class="hash-link" aria-label="Direct link to json() → bytes" title="Direct link to json() → bytes">​</a></h4>
<p>Return serialized JSON encoded bytes.</p>
<ul>
<li><strong>Return type:</strong>
bytes</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="json_primitives--dictstr-any-7">json_primitives() → dict[str, Any]<a href="#json_primitives--dictstr-any-7" class="hash-link" aria-label="Direct link to json_primitives() → dict[str, Any]" title="Direct link to json_primitives() → dict[str, Any]">​</a></h4>
<p>Return a dictionary representation of the configuration with JSON primitive
types as values.</p>
<ul>
<li><strong>Return type:</strong>
dict[str, Any]</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="classmethod-json_schema--dictstr-any-7"><em>classmethod</em> json_schema() → dict[str, Any]<a href="#classmethod-json_schema--dictstr-any-7" class="hash-link" aria-label="Direct link to classmethod-json_schema--dictstr-any-7" title="Direct link to classmethod-json_schema--dictstr-any-7">​</a></h4>
<p>Generate a JSON schema for this configuration class.</p>
<ul>
<li><strong>Return type:</strong>
dict[str, Any]</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="classmethod-parseraw-bytes--str--any-7"><em>classmethod</em> parse(raw: bytes | str) → Any<a href="#classmethod-parseraw-bytes--str--any-7" class="hash-link" aria-label="Direct link to classmethod-parseraw-bytes--str--any-7" title="Direct link to classmethod-parseraw-bytes--str--any-7">​</a></h4>
<p>Return a decoded object of the given cls.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>cls</strong> (<em>type</em>) – The type to decode to.</li>
<li><strong>raw</strong> (<em>bytes</em> <em>or</em> <em>str</em>) – The raw bytes or JSON string to decode.</li>
</ul>
</li>
<li><strong>Return type:</strong>
Any</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="validate--bool-7">validate() → bool<a href="#validate--bool-7" class="hash-link" aria-label="Direct link to validate() → bool" title="Direct link to validate() → bool">​</a></h4>
<p>Return whether the configuration can be represented as valid JSON.</p>
<ul>
<li><strong>Return type:</strong>
bool</li>
</ul>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="class-importablelatencymodelconfig"><em>class</em> ImportableLatencyModelConfig<a href="#class-importablelatencymodelconfig" class="hash-link" aria-label="Direct link to class-importablelatencymodelconfig" title="Direct link to class-importablelatencymodelconfig">​</a></h3>
<p>Bases: <a href="#posei_trader.common.config.PoseiConfig"><code>PoseiConfig</code></a></p>
<p>Configuration for a latency model instance.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>latency_model_path</strong> (<em>str</em>) – The fully qualified name of the latency model class.</li>
<li><strong>config_path</strong> (<em>str</em>) – The fully qualified name of the config class.</li>
<li><strong>config</strong> (<em>dict</em> *[*<em>str</em> <em>,</em> <em>Any</em> <em>]</em>) – The latency model configuration.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="latency_model_path--str">latency_model_path <em>: str</em><a href="#latency_model_path--str" class="hash-link" aria-label="Direct link to latency_model_path--str" title="Direct link to latency_model_path--str">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="config_path--str-1">config_path <em>: str</em><a href="#config_path--str-1" class="hash-link" aria-label="Direct link to config_path--str-1" title="Direct link to config_path--str-1">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="config--dictstr-any-1">config <em>: dict[str, Any]</em><a href="#config--dictstr-any-1" class="hash-link" aria-label="Direct link to config--dictstr-any-1" title="Direct link to config--dictstr-any-1">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="dict--dictstr-any-8">dict() → dict[str, Any]<a href="#dict--dictstr-any-8" class="hash-link" aria-label="Direct link to dict() → dict[str, Any]" title="Direct link to dict() → dict[str, Any]">​</a></h4>
<p>Return a dictionary representation of the configuration.</p>
<ul>
<li><strong>Return type:</strong>
dict[str, Any]</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="classmethod-fully_qualified_name--str-8"><em>classmethod</em> fully_qualified_name() → str<a href="#classmethod-fully_qualified_name--str-8" class="hash-link" aria-label="Direct link to classmethod-fully_qualified_name--str-8" title="Direct link to classmethod-fully_qualified_name--str-8">​</a></h4>
<p>Return the fully qualified name for the PoseiConfig class.</p>
<ul>
<li><strong>Return type:</strong>
str</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="property-id--str-8"><em>property</em> id <em>: str</em><a href="#property-id--str-8" class="hash-link" aria-label="Direct link to property-id--str-8" title="Direct link to property-id--str-8">​</a></h4>
<p>Return the hashed identifier for the configuration.</p>
<ul>
<li><strong>Return type:</strong>
str</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="json--bytes-8">json() → bytes<a href="#json--bytes-8" class="hash-link" aria-label="Direct link to json() → bytes" title="Direct link to json() → bytes">​</a></h4>
<p>Return serialized JSON encoded bytes.</p>
<ul>
<li><strong>Return type:</strong>
bytes</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="json_primitives--dictstr-any-8">json_primitives() → dict[str, Any]<a href="#json_primitives--dictstr-any-8" class="hash-link" aria-label="Direct link to json_primitives() → dict[str, Any]" title="Direct link to json_primitives() → dict[str, Any]">​</a></h4>
<p>Return a dictionary representation of the configuration with JSON primitive
types as values.</p>
<ul>
<li><strong>Return type:</strong>
dict[str, Any]</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="classmethod-json_schema--dictstr-any-8"><em>classmethod</em> json_schema() → dict[str, Any]<a href="#classmethod-json_schema--dictstr-any-8" class="hash-link" aria-label="Direct link to classmethod-json_schema--dictstr-any-8" title="Direct link to classmethod-json_schema--dictstr-any-8">​</a></h4>
<p>Generate a JSON schema for this configuration class.</p>
<ul>
<li><strong>Return type:</strong>
dict[str, Any]</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="classmethod-parseraw-bytes--str--any-8"><em>classmethod</em> parse(raw: bytes | str) → Any<a href="#classmethod-parseraw-bytes--str--any-8" class="hash-link" aria-label="Direct link to classmethod-parseraw-bytes--str--any-8" title="Direct link to classmethod-parseraw-bytes--str--any-8">​</a></h4>
<p>Return a decoded object of the given cls.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>cls</strong> (<em>type</em>) – The type to decode to.</li>
<li><strong>raw</strong> (<em>bytes</em> <em>or</em> <em>str</em>) – The raw bytes or JSON string to decode.</li>
</ul>
</li>
<li><strong>Return type:</strong>
Any</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="validate--bool-8">validate() → bool<a href="#validate--bool-8" class="hash-link" aria-label="Direct link to validate() → bool" title="Direct link to validate() → bool">​</a></h4>
<p>Return whether the configuration can be represented as valid JSON.</p>
<ul>
<li><strong>Return type:</strong>
bool</li>
</ul>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="class-latencymodelfactory"><em>class</em> LatencyModelFactory<a href="#class-latencymodelfactory" class="hash-link" aria-label="Direct link to class-latencymodelfactory" title="Direct link to class-latencymodelfactory">​</a></h3>
<p>Bases: <code>object</code></p>
<p>Provides latency model creation from importable configurations.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="static-createconfig-importablelatencymodelconfig"><em>static</em> create(config: <a href="#posei_trader.backtest.config.ImportableLatencyModelConfig">ImportableLatencyModelConfig</a>)<a href="#static-createconfig-importablelatencymodelconfig" class="hash-link" aria-label="Direct link to static-createconfig-importablelatencymodelconfig" title="Direct link to static-createconfig-importablelatencymodelconfig">​</a></h4>
<p>Create a latency model from the given configuration.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>config</strong> (<a href="#posei_trader.backtest.config.ImportableLatencyModelConfig"><em>ImportableLatencyModelConfig</em></a>) – The configuration for the building step.</li>
<li><strong>Return type:</strong>
<a href="../backtest/index.htm#posei_trader.backtest.models.LatencyModel">LatencyModel</a></li>
<li><strong>Raises:</strong>
<strong>TypeError</strong> – If config is not of type ImportableLatencyModelConfig.</li>
</ul>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="class-feemodelconfig"><em>class</em> FeeModelConfig<a href="#class-feemodelconfig" class="hash-link" aria-label="Direct link to class-feemodelconfig" title="Direct link to class-feemodelconfig">​</a></h3>
<p>Bases: <a href="#posei_trader.common.config.PoseiConfig"><code>PoseiConfig</code></a></p>
<p>Base configuration for <code>FeeModel</code> instances.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="dict--dictstr-any-9">dict() → dict[str, Any]<a href="#dict--dictstr-any-9" class="hash-link" aria-label="Direct link to dict() → dict[str, Any]" title="Direct link to dict() → dict[str, Any]">​</a></h4>
<p>Return a dictionary representation of the configuration.</p>
<ul>
<li><strong>Return type:</strong>
dict[str, Any]</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="classmethod-fully_qualified_name--str-9"><em>classmethod</em> fully_qualified_name() → str<a href="#classmethod-fully_qualified_name--str-9" class="hash-link" aria-label="Direct link to classmethod-fully_qualified_name--str-9" title="Direct link to classmethod-fully_qualified_name--str-9">​</a></h4>
<p>Return the fully qualified name for the PoseiConfig class.</p>
<ul>
<li><strong>Return type:</strong>
str</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="property-id--str-9"><em>property</em> id <em>: str</em><a href="#property-id--str-9" class="hash-link" aria-label="Direct link to property-id--str-9" title="Direct link to property-id--str-9">​</a></h4>
<p>Return the hashed identifier for the configuration.</p>
<ul>
<li><strong>Return type:</strong>
str</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="json--bytes-9">json() → bytes<a href="#json--bytes-9" class="hash-link" aria-label="Direct link to json() → bytes" title="Direct link to json() → bytes">​</a></h4>
<p>Return serialized JSON encoded bytes.</p>
<ul>
<li><strong>Return type:</strong>
bytes</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="json_primitives--dictstr-any-9">json_primitives() → dict[str, Any]<a href="#json_primitives--dictstr-any-9" class="hash-link" aria-label="Direct link to json_primitives() → dict[str, Any]" title="Direct link to json_primitives() → dict[str, Any]">​</a></h4>
<p>Return a dictionary representation of the configuration with JSON primitive
types as values.</p>
<ul>
<li><strong>Return type:</strong>
dict[str, Any]</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="classmethod-json_schema--dictstr-any-9"><em>classmethod</em> json_schema() → dict[str, Any]<a href="#classmethod-json_schema--dictstr-any-9" class="hash-link" aria-label="Direct link to classmethod-json_schema--dictstr-any-9" title="Direct link to classmethod-json_schema--dictstr-any-9">​</a></h4>
<p>Generate a JSON schema for this configuration class.</p>
<ul>
<li><strong>Return type:</strong>
dict[str, Any]</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="classmethod-parseraw-bytes--str--any-9"><em>classmethod</em> parse(raw: bytes | str) → Any<a href="#classmethod-parseraw-bytes--str--any-9" class="hash-link" aria-label="Direct link to classmethod-parseraw-bytes--str--any-9" title="Direct link to classmethod-parseraw-bytes--str--any-9">​</a></h4>
<p>Return a decoded object of the given cls.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>cls</strong> (<em>type</em>) – The type to decode to.</li>
<li><strong>raw</strong> (<em>bytes</em> <em>or</em> <em>str</em>) – The raw bytes or JSON string to decode.</li>
</ul>
</li>
<li><strong>Return type:</strong>
Any</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="validate--bool-9">validate() → bool<a href="#validate--bool-9" class="hash-link" aria-label="Direct link to validate() → bool" title="Direct link to validate() → bool">​</a></h4>
<p>Return whether the configuration can be represented as valid JSON.</p>
<ul>
<li><strong>Return type:</strong>
bool</li>
</ul>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="class-makertakerfeemodelconfig"><em>class</em> MakerTakerFeeModelConfig<a href="#class-makertakerfeemodelconfig" class="hash-link" aria-label="Direct link to class-makertakerfeemodelconfig" title="Direct link to class-makertakerfeemodelconfig">​</a></h3>
<p>Bases: <a href="#posei_trader.backtest.config.FeeModelConfig"><code>FeeModelConfig</code></a></p>
<p>Configuration for <code>MakerTakerFeeModel</code> instances.</p>
<p>This fee model uses the maker/taker fees defined on the instrument.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="dict--dictstr-any-10">dict() → dict[str, Any]<a href="#dict--dictstr-any-10" class="hash-link" aria-label="Direct link to dict() → dict[str, Any]" title="Direct link to dict() → dict[str, Any]">​</a></h4>
<p>Return a dictionary representation of the configuration.</p>
<ul>
<li><strong>Return type:</strong>
dict[str, Any]</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="classmethod-fully_qualified_name--str-10"><em>classmethod</em> fully_qualified_name() → str<a href="#classmethod-fully_qualified_name--str-10" class="hash-link" aria-label="Direct link to classmethod-fully_qualified_name--str-10" title="Direct link to classmethod-fully_qualified_name--str-10">​</a></h4>
<p>Return the fully qualified name for the PoseiConfig class.</p>
<ul>
<li><strong>Return type:</strong>
str</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="property-id--str-10"><em>property</em> id <em>: str</em><a href="#property-id--str-10" class="hash-link" aria-label="Direct link to property-id--str-10" title="Direct link to property-id--str-10">​</a></h4>
<p>Return the hashed identifier for the configuration.</p>
<ul>
<li><strong>Return type:</strong>
str</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="json--bytes-10">json() → bytes<a href="#json--bytes-10" class="hash-link" aria-label="Direct link to json() → bytes" title="Direct link to json() → bytes">​</a></h4>
<p>Return serialized JSON encoded bytes.</p>
<ul>
<li><strong>Return type:</strong>
bytes</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="json_primitives--dictstr-any-10">json_primitives() → dict[str, Any]<a href="#json_primitives--dictstr-any-10" class="hash-link" aria-label="Direct link to json_primitives() → dict[str, Any]" title="Direct link to json_primitives() → dict[str, Any]">​</a></h4>
<p>Return a dictionary representation of the configuration with JSON primitive
types as values.</p>
<ul>
<li><strong>Return type:</strong>
dict[str, Any]</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="classmethod-json_schema--dictstr-any-10"><em>classmethod</em> json_schema() → dict[str, Any]<a href="#classmethod-json_schema--dictstr-any-10" class="hash-link" aria-label="Direct link to classmethod-json_schema--dictstr-any-10" title="Direct link to classmethod-json_schema--dictstr-any-10">​</a></h4>
<p>Generate a JSON schema for this configuration class.</p>
<ul>
<li><strong>Return type:</strong>
dict[str, Any]</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="classmethod-parseraw-bytes--str--any-10"><em>classmethod</em> parse(raw: bytes | str) → Any<a href="#classmethod-parseraw-bytes--str--any-10" class="hash-link" aria-label="Direct link to classmethod-parseraw-bytes--str--any-10" title="Direct link to classmethod-parseraw-bytes--str--any-10">​</a></h4>
<p>Return a decoded object of the given cls.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>cls</strong> (<em>type</em>) – The type to decode to.</li>
<li><strong>raw</strong> (<em>bytes</em> <em>or</em> <em>str</em>) – The raw bytes or JSON string to decode.</li>
</ul>
</li>
<li><strong>Return type:</strong>
Any</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="validate--bool-10">validate() → bool<a href="#validate--bool-10" class="hash-link" aria-label="Direct link to validate() → bool" title="Direct link to validate() → bool">​</a></h4>
<p>Return whether the configuration can be represented as valid JSON.</p>
<ul>
<li><strong>Return type:</strong>
bool</li>
</ul>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="class-fixedfeemodelconfig"><em>class</em> FixedFeeModelConfig<a href="#class-fixedfeemodelconfig" class="hash-link" aria-label="Direct link to class-fixedfeemodelconfig" title="Direct link to class-fixedfeemodelconfig">​</a></h3>
<p>Bases: <a href="#posei_trader.backtest.config.FeeModelConfig"><code>FeeModelConfig</code></a></p>
<p>Configuration for <code>FixedFeeModel</code> instances.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>commission</strong> (<a href="../model/index.htm#posei_trader.model.Money"><em>Money</em></a> <em>|</em> <em>str</em>) – The fixed commission amount for trades.</li>
<li><strong>charge_commission_once</strong> (<em>bool</em> <em>,</em> <em>default True</em>) – Whether to charge the commission once per order or per fill.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="commission--str">commission <em>: str</em><a href="#commission--str" class="hash-link" aria-label="Direct link to commission--str" title="Direct link to commission--str">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="charge_commission_once--bool">charge_commission_once <em>: bool</em><a href="#charge_commission_once--bool" class="hash-link" aria-label="Direct link to charge_commission_once--bool" title="Direct link to charge_commission_once--bool">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="dict--dictstr-any-11">dict() → dict[str, Any]<a href="#dict--dictstr-any-11" class="hash-link" aria-label="Direct link to dict() → dict[str, Any]" title="Direct link to dict() → dict[str, Any]">​</a></h4>
<p>Return a dictionary representation of the configuration.</p>
<ul>
<li><strong>Return type:</strong>
dict[str, Any]</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="classmethod-fully_qualified_name--str-11"><em>classmethod</em> fully_qualified_name() → str<a href="#classmethod-fully_qualified_name--str-11" class="hash-link" aria-label="Direct link to classmethod-fully_qualified_name--str-11" title="Direct link to classmethod-fully_qualified_name--str-11">​</a></h4>
<p>Return the fully qualified name for the PoseiConfig class.</p>
<ul>
<li><strong>Return type:</strong>
str</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="property-id--str-11"><em>property</em> id <em>: str</em><a href="#property-id--str-11" class="hash-link" aria-label="Direct link to property-id--str-11" title="Direct link to property-id--str-11">​</a></h4>
<p>Return the hashed identifier for the configuration.</p>
<ul>
<li><strong>Return type:</strong>
str</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="json--bytes-11">json() → bytes<a href="#json--bytes-11" class="hash-link" aria-label="Direct link to json() → bytes" title="Direct link to json() → bytes">​</a></h4>
<p>Return serialized JSON encoded bytes.</p>
<ul>
<li><strong>Return type:</strong>
bytes</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="json_primitives--dictstr-any-11">json_primitives() → dict[str, Any]<a href="#json_primitives--dictstr-any-11" class="hash-link" aria-label="Direct link to json_primitives() → dict[str, Any]" title="Direct link to json_primitives() → dict[str, Any]">​</a></h4>
<p>Return a dictionary representation of the configuration with JSON primitive
types as values.</p>
<ul>
<li><strong>Return type:</strong>
dict[str, Any]</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="classmethod-json_schema--dictstr-any-11"><em>classmethod</em> json_schema() → dict[str, Any]<a href="#classmethod-json_schema--dictstr-any-11" class="hash-link" aria-label="Direct link to classmethod-json_schema--dictstr-any-11" title="Direct link to classmethod-json_schema--dictstr-any-11">​</a></h4>
<p>Generate a JSON schema for this configuration class.</p>
<ul>
<li><strong>Return type:</strong>
dict[str, Any]</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="classmethod-parseraw-bytes--str--any-11"><em>classmethod</em> parse(raw: bytes | str) → Any<a href="#classmethod-parseraw-bytes--str--any-11" class="hash-link" aria-label="Direct link to classmethod-parseraw-bytes--str--any-11" title="Direct link to classmethod-parseraw-bytes--str--any-11">​</a></h4>
<p>Return a decoded object of the given cls.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>cls</strong> (<em>type</em>) – The type to decode to.</li>
<li><strong>raw</strong> (<em>bytes</em> <em>or</em> <em>str</em>) – The raw bytes or JSON string to decode.</li>
</ul>
</li>
<li><strong>Return type:</strong>
Any</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="validate--bool-11">validate() → bool<a href="#validate--bool-11" class="hash-link" aria-label="Direct link to validate() → bool" title="Direct link to validate() → bool">​</a></h4>
<p>Return whether the configuration can be represented as valid JSON.</p>
<ul>
<li><strong>Return type:</strong>
bool</li>
</ul>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="class-percontractfeemodelconfig"><em>class</em> PerContractFeeModelConfig<a href="#class-percontractfeemodelconfig" class="hash-link" aria-label="Direct link to class-percontractfeemodelconfig" title="Direct link to class-percontractfeemodelconfig">​</a></h3>
<p>Bases: <a href="#posei_trader.backtest.config.FeeModelConfig"><code>FeeModelConfig</code></a></p>
<p>Configuration for <code>PerContractFeeModel</code> instances.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>commission</strong> (<a href="../model/index.htm#posei_trader.model.Money"><em>Money</em></a> <em>|</em> <em>str</em>) – The commission amount per contract.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="commission--str-1">commission <em>: str</em><a href="#commission--str-1" class="hash-link" aria-label="Direct link to commission--str-1" title="Direct link to commission--str-1">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="dict--dictstr-any-12">dict() → dict[str, Any]<a href="#dict--dictstr-any-12" class="hash-link" aria-label="Direct link to dict() → dict[str, Any]" title="Direct link to dict() → dict[str, Any]">​</a></h4>
<p>Return a dictionary representation of the configuration.</p>
<ul>
<li><strong>Return type:</strong>
dict[str, Any]</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="classmethod-fully_qualified_name--str-12"><em>classmethod</em> fully_qualified_name() → str<a href="#classmethod-fully_qualified_name--str-12" class="hash-link" aria-label="Direct link to classmethod-fully_qualified_name--str-12" title="Direct link to classmethod-fully_qualified_name--str-12">​</a></h4>
<p>Return the fully qualified name for the PoseiConfig class.</p>
<ul>
<li><strong>Return type:</strong>
str</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="property-id--str-12"><em>property</em> id <em>: str</em><a href="#property-id--str-12" class="hash-link" aria-label="Direct link to property-id--str-12" title="Direct link to property-id--str-12">​</a></h4>
<p>Return the hashed identifier for the configuration.</p>
<ul>
<li><strong>Return type:</strong>
str</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="json--bytes-12">json() → bytes<a href="#json--bytes-12" class="hash-link" aria-label="Direct link to json() → bytes" title="Direct link to json() → bytes">​</a></h4>
<p>Return serialized JSON encoded bytes.</p>
<ul>
<li><strong>Return type:</strong>
bytes</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="json_primitives--dictstr-any-12">json_primitives() → dict[str, Any]<a href="#json_primitives--dictstr-any-12" class="hash-link" aria-label="Direct link to json_primitives() → dict[str, Any]" title="Direct link to json_primitives() → dict[str, Any]">​</a></h4>
<p>Return a dictionary representation of the configuration with JSON primitive
types as values.</p>
<ul>
<li><strong>Return type:</strong>
dict[str, Any]</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="classmethod-json_schema--dictstr-any-12"><em>classmethod</em> json_schema() → dict[str, Any]<a href="#classmethod-json_schema--dictstr-any-12" class="hash-link" aria-label="Direct link to classmethod-json_schema--dictstr-any-12" title="Direct link to classmethod-json_schema--dictstr-any-12">​</a></h4>
<p>Generate a JSON schema for this configuration class.</p>
<ul>
<li><strong>Return type:</strong>
dict[str, Any]</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="classmethod-parseraw-bytes--str--any-12"><em>classmethod</em> parse(raw: bytes | str) → Any<a href="#classmethod-parseraw-bytes--str--any-12" class="hash-link" aria-label="Direct link to classmethod-parseraw-bytes--str--any-12" title="Direct link to classmethod-parseraw-bytes--str--any-12">​</a></h4>
<p>Return a decoded object of the given cls.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>cls</strong> (<em>type</em>) – The type to decode to.</li>
<li><strong>raw</strong> (<em>bytes</em> <em>or</em> <em>str</em>) – The raw bytes or JSON string to decode.</li>
</ul>
</li>
<li><strong>Return type:</strong>
Any</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="validate--bool-12">validate() → bool<a href="#validate--bool-12" class="hash-link" aria-label="Direct link to validate() → bool" title="Direct link to validate() → bool">​</a></h4>
<p>Return whether the configuration can be represented as valid JSON.</p>
<ul>
<li><strong>Return type:</strong>
bool</li>
</ul>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="class-importablefeemodelconfig"><em>class</em> ImportableFeeModelConfig<a href="#class-importablefeemodelconfig" class="hash-link" aria-label="Direct link to class-importablefeemodelconfig" title="Direct link to class-importablefeemodelconfig">​</a></h3>
<p>Bases: <a href="#posei_trader.common.config.PoseiConfig"><code>PoseiConfig</code></a></p>
<p>Configuration for a fee model instance.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>fee_model_path</strong> (<em>str</em>) – The fully qualified name of the fee model class.</li>
<li><strong>config_path</strong> (<em>str</em>) – The fully qualified name of the config class.</li>
<li><strong>config</strong> (<em>dict</em> *[*<em>str</em> <em>,</em> <em>Any</em> <em>]</em>) – The fee model configuration.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="fee_model_path--str">fee_model_path <em>: str</em><a href="#fee_model_path--str" class="hash-link" aria-label="Direct link to fee_model_path--str" title="Direct link to fee_model_path--str">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="config_path--str-2">config_path <em>: str</em><a href="#config_path--str-2" class="hash-link" aria-label="Direct link to config_path--str-2" title="Direct link to config_path--str-2">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="config--dictstr-any-2">config <em>: dict[str, Any]</em><a href="#config--dictstr-any-2" class="hash-link" aria-label="Direct link to config--dictstr-any-2" title="Direct link to config--dictstr-any-2">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="dict--dictstr-any-13">dict() → dict[str, Any]<a href="#dict--dictstr-any-13" class="hash-link" aria-label="Direct link to dict() → dict[str, Any]" title="Direct link to dict() → dict[str, Any]">​</a></h4>
<p>Return a dictionary representation of the configuration.</p>
<ul>
<li><strong>Return type:</strong>
dict[str, Any]</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="classmethod-fully_qualified_name--str-13"><em>classmethod</em> fully_qualified_name() → str<a href="#classmethod-fully_qualified_name--str-13" class="hash-link" aria-label="Direct link to classmethod-fully_qualified_name--str-13" title="Direct link to classmethod-fully_qualified_name--str-13">​</a></h4>
<p>Return the fully qualified name for the PoseiConfig class.</p>
<ul>
<li><strong>Return type:</strong>
str</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="property-id--str-13"><em>property</em> id <em>: str</em><a href="#property-id--str-13" class="hash-link" aria-label="Direct link to property-id--str-13" title="Direct link to property-id--str-13">​</a></h4>
<p>Return the hashed identifier for the configuration.</p>
<ul>
<li><strong>Return type:</strong>
str</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="json--bytes-13">json() → bytes<a href="#json--bytes-13" class="hash-link" aria-label="Direct link to json() → bytes" title="Direct link to json() → bytes">​</a></h4>
<p>Return serialized JSON encoded bytes.</p>
<ul>
<li><strong>Return type:</strong>
bytes</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="json_primitives--dictstr-any-13">json_primitives() → dict[str, Any]<a href="#json_primitives--dictstr-any-13" class="hash-link" aria-label="Direct link to json_primitives() → dict[str, Any]" title="Direct link to json_primitives() → dict[str, Any]">​</a></h4>
<p>Return a dictionary representation of the configuration with JSON primitive
types as values.</p>
<ul>
<li><strong>Return type:</strong>
dict[str, Any]</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="classmethod-json_schema--dictstr-any-13"><em>classmethod</em> json_schema() → dict[str, Any]<a href="#classmethod-json_schema--dictstr-any-13" class="hash-link" aria-label="Direct link to classmethod-json_schema--dictstr-any-13" title="Direct link to classmethod-json_schema--dictstr-any-13">​</a></h4>
<p>Generate a JSON schema for this configuration class.</p>
<ul>
<li><strong>Return type:</strong>
dict[str, Any]</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="classmethod-parseraw-bytes--str--any-13"><em>classmethod</em> parse(raw: bytes | str) → Any<a href="#classmethod-parseraw-bytes--str--any-13" class="hash-link" aria-label="Direct link to classmethod-parseraw-bytes--str--any-13" title="Direct link to classmethod-parseraw-bytes--str--any-13">​</a></h4>
<p>Return a decoded object of the given cls.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>cls</strong> (<em>type</em>) – The type to decode to.</li>
<li><strong>raw</strong> (<em>bytes</em> <em>or</em> <em>str</em>) – The raw bytes or JSON string to decode.</li>
</ul>
</li>
<li><strong>Return type:</strong>
Any</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="validate--bool-13">validate() → bool<a href="#validate--bool-13" class="hash-link" aria-label="Direct link to validate() → bool" title="Direct link to validate() → bool">​</a></h4>
<p>Return whether the configuration can be represented as valid JSON.</p>
<ul>
<li><strong>Return type:</strong>
bool</li>
</ul>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="class-feemodelfactory"><em>class</em> FeeModelFactory<a href="#class-feemodelfactory" class="hash-link" aria-label="Direct link to class-feemodelfactory" title="Direct link to class-feemodelfactory">​</a></h3>
<p>Bases: <code>object</code></p>
<p>Provides fee model creation from importable configurations.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="static-createconfig-importablefeemodelconfig"><em>static</em> create(config: <a href="#posei_trader.backtest.config.ImportableFeeModelConfig">ImportableFeeModelConfig</a>)<a href="#static-createconfig-importablefeemodelconfig" class="hash-link" aria-label="Direct link to static-createconfig-importablefeemodelconfig" title="Direct link to static-createconfig-importablefeemodelconfig">​</a></h4>
<p>Create a fee model from the given configuration.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>config</strong> (<a href="#posei_trader.backtest.config.ImportableFeeModelConfig"><em>ImportableFeeModelConfig</em></a>) – The configuration for the building step.</li>
<li><strong>Return type:</strong>
<a href="../backtest/index.htm#posei_trader.backtest.models.FeeModel">FeeModel</a></li>
<li><strong>Raises:</strong>
<strong>TypeError</strong> – If config is not of type ImportableFeeModelConfig.</li>
</ul>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="class-fxrolloverinterestconfig"><em>class</em> FXRolloverInterestConfig<a href="#class-fxrolloverinterestconfig" class="hash-link" aria-label="Direct link to class-fxrolloverinterestconfig" title="Direct link to class-fxrolloverinterestconfig">​</a></h3>
<p>Bases: <a href="#posei_trader.backtest.config.SimulationModuleConfig"><code>SimulationModuleConfig</code></a></p>
<p>Provides an FX rollover interest simulation module.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>rate_data</strong> (<em>pd.DataFrame</em>) – The interest rate data for the internal rollover interest calculator.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="rate_data--pddataframe">rate_data <em>: pd.DataFrame</em><a href="#rate_data--pddataframe" class="hash-link" aria-label="Direct link to rate_data--pddataframe" title="Direct link to rate_data--pddataframe">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="component_id--componentid--none-1">component_id <em>: <a href="../model/identifiers/index.htm#posei_trader.model.identifiers.ComponentId">ComponentId</a> | None</em><a href="#component_id--componentid--none-1" class="hash-link" aria-label="Direct link to component_id--componentid--none-1" title="Direct link to component_id--componentid--none-1">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="dict--dictstr-any-14">dict() → dict[str, Any]<a href="#dict--dictstr-any-14" class="hash-link" aria-label="Direct link to dict() → dict[str, Any]" title="Direct link to dict() → dict[str, Any]">​</a></h4>
<p>Return a dictionary representation of the configuration.</p>
<ul>
<li><strong>Return type:</strong>
dict[str, Any]</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="classmethod-fully_qualified_name--str-14"><em>classmethod</em> fully_qualified_name() → str<a href="#classmethod-fully_qualified_name--str-14" class="hash-link" aria-label="Direct link to classmethod-fully_qualified_name--str-14" title="Direct link to classmethod-fully_qualified_name--str-14">​</a></h4>
<p>Return the fully qualified name for the PoseiConfig class.</p>
<ul>
<li><strong>Return type:</strong>
str</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="property-id--str-14"><em>property</em> id <em>: str</em><a href="#property-id--str-14" class="hash-link" aria-label="Direct link to property-id--str-14" title="Direct link to property-id--str-14">​</a></h4>
<p>Return the hashed identifier for the configuration.</p>
<ul>
<li><strong>Return type:</strong>
str</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="json--bytes-14">json() → bytes<a href="#json--bytes-14" class="hash-link" aria-label="Direct link to json() → bytes" title="Direct link to json() → bytes">​</a></h4>
<p>Return serialized JSON encoded bytes.</p>
<ul>
<li><strong>Return type:</strong>
bytes</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="json_primitives--dictstr-any-14">json_primitives() → dict[str, Any]<a href="#json_primitives--dictstr-any-14" class="hash-link" aria-label="Direct link to json_primitives() → dict[str, Any]" title="Direct link to json_primitives() → dict[str, Any]">​</a></h4>
<p>Return a dictionary representation of the configuration with JSON primitive
types as values.</p>
<ul>
<li><strong>Return type:</strong>
dict[str, Any]</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="classmethod-json_schema--dictstr-any-14"><em>classmethod</em> json_schema() → dict[str, Any]<a href="#classmethod-json_schema--dictstr-any-14" class="hash-link" aria-label="Direct link to classmethod-json_schema--dictstr-any-14" title="Direct link to classmethod-json_schema--dictstr-any-14">​</a></h4>
<p>Generate a JSON schema for this configuration class.</p>
<ul>
<li><strong>Return type:</strong>
dict[str, Any]</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="log_commands--bool-1">log_commands <em>: bool</em><a href="#log_commands--bool-1" class="hash-link" aria-label="Direct link to log_commands--bool-1" title="Direct link to log_commands--bool-1">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="log_events--bool-1">log_events <em>: bool</em><a href="#log_events--bool-1" class="hash-link" aria-label="Direct link to log_events--bool-1" title="Direct link to log_events--bool-1">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="classmethod-parseraw-bytes--str--any-14"><em>classmethod</em> parse(raw: bytes | str) → Any<a href="#classmethod-parseraw-bytes--str--any-14" class="hash-link" aria-label="Direct link to classmethod-parseraw-bytes--str--any-14" title="Direct link to classmethod-parseraw-bytes--str--any-14">​</a></h4>
<p>Return a decoded object of the given cls.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>cls</strong> (<em>type</em>) – The type to decode to.</li>
<li><strong>raw</strong> (<em>bytes</em> <em>or</em> <em>str</em>) – The raw bytes or JSON string to decode.</li>
</ul>
</li>
<li><strong>Return type:</strong>
Any</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="validate--bool-14">validate() → bool<a href="#validate--bool-14" class="hash-link" aria-label="Direct link to validate() → bool" title="Direct link to validate() → bool">​</a></h4>
<p>Return whether the configuration can be represented as valid JSON.</p>
<ul>
<li><strong>Return type:</strong>
bool</li>
</ul>
<h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="cache">Cache<a href="#cache" class="hash-link" aria-label="Direct link to Cache" title="Direct link to Cache">​</a></h2>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="class-cacheconfig"><em>class</em> CacheConfig<a href="#class-cacheconfig" class="hash-link" aria-label="Direct link to class-cacheconfig" title="Direct link to class-cacheconfig">​</a></h3>
<p>Bases: <a href="#posei_trader.common.config.PoseiConfig"><code>PoseiConfig</code></a></p>
<p>Configuration for <code>Cache</code> instances.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>database</strong> (<a href="#posei_trader.common.config.DatabaseConfig"><em>DatabaseConfig</em></a> <em>,</em> <em>optional</em>) – The configuration for the cache backing database.</li>
<li><strong>encoding</strong> (<em>str</em> <em>,</em>  <em>{&#x27;msgpack&#x27;</em> <em>,</em>  <em>&#x27;json&#x27;}</em> <em>,</em> <em>default &#x27;msgpack&#x27;</em>) – The encoding for database operations, controls the type of serializer used.</li>
<li><strong>timestamps_as_iso8601</strong> – If timestamps should be persisted as ISO 8601 strings.
If False then will persit as UNIX nanoseconds.</li>
<li><strong>False</strong> (<em>default</em>) – If timestamps should be persisted as ISO 8601 strings.
If False then will persit as UNIX nanoseconds.</li>
<li><strong>buffer_interval_ms</strong> (<em>PositiveInt</em> <em>,</em> <em>optional</em>) – The buffer interval (milliseconds) between pipelined/batched transactions.
The recommended range if using buffered pipeling is [10, 1000] milliseconds,
with a good compromise being 100 milliseconds.</li>
<li><strong>use_trader_prefix</strong> (<em>bool</em> <em>,</em> <em>default True</em>) – If a ‘trader-’ prefix is used for keys.</li>
<li><strong>use_instance_id</strong> (<em>bool</em> <em>,</em> <em>default False</em>) – If the traders instance ID is used for keys.</li>
<li><strong>flush_on_start</strong> (<em>bool</em> <em>,</em> <em>default False</em>) – If database should be flushed on start.</li>
<li><strong>drop_instruments_on_reset</strong> (<em>bool</em> <em>,</em> <em>default True</em>) – If instruments data should be dropped from the caches memory on reset.</li>
<li><strong>tick_capacity</strong> (<em>PositiveInt</em> <em>,</em> <em>default 10_000</em>) – The maximum length for internal tick dequeues.</li>
<li><strong>bar_capacity</strong> (<em>PositiveInt</em> <em>,</em> <em>default 10_000</em>) – The maximum length for internal bar dequeues.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="database--databaseconfig--none">database <em>: <a href="#posei_trader.common.config.DatabaseConfig">DatabaseConfig</a> | None</em><a href="#database--databaseconfig--none" class="hash-link" aria-label="Direct link to database--databaseconfig--none" title="Direct link to database--databaseconfig--none">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="encoding--str">encoding <em>: str</em><a href="#encoding--str" class="hash-link" aria-label="Direct link to encoding--str" title="Direct link to encoding--str">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="timestamps_as_iso8601--bool">timestamps_as_iso8601 <em>: bool</em><a href="#timestamps_as_iso8601--bool" class="hash-link" aria-label="Direct link to timestamps_as_iso8601--bool" title="Direct link to timestamps_as_iso8601--bool">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="buffer_interval_ms--annotatedint-msgspecmetagt0--none">buffer_interval_ms <em>: Annotated[int, msgspec.Meta(gt=0)] | None</em><a href="#buffer_interval_ms--annotatedint-msgspecmetagt0--none" class="hash-link" aria-label="Direct link to buffer_interval_ms--annotatedint-msgspecmetagt0--none" title="Direct link to buffer_interval_ms--annotatedint-msgspecmetagt0--none">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="use_trader_prefix--bool">use_trader_prefix <em>: bool</em><a href="#use_trader_prefix--bool" class="hash-link" aria-label="Direct link to use_trader_prefix--bool" title="Direct link to use_trader_prefix--bool">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="use_instance_id--bool">use_instance_id <em>: bool</em><a href="#use_instance_id--bool" class="hash-link" aria-label="Direct link to use_instance_id--bool" title="Direct link to use_instance_id--bool">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="flush_on_start--bool">flush_on_start <em>: bool</em><a href="#flush_on_start--bool" class="hash-link" aria-label="Direct link to flush_on_start--bool" title="Direct link to flush_on_start--bool">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="drop_instruments_on_reset--bool">drop_instruments_on_reset <em>: bool</em><a href="#drop_instruments_on_reset--bool" class="hash-link" aria-label="Direct link to drop_instruments_on_reset--bool" title="Direct link to drop_instruments_on_reset--bool">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="tick_capacity--annotatedint-msgspecmetagt0">tick_capacity <em>: Annotated[int, msgspec.Meta(gt=0)]</em><a href="#tick_capacity--annotatedint-msgspecmetagt0" class="hash-link" aria-label="Direct link to tick_capacity--annotatedint-msgspecmetagt0" title="Direct link to tick_capacity--annotatedint-msgspecmetagt0">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="bar_capacity--annotatedint-msgspecmetagt0">bar_capacity <em>: Annotated[int, msgspec.Meta(gt=0)]</em><a href="#bar_capacity--annotatedint-msgspecmetagt0" class="hash-link" aria-label="Direct link to bar_capacity--annotatedint-msgspecmetagt0" title="Direct link to bar_capacity--annotatedint-msgspecmetagt0">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="dict--dictstr-any-15">dict() → dict[str, Any]<a href="#dict--dictstr-any-15" class="hash-link" aria-label="Direct link to dict() → dict[str, Any]" title="Direct link to dict() → dict[str, Any]">​</a></h4>
<p>Return a dictionary representation of the configuration.</p>
<ul>
<li><strong>Return type:</strong>
dict[str, Any]</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="classmethod-fully_qualified_name--str-15"><em>classmethod</em> fully_qualified_name() → str<a href="#classmethod-fully_qualified_name--str-15" class="hash-link" aria-label="Direct link to classmethod-fully_qualified_name--str-15" title="Direct link to classmethod-fully_qualified_name--str-15">​</a></h4>
<p>Return the fully qualified name for the PoseiConfig class.</p>
<ul>
<li><strong>Return type:</strong>
str</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="property-id--str-15"><em>property</em> id <em>: str</em><a href="#property-id--str-15" class="hash-link" aria-label="Direct link to property-id--str-15" title="Direct link to property-id--str-15">​</a></h4>
<p>Return the hashed identifier for the configuration.</p>
<ul>
<li><strong>Return type:</strong>
str</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="json--bytes-15">json() → bytes<a href="#json--bytes-15" class="hash-link" aria-label="Direct link to json() → bytes" title="Direct link to json() → bytes">​</a></h4>
<p>Return serialized JSON encoded bytes.</p>
<ul>
<li><strong>Return type:</strong>
bytes</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="json_primitives--dictstr-any-15">json_primitives() → dict[str, Any]<a href="#json_primitives--dictstr-any-15" class="hash-link" aria-label="Direct link to json_primitives() → dict[str, Any]" title="Direct link to json_primitives() → dict[str, Any]">​</a></h4>
<p>Return a dictionary representation of the configuration with JSON primitive
types as values.</p>
<ul>
<li><strong>Return type:</strong>
dict[str, Any]</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="classmethod-json_schema--dictstr-any-15"><em>classmethod</em> json_schema() → dict[str, Any]<a href="#classmethod-json_schema--dictstr-any-15" class="hash-link" aria-label="Direct link to classmethod-json_schema--dictstr-any-15" title="Direct link to classmethod-json_schema--dictstr-any-15">​</a></h4>
<p>Generate a JSON schema for this configuration class.</p>
<ul>
<li><strong>Return type:</strong>
dict[str, Any]</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="classmethod-parseraw-bytes--str--any-15"><em>classmethod</em> parse(raw: bytes | str) → Any<a href="#classmethod-parseraw-bytes--str--any-15" class="hash-link" aria-label="Direct link to classmethod-parseraw-bytes--str--any-15" title="Direct link to classmethod-parseraw-bytes--str--any-15">​</a></h4>
<p>Return a decoded object of the given cls.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>cls</strong> (<em>type</em>) – The type to decode to.</li>
<li><strong>raw</strong> (<em>bytes</em> <em>or</em> <em>str</em>) – The raw bytes or JSON string to decode.</li>
</ul>
</li>
<li><strong>Return type:</strong>
Any</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="validate--bool-15">validate() → bool<a href="#validate--bool-15" class="hash-link" aria-label="Direct link to validate() → bool" title="Direct link to validate() → bool">​</a></h4>
<p>Return whether the configuration can be represented as valid JSON.</p>
<ul>
<li><strong>Return type:</strong>
bool</li>
</ul>
<h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="common">Common<a href="#common" class="hash-link" aria-label="Direct link to Common" title="Direct link to Common">​</a></h2>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="exception-invalidconfiguration"><em>exception</em> InvalidConfiguration<a href="#exception-invalidconfiguration" class="hash-link" aria-label="Direct link to exception-invalidconfiguration" title="Direct link to exception-invalidconfiguration">​</a></h3>
<p>Bases: <code>RuntimeError</code></p>
<p>Raised when there is a violation of a configuration condition, making it invalid.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="add_note">add_note()<a href="#add_note" class="hash-link" aria-label="Direct link to add_note()" title="Direct link to add_note()">​</a></h4>
<p>Exception.add_note(note) –
add a note to the exception</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="args">args<a href="#args" class="hash-link" aria-label="Direct link to args" title="Direct link to args">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="with_traceback">with_traceback()<a href="#with_traceback" class="hash-link" aria-label="Direct link to with_traceback()" title="Direct link to with_traceback()">​</a></h4>
<p>Exception.with_traceback(tb) –
set self.<em>_traceback</em>_ to tb and return self.</p>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="resolve_pathpath-str--type">resolve_path(path: str) → type<a href="#resolve_pathpath-str--type" class="hash-link" aria-label="Direct link to resolve_path(path: str) → type" title="Direct link to resolve_path(path: str) → type">​</a></h3>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="resolve_config_pathpath-str--typenautilusconfig">resolve_config_path(path: str) → type[<a href="#posei_trader.common.config.PoseiConfig">PoseiConfig</a>]<a href="#resolve_config_pathpath-str--typenautilusconfig" class="hash-link" aria-label="Direct link to resolve_config_pathpath-str--typenautilusconfig" title="Direct link to resolve_config_pathpath-str--typenautilusconfig">​</a></h3>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="nautilus_schema_hooktype_-typeany--dictstr-any">nautilus_schema_hook(type_: type[Any]) → dict[str, Any]<a href="#nautilus_schema_hooktype_-typeany--dictstr-any" class="hash-link" aria-label="Direct link to nautilus_schema_hook(type_: type[Any]) → dict[str, Any]" title="Direct link to nautilus_schema_hook(type_: type[Any]) → dict[str, Any]">​</a></h3>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="msgspec_encoding_hookobj-any--any">msgspec_encoding_hook(obj: Any) → Any<a href="#msgspec_encoding_hookobj-any--any" class="hash-link" aria-label="Direct link to msgspec_encoding_hook(obj: Any) → Any" title="Direct link to msgspec_encoding_hook(obj: Any) → Any">​</a></h3>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="msgspec_decoding_hookobj_type-type-obj-any--any">msgspec_decoding_hook(obj_type: type, obj: Any) → Any<a href="#msgspec_decoding_hookobj_type-type-obj-any--any" class="hash-link" aria-label="Direct link to msgspec_decoding_hook(obj_type: type, obj: Any) → Any" title="Direct link to msgspec_decoding_hook(obj_type: type, obj: Any) → Any">​</a></h3>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="register_config_encodingtype_-type-encoder-callable--none">register_config_encoding(type_: type, encoder: Callable) → None<a href="#register_config_encodingtype_-type-encoder-callable--none" class="hash-link" aria-label="Direct link to register_config_encoding(type_: type, encoder: Callable) → None" title="Direct link to register_config_encoding(type_: type, encoder: Callable) → None">​</a></h3>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="register_config_decodingtype_-type-decoder-callable--none">register_config_decoding(type_: type, decoder: Callable) → None<a href="#register_config_decodingtype_-type-decoder-callable--none" class="hash-link" aria-label="Direct link to register_config_decoding(type_: type, decoder: Callable) → None" title="Direct link to register_config_decoding(type_: type, decoder: Callable) → None">​</a></h3>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="tokenize_configobj-nautilusconfig--str">tokenize_config(obj: <a href="#posei_trader.common.config.PoseiConfig">PoseiConfig</a>) → str<a href="#tokenize_configobj-nautilusconfig--str" class="hash-link" aria-label="Direct link to tokenize_configobj-nautilusconfig--str" title="Direct link to tokenize_configobj-nautilusconfig--str">​</a></h3>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="class-nautilusconfig"><em>class</em> PoseiConfig<a href="#class-nautilusconfig" class="hash-link" aria-label="Direct link to class-nautilusconfig" title="Direct link to class-nautilusconfig">​</a></h3>
<p>Bases: <code>Struct</code></p>
<p>The base class for all Posei configuration objects.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="property-id--str-16"><em>property</em> id <em>: str</em><a href="#property-id--str-16" class="hash-link" aria-label="Direct link to property-id--str-16" title="Direct link to property-id--str-16">​</a></h4>
<p>Return the hashed identifier for the configuration.</p>
<ul>
<li><strong>Return type:</strong>
str</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="classmethod-fully_qualified_name--str-16"><em>classmethod</em> fully_qualified_name() → str<a href="#classmethod-fully_qualified_name--str-16" class="hash-link" aria-label="Direct link to classmethod-fully_qualified_name--str-16" title="Direct link to classmethod-fully_qualified_name--str-16">​</a></h4>
<p>Return the fully qualified name for the PoseiConfig class.</p>
<ul>
<li><strong>Return type:</strong>
str</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="classmethod-json_schema--dictstr-any-16"><em>classmethod</em> json_schema() → dict[str, Any]<a href="#classmethod-json_schema--dictstr-any-16" class="hash-link" aria-label="Direct link to classmethod-json_schema--dictstr-any-16" title="Direct link to classmethod-json_schema--dictstr-any-16">​</a></h4>
<p>Generate a JSON schema for this configuration class.</p>
<ul>
<li><strong>Return type:</strong>
dict[str, Any]</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="classmethod-parseraw-bytes--str--any-16"><em>classmethod</em> parse(raw: bytes | str) → Any<a href="#classmethod-parseraw-bytes--str--any-16" class="hash-link" aria-label="Direct link to classmethod-parseraw-bytes--str--any-16" title="Direct link to classmethod-parseraw-bytes--str--any-16">​</a></h4>
<p>Return a decoded object of the given cls.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>cls</strong> (<em>type</em>) – The type to decode to.</li>
<li><strong>raw</strong> (<em>bytes</em> <em>or</em> <em>str</em>) – The raw bytes or JSON string to decode.</li>
</ul>
</li>
<li><strong>Return type:</strong>
Any</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="dict--dictstr-any-16">dict() → dict[str, Any]<a href="#dict--dictstr-any-16" class="hash-link" aria-label="Direct link to dict() → dict[str, Any]" title="Direct link to dict() → dict[str, Any]">​</a></h4>
<p>Return a dictionary representation of the configuration.</p>
<ul>
<li><strong>Return type:</strong>
dict[str, Any]</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="json--bytes-16">json() → bytes<a href="#json--bytes-16" class="hash-link" aria-label="Direct link to json() → bytes" title="Direct link to json() → bytes">​</a></h4>
<p>Return serialized JSON encoded bytes.</p>
<ul>
<li><strong>Return type:</strong>
bytes</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="json_primitives--dictstr-any-16">json_primitives() → dict[str, Any]<a href="#json_primitives--dictstr-any-16" class="hash-link" aria-label="Direct link to json_primitives() → dict[str, Any]" title="Direct link to json_primitives() → dict[str, Any]">​</a></h4>
<p>Return a dictionary representation of the configuration with JSON primitive
types as values.</p>
<ul>
<li><strong>Return type:</strong>
dict[str, Any]</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="validate--bool-16">validate() → bool<a href="#validate--bool-16" class="hash-link" aria-label="Direct link to validate() → bool" title="Direct link to validate() → bool">​</a></h4>
<p>Return whether the configuration can be represented as valid JSON.</p>
<ul>
<li><strong>Return type:</strong>
bool</li>
</ul>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="class-databaseconfig"><em>class</em> DatabaseConfig<a href="#class-databaseconfig" class="hash-link" aria-label="Direct link to class-databaseconfig" title="Direct link to class-databaseconfig">​</a></h3>
<p>Bases: <a href="#posei_trader.common.config.PoseiConfig"><code>PoseiConfig</code></a></p>
<p>Configuration for database connections.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>type</strong> (<em>str</em> <em>,</em>  <em>{&#x27;redis&#x27;}</em> <em>,</em> <em>default &#x27;redis&#x27;</em>) – The database type.</li>
<li><strong>host</strong> (<em>str</em> <em>,</em> <em>optional</em>) – The database host address. If None then should use the typical default.</li>
<li><strong>port</strong> (<em>int</em> <em>,</em> <em>optional</em>) – The database port. If None then should use the typical default.</li>
<li><strong>username</strong> (<em>str</em> <em>,</em> <em>optional</em>) – The account username for the database connection.</li>
<li><strong>password</strong> (<em>str</em> <em>,</em> <em>optional</em>) – The account password for the database connection.
If a value is provided then it will be redacted in the string repr for this object.</li>
<li><strong>ssl</strong> (<em>bool</em> <em>,</em> <em>default False</em>) – If socket should use an SSL (TLS encryption) enabled connection.</li>
<li><strong>timeout</strong> (<em>int</em> <em>,</em> <em>default 20</em>) – The timeout (seconds) to wait for a new connection.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="type--str">type <em>: str</em><a href="#type--str" class="hash-link" aria-label="Direct link to type--str" title="Direct link to type--str">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="host--str--none">host <em>: str | None</em><a href="#host--str--none" class="hash-link" aria-label="Direct link to host--str--none" title="Direct link to host--str--none">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="port--int--none">port <em>: int | None</em><a href="#port--int--none" class="hash-link" aria-label="Direct link to port--int--none" title="Direct link to port--int--none">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="username--str--none">username <em>: str | None</em><a href="#username--str--none" class="hash-link" aria-label="Direct link to username--str--none" title="Direct link to username--str--none">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="password--str--none">password <em>: str | None</em><a href="#password--str--none" class="hash-link" aria-label="Direct link to password--str--none" title="Direct link to password--str--none">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="ssl--bool">ssl <em>: bool</em><a href="#ssl--bool" class="hash-link" aria-label="Direct link to ssl--bool" title="Direct link to ssl--bool">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="timeout--int--none">timeout <em>: int | None</em><a href="#timeout--int--none" class="hash-link" aria-label="Direct link to timeout--int--none" title="Direct link to timeout--int--none">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="dict--dictstr-any-17">dict() → dict[str, Any]<a href="#dict--dictstr-any-17" class="hash-link" aria-label="Direct link to dict() → dict[str, Any]" title="Direct link to dict() → dict[str, Any]">​</a></h4>
<p>Return a dictionary representation of the configuration.</p>
<ul>
<li><strong>Return type:</strong>
dict[str, Any]</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="classmethod-fully_qualified_name--str-17"><em>classmethod</em> fully_qualified_name() → str<a href="#classmethod-fully_qualified_name--str-17" class="hash-link" aria-label="Direct link to classmethod-fully_qualified_name--str-17" title="Direct link to classmethod-fully_qualified_name--str-17">​</a></h4>
<p>Return the fully qualified name for the PoseiConfig class.</p>
<ul>
<li><strong>Return type:</strong>
str</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="property-id--str-17"><em>property</em> id <em>: str</em><a href="#property-id--str-17" class="hash-link" aria-label="Direct link to property-id--str-17" title="Direct link to property-id--str-17">​</a></h4>
<p>Return the hashed identifier for the configuration.</p>
<ul>
<li><strong>Return type:</strong>
str</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="json--bytes-17">json() → bytes<a href="#json--bytes-17" class="hash-link" aria-label="Direct link to json() → bytes" title="Direct link to json() → bytes">​</a></h4>
<p>Return serialized JSON encoded bytes.</p>
<ul>
<li><strong>Return type:</strong>
bytes</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="json_primitives--dictstr-any-17">json_primitives() → dict[str, Any]<a href="#json_primitives--dictstr-any-17" class="hash-link" aria-label="Direct link to json_primitives() → dict[str, Any]" title="Direct link to json_primitives() → dict[str, Any]">​</a></h4>
<p>Return a dictionary representation of the configuration with JSON primitive
types as values.</p>
<ul>
<li><strong>Return type:</strong>
dict[str, Any]</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="classmethod-json_schema--dictstr-any-17"><em>classmethod</em> json_schema() → dict[str, Any]<a href="#classmethod-json_schema--dictstr-any-17" class="hash-link" aria-label="Direct link to classmethod-json_schema--dictstr-any-17" title="Direct link to classmethod-json_schema--dictstr-any-17">​</a></h4>
<p>Generate a JSON schema for this configuration class.</p>
<ul>
<li><strong>Return type:</strong>
dict[str, Any]</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="classmethod-parseraw-bytes--str--any-17"><em>classmethod</em> parse(raw: bytes | str) → Any<a href="#classmethod-parseraw-bytes--str--any-17" class="hash-link" aria-label="Direct link to classmethod-parseraw-bytes--str--any-17" title="Direct link to classmethod-parseraw-bytes--str--any-17">​</a></h4>
<p>Return a decoded object of the given cls.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>cls</strong> (<em>type</em>) – The type to decode to.</li>
<li><strong>raw</strong> (<em>bytes</em> <em>or</em> <em>str</em>) – The raw bytes or JSON string to decode.</li>
</ul>
</li>
<li><strong>Return type:</strong>
Any</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="validate--bool-17">validate() → bool<a href="#validate--bool-17" class="hash-link" aria-label="Direct link to validate() → bool" title="Direct link to validate() → bool">​</a></h4>
<p>Return whether the configuration can be represented as valid JSON.</p>
<ul>
<li><strong>Return type:</strong>
bool</li>
</ul>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="class-messagebusconfig"><em>class</em> MessageBusConfig<a href="#class-messagebusconfig" class="hash-link" aria-label="Direct link to class-messagebusconfig" title="Direct link to class-messagebusconfig">​</a></h3>
<p>Bases: <a href="#posei_trader.common.config.PoseiConfig"><code>PoseiConfig</code></a></p>
<p>Configuration for <code>MessageBus</code> instances.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>database</strong> (<a href="#posei_trader.common.config.DatabaseConfig"><em>DatabaseConfig</em></a> <em>,</em> <em>optional</em>) – The configuration for the message bus backing database.</li>
<li><strong>encoding</strong> (<em>str</em> <em>,</em>  <em>{&#x27;msgpack&#x27;</em> <em>,</em>  <em>&#x27;json&#x27;}</em> <em>,</em> <em>default &#x27;msgpack&#x27;</em>) – The encoding for database operations, controls the type of serializer used.</li>
<li><strong>timestamps_as_iso8601</strong> – If timestamps should be persisted as ISO 8601 strings.
If False then will persit as UNIX nanoseconds.</li>
<li><strong>False</strong> (<em>default</em>) – If timestamps should be persisted as ISO 8601 strings.
If False then will persit as UNIX nanoseconds.</li>
<li><strong>buffer_interval_ms</strong> (<em>PositiveInt</em> <em>,</em> <em>optional</em>) – The buffer interval (milliseconds) between pipelined/batched transactions.
The recommended range if using buffered pipeling is [10, 1000] milliseconds,
with a good compromise being 100 milliseconds.</li>
<li><strong>autotrim_mins</strong> (<em>int</em> <em>,</em> <em>optional</em>) – The lookback window in minutes for automatic stream trimming.
The actual window may extend up to one minute beyond the specified value since streams are
trimmed at most once every minute.
Note that this feature requires Redis version 6.2 or higher; otherwise it will result
in a command syntax error.</li>
<li><strong>use_trader_prefix</strong> (<em>bool</em> <em>,</em> <em>default True</em>) – If a ‘trader-’ prefix is used for stream names.</li>
<li><strong>use_trader_id</strong> (<em>bool</em> <em>,</em> <em>default True</em>) – If the traders ID is used for stream names.</li>
<li><strong>use_instance_id</strong> (<em>bool</em> <em>,</em> <em>default False</em>) – If the traders instance ID is used for stream names.</li>
<li><strong>streams_prefix</strong> (<em>str</em> <em>,</em> <em>default &#x27;stream&#x27;</em>) – The prefix for externally published stream names (must have a database config).
If use_trader_id and use_instance_id are <em>both</em> false, then it becomes possible for
many traders to be configured to write to the same streams.</li>
<li><strong>stream_per_topic</strong> (<em>bool</em> <em>,</em> <em>default True</em>) – If True, messages will be written to separate streams per topic.
If False, all messages will be written to the same stream.</li>
<li><strong>external_streams</strong> (<em>list</em> *[*<em>str</em> <em>]</em> <em>,</em> <em>optional</em>) – The external stream keys the node will listen to for publishing deserialized message
payloads on the internal message bus.</li>
<li><strong>types_filter</strong> (<em>list</em> *[*<em>type</em> <em>]</em> <em>,</em> <em>optional</em>) – A list of serializable types <strong>not</strong> to publish externally.</li>
<li><strong>heartbeat_interval_secs</strong> (<em>PositiveInt</em> <em>,</em> <em>optional</em>) – The heartbeat interval (seconds) to use for trading node health.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="database--databaseconfig--none-1">database <em>: <a href="#posei_trader.common.config.DatabaseConfig">DatabaseConfig</a> | None</em><a href="#database--databaseconfig--none-1" class="hash-link" aria-label="Direct link to database--databaseconfig--none-1" title="Direct link to database--databaseconfig--none-1">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="encoding--str-1">encoding <em>: str</em><a href="#encoding--str-1" class="hash-link" aria-label="Direct link to encoding--str-1" title="Direct link to encoding--str-1">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="timestamps_as_iso8601--bool-1">timestamps_as_iso8601 <em>: bool</em><a href="#timestamps_as_iso8601--bool-1" class="hash-link" aria-label="Direct link to timestamps_as_iso8601--bool-1" title="Direct link to timestamps_as_iso8601--bool-1">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="buffer_interval_ms--annotatedint-msgspecmetagt0--none-1">buffer_interval_ms <em>: Annotated[int, msgspec.Meta(gt=0)] | None</em><a href="#buffer_interval_ms--annotatedint-msgspecmetagt0--none-1" class="hash-link" aria-label="Direct link to buffer_interval_ms--annotatedint-msgspecmetagt0--none-1" title="Direct link to buffer_interval_ms--annotatedint-msgspecmetagt0--none-1">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="autotrim_mins--int--none">autotrim_mins <em>: int | None</em><a href="#autotrim_mins--int--none" class="hash-link" aria-label="Direct link to autotrim_mins--int--none" title="Direct link to autotrim_mins--int--none">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="use_trader_prefix--bool-1">use_trader_prefix <em>: bool</em><a href="#use_trader_prefix--bool-1" class="hash-link" aria-label="Direct link to use_trader_prefix--bool-1" title="Direct link to use_trader_prefix--bool-1">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="use_trader_id--bool">use_trader_id <em>: bool</em><a href="#use_trader_id--bool" class="hash-link" aria-label="Direct link to use_trader_id--bool" title="Direct link to use_trader_id--bool">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="use_instance_id--bool-1">use_instance_id <em>: bool</em><a href="#use_instance_id--bool-1" class="hash-link" aria-label="Direct link to use_instance_id--bool-1" title="Direct link to use_instance_id--bool-1">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="streams_prefix--str">streams_prefix <em>: str</em><a href="#streams_prefix--str" class="hash-link" aria-label="Direct link to streams_prefix--str" title="Direct link to streams_prefix--str">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="stream_per_topic--bool">stream_per_topic <em>: bool</em><a href="#stream_per_topic--bool" class="hash-link" aria-label="Direct link to stream_per_topic--bool" title="Direct link to stream_per_topic--bool">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="external_streams--liststr--none">external_streams <em>: list[str] | None</em><a href="#external_streams--liststr--none" class="hash-link" aria-label="Direct link to external_streams--liststr--none" title="Direct link to external_streams--liststr--none">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="types_filter--listtype--none">types_filter <em>: list[type] | None</em><a href="#types_filter--listtype--none" class="hash-link" aria-label="Direct link to types_filter--listtype--none" title="Direct link to types_filter--listtype--none">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="heartbeat_interval_secs--annotatedint-msgspecmetagt0--none">heartbeat_interval_secs <em>: Annotated[int, msgspec.Meta(gt=0)] | None</em><a href="#heartbeat_interval_secs--annotatedint-msgspecmetagt0--none" class="hash-link" aria-label="Direct link to heartbeat_interval_secs--annotatedint-msgspecmetagt0--none" title="Direct link to heartbeat_interval_secs--annotatedint-msgspecmetagt0--none">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="dict--dictstr-any-18">dict() → dict[str, Any]<a href="#dict--dictstr-any-18" class="hash-link" aria-label="Direct link to dict() → dict[str, Any]" title="Direct link to dict() → dict[str, Any]">​</a></h4>
<p>Return a dictionary representation of the configuration.</p>
<ul>
<li><strong>Return type:</strong>
dict[str, Any]</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="classmethod-fully_qualified_name--str-18"><em>classmethod</em> fully_qualified_name() → str<a href="#classmethod-fully_qualified_name--str-18" class="hash-link" aria-label="Direct link to classmethod-fully_qualified_name--str-18" title="Direct link to classmethod-fully_qualified_name--str-18">​</a></h4>
<p>Return the fully qualified name for the PoseiConfig class.</p>
<ul>
<li><strong>Return type:</strong>
str</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="property-id--str-18"><em>property</em> id <em>: str</em><a href="#property-id--str-18" class="hash-link" aria-label="Direct link to property-id--str-18" title="Direct link to property-id--str-18">​</a></h4>
<p>Return the hashed identifier for the configuration.</p>
<ul>
<li><strong>Return type:</strong>
str</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="json--bytes-18">json() → bytes<a href="#json--bytes-18" class="hash-link" aria-label="Direct link to json() → bytes" title="Direct link to json() → bytes">​</a></h4>
<p>Return serialized JSON encoded bytes.</p>
<ul>
<li><strong>Return type:</strong>
bytes</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="json_primitives--dictstr-any-18">json_primitives() → dict[str, Any]<a href="#json_primitives--dictstr-any-18" class="hash-link" aria-label="Direct link to json_primitives() → dict[str, Any]" title="Direct link to json_primitives() → dict[str, Any]">​</a></h4>
<p>Return a dictionary representation of the configuration with JSON primitive
types as values.</p>
<ul>
<li><strong>Return type:</strong>
dict[str, Any]</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="classmethod-json_schema--dictstr-any-18"><em>classmethod</em> json_schema() → dict[str, Any]<a href="#classmethod-json_schema--dictstr-any-18" class="hash-link" aria-label="Direct link to classmethod-json_schema--dictstr-any-18" title="Direct link to classmethod-json_schema--dictstr-any-18">​</a></h4>
<p>Generate a JSON schema for this configuration class.</p>
<ul>
<li><strong>Return type:</strong>
dict[str, Any]</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="classmethod-parseraw-bytes--str--any-18"><em>classmethod</em> parse(raw: bytes | str) → Any<a href="#classmethod-parseraw-bytes--str--any-18" class="hash-link" aria-label="Direct link to classmethod-parseraw-bytes--str--any-18" title="Direct link to classmethod-parseraw-bytes--str--any-18">​</a></h4>
<p>Return a decoded object of the given cls.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>cls</strong> (<em>type</em>) – The type to decode to.</li>
<li><strong>raw</strong> (<em>bytes</em> <em>or</em> <em>str</em>) – The raw bytes or JSON string to decode.</li>
</ul>
</li>
<li><strong>Return type:</strong>
Any</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="validate--bool-18">validate() → bool<a href="#validate--bool-18" class="hash-link" aria-label="Direct link to validate() → bool" title="Direct link to validate() → bool">​</a></h4>
<p>Return whether the configuration can be represented as valid JSON.</p>
<ul>
<li><strong>Return type:</strong>
bool</li>
</ul>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="class-instrumentproviderconfig"><em>class</em> InstrumentProviderConfig<a href="#class-instrumentproviderconfig" class="hash-link" aria-label="Direct link to class-instrumentproviderconfig" title="Direct link to class-instrumentproviderconfig">​</a></h3>
<p>Bases: <a href="#posei_trader.common.config.PoseiConfig"><code>PoseiConfig</code></a></p>
<p>Configuration for <code>InstrumentProvider</code> instances.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>load_all</strong> (<em>bool</em> <em>,</em> <em>default False</em>) – If all venue instruments should be loaded on start.</li>
<li><strong>load_ids</strong> (<em>frozenset</em> <em>[</em><a href="../model/identifiers/index.htm#posei_trader.model.identifiers.InstrumentId"><em>InstrumentId</em></a> <em>]</em> <em>,</em> <em>optional</em>) – The list of instrument IDs to be loaded on start (if load_all is False).</li>
<li><strong>filters</strong> (<em>frozendict</em> <em>or</em> <em>dict</em> *[*<em>str</em> <em>,</em> <em>Any</em> <em>]</em> <em>,</em> <em>optional</em>) – The venue specific instrument loading filters to apply.</li>
<li><strong>filter_callable</strong> (<em>str</em> <em>,</em> <em>optional</em>) – A fully qualified path to a callable that takes a single argument, instrument and returns a bool, indicating
whether the instrument should be loaded</li>
<li><strong>log_warnings</strong> (<em>bool</em> <em>,</em> <em>default True</em>) – If parser warnings should be logged.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="load_all--bool">load_all <em>: bool</em><a href="#load_all--bool" class="hash-link" aria-label="Direct link to load_all--bool" title="Direct link to load_all--bool">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="load_ids--frozensetinstrumentid--none">load_ids <em>: frozenset[<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.InstrumentId">InstrumentId</a>] | None</em><a href="#load_ids--frozensetinstrumentid--none" class="hash-link" aria-label="Direct link to load_ids--frozensetinstrumentid--none" title="Direct link to load_ids--frozensetinstrumentid--none">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="filters--dictstr-any--none">filters <em>: dict[str, Any] | None</em><a href="#filters--dictstr-any--none" class="hash-link" aria-label="Direct link to filters--dictstr-any--none" title="Direct link to filters--dictstr-any--none">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="filter_callable--str--none">filter_callable <em>: str | None</em><a href="#filter_callable--str--none" class="hash-link" aria-label="Direct link to filter_callable--str--none" title="Direct link to filter_callable--str--none">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="log_warnings--bool">log_warnings <em>: bool</em><a href="#log_warnings--bool" class="hash-link" aria-label="Direct link to log_warnings--bool" title="Direct link to log_warnings--bool">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="dict--dictstr-any-19">dict() → dict[str, Any]<a href="#dict--dictstr-any-19" class="hash-link" aria-label="Direct link to dict() → dict[str, Any]" title="Direct link to dict() → dict[str, Any]">​</a></h4>
<p>Return a dictionary representation of the configuration.</p>
<ul>
<li><strong>Return type:</strong>
dict[str, Any]</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="classmethod-fully_qualified_name--str-19"><em>classmethod</em> fully_qualified_name() → str<a href="#classmethod-fully_qualified_name--str-19" class="hash-link" aria-label="Direct link to classmethod-fully_qualified_name--str-19" title="Direct link to classmethod-fully_qualified_name--str-19">​</a></h4>
<p>Return the fully qualified name for the PoseiConfig class.</p>
<ul>
<li><strong>Return type:</strong>
str</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="property-id--str-19"><em>property</em> id <em>: str</em><a href="#property-id--str-19" class="hash-link" aria-label="Direct link to property-id--str-19" title="Direct link to property-id--str-19">​</a></h4>
<p>Return the hashed identifier for the configuration.</p>
<ul>
<li><strong>Return type:</strong>
str</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="json--bytes-19">json() → bytes<a href="#json--bytes-19" class="hash-link" aria-label="Direct link to json() → bytes" title="Direct link to json() → bytes">​</a></h4>
<p>Return serialized JSON encoded bytes.</p>
<ul>
<li><strong>Return type:</strong>
bytes</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="json_primitives--dictstr-any-19">json_primitives() → dict[str, Any]<a href="#json_primitives--dictstr-any-19" class="hash-link" aria-label="Direct link to json_primitives() → dict[str, Any]" title="Direct link to json_primitives() → dict[str, Any]">​</a></h4>
<p>Return a dictionary representation of the configuration with JSON primitive
types as values.</p>
<ul>
<li><strong>Return type:</strong>
dict[str, Any]</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="classmethod-json_schema--dictstr-any-19"><em>classmethod</em> json_schema() → dict[str, Any]<a href="#classmethod-json_schema--dictstr-any-19" class="hash-link" aria-label="Direct link to classmethod-json_schema--dictstr-any-19" title="Direct link to classmethod-json_schema--dictstr-any-19">​</a></h4>
<p>Generate a JSON schema for this configuration class.</p>
<ul>
<li><strong>Return type:</strong>
dict[str, Any]</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="classmethod-parseraw-bytes--str--any-19"><em>classmethod</em> parse(raw: bytes | str) → Any<a href="#classmethod-parseraw-bytes--str--any-19" class="hash-link" aria-label="Direct link to classmethod-parseraw-bytes--str--any-19" title="Direct link to classmethod-parseraw-bytes--str--any-19">​</a></h4>
<p>Return a decoded object of the given cls.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>cls</strong> (<em>type</em>) – The type to decode to.</li>
<li><strong>raw</strong> (<em>bytes</em> <em>or</em> <em>str</em>) – The raw bytes or JSON string to decode.</li>
</ul>
</li>
<li><strong>Return type:</strong>
Any</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="validate--bool-19">validate() → bool<a href="#validate--bool-19" class="hash-link" aria-label="Direct link to validate() → bool" title="Direct link to validate() → bool">​</a></h4>
<p>Return whether the configuration can be represented as valid JSON.</p>
<ul>
<li><strong>Return type:</strong>
bool</li>
</ul>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="class-orderemulatorconfig"><em>class</em> OrderEmulatorConfig<a href="#class-orderemulatorconfig" class="hash-link" aria-label="Direct link to class-orderemulatorconfig" title="Direct link to class-orderemulatorconfig">​</a></h3>
<p>Bases: <a href="#posei_trader.common.config.PoseiConfig"><code>PoseiConfig</code></a></p>
<p>Configuration for <code>OrderEmulator</code> instances.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>debug</strong> (<em>bool</em> <em>,</em> <em>default False</em>) – If debug mode is active (will provide extra debug logging).</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="debug--bool">debug <em>: bool</em><a href="#debug--bool" class="hash-link" aria-label="Direct link to debug--bool" title="Direct link to debug--bool">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="dict--dictstr-any-20">dict() → dict[str, Any]<a href="#dict--dictstr-any-20" class="hash-link" aria-label="Direct link to dict() → dict[str, Any]" title="Direct link to dict() → dict[str, Any]">​</a></h4>
<p>Return a dictionary representation of the configuration.</p>
<ul>
<li><strong>Return type:</strong>
dict[str, Any]</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="classmethod-fully_qualified_name--str-20"><em>classmethod</em> fully_qualified_name() → str<a href="#classmethod-fully_qualified_name--str-20" class="hash-link" aria-label="Direct link to classmethod-fully_qualified_name--str-20" title="Direct link to classmethod-fully_qualified_name--str-20">​</a></h4>
<p>Return the fully qualified name for the PoseiConfig class.</p>
<ul>
<li><strong>Return type:</strong>
str</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="property-id--str-20"><em>property</em> id <em>: str</em><a href="#property-id--str-20" class="hash-link" aria-label="Direct link to property-id--str-20" title="Direct link to property-id--str-20">​</a></h4>
<p>Return the hashed identifier for the configuration.</p>
<ul>
<li><strong>Return type:</strong>
str</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="json--bytes-20">json() → bytes<a href="#json--bytes-20" class="hash-link" aria-label="Direct link to json() → bytes" title="Direct link to json() → bytes">​</a></h4>
<p>Return serialized JSON encoded bytes.</p>
<ul>
<li><strong>Return type:</strong>
bytes</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="json_primitives--dictstr-any-20">json_primitives() → dict[str, Any]<a href="#json_primitives--dictstr-any-20" class="hash-link" aria-label="Direct link to json_primitives() → dict[str, Any]" title="Direct link to json_primitives() → dict[str, Any]">​</a></h4>
<p>Return a dictionary representation of the configuration with JSON primitive
types as values.</p>
<ul>
<li><strong>Return type:</strong>
dict[str, Any]</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="classmethod-json_schema--dictstr-any-20"><em>classmethod</em> json_schema() → dict[str, Any]<a href="#classmethod-json_schema--dictstr-any-20" class="hash-link" aria-label="Direct link to classmethod-json_schema--dictstr-any-20" title="Direct link to classmethod-json_schema--dictstr-any-20">​</a></h4>
<p>Generate a JSON schema for this configuration class.</p>
<ul>
<li><strong>Return type:</strong>
dict[str, Any]</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="classmethod-parseraw-bytes--str--any-20"><em>classmethod</em> parse(raw: bytes | str) → Any<a href="#classmethod-parseraw-bytes--str--any-20" class="hash-link" aria-label="Direct link to classmethod-parseraw-bytes--str--any-20" title="Direct link to classmethod-parseraw-bytes--str--any-20">​</a></h4>
<p>Return a decoded object of the given cls.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>cls</strong> (<em>type</em>) – The type to decode to.</li>
<li><strong>raw</strong> (<em>bytes</em> <em>or</em> <em>str</em>) – The raw bytes or JSON string to decode.</li>
</ul>
</li>
<li><strong>Return type:</strong>
Any</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="validate--bool-20">validate() → bool<a href="#validate--bool-20" class="hash-link" aria-label="Direct link to validate() → bool" title="Direct link to validate() → bool">​</a></h4>
<p>Return whether the configuration can be represented as valid JSON.</p>
<ul>
<li><strong>Return type:</strong>
bool</li>
</ul>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="class-actorconfig"><em>class</em> ActorConfig<a href="#class-actorconfig" class="hash-link" aria-label="Direct link to class-actorconfig" title="Direct link to class-actorconfig">​</a></h3>
<p>Bases: <a href="#posei_trader.common.config.PoseiConfig"><code>PoseiConfig</code></a></p>
<p>The base model for all actor configurations.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>component_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.ComponentId"><em>ComponentId</em></a> <em>,</em> <em>optional</em>) – The component ID. If <code>None</code> then the identifier will be taken from
type(self).<em>_name</em>_.</li>
<li><strong>log_events</strong> (<em>bool</em> <em>,</em> <em>default True</em>) – If events should be logged by the actor.
If False, then only warning events and above are logged.</li>
<li><strong>log_commands</strong> (<em>bool</em> <em>,</em> <em>default True</em>) – If commands should be logged by the actor.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="component_id--componentid--none-2">component_id <em>: <a href="../model/identifiers/index.htm#posei_trader.model.identifiers.ComponentId">ComponentId</a> | None</em><a href="#component_id--componentid--none-2" class="hash-link" aria-label="Direct link to component_id--componentid--none-2" title="Direct link to component_id--componentid--none-2">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="log_events--bool-2">log_events <em>: bool</em><a href="#log_events--bool-2" class="hash-link" aria-label="Direct link to log_events--bool-2" title="Direct link to log_events--bool-2">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="log_commands--bool-2">log_commands <em>: bool</em><a href="#log_commands--bool-2" class="hash-link" aria-label="Direct link to log_commands--bool-2" title="Direct link to log_commands--bool-2">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="dict--dictstr-any-21">dict() → dict[str, Any]<a href="#dict--dictstr-any-21" class="hash-link" aria-label="Direct link to dict() → dict[str, Any]" title="Direct link to dict() → dict[str, Any]">​</a></h4>
<p>Return a dictionary representation of the configuration.</p>
<ul>
<li><strong>Return type:</strong>
dict[str, Any]</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="classmethod-fully_qualified_name--str-21"><em>classmethod</em> fully_qualified_name() → str<a href="#classmethod-fully_qualified_name--str-21" class="hash-link" aria-label="Direct link to classmethod-fully_qualified_name--str-21" title="Direct link to classmethod-fully_qualified_name--str-21">​</a></h4>
<p>Return the fully qualified name for the PoseiConfig class.</p>
<ul>
<li><strong>Return type:</strong>
str</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="property-id--str-21"><em>property</em> id <em>: str</em><a href="#property-id--str-21" class="hash-link" aria-label="Direct link to property-id--str-21" title="Direct link to property-id--str-21">​</a></h4>
<p>Return the hashed identifier for the configuration.</p>
<ul>
<li><strong>Return type:</strong>
str</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="json--bytes-21">json() → bytes<a href="#json--bytes-21" class="hash-link" aria-label="Direct link to json() → bytes" title="Direct link to json() → bytes">​</a></h4>
<p>Return serialized JSON encoded bytes.</p>
<ul>
<li><strong>Return type:</strong>
bytes</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="json_primitives--dictstr-any-21">json_primitives() → dict[str, Any]<a href="#json_primitives--dictstr-any-21" class="hash-link" aria-label="Direct link to json_primitives() → dict[str, Any]" title="Direct link to json_primitives() → dict[str, Any]">​</a></h4>
<p>Return a dictionary representation of the configuration with JSON primitive
types as values.</p>
<ul>
<li><strong>Return type:</strong>
dict[str, Any]</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="classmethod-json_schema--dictstr-any-21"><em>classmethod</em> json_schema() → dict[str, Any]<a href="#classmethod-json_schema--dictstr-any-21" class="hash-link" aria-label="Direct link to classmethod-json_schema--dictstr-any-21" title="Direct link to classmethod-json_schema--dictstr-any-21">​</a></h4>
<p>Generate a JSON schema for this configuration class.</p>
<ul>
<li><strong>Return type:</strong>
dict[str, Any]</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="classmethod-parseraw-bytes--str--any-21"><em>classmethod</em> parse(raw: bytes | str) → Any<a href="#classmethod-parseraw-bytes--str--any-21" class="hash-link" aria-label="Direct link to classmethod-parseraw-bytes--str--any-21" title="Direct link to classmethod-parseraw-bytes--str--any-21">​</a></h4>
<p>Return a decoded object of the given cls.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>cls</strong> (<em>type</em>) – The type to decode to.</li>
<li><strong>raw</strong> (<em>bytes</em> <em>or</em> <em>str</em>) – The raw bytes or JSON string to decode.</li>
</ul>
</li>
<li><strong>Return type:</strong>
Any</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="validate--bool-21">validate() → bool<a href="#validate--bool-21" class="hash-link" aria-label="Direct link to validate() → bool" title="Direct link to validate() → bool">​</a></h4>
<p>Return whether the configuration can be represented as valid JSON.</p>
<ul>
<li><strong>Return type:</strong>
bool</li>
</ul>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="class-importableactorconfig"><em>class</em> ImportableActorConfig<a href="#class-importableactorconfig" class="hash-link" aria-label="Direct link to class-importableactorconfig" title="Direct link to class-importableactorconfig">​</a></h3>
<p>Bases: <a href="#posei_trader.common.config.PoseiConfig"><code>PoseiConfig</code></a></p>
<p>Configuration for an actor instance.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>actor_path</strong> (<em>str</em>) – The fully qualified name of the Actor class.</li>
<li><strong>config_path</strong> (<em>str</em>) – The fully qualified name of the Actor Config class.</li>
<li><strong>config</strong> (<em>dict</em>) – The actor configuration.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="actor_path--str">actor_path <em>: str</em><a href="#actor_path--str" class="hash-link" aria-label="Direct link to actor_path--str" title="Direct link to actor_path--str">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="config_path--str-3">config_path <em>: str</em><a href="#config_path--str-3" class="hash-link" aria-label="Direct link to config_path--str-3" title="Direct link to config_path--str-3">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="config--dict">config <em>: dict</em><a href="#config--dict" class="hash-link" aria-label="Direct link to config--dict" title="Direct link to config--dict">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="dict--dictstr-any-22">dict() → dict[str, Any]<a href="#dict--dictstr-any-22" class="hash-link" aria-label="Direct link to dict() → dict[str, Any]" title="Direct link to dict() → dict[str, Any]">​</a></h4>
<p>Return a dictionary representation of the configuration.</p>
<ul>
<li><strong>Return type:</strong>
dict[str, Any]</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="classmethod-fully_qualified_name--str-22"><em>classmethod</em> fully_qualified_name() → str<a href="#classmethod-fully_qualified_name--str-22" class="hash-link" aria-label="Direct link to classmethod-fully_qualified_name--str-22" title="Direct link to classmethod-fully_qualified_name--str-22">​</a></h4>
<p>Return the fully qualified name for the PoseiConfig class.</p>
<ul>
<li><strong>Return type:</strong>
str</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="property-id--str-22"><em>property</em> id <em>: str</em><a href="#property-id--str-22" class="hash-link" aria-label="Direct link to property-id--str-22" title="Direct link to property-id--str-22">​</a></h4>
<p>Return the hashed identifier for the configuration.</p>
<ul>
<li><strong>Return type:</strong>
str</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="json--bytes-22">json() → bytes<a href="#json--bytes-22" class="hash-link" aria-label="Direct link to json() → bytes" title="Direct link to json() → bytes">​</a></h4>
<p>Return serialized JSON encoded bytes.</p>
<ul>
<li><strong>Return type:</strong>
bytes</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="json_primitives--dictstr-any-22">json_primitives() → dict[str, Any]<a href="#json_primitives--dictstr-any-22" class="hash-link" aria-label="Direct link to json_primitives() → dict[str, Any]" title="Direct link to json_primitives() → dict[str, Any]">​</a></h4>
<p>Return a dictionary representation of the configuration with JSON primitive
types as values.</p>
<ul>
<li><strong>Return type:</strong>
dict[str, Any]</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="classmethod-json_schema--dictstr-any-22"><em>classmethod</em> json_schema() → dict[str, Any]<a href="#classmethod-json_schema--dictstr-any-22" class="hash-link" aria-label="Direct link to classmethod-json_schema--dictstr-any-22" title="Direct link to classmethod-json_schema--dictstr-any-22">​</a></h4>
<p>Generate a JSON schema for this configuration class.</p>
<ul>
<li><strong>Return type:</strong>
dict[str, Any]</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="classmethod-parseraw-bytes--str--any-22"><em>classmethod</em> parse(raw: bytes | str) → Any<a href="#classmethod-parseraw-bytes--str--any-22" class="hash-link" aria-label="Direct link to classmethod-parseraw-bytes--str--any-22" title="Direct link to classmethod-parseraw-bytes--str--any-22">​</a></h4>
<p>Return a decoded object of the given cls.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>cls</strong> (<em>type</em>) – The type to decode to.</li>
<li><strong>raw</strong> (<em>bytes</em> <em>or</em> <em>str</em>) – The raw bytes or JSON string to decode.</li>
</ul>
</li>
<li><strong>Return type:</strong>
Any</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="validate--bool-22">validate() → bool<a href="#validate--bool-22" class="hash-link" aria-label="Direct link to validate() → bool" title="Direct link to validate() → bool">​</a></h4>
<p>Return whether the configuration can be represented as valid JSON.</p>
<ul>
<li><strong>Return type:</strong>
bool</li>
</ul>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="class-actorfactory"><em>class</em> ActorFactory<a href="#class-actorfactory" class="hash-link" aria-label="Direct link to class-actorfactory" title="Direct link to class-actorfactory">​</a></h3>
<p>Bases: <code>object</code></p>
<p>Provides actor creation from importable configurations.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="static-createconfig-importableactorconfig"><em>static</em> create(config: <a href="#posei_trader.common.config.ImportableActorConfig">ImportableActorConfig</a>)<a href="#static-createconfig-importableactorconfig" class="hash-link" aria-label="Direct link to static-createconfig-importableactorconfig" title="Direct link to static-createconfig-importableactorconfig">​</a></h4>
<p>Create an actor from the given configuration.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>config</strong> (<a href="#posei_trader.common.config.ImportableActorConfig"><em>ImportableActorConfig</em></a>) – The configuration for the building step.</li>
<li><strong>Return type:</strong>
<a href="../common/index.htm#posei_trader.common.actor.Actor">Actor</a></li>
<li><strong>Raises:</strong>
<strong>TypeError</strong> – If config is not of type ImportableActorConfig.</li>
</ul>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="class-loggingconfig"><em>class</em> LoggingConfig<a href="#class-loggingconfig" class="hash-link" aria-label="Direct link to class-loggingconfig" title="Direct link to class-loggingconfig">​</a></h3>
<p>Bases: <a href="#nautilus_trader.common.config.NautilusConfig"><code>NautilusConfig</code></a></p>
<p>Configuration for standard output and file logging for a <code>NautilusKernel</code>
instance.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>log_level</strong> (<em>str</em> <em>,</em> <em>default &quot;INFO&quot;</em>) – The minimum log level to write to stdout.
Will always write ERROR level logs to stderr (unless bypass_logging is True).</li>
<li><strong>log_level_file</strong> (<em>str</em> <em>,</em> <em>optional</em>) – The minimum log level to write to a log file.
If <code>None</code> then no file logging will occur.</li>
<li><strong>log_directory</strong> (<em>str</em> <em>,</em> <em>optional</em>) – The path to the log file directory.
If <code>None</code> then will write to the current working directory.</li>
<li><strong>log_file_name</strong> (<em>str</em> <em>,</em> <em>optional</em>) – The custom log file name (will use a ‘.log’ suffix for plain text or ‘.json’ for JSON).
This will override automatic naming, and no daily file rotation will occur.</li>
<li><strong>log_file_format</strong> (<em>str { &#x27;JSON&#x27; }</em> <em>,</em> <em>optional</em>) – The log file format. If <code>None</code> (default) then will log in plain text.</li>
<li><strong>log_file_max_size</strong> (<em>PositiveInt</em> <em>,</em> <em>optional</em>) – The maximum size of log files in bytes before rotation occurs.</li>
<li><strong>log_file_max_backup_count</strong> (<em>NonNegativeInt</em> <em>,</em> <em>default 5</em>) – The maximum number of backup log files to keep when rotating.</li>
<li><strong>log_colors</strong> (<em>bool</em> <em>,</em> <em>default True</em>) – If ANSI codes should be used to produce colored log lines.</li>
<li><strong>log_component_levels</strong> (<em>dict</em> *[*<em>str</em> <em>,</em> <em>LogLevel</em> <em>]</em>) – The additional per component log level filters, where keys are component
IDs (e.g. actor/strategy IDs) and values are log levels.</li>
<li><strong>bypass_logging</strong> (<em>bool</em> <em>,</em> <em>default False</em>) – If all logging should be bypassed.</li>
<li><strong>print_config</strong> (<em>bool</em> <em>,</em> <em>default False</em>) – If the core logging configuration should be printed to stdout at initialization.</li>
<li><strong>use_pyo3</strong> (<em>bool</em> <em>,</em> <em>default False</em>) – If the logging subsystem should be initialized via pyo3,
this isn’t recommended for backtesting as the performance is much lower
but can be useful for seeing logs originating from Rust.</li>
<li><strong>clear_log_file</strong> (<em>bool</em> <em>,</em> <em>default False</em>) – If the log file name should be cleared before being used (e.g. for testing).
Only applies if log_file_name is not <code>None</code>.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="log_level--str">log_level <em>: str</em><a href="#log_level--str" class="hash-link" aria-label="Direct link to log_level--str" title="Direct link to log_level--str">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="log_level_file--str--none">log_level_file <em>: str | None</em><a href="#log_level_file--str--none" class="hash-link" aria-label="Direct link to log_level_file--str--none" title="Direct link to log_level_file--str--none">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="log_directory--str--none">log_directory <em>: str | None</em><a href="#log_directory--str--none" class="hash-link" aria-label="Direct link to log_directory--str--none" title="Direct link to log_directory--str--none">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="log_file_name--str--none">log_file_name <em>: str | None</em><a href="#log_file_name--str--none" class="hash-link" aria-label="Direct link to log_file_name--str--none" title="Direct link to log_file_name--str--none">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="log_file_format--str--none">log_file_format <em>: str | None</em><a href="#log_file_format--str--none" class="hash-link" aria-label="Direct link to log_file_format--str--none" title="Direct link to log_file_format--str--none">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="log_file_max_size--annotatedint-msgspecmetagt0--none">log_file_max_size <em>: Annotated[int, msgspec.Meta(gt=0)] | None</em><a href="#log_file_max_size--annotatedint-msgspecmetagt0--none" class="hash-link" aria-label="Direct link to log_file_max_size--annotatedint-msgspecmetagt0--none" title="Direct link to log_file_max_size--annotatedint-msgspecmetagt0--none">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="log_file_max_backup_count--annotatedint-msgspecmetage0">log_file_max_backup_count <em>: Annotated[int, msgspec.Meta(ge=0)]</em><a href="#log_file_max_backup_count--annotatedint-msgspecmetage0" class="hash-link" aria-label="Direct link to log_file_max_backup_count--annotatedint-msgspecmetage0" title="Direct link to log_file_max_backup_count--annotatedint-msgspecmetage0">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="log_colors--bool">log_colors <em>: bool</em><a href="#log_colors--bool" class="hash-link" aria-label="Direct link to log_colors--bool" title="Direct link to log_colors--bool">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="log_component_levels--dictstr-str--none">log_component_levels <em>: dict[str, str] | None</em><a href="#log_component_levels--dictstr-str--none" class="hash-link" aria-label="Direct link to log_component_levels--dictstr-str--none" title="Direct link to log_component_levels--dictstr-str--none">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="bypass_logging--bool">bypass_logging <em>: bool</em><a href="#bypass_logging--bool" class="hash-link" aria-label="Direct link to bypass_logging--bool" title="Direct link to bypass_logging--bool">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="print_config--bool">print_config <em>: bool</em><a href="#print_config--bool" class="hash-link" aria-label="Direct link to print_config--bool" title="Direct link to print_config--bool">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="use_pyo3--bool">use_pyo3 <em>: bool</em><a href="#use_pyo3--bool" class="hash-link" aria-label="Direct link to use_pyo3--bool" title="Direct link to use_pyo3--bool">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="clear_log_file--bool">clear_log_file <em>: bool</em><a href="#clear_log_file--bool" class="hash-link" aria-label="Direct link to clear_log_file--bool" title="Direct link to clear_log_file--bool">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="dict--dictstr-any-23">dict() → dict[str, Any]<a href="#dict--dictstr-any-23" class="hash-link" aria-label="Direct link to dict() → dict[str, Any]" title="Direct link to dict() → dict[str, Any]">​</a></h4>
<p>Return a dictionary representation of the configuration.</p>
<ul>
<li><strong>Return type:</strong>
dict[str, Any]</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="classmethod-fully_qualified_name--str-23"><em>classmethod</em> fully_qualified_name() → str<a href="#classmethod-fully_qualified_name--str-23" class="hash-link" aria-label="Direct link to classmethod-fully_qualified_name--str-23" title="Direct link to classmethod-fully_qualified_name--str-23">​</a></h4>
<p>Return the fully qualified name for the NautilusConfig class.</p>
<ul>
<li><strong>Return type:</strong>
str</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="property-id--str-23"><em>property</em> id <em>: str</em><a href="#property-id--str-23" class="hash-link" aria-label="Direct link to property-id--str-23" title="Direct link to property-id--str-23">​</a></h4>
<p>Return the hashed identifier for the configuration.</p>
<ul>
<li><strong>Return type:</strong>
str</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="json--bytes-23">json() → bytes<a href="#json--bytes-23" class="hash-link" aria-label="Direct link to json() → bytes" title="Direct link to json() → bytes">​</a></h4>
<p>Return serialized JSON encoded bytes.</p>
<ul>
<li><strong>Return type:</strong>
bytes</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="json_primitives--dictstr-any-23">json_primitives() → dict[str, Any]<a href="#json_primitives--dictstr-any-23" class="hash-link" aria-label="Direct link to json_primitives() → dict[str, Any]" title="Direct link to json_primitives() → dict[str, Any]">​</a></h4>
<p>Return a dictionary representation of the configuration with JSON primitive
types as values.</p>
<ul>
<li><strong>Return type:</strong>
dict[str, Any]</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="classmethod-json_schema--dictstr-any-23"><em>classmethod</em> json_schema() → dict[str, Any]<a href="#classmethod-json_schema--dictstr-any-23" class="hash-link" aria-label="Direct link to classmethod-json_schema--dictstr-any-23" title="Direct link to classmethod-json_schema--dictstr-any-23">​</a></h4>
<p>Generate a JSON schema for this configuration class.</p>
<ul>
<li><strong>Return type:</strong>
dict[str, Any]</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="classmethod-parseraw-bytes--str--any-23"><em>classmethod</em> parse(raw: bytes | str) → Any<a href="#classmethod-parseraw-bytes--str--any-23" class="hash-link" aria-label="Direct link to classmethod-parseraw-bytes--str--any-23" title="Direct link to classmethod-parseraw-bytes--str--any-23">​</a></h4>
<p>Return a decoded object of the given cls.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>cls</strong> (<em>type</em>) – The type to decode to.</li>
<li><strong>raw</strong> (<em>bytes</em> <em>or</em> <em>str</em>) – The raw bytes or JSON string to decode.</li>
</ul>
</li>
<li><strong>Return type:</strong>
Any</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="validate--bool-23">validate() → bool<a href="#validate--bool-23" class="hash-link" aria-label="Direct link to validate() → bool" title="Direct link to validate() → bool">​</a></h4>
<p>Return whether the configuration can be represented as valid JSON.</p>
<ul>
<li><strong>Return type:</strong>
bool</li>
</ul>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="class-importablefactoryconfig"><em>class</em> ImportableFactoryConfig<a href="#class-importablefactoryconfig" class="hash-link" aria-label="Direct link to class-importablefactoryconfig" title="Direct link to class-importablefactoryconfig">​</a></h3>
<p>Bases: <a href="#nautilus_trader.common.config.NautilusConfig"><code>NautilusConfig</code></a></p>
<p>Represents an importable (JSON) factory config.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="path--str">path <em>: str</em><a href="#path--str" class="hash-link" aria-label="Direct link to path--str" title="Direct link to path--str">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="create">create()<a href="#create" class="hash-link" aria-label="Direct link to create()" title="Direct link to create()">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="dict--dictstr-any-24">dict() → dict[str, Any]<a href="#dict--dictstr-any-24" class="hash-link" aria-label="Direct link to dict() → dict[str, Any]" title="Direct link to dict() → dict[str, Any]">​</a></h4>
<p>Return a dictionary representation of the configuration.</p>
<ul>
<li><strong>Return type:</strong>
dict[str, Any]</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="classmethod-fully_qualified_name--str-24"><em>classmethod</em> fully_qualified_name() → str<a href="#classmethod-fully_qualified_name--str-24" class="hash-link" aria-label="Direct link to classmethod-fully_qualified_name--str-24" title="Direct link to classmethod-fully_qualified_name--str-24">​</a></h4>
<p>Return the fully qualified name for the NautilusConfig class.</p>
<ul>
<li><strong>Return type:</strong>
str</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="property-id--str-24"><em>property</em> id <em>: str</em><a href="#property-id--str-24" class="hash-link" aria-label="Direct link to property-id--str-24" title="Direct link to property-id--str-24">​</a></h4>
<p>Return the hashed identifier for the configuration.</p>
<ul>
<li><strong>Return type:</strong>
str</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="json--bytes-24">json() → bytes<a href="#json--bytes-24" class="hash-link" aria-label="Direct link to json() → bytes" title="Direct link to json() → bytes">​</a></h4>
<p>Return serialized JSON encoded bytes.</p>
<ul>
<li><strong>Return type:</strong>
bytes</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="json_primitives--dictstr-any-24">json_primitives() → dict[str, Any]<a href="#json_primitives--dictstr-any-24" class="hash-link" aria-label="Direct link to json_primitives() → dict[str, Any]" title="Direct link to json_primitives() → dict[str, Any]">​</a></h4>
<p>Return a dictionary representation of the configuration with JSON primitive
types as values.</p>
<ul>
<li><strong>Return type:</strong>
dict[str, Any]</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="classmethod-json_schema--dictstr-any-24"><em>classmethod</em> json_schema() → dict[str, Any]<a href="#classmethod-json_schema--dictstr-any-24" class="hash-link" aria-label="Direct link to classmethod-json_schema--dictstr-any-24" title="Direct link to classmethod-json_schema--dictstr-any-24">​</a></h4>
<p>Generate a JSON schema for this configuration class.</p>
<ul>
<li><strong>Return type:</strong>
dict[str, Any]</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="classmethod-parseraw-bytes--str--any-24"><em>classmethod</em> parse(raw: bytes | str) → Any<a href="#classmethod-parseraw-bytes--str--any-24" class="hash-link" aria-label="Direct link to classmethod-parseraw-bytes--str--any-24" title="Direct link to classmethod-parseraw-bytes--str--any-24">​</a></h4>
<p>Return a decoded object of the given cls.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>cls</strong> (<em>type</em>) – The type to decode to.</li>
<li><strong>raw</strong> (<em>bytes</em> <em>or</em> <em>str</em>) – The raw bytes or JSON string to decode.</li>
</ul>
</li>
<li><strong>Return type:</strong>
Any</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="validate--bool-24">validate() → bool<a href="#validate--bool-24" class="hash-link" aria-label="Direct link to validate() → bool" title="Direct link to validate() → bool">​</a></h4>
<p>Return whether the configuration can be represented as valid JSON.</p>
<ul>
<li><strong>Return type:</strong>
bool</li>
</ul>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="class-importableconfig"><em>class</em> ImportableConfig<a href="#class-importableconfig" class="hash-link" aria-label="Direct link to class-importableconfig" title="Direct link to class-importableconfig">​</a></h3>
<p>Bases: <a href="#nautilus_trader.common.config.NautilusConfig"><code>NautilusConfig</code></a></p>
<p>Represents an importable configuration (typically live data client or live execution
client).</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="path--str-1">path <em>: str</em><a href="#path--str-1" class="hash-link" aria-label="Direct link to path--str-1" title="Direct link to path--str-1">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="config--dict-1">config <em>: dict</em><a href="#config--dict-1" class="hash-link" aria-label="Direct link to config--dict-1" title="Direct link to config--dict-1">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="factory--importablefactoryconfig--none">factory <em>: <a href="#nautilus_trader.common.config.ImportableFactoryConfig">ImportableFactoryConfig</a> | None</em><a href="#factory--importablefactoryconfig--none" class="hash-link" aria-label="Direct link to factory--importablefactoryconfig--none" title="Direct link to factory--importablefactoryconfig--none">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="static-is_importabledata-dict--bool"><em>static</em> is_importable(data: dict) → bool<a href="#static-is_importabledata-dict--bool" class="hash-link" aria-label="Direct link to static-is_importabledata-dict--bool" title="Direct link to static-is_importabledata-dict--bool">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="create-1">create()<a href="#create-1" class="hash-link" aria-label="Direct link to create()" title="Direct link to create()">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="dict--dictstr-any-25">dict() → dict[str, Any]<a href="#dict--dictstr-any-25" class="hash-link" aria-label="Direct link to dict() → dict[str, Any]" title="Direct link to dict() → dict[str, Any]">​</a></h4>
<p>Return a dictionary representation of the configuration.</p>
<ul>
<li><strong>Return type:</strong>
dict[str, Any]</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="classmethod-fully_qualified_name--str-25"><em>classmethod</em> fully_qualified_name() → str<a href="#classmethod-fully_qualified_name--str-25" class="hash-link" aria-label="Direct link to classmethod-fully_qualified_name--str-25" title="Direct link to classmethod-fully_qualified_name--str-25">​</a></h4>
<p>Return the fully qualified name for the NautilusConfig class.</p>
<ul>
<li><strong>Return type:</strong>
str</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="property-id--str-25"><em>property</em> id <em>: str</em><a href="#property-id--str-25" class="hash-link" aria-label="Direct link to property-id--str-25" title="Direct link to property-id--str-25">​</a></h4>
<p>Return the hashed identifier for the configuration.</p>
<ul>
<li><strong>Return type:</strong>
str</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="json--bytes-25">json() → bytes<a href="#json--bytes-25" class="hash-link" aria-label="Direct link to json() → bytes" title="Direct link to json() → bytes">​</a></h4>
<p>Return serialized JSON encoded bytes.</p>
<ul>
<li><strong>Return type:</strong>
bytes</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="json_primitives--dictstr-any-25">json_primitives() → dict[str, Any]<a href="#json_primitives--dictstr-any-25" class="hash-link" aria-label="Direct link to json_primitives() → dict[str, Any]" title="Direct link to json_primitives() → dict[str, Any]">​</a></h4>
<p>Return a dictionary representation of the configuration with JSON primitive
types as values.</p>
<ul>
<li><strong>Return type:</strong>
dict[str, Any]</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="classmethod-json_schema--dictstr-any-25"><em>classmethod</em> json_schema() → dict[str, Any]<a href="#classmethod-json_schema--dictstr-any-25" class="hash-link" aria-label="Direct link to classmethod-json_schema--dictstr-any-25" title="Direct link to classmethod-json_schema--dictstr-any-25">​</a></h4>
<p>Generate a JSON schema for this configuration class.</p>
<ul>
<li><strong>Return type:</strong>
dict[str, Any]</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="classmethod-parseraw-bytes--str--any-25"><em>classmethod</em> parse(raw: bytes | str) → Any<a href="#classmethod-parseraw-bytes--str--any-25" class="hash-link" aria-label="Direct link to classmethod-parseraw-bytes--str--any-25" title="Direct link to classmethod-parseraw-bytes--str--any-25">​</a></h4>
<p>Return a decoded object of the given cls.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>cls</strong> (<em>type</em>) – The type to decode to.</li>
<li><strong>raw</strong> (<em>bytes</em> <em>or</em> <em>str</em>) – The raw bytes or JSON string to decode.</li>
</ul>
</li>
<li><strong>Return type:</strong>
Any</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="validate--bool-25">validate() → bool<a href="#validate--bool-25" class="hash-link" aria-label="Direct link to validate() → bool" title="Direct link to validate() → bool">​</a></h4>
<p>Return whether the configuration can be represented as valid JSON.</p>
<ul>
<li><strong>Return type:</strong>
bool</li>
</ul>
<h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="data">Data<a href="#data" class="hash-link" aria-label="Direct link to Data" title="Direct link to Data">​</a></h2>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="class-dataengineconfig"><em>class</em> DataEngineConfig<a href="#class-dataengineconfig" class="hash-link" aria-label="Direct link to class-dataengineconfig" title="Direct link to class-dataengineconfig">​</a></h3>
<p>Bases: <a href="#nautilus_trader.common.config.NautilusConfig"><code>NautilusConfig</code></a></p>
<p>Configuration for <code>DataEngine</code> instances.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>time_bars_interval_type</strong> (<em>str</em> <em>,</em> <em>default &#x27;left-open&#x27;</em>) – Determines the type of interval used for time aggregation.
<ul>
<li>‘left-open’: start time is excluded and end time is included (default).</li>
<li>‘right-open’: start time is included and end time is excluded.</li>
</ul>
</li>
<li><strong>time_bars_timestamp_on_close</strong> (<em>bool</em> <em>,</em> <em>default True</em>) – If time bar aggregators will timestamp ts_event on bar close.
If False, then will timestamp on bar open.</li>
<li><strong>time_bars_skip_first_non_full_bar</strong> (<em>bool</em> <em>,</em> <em>default False</em>) – If time bar aggregators will skip emitting a bar if the aggregation starts mid-interval.</li>
<li><strong>time_bars_build_with_no_updates</strong> (<em>bool</em> <em>,</em> <em>default True</em>) – If time bar aggregators will build and emit bars with no new market updates.</li>
<li><strong>time_bars_origin_offset</strong> (<em>dict</em> <em>[</em><a href="../model/data/index.htm#nautilus_trader.model.data.BarAggregation"><em>BarAggregation</em></a> <em>,</em> <em>pd.Timedelta</em> <em>|</em> <em>pd.DateOffset</em> <em>]</em> <em>,</em> <em>optional</em>) – A dictionary mapping time bar aggregations to their origin time offsets.</li>
<li><strong>time_bars_build_delay</strong> (<em>int</em> <em>,</em> <em>default 0</em>) – The time delay (microseconds) before building and emitting a composite bar type.
15 microseconds can be useful in a backtest context, when aggregating internal bars
from internal bars several times so all messages are processed before a timer triggers.</li>
<li><strong>validate_data_sequence</strong> (<em>bool</em> <em>,</em> <em>default False</em>) – If data objects timestamp sequencing will be validated and handled.</li>
<li><strong>buffer_deltas</strong> (<em>bool</em> <em>,</em> <em>default False</em>) – If order book deltas should be buffered until the F_LAST flag is set for a delta.</li>
<li><strong>external_clients</strong> (<em>list</em> <em>[</em><a href="../model/identifiers/index.htm#nautilus_trader.model.identifiers.ClientId"><em>ClientId</em></a> <em>]</em> <em>,</em> <em>optional</em>) – The client IDs declared for external stream processing.
The data engine will not attempt to send data commands to these client IDs.</li>
<li><strong>debug</strong> (<em>bool</em> <em>,</em> <em>default False</em>) – If debug mode is active (will provide extra debug logging).</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="time_bars_interval_type--str">time_bars_interval_type <em>: str</em><a href="#time_bars_interval_type--str" class="hash-link" aria-label="Direct link to time_bars_interval_type--str" title="Direct link to time_bars_interval_type--str">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="time_bars_timestamp_on_close--bool">time_bars_timestamp_on_close <em>: bool</em><a href="#time_bars_timestamp_on_close--bool" class="hash-link" aria-label="Direct link to time_bars_timestamp_on_close--bool" title="Direct link to time_bars_timestamp_on_close--bool">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="time_bars_skip_first_non_full_bar--bool">time_bars_skip_first_non_full_bar <em>: bool</em><a href="#time_bars_skip_first_non_full_bar--bool" class="hash-link" aria-label="Direct link to time_bars_skip_first_non_full_bar--bool" title="Direct link to time_bars_skip_first_non_full_bar--bool">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="time_bars_build_with_no_updates--bool">time_bars_build_with_no_updates <em>: bool</em><a href="#time_bars_build_with_no_updates--bool" class="hash-link" aria-label="Direct link to time_bars_build_with_no_updates--bool" title="Direct link to time_bars_build_with_no_updates--bool">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="time_bars_origin_offset--dict--none">time_bars_origin_offset <em>: dict | None</em><a href="#time_bars_origin_offset--dict--none" class="hash-link" aria-label="Direct link to time_bars_origin_offset--dict--none" title="Direct link to time_bars_origin_offset--dict--none"> ​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="time_bars_build_delay--int">time_bars_build_delay <em>: int</em><a href="#time_bars_build_delay--int" class="hash-link" aria-label="Direct link to time_bars_build_delay--int" title="Direct link to time_bars_build_delay--int">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="validate_data_sequence--bool">validate_data_sequence <em>: bool</em><a href="#validate_data_sequence--bool" class="hash-link" aria-label="Direct link to validate_data_sequence--bool" title="Direct link to validate_data_sequence--bool">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="buffer_deltas--bool">buffer_deltas <em>: bool</em><a href="#buffer_deltas--bool" class="hash-link" aria-label="Direct link to buffer_deltas--bool" title="Direct link to buffer_deltas--bool">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="external_clients--listclientid--none">external_clients <em>: list[<a href="../model/identifiers/index.htm#nautilus_trader.model.identifiers.ClientId">ClientId</a>] | None</em><a href="#external_clients--listclientid--none" class="hash-link" aria-label="Direct link to external_clients--listclientid--none" title="Direct link to external_clients--listclientid--none">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="debug--bool-1">debug <em>: bool</em><a href="#debug--bool-1" class="hash-link" aria-label="Direct link to debug--bool-1" title="Direct link to debug--bool-1">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="dict--dictstr-any-26">dict() → dict[str, Any]<a href="#dict--dictstr-any-26" class="hash-link" aria-label="Direct link to dict() → dict[str, Any]" title="Direct link to dict() → dict[str, Any]">​</a></h4>
<p>Return a dictionary representation of the configuration.</p>
<ul>
<li><strong>Return type:</strong>
dict[str, Any]</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="classmethod-fully_qualified_name--str-26"><em>classmethod</em> fully_qualified_name() → str<a href="#classmethod-fully_qualified_name--str-26" class="hash-link" aria-label="Direct link to classmethod-fully_qualified_name--str-26" title="Direct link to classmethod-fully_qualified_name--str-26">​</a></h4>
<p>Return the fully qualified name for the NautilusConfig class.</p>
<ul>
<li><strong>Return type:</strong>
str</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="property-id--str-26"><em>property</em> id <em>: str</em><a href="#property-id--str-26" class="hash-link" aria-label="Direct link to property-id--str-26" title="Direct link to property-id--str-26">​</a></h4>
<p>Return the hashed identifier for the configuration.</p>
<ul>
<li><strong>Return type:</strong>
str</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="json--bytes-26">json() → bytes<a href="#json--bytes-26" class="hash-link" aria-label="Direct link to json() → bytes" title="Direct link to json() → bytes">​</a></h4>
<p>Return serialized JSON encoded bytes.</p>
<ul>
<li><strong>Return type:</strong>
bytes</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="json_primitives--dictstr-any-26">json_primitives() → dict[str, Any]<a href="#json_primitives--dictstr-any-26" class="hash-link" aria-label="Direct link to json_primitives() → dict[str, Any]" title="Direct link to json_primitives() → dict[str, Any]">​</a></h4>
<p>Return a dictionary representation of the configuration with JSON primitive
types as values.</p>
<ul>
<li><strong>Return type:</strong>
dict[str, Any]</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="classmethod-json_schema--dictstr-any-26"><em>classmethod</em> json_schema() → dict[str, Any]<a href="#classmethod-json_schema--dictstr-any-26" class="hash-link" aria-label="Direct link to classmethod-json_schema--dictstr-any-26" title="Direct link to classmethod-json_schema--dictstr-any-26">​</a></h4>
<p>Generate a JSON schema for this configuration class.</p>
<ul>
<li><strong>Return type:</strong>
dict[str, Any]</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="classmethod-parseraw-bytes--str--any-26"><em>classmethod</em> parse(raw: bytes | str) → Any<a href="#classmethod-parseraw-bytes--str--any-26" class="hash-link" aria-label="Direct link to classmethod-parseraw-bytes--str--any-26" title="Direct link to classmethod-parseraw-bytes--str--any-26">​</a></h4>
<p>Return a decoded object of the given cls.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>cls</strong> (<em>type</em>) – The type to decode to.</li>
<li><strong>raw</strong> (<em>bytes</em> <em>or</em> <em>str</em>) – The raw bytes or JSON string to decode.</li>
</ul>
</li>
<li><strong>Return type:</strong>
Any</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="validate--bool-26">validate() → bool<a href="#validate--bool-26" class="hash-link" aria-label="Direct link to validate() → bool" title="Direct link to validate() → bool">​</a></h4>
<p>Return whether the configuration can be represented as valid JSON.</p>
<ul>
<li><strong>Return type:</strong>
bool</li>
</ul>
<h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="execution">Execution<a href="#execution" class="hash-link" aria-label="Direct link to Execution" title="Direct link to Execution">​</a></h2>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="class-execengineconfig"><em>class</em> ExecEngineConfig<a href="#class-execengineconfig" class="hash-link" aria-label="Direct link to class-execengineconfig" title="Direct link to class-execengineconfig">​</a></h3>
<p>Bases: <a href="#nautilus_trader.common.config.NautilusConfig"><code>NautilusConfig</code></a></p>
<p>Configuration for <code>ExecutionEngine</code> instances.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>load_cache</strong> (<em>bool</em> <em>,</em> <em>default True</em>) – If the cache should be loaded on initialization.</li>
<li><strong>manage_own_order_books</strong> (<em>bool</em> <em>,</em> <em>default False</em>) – If the execution engine should maintain own/user order books based on commands and events.</li>
<li><strong>snapshot_orders</strong> (<em>bool</em> <em>,</em> <em>default False</em>) – If order state snapshot lists are persisted to a backing database.
Snapshots will be taken at every order state update (when events are applied).</li>
<li><strong>snapshot_positions</strong> (<em>bool</em> <em>,</em> <em>default False</em>) – If position state snapshot lists are persisted to a backing database.
Snapshots will be taken at position opened, changed and closed (when events are applied).
To include the unrealized PnL in the snapshot then quotes for the positions instrument must
be available in the cache.</li>
<li><strong>snapshot_positions_interval_secs</strong> (<em>PositiveFloat</em> <em>,</em> <em>optional</em>) – The interval (seconds) at which <em>additional</em> position state snapshots are persisted to a
backing database.
If <code>None</code> then no additional snapshots will be taken.
To include unrealized PnL in these snapshots, quotes for the position’s instrument must be
available in the cache.</li>
<li><strong>debug</strong> (<em>bool</em> <em>,</em> <em>default False</em>) – If debug mode is active (will provide extra debug logging).</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="load_cache--bool">load_cache <em>: bool</em><a href="#load_cache--bool" class="hash-link" aria-label="Direct link to load_cache--bool" title="Direct link to load_cache--bool">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="manage_own_order_books--bool">manage_own_order_books <em>: bool</em><a href="#manage_own_order_books--bool" class="hash-link" aria-label="Direct link to manage_own_order_books--bool" title="Direct link to manage_own_order_books--bool">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="snapshot_orders--bool">snapshot_orders <em>: bool</em><a href="#snapshot_orders--bool" class="hash-link" aria-label="Direct link to snapshot_orders--bool" title="Direct link to snapshot_orders--bool">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="snapshot_positions--bool">snapshot_positions <em>: bool</em><a href="#snapshot_positions--bool" class="hash-link" aria-label="Direct link to snapshot_positions--bool" title="Direct link to snapshot_positions--bool">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="snapshot_positions_interval_secs--annotatedfloat-msgspecmetagt00--none">snapshot_positions_interval_secs <em>: Annotated[float, msgspec.Meta(gt=0.0)] | None</em><a href="#snapshot_positions_interval_secs--annotatedfloat-msgspecmetagt00--none" class="hash-link" aria-label="Direct link to snapshot_positions_interval_secs--annotatedfloat-msgspecmetagt00--none" title="Direct link to snapshot_positions_interval_secs--annotatedfloat-msgspecmetagt00--none">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="debug--bool-2">debug <em>: bool</em><a href="#debug--bool-2" class="hash-link" aria-label="Direct link to debug--bool-2" title="Direct link to debug--bool-2">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="dict--dictstr-any-27">dict() → dict[str, Any]<a href="#dict--dictstr-any-27" class="hash-link" aria-label="Direct link to dict() → dict[str, Any]" title="Direct link to dict() → dict[str, Any]">​</a></h4>
<p>Return a dictionary representation of the configuration.</p>
<ul>
<li><strong>Return type:</strong>
dict[str, Any]</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="classmethod-fully_qualified_name--str-27"><em>classmethod</em> fully_qualified_name() → str<a href="#classmethod-fully_qualified_name--str-27" class="hash-link" aria-label="Direct link to classmethod-fully_qualified_name--str-27" title="Direct link to classmethod-fully_qualified_name--str-27">​</a></h4>
<p>Return the fully qualified name for the NautilusConfig class.</p>
<ul>
<li><strong>Return type:</strong>
str</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="property-id--str-27"><em>property</em> id <em>: str</em><a href="#property-id--str-27" class="hash-link" aria-label="Direct link to property-id--str-27" title="Direct link to property-id--str-27">​</a></h4>
<p>Return the hashed identifier for the configuration.</p>
<ul>
<li><strong>Return type:</strong>
str</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="json--bytes-27">json() → bytes<a href="#json--bytes-27" class="hash-link" aria-label="Direct link to json() → bytes" title="Direct link to json() → bytes">​</a></h4>
<p>Return serialized JSON encoded bytes.</p>
<ul>
<li><strong>Return type:</strong>
bytes</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="json_primitives--dictstr-any-27">json_primitives() → dict[str, Any]<a href="#json_primitives--dictstr-any-27" class="hash-link" aria-label="Direct link to json_primitives() → dict[str, Any]" title="Direct link to json_primitives() → dict[str, Any]">​</a></h4>
<p>Return a dictionary representation of the configuration with JSON primitive
types as values.</p>
<ul>
<li><strong>Return type:</strong>
dict[str, Any]</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="classmethod-json_schema--dictstr-any-27"><em>classmethod</em> json_schema() → dict[str, Any]<a href="#classmethod-json_schema--dictstr-any-27" class="hash-link" aria-label="Direct link to classmethod-json_schema--dictstr-any-27" title="Direct link to classmethod-json_schema--dictstr-any-27">​</a></h4>
<p>Generate a JSON schema for this configuration class.</p>
<ul>
<li><strong>Return type:</strong>
dict[str, Any]</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="classmethod-parseraw-bytes--str--any-27"><em>classmethod</em> parse(raw: bytes | str) → Any<a href="#classmethod-parseraw-bytes--str--any-27" class="hash-link" aria-label="Direct link to classmethod-parseraw-bytes--str--any-27" title="Direct link to classmethod-parseraw-bytes--str--any-27">​</a></h4>
<p>Return a decoded object of the given cls.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>cls</strong> (<em>type</em>) – The type to decode to.</li>
<li><strong>raw</strong> (<em>bytes</em> <em>or</em> <em>str</em>) – The raw bytes or JSON string to decode.</li>
</ul>
</li>
<li><strong>Return type:</strong>
Any</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="validate--bool-27">validate() → bool<a href="#validate--bool-27" class="hash-link" aria-label="Direct link to validate() → bool" title="Direct link to validate() → bool">​</a></h4>
<p>Return whether the configuration can be represented as valid JSON.</p>
<ul>
<li><strong>Return type:</strong>
bool</li>
</ul>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="class-execalgorithmconfig"><em>class</em> ExecAlgorithmConfig<a href="#class-execalgorithmconfig" class="hash-link" aria-label="Direct link to class-execalgorithmconfig" title="Direct link to class-execalgorithmconfig">​</a></h3>
<p>Bases: <a href="#nautilus_trader.common.config.NautilusConfig"><code>NautilusConfig</code></a></p>
<p>The base model for all execution algorithm configurations.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>exec_algorithm_id</strong> (<a href="../model/identifiers/index.htm#nautilus_trader.model.identifiers.ExecAlgorithmId"><em>ExecAlgorithmId</em></a> <em>,</em> <em>optional</em>) – The unique ID for the execution algorithm.
If not <code>None</code> then will become the execution algorithm ID.</li>
<li><strong>log_events</strong> (<em>bool</em> <em>,</em> <em>default True</em>) – If events should be logged by the execution algorithm.
If False, then only warning events and above are logged.</li>
<li><strong>log_commands</strong> (<em>bool</em> <em>,</em> <em>default True</em>) – If commands should be logged by the execution algorithm.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="exec_algorithm_id--execalgorithmid--none">exec_algorithm_id <em>: <a href="../model/identifiers/index.htm#nautilus_trader.model.identifiers.ExecAlgorithmId">ExecAlgorithmId</a> | None</em><a href="#exec_algorithm_id--execalgorithmid--none" class="hash-link" aria-label="Direct link to exec_algorithm_id--execalgorithmid--none" title="Direct link to exec_algorithm_id--execalgorithmid--none">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="log_events--bool-3">log_events <em>: bool</em><a href="#log_events--bool-3" class="hash-link" aria-label="Direct link to log_events--bool-3" title="Direct link to log_events--bool-3">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="log_commands--bool-3">log_commands <em>: bool</em><a href="#log_commands--bool-3" class="hash-link" aria-label="Direct link to log_commands--bool-3" title="Direct link to log_commands--bool-3">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="dict--dictstr-any-28">dict() → dict[str, Any]<a href="#dict--dictstr-any-28" class="hash-link" aria-label="Direct link to dict() → dict[str, Any]" title="Direct link to dict() → dict[str, Any]">​</a></h4>
<p>Return a dictionary representation of the configuration.</p>
<ul>
<li><strong>Return type:</strong>
dict[str, Any]</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="classmethod-fully_qualified_name--str-28"><em>classmethod</em> fully_qualified_name() → str<a href="#classmethod-fully_qualified_name--str-28" class="hash-link" aria-label="Direct link to classmethod-fully_qualified_name--str-28" title="Direct link to classmethod-fully_qualified_name--str-28">​</a></h4>
<p>Return the fully qualified name for the NautilusConfig class.</p>
<ul>
<li><strong>Return type:</strong>
str</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="property-id--str-28"><em>property</em> id <em>: str</em><a href="#property-id--str-28" class="hash-link" aria-label="Direct link to property-id--str-28" title="Direct link to property-id--str-28">​</a></h4>
<p>Return the hashed identifier for the configuration.</p>
<ul>
<li><strong>Return type:</strong>
str</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="json--bytes-28">json() → bytes<a href="#json--bytes-28" class="hash-link" aria-label="Direct link to json() → bytes" title="Direct link to json() → bytes">​</a></h4>
<p>Return serialized JSON encoded bytes.</p>
<ul>
<li><strong>Return type:</strong>
bytes</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="json_primitives--dictstr-any-28">json_primitives() → dict[str, Any]<a href="#json_primitives--dictstr-any-28" class="hash-link" aria-label="Direct link to json_primitives() → dict[str, Any]" title="Direct link to json_primitives() → dict[str, Any]">​</a></h4>
<p>Return a dictionary representation of the configuration with JSON primitive
types as values.</p>
<ul>
<li><strong>Return type:</strong>
dict[str, Any]</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="classmethod-json_schema--dictstr-any-28"><em>classmethod</em> json_schema() → dict[str, Any]<a href="#classmethod-json_schema--dictstr-any-28" class="hash-link" aria-label="Direct link to classmethod-json_schema--dictstr-any-28" title="Direct link to classmethod-json_schema--dictstr-any-28">​</a></h4>
<p>Generate a JSON schema for this configuration class.</p>
<ul>
<li><strong>Return type:</strong>
dict[str, Any]</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="classmethod-parseraw-bytes--str--any-28"><em>classmethod</em> parse(raw: bytes | str) → Any<a href="#classmethod-parseraw-bytes--str--any-28" class="hash-link" aria-label="Direct link to classmethod-parseraw-bytes--str--any-28" title="Direct link to classmethod-parseraw-bytes--str--any-28">​</a></h4>
<p>Return a decoded object of the given cls.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>cls</strong> (<em>type</em>) – The type to decode to.</li>
<li><strong>raw</strong> (<em>bytes</em> <em>or</em> <em>str</em>) – The raw bytes or JSON string to decode.</li>
</ul>
</li>
<li><strong>Return type:</strong>
Any</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="validate--bool-28">validate() → bool<a href="#validate--bool-28" class="hash-link" aria-label="Direct link to validate() → bool" title="Direct link to validate() → bool">​</a></h4>
<p>Return whether the configuration can be represented as valid JSON.</p>
<ul>
<li><strong>Return type:</strong>
bool</li>
</ul>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="class-importableexecalgorithmconfig"><em>class</em> ImportableExecAlgorithmConfig<a href="#class-importableexecalgorithmconfig" class="hash-link" aria-label="Direct link to class-importableexecalgorithmconfig" title="Direct link to class-importableexecalgorithmconfig">​</a></h3>
<p>Bases: <a href="#nautilus_trader.common.config.NautilusConfig"><code>NautilusConfig</code></a></p>
<p>Configuration for an execution algorithm instance.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>exec_algorithm_path</strong> (<em>str</em>) – The fully qualified name of the execution algorithm class.</li>
<li><strong>config_path</strong> (<em>str</em>) – The fully qualified name of the config class.</li>
<li><strong>config</strong> (<em>dict</em> *[*<em>str</em> <em>,</em> <em>Any</em> <em>]</em>) – The execution algorithm configuration.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="exec_algorithm_path--str">exec_algorithm_path <em>: str</em><a href="#exec_algorithm_path--str" class="hash-link" aria-label="Direct link to exec_algorithm_path--str" title="Direct link to exec_algorithm_path--str">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="config_path--str-4">config_path <em>: str</em><a href="#config_path--str-4" class="hash-link" aria-label="Direct link to config_path--str-4" title="Direct link to config_path--str-4">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="config--dictstr-any-3">config <em>: dict[str, Any]</em><a href="#config--dictstr-any-3" class="hash-link" aria-label="Direct link to config--dictstr-any-3" title="Direct link to config--dictstr-any-3">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="dict--dictstr-any-29">dict() → dict[str, Any]<a href="#dict--dictstr-any-29" class="hash-link" aria-label="Direct link to dict() → dict[str, Any]" title="Direct link to dict() → dict[str, Any]">​</a></h4>
<p>Return a dictionary representation of the configuration.</p>
<ul>
<li><strong>Return type:</strong>
dict[str, Any]</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="classmethod-fully_qualified_name--str-29"><em>classmethod</em> fully_qualified_name() → str<a href="#classmethod-fully_qualified_name--str-29" class="hash-link" aria-label="Direct link to classmethod-fully_qualified_name--str-29" title="Direct link to classmethod-fully_qualified_name--str-29">​</a></h4>
<p>Return the fully qualified name for the NautilusConfig class.</p>
<ul>
<li><strong>Return type:</strong>
str</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="property-id--str-29"><em>property</em> id <em>: str</em><a href="#property-id--str-29" class="hash-link" aria-label="Direct link to property-id--str-29" title="Direct link to property-id--str-29">​</a></h4>
<p>Return the hashed identifier for the configuration.</p>
<ul>
<li><strong>Return type:</strong>
str</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="json--bytes-29">json() → bytes<a href="#json--bytes-29" class="hash-link" aria-label="Direct link to json() → bytes" title="Direct link to json() → bytes">​</a></h4>
<p>Return serialized JSON encoded bytes.</p>
<ul>
<li><strong>Return type:</strong>
bytes</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="json_primitives--dictstr-any-29">json_primitives() → dict[str, Any]<a href="#json_primitives--dictstr-any-29" class="hash-link" aria-label="Direct link to json_primitives() → dict[str, Any]" title="Direct link to json_primitives() → dict[str, Any]">​</a></h4>
<p>Return a dictionary representation of the configuration with JSON primitive
types as values.</p>
<ul>
<li><strong>Return type:</strong>
dict[str, Any]</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="classmethod-json_schema--dictstr-any-29"><em>classmethod</em> json_schema() → dict[str, Any]<a href="#classmethod-json_schema--dictstr-any-29" class="hash-link" aria-label="Direct link to classmethod-json_schema--dictstr-any-29" title="Direct link to classmethod-json_schema--dictstr-any-29">​</a></h4>
<p>Generate a JSON schema for this configuration class.</p>
<ul>
<li><strong>Return type:</strong>
dict[str, Any]</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="classmethod-parseraw-bytes--str--any-29"><em>classmethod</em> parse(raw: bytes | str) → Any<a href="#classmethod-parseraw-bytes--str--any-29" class="hash-link" aria-label="Direct link to classmethod-parseraw-bytes--str--any-29" title="Direct link to classmethod-parseraw-bytes--str--any-29">​</a></h4>
<p>Return a decoded object of the given cls.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>cls</strong> (<em>type</em>) – The type to decode to.</li>
<li><strong>raw</strong> (<em>bytes</em> <em>or</em> <em>str</em>) – The raw bytes or JSON string to decode.</li>
</ul>
</li>
<li><strong>Return type:</strong>
Any</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="validate--bool-29">validate() → bool<a href="#validate--bool-29" class="hash-link" aria-label="Direct link to validate() → bool" title="Direct link to validate() → bool">​</a></h4>
<p>Return whether the configuration can be represented as valid JSON.</p>
<ul>
<li><strong>Return type:</strong>
bool</li>
</ul>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="class-execalgorithmfactory"><em>class</em> ExecAlgorithmFactory<a href="#class-execalgorithmfactory" class="hash-link" aria-label="Direct link to class-execalgorithmfactory" title="Direct link to class-execalgorithmfactory">​</a></h3>
<p>Bases: <code>object</code></p>
<p>Provides execution algorithm creation from importable configurations.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="static-createconfig-importableexecalgorithmconfig"><em>static</em> create(config: <a href="#nautilus_trader.execution.config.ImportableExecAlgorithmConfig">ImportableExecAlgorithmConfig</a>)<a href="#static-createconfig-importableexecalgorithmconfig" class="hash-link" aria-label="Direct link to static-createconfig-importableexecalgorithmconfig" title="Direct link to static-createconfig-importableexecalgorithmconfig">​</a></h4>
<p>Create an execution algorithm from the given configuration.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>config</strong> (<a href="#nautilus_trader.execution.config.ImportableExecAlgorithmConfig"><em>ImportableExecAlgorithmConfig</em></a>) – The configuration for the building step.</li>
<li><strong>Return type:</strong>
<a href="../execution/index.htm#nautilus_trader.execution.algorithm.ExecAlgorithm">ExecAlgorithm</a></li>
<li><strong>Raises:</strong>
<strong>TypeError</strong> – If config is not of type ImportableExecAlgorithmConfig.</li>
</ul>
<h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="live">Live<a href="#live" class="hash-link" aria-label="Direct link to Live" title="Direct link to Live">​</a></h2>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="class-livedataengineconfig"><em>class</em> LiveDataEngineConfig<a href="#class-livedataengineconfig" class="hash-link" aria-label="Direct link to class-livedataengineconfig" title="Direct link to class-livedataengineconfig">​</a></h3>
<p>Bases: <a href="#nautilus_trader.data.config.DataEngineConfig"><code>DataEngineConfig</code></a></p>
<p>Configuration for <code>LiveDataEngine</code> instances.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>qsize</strong> (<em>PositiveInt</em> <em>,</em> <em>default 100_000</em>) – The queue size for the engines internal queue buffers.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="qsize--positiveint">qsize <em>: PositiveInt</em><a href="#qsize--positiveint" class="hash-link" aria-label="Direct link to qsize--positiveint" title="Direct link to qsize--positiveint">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="buffer_deltas--bool-1">buffer_deltas <em>: bool</em><a href="#buffer_deltas--bool-1" class="hash-link" aria-label="Direct link to buffer_deltas--bool-1" title="Direct link to buffer_deltas--bool-1">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="debug--bool-3">debug <em>: bool</em><a href="#debug--bool-3" class="hash-link" aria-label="Direct link to debug--bool-3" title="Direct link to debug--bool-3">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="dict--dictstr-any-30">dict() → dict[str, Any]<a href="#dict--dictstr-any-30" class="hash-link" aria-label="Direct link to dict() → dict[str, Any]" title="Direct link to dict() → dict[str, Any]">​</a></h4>
<p>Return a dictionary representation of the configuration.</p>
<ul>
<li><strong>Return type:</strong>
dict[str, Any]</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="external_clients--listclientid--none-1">external_clients <em>: list[<a href="../model/identifiers/index.htm#nautilus_trader.model.identifiers.ClientId">ClientId</a>] | None</em><a href="#external_clients--listclientid--none-1" class="hash-link" aria-label="Direct link to external_clients--listclientid--none-1" title="Direct link to external_clients--listclientid--none-1">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="classmethod-fully_qualified_name--str-30"><em>classmethod</em> fully_qualified_name() → str<a href="#classmethod-fully_qualified_name--str-30" class="hash-link" aria-label="Direct link to classmethod-fully_qualified_name--str-30" title="Direct link to classmethod-fully_qualified_name--str-30">​</a></h4>
<p>Return the fully qualified name for the NautilusConfig class.</p>
<ul>
<li><strong>Return type:</strong>
str</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="property-id--str-30"><em>property</em> id <em>: str</em><a href="#property-id--str-30" class="hash-link" aria-label="Direct link to property-id--str-30" title="Direct link to property-id--str-30">​</a></h4>
<p>Return the hashed identifier for the configuration.</p>
<ul>
<li><strong>Return type:</strong>
str</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="json--bytes-30">json() → bytes<a href="#json--bytes-30" class="hash-link" aria-label="Direct link to json() → bytes" title="Direct link to json() → bytes">​</a></h4>
<p>Return serialized JSON encoded bytes.</p>
<ul>
<li><strong>Return type:</strong>
bytes</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="json_primitives--dictstr-any-30">json_primitives() → dict[str, Any]<a href="#json_primitives--dictstr-any-30" class="hash-link" aria-label="Direct link to json_primitives() → dict[str, Any]" title="Direct link to json_primitives() → dict[str, Any]">​</a></h4>
<p>Return a dictionary representation of the configuration with JSON primitive
types as values.</p>
<ul>
<li><strong>Return type:</strong>
dict[str, Any]</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="classmethod-json_schema--dictstr-any-30"><em>classmethod</em> json_schema() → dict[str, Any]<a href="#classmethod-json_schema--dictstr-any-30" class="hash-link" aria-label="Direct link to classmethod-json_schema--dictstr-any-30" title="Direct link to classmethod-json_schema--dictstr-any-30">​</a></h4>
<p>Generate a JSON schema for this configuration class.</p>
<ul>
<li><strong>Return type:</strong>
dict[str, Any]</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="classmethod-parseraw-bytes--str--any-30"><em>classmethod</em> parse(raw: bytes | str) → Any<a href="#classmethod-parseraw-bytes--str--any-30" class="hash-link" aria-label="Direct link to classmethod-parseraw-bytes--str--any-30" title="Direct link to classmethod-parseraw-bytes--str--any-30">​</a></h4>
<p>Return a decoded object of the given cls.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>cls</strong> (<em>type</em>) – The type to decode to.</li>
<li><strong>raw</strong> (<em>bytes</em> <em>or</em> <em>str</em>) – The raw bytes or JSON string to decode.</li>
</ul>
</li>
<li><strong>Return type:</strong>
Any</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="time_bars_build_delay--int-1">time_bars_build_delay <em>: int</em><a href="#time_bars_build_delay--int-1" class="hash-link" aria-label="Direct link to time_bars_build_delay--int-1" title="Direct link to time_bars_build_delay--int-1">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="time_bars_build_with_no_updates--bool-1">time_bars_build_with_no_updates <em>: bool</em><a href="#time_bars_build_with_no_updates--bool-1" class="hash-link" aria-label="Direct link to time_bars_build_with_no_updates--bool-1" title="Direct link to time_bars_build_with_no_updates--bool-1">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="time_bars_interval_type--str-1">time_bars_interval_type <em>: str</em><a href="#time_bars_interval_type--str-1" class="hash-link" aria-label="Direct link to time_bars_interval_type--str-1" title="Direct link to time_bars_interval_type--str-1">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="time_bars_origin_offset--dict--none-1">time_bars_origin_offset <em>: dict | None</em><a href="#time_bars_origin_offset--dict--none-1" class="hash-link" aria-label="Direct link to time_bars_origin_offset--dict--none-1" title="Direct link to time_bars_origin_offset--dict--none-1">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="time_bars_skip_first_non_full_bar--bool-1">time_bars_skip_first_non_full_bar <em>: bool</em><a href="#time_bars_skip_first_non_full_bar--bool-1" class="hash-link" aria-label="Direct link to time_bars_skip_first_non_full_bar--bool-1" title="Direct link to time_bars_skip_first_non_full_bar--bool-1">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="time_bars_timestamp_on_close--bool-1">time_bars_timestamp_on_close <em>: bool</em><a href="#time_bars_timestamp_on_close--bool-1" class="hash-link" aria-label="Direct link to time_bars_timestamp_on_close--bool-1" title="Direct link to time_bars_timestamp_on_close--bool-1">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="validate--bool-30">validate() → bool<a href="#validate--bool-30" class="hash-link" aria-label="Direct link to validate() → bool" title="Direct link to validate() → bool">​</a></h4>
<p>Return whether the configuration can be represented as valid JSON.</p>
<ul>
<li><strong>Return type:</strong>
bool</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="validate_data_sequence--bool-1">validate_data_sequence <em>: bool</em><a href="#validate_data_sequence--bool-1" class="hash-link" aria-label="Direct link to validate_data_sequence--bool-1" title="Direct link to validate_data_sequence--bool-1">​</a></h4>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="class-liveriskengineconfig"><em>class</em> LiveRiskEngineConfig<a href="#class-liveriskengineconfig" class="hash-link" aria-label="Direct link to class-liveriskengineconfig" title="Direct link to class-liveriskengineconfig">​</a></h3>
<p>Bases: <a href="#nautilus_trader.risk.config.RiskEngineConfig"><code>RiskEngineConfig</code></a></p>
<p>Configuration for <code>LiveRiskEngine</code> instances.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>qsize</strong> (<em>PositiveInt</em> <em>,</em> <em>default 100_000</em>) – The queue size for the engines internal queue buffers.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="qsize--annotatedint-msgspecmetagt0">qsize <em>: Annotated[int, msgspec.Meta(gt=0)]</em><a href="#qsize--annotatedint-msgspecmetagt0" class="hash-link" aria-label="Direct link to qsize--annotatedint-msgspecmetagt0" title="Direct link to qsize--annotatedint-msgspecmetagt0">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="bypass--bool">bypass <em>: bool</em><a href="#bypass--bool" class="hash-link" aria-label="Direct link to bypass--bool" title="Direct link to bypass--bool">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="debug--bool-4">debug <em>: bool</em><a href="#debug--bool-4" class="hash-link" aria-label="Direct link to debug--bool-4" title="Direct link to debug--bool-4">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="dict--dictstr-any-31">dict() → dict[str, Any]<a href="#dict--dictstr-any-31" class="hash-link" aria-label="Direct link to dict() → dict[str, Any]" title="Direct link to dict() → dict[str, Any]">​</a></h4>
<p>Return a dictionary representation of the configuration.</p>
<ul>
<li><strong>Return type:</strong>
dict[str, Any]</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="classmethod-fully_qualified_name--str-31"><em>classmethod</em> fully_qualified_name() → str<a href="#classmethod-fully_qualified_name--str-31" class="hash-link" aria-label="Direct link to classmethod-fully_qualified_name--str-31" title="Direct link to classmethod-fully_qualified_name--str-31">​</a></h4>
<p>Return the fully qualified name for the NautilusConfig class.</p>
<ul>
<li><strong>Return type:</strong>
str</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="property-id--str-31"><em>property</em> id <em>: str</em><a href="#property-id--str-31" class="hash-link" aria-label="Direct link to property-id--str-31" title="Direct link to property-id--str-31">​</a></h4>
<p>Return the hashed identifier for the configuration.</p>
<ul>
<li><strong>Return type:</strong>
str</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="json--bytes-31">json() → bytes<a href="#json--bytes-31" class="hash-link" aria-label="Direct link to json() → bytes" title="Direct link to json() → bytes">​</a></h4>
<p>Return serialized JSON encoded bytes.</p>
<ul>
<li><strong>Return type:</strong>
bytes</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="json_primitives--dictstr-any-31">json_primitives() → dict[str, Any]<a href="#json_primitives--dictstr-any-31" class="hash-link" aria-label="Direct link to json_primitives() → dict[str, Any]" title="Direct link to json_primitives() → dict[str, Any]">​</a></h4>
<p>Return a dictionary representation of the configuration with JSON primitive
types as values.</p>
<ul>
<li><strong>Return type:</strong>
dict[str, Any]</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="classmethod-json_schema--dictstr-any-31"><em>classmethod</em> json_schema() → dict[str, Any]<a href="#classmethod-json_schema--dictstr-any-31" class="hash-link" aria-label="Direct link to classmethod-json_schema--dictstr-any-31" title="Direct link to classmethod-json_schema--dictstr-any-31">​</a></h4>
<p>Generate a JSON schema for this configuration class.</p>
<ul>
<li><strong>Return type:</strong>
dict[str, Any]</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="max_notional_per_order--dictstr-int">max_notional_per_order <em>: dict[str, int]</em><a href="#max_notional_per_order--dictstr-int" class="hash-link" aria-label="Direct link to max_notional_per_order--dictstr-int" title="Direct link to max_notional_per_order--dictstr-int">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="max_order_modify_rate--str">max_order_modify_rate <em>: str</em><a href="#max_order_modify_rate--str" class="hash-link" aria-label="Direct link to max_order_modify_rate--str" title="Direct link to max_order_modify_rate--str">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="max_order_submit_rate--str">max_order_submit_rate <em>: str</em><a href="#max_order_submit_rate--str" class="hash-link" aria-label="Direct link to max_order_submit_rate--str" title="Direct link to max_order_submit_rate--str">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="classmethod-parseraw-bytes--str--any-31"><em>classmethod</em> parse(raw: bytes | str) → Any<a href="#classmethod-parseraw-bytes--str--any-31" class="hash-link" aria-label="Direct link to classmethod-parseraw-bytes--str--any-31" title="Direct link to classmethod-parseraw-bytes--str--any-31">​</a></h4>
<p>Return a decoded object of the given cls.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>cls</strong> (<em>type</em>) – The type to decode to.</li>
<li><strong>raw</strong> (<em>bytes</em> <em>or</em> <em>str</em>) – The raw bytes or JSON string to decode.</li>
</ul>
</li>
<li><strong>Return type:</strong>
Any</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="validate--bool-31">validate() → bool<a href="#validate--bool-31" class="hash-link" aria-label="Direct link to validate() → bool" title="Direct link to validate() → bool">​</a></h4>
<p>Return whether the configuration can be represented as valid JSON.</p>
<ul>
<li><strong>Return type:</strong>
bool</li>
</ul>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="class-liveexecengineconfig"><em>class</em> LiveExecEngineConfig<a href="#class-liveexecengineconfig" class="hash-link" aria-label="Direct link to class-liveexecengineconfig" title="Direct link to class-liveexecengineconfig">​</a></h3>
<p>Bases: <a href="#nautilus_trader.execution.config.ExecEngineConfig"><code>ExecEngineConfig</code></a></p>
<p>Configuration for <code>LiveExecEngine</code> instances.</p>
<p>The purpose of the in-flight order check is for live reconciliation, events
emitted from the venue may have been lost at some point - leaving an order
in an intermediate state, the check can recover these events via status reports.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>reconciliation</strong> (<em>bool</em> <em>,</em> <em>default True</em>) – If reconciliation is active at start-up.</li>
<li><strong>reconciliation_lookback_mins</strong> (<em>NonNegativeInt</em> <em>,</em> <em>optional</em>) – The maximum lookback minutes to reconcile state for.
If <code>None</code> or 0 then will use the maximum lookback available from the venues.</li>
<li><strong>filter_unclaimed_external_orders</strong> (<em>bool</em> <em>,</em> <em>default False</em>) – If unclaimed order events with an EXTERNAL strategy ID should be filtered/dropped.</li>
<li><strong>filter_position_reports</strong> (<em>bool</em> <em>,</em> <em>default False</em>) – If position status reports are filtered from reconciliation.
This may be applicable when other nodes are trading the same instrument(s), on the same
account - which could cause conflicts in position status.</li>
<li><strong>generate_missing_orders</strong> (<em>bool</em> <em>,</em> <em>default True</em>) – If MARKET order events will be generated during reconciliation to align discrepancies
between internal and external positions.</li>
<li><strong>inflight_check_interval_ms</strong> (<em>NonNegativeInt</em> <em>,</em> <em>default 2_000</em>) – The interval (milliseconds) between checking whether in-flight orders
have exceeded their time-in-flight threshold.
This should not be set less than the inflight_check_threshold_ms.</li>
<li><strong>inflight_check_threshold_ms</strong> (<em>NonNegativeInt</em> <em>,</em> <em>default 5_000</em>) – The threshold (milliseconds) beyond which an in-flight orders status is checked with the venue.
As a rule of thumb, you shouldn’t consider reducing this setting unless you
are colocated with the venue (to avoid the potential for race conditions).</li>
<li><strong>inflight_check_retries</strong> (<em>NonNegativeInt</em> <em>,</em> <em>default 5</em>) – The number of retry attempts the engine will make to verify the status of an
in-flight order with the venue, should the initial attempt fail.</li>
<li><strong>own_books_audit_interval_secs</strong> (<em>NonNegativeFloat</em> <em>,</em> <em>optional</em>) – The interval (seconds) between auditing all own books against public order books.
The audit will ensure all order statuses are in sync and that no closed orders remain in
an own book. Logs all failures as errors.</li>
<li><strong>open_check_interval_secs</strong> (<em>PositiveFloat</em> <em>,</em> <em>optional</em>) – The interval (seconds) between checks for open orders at the venue.
If there is a discrepancy then an order status report is generated and reconciled.
A recommended setting is between 5-10 seconds, consider API rate limits and the additional
request weights.
If no value is specified then the open order checking task is not started.</li>
<li><strong>open_check_open_only</strong> (<em>bool</em> <em>,</em> <em>default True</em>) – If True, the <strong>check_open_orders</strong> requests only currently open orders from the venue.
If False, it requests the entire order history, which can be a heavy API call.
This parameter only applies if the <strong>check_open_orders</strong> task is running.</li>
<li><strong>purge_closed_orders_interval_mins</strong> (<em>PositiveInt</em> <em>,</em> <em>optional</em>) – The interval (minutes) between purging closed orders from the in-memory cache,
<strong>will not purge from the database</strong>. If None, closed orders will <strong>not</strong> be automatically purged.
A recommended setting is 10-15 minutes for HFT.</li>
<li><strong>purge_closed_orders_buffer_mins</strong> (<em>NonNegativeInt</em> <em>,</em> <em>optional</em>) – The time buffer (minutes) from when an order was closed before it can be purged.
Only orders closed for at least this amount of time will be purged.
A recommended setting is 60 minutes for HFT.</li>
<li><strong>purge_closed_positions_interval_mins</strong> (<em>PositiveInt</em> <em>,</em> <em>optional</em>) – The interval (minutes) between purging closed positions from the in-memory cache,
<strong>will not purge from the database</strong>. If None, closed positions will <strong>not</strong> be automatically purged.
A recommended setting is 10-15 minutes for HFT.</li>
<li><strong>purge_closed_positions_buffer_mins</strong> (<em>NonNegativeInt</em> <em>,</em> <em>optional</em>) – The time buffer (minutes) from when a position was closed before it can be purged.
Only positions closed for at least this amount of time will be purged.
A recommended setting is 60 minutes for HFT.</li>
<li><strong>purge_account_events_interval_mins</strong> (<em>PositiveInt</em> <em>,</em> <em>optional</em>) – The interval (minutes) between purging account events from the in-memory cache,
<strong>will not purge from the database</strong>. If None, closed orders will <strong>not</strong> be automatically purged.
A recommended setting is 10-15 minutes for HFT.</li>
<li><strong>purge_account_events_lookback_mins</strong> (<em>NonNegativeInt</em> <em>,</em> <em>optional</em>) – The time buffer (minutes) from when an account event occurred before it can be purged.
Only events outside the lookback window will be purged.
A recommended setting is 60 minutes for HFT.</li>
<li><strong>qsize</strong> (<em>PositiveInt</em> <em>,</em> <em>default 100_000</em>) – The queue size for the engines internal queue buffers.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="reconciliation--bool">reconciliation <em>: bool</em><a href="#reconciliation--bool" class="hash-link" aria-label="Direct link to reconciliation--bool" title="Direct link to reconciliation--bool">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="reconciliation_lookback_mins--annotatedint-msgspecmetage0--none">reconciliation_lookback_mins <em>: Annotated[int, msgspec.Meta(ge=0)] | None</em><a href="#reconciliation_lookback_mins--annotatedint-msgspecmetage0--none" class="hash-link" aria-label="Direct link to reconciliation_lookback_mins--annotatedint-msgspecmetage0--none" title="Direct link to reconciliation_lookback_mins--annotatedint-msgspecmetage0--none">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="filter_unclaimed_external_orders--bool">filter_unclaimed_external_orders <em>: bool</em><a href="#filter_unclaimed_external_orders--bool" class="hash-link" aria-label="Direct link to filter_unclaimed_external_orders--bool" title="Direct link to filter_unclaimed_external_orders--bool">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="filter_position_reports--bool">filter_position_reports <em>: bool</em><a href="#filter_position_reports--bool" class="hash-link" aria-label="Direct link to filter_position_reports--bool" title="Direct link to filter_position_reports--bool">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="generate_missing_orders--bool">generate_missing_orders <em>: bool</em><a href="#generate_missing_orders--bool" class="hash-link" aria-label="Direct link to generate_missing_orders--bool" title="Direct link to generate_missing_orders--bool">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="inflight_check_interval_ms--annotatedint-msgspecmetage0">inflight_check_interval_ms <em>: Annotated[int, msgspec.Meta(ge=0)]</em><a href="#inflight_check_interval_ms--annotatedint-msgspecmetage0" class="hash-link" aria-label="Direct link to inflight_check_interval_ms--annotatedint-msgspecmetage0" title="Direct link to inflight_check_interval_ms--annotatedint-msgspecmetage0">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="inflight_check_threshold_ms--annotatedint-msgspecmetage0">inflight_check_threshold_ms <em>: Annotated[int, msgspec.Meta(ge=0)]</em><a href="#inflight_check_threshold_ms--annotatedint-msgspecmetage0" class="hash-link" aria-label="Direct link to inflight_check_threshold_ms--annotatedint-msgspecmetage0" title="Direct link to inflight_check_threshold_ms--annotatedint-msgspecmetage0">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="inflight_check_retries--annotatedint-msgspecmetage0">inflight_check_retries <em>: Annotated[int, msgspec.Meta(ge=0)]</em><a href="#inflight_check_retries--annotatedint-msgspecmetage0" class="hash-link" aria-label="Direct link to inflight_check_retries--annotatedint-msgspecmetage0" title="Direct link to inflight_check_retries--annotatedint-msgspecmetage0">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="own_books_audit_interval_secs--annotatedfloat-msgspecmetagt00--none">own_books_audit_interval_secs <em>: Annotated[float, msgspec.Meta(gt=0.0)] | None</em><a href="#own_books_audit_interval_secs--annotatedfloat-msgspecmetagt00--none" class="hash-link" aria-label="Direct link to own_books_audit_interval_secs--annotatedfloat-msgspecmetagt00--none" title="Direct link to own_books_audit_interval_secs--annotatedfloat-msgspecmetagt00--none">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="open_check_interval_secs--annotatedfloat-msgspecmetagt00--none">open_check_interval_secs <em>: Annotated[float, msgspec.Meta(gt=0.0)] | None</em><a href="#open_check_interval_secs--annotatedfloat-msgspecmetagt00--none" class="hash-link" aria-label="Direct link to open_check_interval_secs--annotatedfloat-msgspecmetagt00--none" title="Direct link to open_check_interval_secs--annotatedfloat-msgspecmetagt00--none">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="open_check_open_only--bool">open_check_open_only <em>: bool</em><a href="#open_check_open_only--bool" class="hash-link" aria-label="Direct link to open_check_open_only--bool" title="Direct link to open_check_open_only--bool">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="purge_closed_orders_interval_mins--annotatedint-msgspecmetagt0--none">purge_closed_orders_interval_mins <em>: Annotated[int, msgspec.Meta(gt=0)] | None</em><a href="#purge_closed_orders_interval_mins--annotatedint-msgspecmetagt0--none" class="hash-link" aria-label="Direct link to purge_closed_orders_interval_mins--annotatedint-msgspecmetagt0--none" title="Direct link to purge_closed_orders_interval_mins--annotatedint-msgspecmetagt0--none">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="purge_closed_orders_buffer_mins--annotatedint-msgspecmetage0--none">purge_closed_orders_buffer_mins <em>: Annotated[int, msgspec.Meta(ge=0)] | None</em><a href="#purge_closed_orders_buffer_mins--annotatedint-msgspecmetage0--none" class="hash-link" aria-label="Direct link to purge_closed_orders_buffer_mins--annotatedint-msgspecmetage0--none" title="Direct link to purge_closed_orders_buffer_mins--annotatedint-msgspecmetage0--none">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="purge_closed_positions_interval_mins--annotatedint-msgspecmetagt0--none">purge_closed_positions_interval_mins <em>: Annotated[int, msgspec.Meta(gt=0)] | None</em><a href="#purge_closed_positions_interval_mins--annotatedint-msgspecmetagt0--none" class="hash-link" aria-label="Direct link to purge_closed_positions_interval_mins--annotatedint-msgspecmetagt0--none" title="Direct link to purge_closed_positions_interval_mins--annotatedint-msgspecmetagt0--none">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="purge_closed_positions_buffer_mins--annotatedint-msgspecmetage0--none">purge_closed_positions_buffer_mins <em>: Annotated[int, msgspec.Meta(ge=0)] | None</em><a href="#purge_closed_positions_buffer_mins--annotatedint-msgspecmetage0--none" class="hash-link" aria-label="Direct link to purge_closed_positions_buffer_mins--annotatedint-msgspecmetage0--none" title="Direct link to purge_closed_positions_buffer_mins--annotatedint-msgspecmetage0--none">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="purge_account_events_interval_mins--annotatedint-msgspecmetagt0--none">purge_account_events_interval_mins <em>: Annotated[int, msgspec.Meta(gt=0)] | None</em><a href="#purge_account_events_interval_mins--annotatedint-msgspecmetagt0--none" class="hash-link" aria-label="Direct link to purge_account_events_interval_mins--annotatedint-msgspecmetagt0--none" title="Direct link to purge_account_events_interval_mins--annotatedint-msgspecmetagt0--none">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="purge_account_events_lookback_mins--annotatedint-msgspecmetage0--none">purge_account_events_lookback_mins <em>: Annotated[int, msgspec.Meta(ge=0)] | None</em><a href="#purge_account_events_lookback_mins--annotatedint-msgspecmetage0--none" class="hash-link" aria-label="Direct link to purge_account_events_lookback_mins--annotatedint-msgspecmetage0--none" title="Direct link to purge_account_events_lookback_mins--annotatedint-msgspecmetage0--none">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="qsize--annotatedint-msgspecmetagt0-1">qsize <em>: Annotated[int, msgspec.Meta(gt=0)]</em><a href="#qsize--annotatedint-msgspecmetagt0-1" class="hash-link" aria-label="Direct link to qsize--annotatedint-msgspecmetagt0-1" title="Direct link to qsize--annotatedint-msgspecmetagt0-1">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="debug--bool-5">debug <em>: bool</em><a href="#debug--bool-5" class="hash-link" aria-label="Direct link to debug--bool-5" title="Direct link to debug--bool-5">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="dict--dictstr-any-32">dict() → dict[str, Any]<a href="#dict--dictstr-any-32" class="hash-link" aria-label="Direct link to dict() → dict[str, Any]" title="Direct link to dict() → dict[str, Any]">​</a></h4>
<p>Return a dictionary representation of the configuration.</p>
<ul>
<li><strong>Return type:</strong>
dict[str, Any]</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="classmethod-fully_qualified_name--str-32"><em>classmethod</em> fully_qualified_name() → str<a href="#classmethod-fully_qualified_name--str-32" class="hash-link" aria-label="Direct link to classmethod-fully_qualified_name--str-32" title="Direct link to classmethod-fully_qualified_name--str-32">​</a></h4>
<p>Return the fully qualified name for the NautilusConfig class.</p>
<ul>
<li><strong>Return type:</strong>
str</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="property-id--str-32"><em>property</em> id <em>: str</em><a href="#property-id--str-32" class="hash-link" aria-label="Direct link to property-id--str-32" title="Direct link to property-id--str-32">​</a></h4>
<p>Return the hashed identifier for the configuration.</p>
<ul>
<li><strong>Return type:</strong>
str</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="json--bytes-32">json() → bytes<a href="#json--bytes-32" class="hash-link" aria-label="Direct link to json() → bytes" title="Direct link to json() → bytes">​</a></h4>
<p>Return serialized JSON encoded bytes.</p>
<ul>
<li><strong>Return type:</strong>
bytes</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="json_primitives--dictstr-any-32">json_primitives() → dict[str, Any]<a href="#json_primitives--dictstr-any-32" class="hash-link" aria-label="Direct link to json_primitives() → dict[str, Any]" title="Direct link to json_primitives() → dict[str, Any]">​</a></h4>
<p>Return a dictionary representation of the configuration with JSON primitive
types as values.</p>
<ul>
<li><strong>Return type:</strong>
dict[str, Any]</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="classmethod-json_schema--dictstr-any-32"><em>classmethod</em> json_schema() → dict[str, Any]<a href="#classmethod-json_schema--dictstr-any-32" class="hash-link" aria-label="Direct link to classmethod-json_schema--dictstr-any-32" title="Direct link to classmethod-json_schema--dictstr-any-32">​</a></h4>
<p>Generate a JSON schema for this configuration class.</p>
<ul>
<li><strong>Return type:</strong>
dict[str, Any]</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="load_cache--bool-1">load_cache <em>: bool</em><a href="#load_cache--bool-1" class="hash-link" aria-label="Direct link to load_cache--bool-1" title="Direct link to load_cache--bool-1">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="manage_own_order_books--bool-1">manage_own_order_books <em>: bool</em><a href="#manage_own_order_books--bool-1" class="hash-link" aria-label="Direct link to manage_own_order_books--bool-1" title="Direct link to manage_own_order_books--bool-1">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="classmethod-parseraw-bytes--str--any-32"><em>classmethod</em> parse(raw: bytes | str) → Any<a href="#classmethod-parseraw-bytes--str--any-32" class="hash-link" aria-label="Direct link to classmethod-parseraw-bytes--str--any-32" title="Direct link to classmethod-parseraw-bytes--str--any-32">​</a></h4>
<p>Return a decoded object of the given cls.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>cls</strong> (<em>type</em>) – The type to decode to.</li>
<li><strong>raw</strong> (<em>bytes</em> <em>or</em> <em>str</em>) – The raw bytes or JSON string to decode.</li>
</ul>
</li>
<li><strong>Return type:</strong>
Any</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="snapshot_orders--bool-1">snapshot_orders <em>: bool</em><a href="#snapshot_orders--bool-1" class="hash-link" aria-label="Direct link to snapshot_orders--bool-1" title="Direct link to snapshot_orders--bool-1">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="snapshot_positions--bool-1">snapshot_positions <em>: bool</em><a href="#snapshot_positions--bool-1" class="hash-link" aria-label="Direct link to snapshot_positions--bool-1" title="Direct link to snapshot_positions--bool-1">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="snapshot_positions_interval_secs--annotatedfloat-msgspecmetagt00--none-1">snapshot_positions_interval_secs <em>: Annotated[float, msgspec.Meta(gt=0.0)] | None</em><a href="#snapshot_positions_interval_secs--annotatedfloat-msgspecmetagt00--none-1" class="hash-link" aria-label="Direct link to snapshot_positions_interval_secs--annotatedfloat-msgspecmetagt00--none-1" title="Direct link to snapshot_positions_interval_secs--annotatedfloat-msgspecmetagt00--none-1">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="validate--bool-32">validate() → bool<a href="#validate--bool-32" class="hash-link" aria-label="Direct link to validate() → bool" title="Direct link to validate() → bool">​</a></h4>
<p>Return whether the configuration can be represented as valid JSON.</p>
<ul>
<li><strong>Return type:</strong>
bool</li>
</ul>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="class-routingconfig"><em>class</em> RoutingConfig<a href="#class-routingconfig" class="hash-link" aria-label="Direct link to class-routingconfig" title="Direct link to class-routingconfig">​</a></h3>
<p>Bases: <a href="#nautilus_trader.common.config.NautilusConfig"><code>NautilusConfig</code></a></p>
<p>Configuration for live client message routing.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>default</strong> (<em>bool</em>) – If the client should be registered as the default routing client
(when a specific venue routing cannot be found).</li>
<li><strong>venues</strong> (<em>list</em> *[*<em>str</em> <em>]</em> <em>,</em> <em>optional</em>) – The venues to register for routing.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="default--bool">default <em>: bool</em><a href="#default--bool" class="hash-link" aria-label="Direct link to default--bool" title="Direct link to default--bool">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="venues--frozensetstr--none">venues <em>: frozenset[str] | None</em><a href="#venues--frozensetstr--none" class="hash-link" aria-label="Direct link to venues--frozensetstr--none" title="Direct link to venues--frozensetstr--none">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="dict--dictstr-any-33">dict() → dict[str, Any]<a href="#dict--dictstr-any-33" class="hash-link" aria-label="Direct link to dict() → dict[str, Any]" title="Direct link to dict() → dict[str, Any]">​</a></h4>
<p>Return a dictionary representation of the configuration.</p>
<ul>
<li><strong>Return type:</strong>
dict[str, Any]</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="classmethod-fully_qualified_name--str-33"><em>classmethod</em> fully_qualified_name() → str<a href="#classmethod-fully_qualified_name--str-33" class="hash-link" aria-label="Direct link to classmethod-fully_qualified_name--str-33" title="Direct link to classmethod-fully_qualified_name--str-33">​</a></h4>
<p>Return the fully qualified name for the NautilusConfig class.</p>
<ul>
<li><strong>Return type:</strong>
str</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="property-id--str-33"><em>property</em> id <em>: str</em><a href="#property-id--str-33" class="hash-link" aria-label="Direct link to property-id--str-33" title="Direct link to property-id--str-33">​</a></h4>
<p>Return the hashed identifier for the configuration.</p>
<ul>
<li><strong>Return type:</strong>
str</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="json--bytes-33">json() → bytes<a href="#json--bytes-33" class="hash-link" aria-label="Direct link to json() → bytes" title="Direct link to json() → bytes">​</a></h4>
<p>Return serialized JSON encoded bytes.</p>
<ul>
<li><strong>Return type:</strong>
bytes</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="json_primitives--dictstr-any-33">json_primitives() → dict[str, Any]<a href="#json_primitives--dictstr-any-33" class="hash-link" aria-label="Direct link to json_primitives() → dict[str, Any]" title="Direct link to json_primitives() → dict[str, Any]">​</a></h4>
<p>Return a dictionary representation of the configuration with JSON primitive
types as values.</p>
<ul>
<li><strong>Return type:</strong>
dict[str, Any]</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="classmethod-json_schema--dictstr-any-33"><em>classmethod</em> json_schema() → dict[str, Any]<a href="#classmethod-json_schema--dictstr-any-33" class="hash-link" aria-label="Direct link to classmethod-json_schema--dictstr-any-33" title="Direct link to classmethod-json_schema--dictstr-any-33">​</a></h4>
<p>Generate a JSON schema for this configuration class.</p>
<ul>
<li><strong>Return type:</strong>
dict[str, Any]</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="classmethod-parseraw-bytes--str--any-33"><em>classmethod</em> parse(raw: bytes | str) → Any<a href="#classmethod-parseraw-bytes--str--any-33" class="hash-link" aria-label="Direct link to classmethod-parseraw-bytes--str--any-33" title="Direct link to classmethod-parseraw-bytes--str--any-33">​</a></h4>
<p>Return a decoded object of the given cls.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>cls</strong> (<em>type</em>) – The type to decode to.</li>
<li><strong>raw</strong> (<em>bytes</em> <em>or</em> <em>str</em>) – The raw bytes or JSON string to decode.</li>
</ul>
</li>
<li><strong>Return type:</strong>
Any</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="validate--bool-33">validate() → bool<a href="#validate--bool-33" class="hash-link" aria-label="Direct link to validate() → bool" title="Direct link to validate() → bool">​</a></h4>
<p>Return whether the configuration can be represented as valid JSON.</p>
<ul>
<li><strong>Return type:</strong>
bool</li>
</ul>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="class-livedataclientconfig"><em>class</em> LiveDataClientConfig<a href="#class-livedataclientconfig" class="hash-link" aria-label="Direct link to class-livedataclientconfig" title="Direct link to class-livedataclientconfig">​</a></h3>
<p>Bases: <a href="#nautilus_trader.common.config.NautilusConfig"><code>NautilusConfig</code></a></p>
<p>Configuration for <code>LiveDataClient</code> instances.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>handle_revised_bars</strong> (<em>bool</em>) – If DataClient will emit bar updates when a new bar opens.</li>
<li><strong>instrument_provider</strong> (<a href="#nautilus_trader.common.config.InstrumentProviderConfig"><em>InstrumentProviderConfig</em></a>) – The clients instrument provider configuration.</li>
<li><strong>routing</strong> (<a href="#nautilus_trader.live.config.RoutingConfig"><em>RoutingConfig</em></a>) – The clients message routing config.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="handle_revised_bars--bool">handle_revised_bars <em>: bool</em><a href="#handle_revised_bars--bool" class="hash-link" aria-label="Direct link to handle_revised_bars--bool" title="Direct link to handle_revised_bars--bool">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="instrument_provider--instrumentproviderconfig">instrument_provider <em>: <a href="#nautilus_trader.common.config.InstrumentProviderConfig">InstrumentProviderConfig</a></em><a href="#instrument_provider--instrumentproviderconfig" class="hash-link" aria-label="Direct link to instrument_provider--instrumentproviderconfig" title="Direct link to instrument_provider--instrumentproviderconfig">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="routing--routingconfig">routing <em>: <a href="#nautilus_trader.live.config.RoutingConfig">RoutingConfig</a></em><a href="#routing--routingconfig" class="hash-link" aria-label="Direct link to routing--routingconfig" title="Direct link to routing--routingconfig">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="dict--dictstr-any-34">dict() → dict[str, Any]<a href="#dict--dictstr-any-34" class="hash-link" aria-label="Direct link to dict() → dict[str, Any]" title="Direct link to dict() → dict[str, Any]">​</a></h4>
<p>Return a dictionary representation of the configuration.</p>
<ul>
<li><strong>Return type:</strong>
dict[str, Any]</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="classmethod-fully_qualified_name--str-34"><em>classmethod</em> fully_qualified_name() → str<a href="#classmethod-fully_qualified_name--str-34" class="hash-link" aria-label="Direct link to classmethod-fully_qualified_name--str-34" title="Direct link to classmethod-fully_qualified_name--str-34">​</a></h4>
<p>Return the fully qualified name for the NautilusConfig class.</p>
<ul>
<li><strong>Return type:</strong>
str</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="property-id--str-34"><em>property</em> id <em>: str</em><a href="#property-id--str-34" class="hash-link" aria-label="Direct link to property-id--str-34" title="Direct link to property-id--str-34">​</a></h4>
<p>Return the hashed identifier for the configuration.</p>
<ul>
<li><strong>Return type:</strong>
str</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="json--bytes-34">json() → bytes<a href="#json--bytes-34" class="hash-link" aria-label="Direct link to json() → bytes" title="Direct link to json() → bytes">​</a></h4>
<p>Return serialized JSON encoded bytes.</p>
<ul>
<li><strong>Return type:</strong>
bytes</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="json_primitives--dictstr-any-34">json_primitives() → dict[str, Any]<a href="#json_primitives--dictstr-any-34" class="hash-link" aria-label="Direct link to json_primitives() → dict[str, Any]" title="Direct link to json_primitives() → dict[str, Any]">​</a></h4>
<p>Return a dictionary representation of the configuration with JSON primitive
types as values.</p>
<ul>
<li><strong>Return type:</strong>
dict[str, Any]</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="classmethod-json_schema--dictstr-any-34"><em>classmethod</em> json_schema() → dict[str, Any]<a href="#classmethod-json_schema--dictstr-any-34" class="hash-link" aria-label="Direct link to classmethod-json_schema--dictstr-any-34" title="Direct link to classmethod-json_schema--dictstr-any-34">​</a></h4>
<p>Generate a JSON schema for this configuration class.</p>
<ul>
<li><strong>Return type:</strong>
dict[str, Any]</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="classmethod-parseraw-bytes--str--any-34"><em>classmethod</em> parse(raw: bytes | str) → Any<a href="#classmethod-parseraw-bytes--str--any-34" class="hash-link" aria-label="Direct link to classmethod-parseraw-bytes--str--any-34" title="Direct link to classmethod-parseraw-bytes--str--any-34">​</a></h4>
<p>Return a decoded object of the given cls.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>cls</strong> (<em>type</em>) – The type to decode to.</li>
<li><strong>raw</strong> (<em>bytes</em> <em>or</em> <em>str</em>) – The raw bytes or JSON string to decode.</li>
</ul>
</li>
<li><strong>Return type:</strong>
Any</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="validate--bool-34">validate() → bool<a href="#validate--bool-34" class="hash-link" aria-label="Direct link to validate() → bool" title="Direct link to validate() → bool">​</a></h4>
<p>Return whether the configuration can be represented as valid JSON.</p>
<ul>
<li><strong>Return type:</strong>
bool</li>
</ul>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="class-liveexecclientconfig"><em>class</em> LiveExecClientConfig<a href="#class-liveexecclientconfig" class="hash-link" aria-label="Direct link to class-liveexecclientconfig" title="Direct link to class-liveexecclientconfig">​</a></h3>
<p>Bases: <a href="#nautilus_trader.common.config.NautilusConfig"><code>NautilusConfig</code></a></p>
<p>Configuration for <code>LiveExecutionClient</code> instances.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>instrument_provider</strong> (<a href="#nautilus_trader.common.config.InstrumentProviderConfig"><em>InstrumentProviderConfig</em></a>) – The clients instrument provider configuration.</li>
<li><strong>routing</strong> (<a href="#nautilus_trader.live.config.RoutingConfig"><em>RoutingConfig</em></a>) – The clients message routing config.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="instrument_provider--instrumentproviderconfig-1">instrument_provider <em>: <a href="#nautilus_trader.common.config.InstrumentProviderConfig">InstrumentProviderConfig</a></em><a href="#instrument_provider--instrumentproviderconfig-1" class="hash-link" aria-label="Direct link to instrument_provider--instrumentproviderconfig-1" title="Direct link to instrument_provider--instrumentproviderconfig-1">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="routing--routingconfig-1">routing <em>: <a href="#nautilus_trader.live.config.RoutingConfig">RoutingConfig</a></em><a href="#routing--routingconfig-1" class="hash-link" aria-label="Direct link to routing--routingconfig-1" title="Direct link to routing--routingconfig-1">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="dict--dictstr-any-35">dict() → dict[str, Any]<a href="#dict--dictstr-any-35" class="hash-link" aria-label="Direct link to dict() → dict[str, Any]" title="Direct link to dict() → dict[str, Any]">​</a></h4>
<p>Return a dictionary representation of the configuration.</p>
<ul>
<li><strong>Return type:</strong>
dict[str, Any]</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="classmethod-fully_qualified_name--str-35"><em>classmethod</em> fully_qualified_name() → str<a href="#classmethod-fully_qualified_name--str-35" class="hash-link" aria-label="Direct link to classmethod-fully_qualified_name--str-35" title="Direct link to classmethod-fully_qualified_name--str-35">​</a></h4>
<p>Return the fully qualified name for the NautilusConfig class.</p>
<ul>
<li><strong>Return type:</strong>
str</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="property-id--str-35"><em>property</em> id <em>: str</em><a href="#property-id--str-35" class="hash-link" aria-label="Direct link to property-id--str-35" title="Direct link to property-id--str-35">​</a></h4>
<p>Return the hashed identifier for the configuration.</p>
<ul>
<li><strong>Return type:</strong>
str</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="json--bytes-35">json() → bytes<a href="#json--bytes-35" class="hash-link" aria-label="Direct link to json() → bytes" title="Direct link to json() → bytes">​</a></h4>
<p>Return serialized JSON encoded bytes.</p>
<ul>
<li><strong>Return type:</strong>
bytes</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="json_primitives--dictstr-any-35">json_primitives() → dict[str, Any]<a href="#json_primitives--dictstr-any-35" class="hash-link" aria-label="Direct link to json_primitives() → dict[str, Any]" title="Direct link to json_primitives() → dict[str, Any]">​</a></h4>
<p>Return a dictionary representation of the configuration with JSON primitive
types as values.</p>
<ul>
<li><strong>Return type:</strong>
dict[str, Any]</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="classmethod-json_schema--dictstr-any-35"><em>classmethod</em> json_schema() → dict[str, Any]<a href="#classmethod-json_schema--dictstr-any-35" class="hash-link" aria-label="Direct link to classmethod-json_schema--dictstr-any-35" title="Direct link to classmethod-json_schema--dictstr-any-35">​</a></h4>
<p>Generate a JSON schema for this configuration class.</p>
<ul>
<li><strong>Return type:</strong>
dict[str, Any]</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="classmethod-parseraw-bytes--str--any-35"><em>classmethod</em> parse(raw: bytes | str) → Any<a href="#classmethod-parseraw-bytes--str--any-35" class="hash-link" aria-label="Direct link to classmethod-parseraw-bytes--str--any-35" title="Direct link to classmethod-parseraw-bytes--str--any-35">​</a></h4>
<p>Return a decoded object of the given cls.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>cls</strong> (<em>type</em>) – The type to decode to.</li>
<li><strong>raw</strong> (<em>bytes</em> <em>or</em> <em>str</em>) – The raw bytes or JSON string to decode.</li>
</ul>
</li>
<li><strong>Return type:</strong>
Any</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="validate--bool-35">validate() → bool<a href="#validate--bool-35" class="hash-link" aria-label="Direct link to validate() → bool" title="Direct link to validate() → bool">​</a></h4>
<p>Return whether the configuration can be represented as valid JSON.</p>
<ul>
<li><strong>Return type:</strong>
bool</li>
</ul>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="class-controllerconfig"><em>class</em> ControllerConfig<a href="#class-controllerconfig" class="hash-link" aria-label="Direct link to class-controllerconfig" title="Direct link to class-controllerconfig">​</a></h3>
<p>Bases: <a href="#nautilus_trader.common.config.ActorConfig"><code>ActorConfig</code></a></p>
<p>The base model for all controller configurations.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="component_id--componentid--none-3">component_id <em>: <a href="../model/identifiers/index.htm#nautilus_trader.model.identifiers.ComponentId">ComponentId</a> | None</em><a href="#component_id--componentid--none-3" class="hash-link" aria-label="Direct link to component_id--componentid--none-3" title="Direct link to component_id--componentid--none-3">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="dict--dictstr-any-36">dict() → dict[str, Any]<a href="#dict--dictstr-any-36" class="hash-link" aria-label="Direct link to dict() → dict[str, Any]" title="Direct link to dict() → dict[str, Any]">​</a></h4>
<p>Return a dictionary representation of the configuration.</p>
<ul>
<li><strong>Return type:</strong>
dict[str, Any]</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="classmethod-fully_qualified_name--str-36"><em>classmethod</em> fully_qualified_name() → str<a href="#classmethod-fully_qualified_name--str-36" class="hash-link" aria-label="Direct link to classmethod-fully_qualified_name--str-36" title="Direct link to classmethod-fully_qualified_name--str-36">​</a></h4>
<p>Return the fully qualified name for the NautilusConfig class.</p>
<ul>
<li><strong>Return type:</strong>
str</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="property-id--str-36"><em>property</em> id <em>: str</em><a href="#property-id--str-36" class="hash-link" aria-label="Direct link to property-id--str-36" title="Direct link to property-id--str-36">​</a></h4>
<p>Return the hashed identifier for the configuration.</p>
<ul>
<li><strong>Return type:</strong>
str</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="json--bytes-36">json() → bytes<a href="#json--bytes-36" class="hash-link" aria-label="Direct link to json() → bytes" title="Direct link to json() → bytes">​</a></h4>
<p>Return serialized JSON encoded bytes.</p>
<ul>
<li><strong>Return type:</strong>
bytes</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="json_primitives--dictstr-any-36">json_primitives() → dict[str, Any]<a href="#json_primitives--dictstr-any-36" class="hash-link" aria-label="Direct link to json_primitives() → dict[str, Any]" title="Direct link to json_primitives() → dict[str, Any]">​</a></h4>
<p>Return a dictionary representation of the configuration with JSON primitive
types as values.</p>
<ul>
<li><strong>Return type:</strong>
dict[str, Any]</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="classmethod-json_schema--dictstr-any-36"><em>classmethod</em> json_schema() → dict[str, Any]<a href="#classmethod-json_schema--dictstr-any-36" class="hash-link" aria-label="Direct link to classmethod-json_schema--dictstr-any-36" title="Direct link to classmethod-json_schema--dictstr-any-36">​</a></h4>
<p>Generate a JSON schema for this configuration class.</p>
<ul>
<li><strong>Return type:</strong>
dict[str, Any]</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="log_commands--bool-4">log_commands <em>: bool</em><a href="#log_commands--bool-4" class="hash-link" aria-label="Direct link to log_commands--bool-4" title="Direct link to log_commands--bool-4">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="log_events--bool-4">log_events <em>: bool</em><a href="#log_events--bool-4" class="hash-link" aria-label="Direct link to log_events--bool-4" title="Direct link to log_events--bool-4">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="classmethod-parseraw-bytes--str--any-36"><em>classmethod</em> parse(raw: bytes | str) → Any<a href="#classmethod-parseraw-bytes--str--any-36" class="hash-link" aria-label="Direct link to classmethod-parseraw-bytes--str--any-36" title="Direct link to classmethod-parseraw-bytes--str--any-36">​</a></h4>
<p>Return a decoded object of the given cls.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>cls</strong> (<em>type</em>) – The type to decode to.</li>
<li><strong>raw</strong> (<em>bytes</em> <em>or</em> <em>str</em>) – The raw bytes or JSON string to decode.</li>
</ul>
</li>
<li><strong>Return type:</strong>
Any</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="validate--bool-36">validate() → bool<a href="#validate--bool-36" class="hash-link" aria-label="Direct link to validate() → bool" title="Direct link to validate() → bool">​</a></h4>
<p>Return whether the configuration can be represented as valid JSON.</p>
<ul>
<li><strong>Return type:</strong>
bool</li>
</ul>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="class-controllerfactory"><em>class</em> ControllerFactory<a href="#class-controllerfactory" class="hash-link" aria-label="Direct link to class-controllerfactory" title="Direct link to class-controllerfactory">​</a></h3>
<p>Bases: <code>object</code></p>
<p>Provides controller creation from importable configurations.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="static-createconfig-importablecontrollerconfig-trader"><em>static</em> create(config: <a href="#nautilus_trader.trading.config.ImportableControllerConfig">ImportableControllerConfig</a>, trader)<a href="#static-createconfig-importablecontrollerconfig-trader" class="hash-link" aria-label="Direct link to static-createconfig-importablecontrollerconfig-trader" title="Direct link to static-createconfig-importablecontrollerconfig-trader">​</a></h4>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="class-tradingnodeconfig"><em>class</em> TradingNodeConfig<a href="#class-tradingnodeconfig" class="hash-link" aria-label="Direct link to class-tradingnodeconfig" title="Direct link to class-tradingnodeconfig">​</a></h3>
<p>Bases: <a href="#nautilus_trader.system.config.NautilusKernelConfig"><code>NautilusKernelConfig</code></a></p>
<p>Configuration for <code>TradingNode</code> instances.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>trader_id</strong> (<a href="../model/identifiers/index.htm#nautilus_trader.model.identifiers.TraderId"><em>TraderId</em></a> <em>,</em> <em>default &quot;TRADER-001&quot;</em>) – The trader ID for the node (must be a name and ID tag separated by a hyphen).</li>
<li><strong>cache</strong> (<a href="#nautilus_trader.cache.config.CacheConfig"><em>CacheConfig</em></a> <em>,</em> <em>optional</em>) – The cache configuration.</li>
<li><strong>data_engine</strong> (<a href="#nautilus_trader.live.config.LiveDataEngineConfig"><em>LiveDataEngineConfig</em></a> <em>,</em> <em>optional</em>) – The live data engine configuration.</li>
<li><strong>risk_engine</strong> (<a href="#nautilus_trader.live.config.LiveRiskEngineConfig"><em>LiveRiskEngineConfig</em></a> <em>,</em> <em>optional</em>) – The live risk engine configuration.</li>
<li><strong>exec_engine</strong> (<a href="#nautilus_trader.live.config.LiveExecEngineConfig"><em>LiveExecEngineConfig</em></a> <em>,</em> <em>optional</em>) – The live execution engine configuration.</li>
<li><strong>data_clients</strong> (<em>dict</em> *[*<em>str</em> <em>,</em> <a href="#nautilus_trader.common.config.ImportableConfig"><em>ImportableConfig</em></a> <em>|</em> <a href="#nautilus_trader.live.config.LiveDataClientConfig"><em>LiveDataClientConfig</em></a> <em>]</em> <em>,</em> <em>optional</em>) – The data client configurations.</li>
<li><strong>exec_clients</strong> (<em>dict</em> *[*<em>str</em> <em>,</em> <a href="#nautilus_trader.common.config.ImportableConfig"><em>ImportableConfig</em></a> <em>|</em> <a href="#nautilus_trader.live.config.LiveExecClientConfig"><em>LiveExecClientConfig</em></a> <em>]</em> <em>,</em> <em>optional</em>) – The execution client configurations.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="environment--environment-1">environment <em>: <a href="../common/index.htm#nautilus_trader.common.Environment">Environment</a></em><a href="#environment--environment-1" class="hash-link" aria-label="Direct link to environment--environment-1" title="Direct link to environment--environment-1">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="trader_id--traderid-1">trader_id <em>: <a href="../model/identifiers/index.htm#nautilus_trader.model.identifiers.TraderId">TraderId</a></em><a href="#trader_id--traderid-1" class="hash-link" aria-label="Direct link to trader_id--traderid-1" title="Direct link to trader_id--traderid-1">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="data_engine--livedataengineconfig">data_engine <em>: <a href="#nautilus_trader.live.config.LiveDataEngineConfig">LiveDataEngineConfig</a></em><a href="#data_engine--livedataengineconfig" class="hash-link" aria-label="Direct link to data_engine--livedataengineconfig" title="Direct link to data_engine--livedataengineconfig">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="risk_engine--liveriskengineconfig">risk_engine <em>: <a href="#nautilus_trader.live.config.LiveRiskEngineConfig">LiveRiskEngineConfig</a></em><a href="#risk_engine--liveriskengineconfig" class="hash-link" aria-label="Direct link to risk_engine--liveriskengineconfig" title="Direct link to risk_engine--liveriskengineconfig">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="exec_engine--liveexecengineconfig">exec_engine <em>: <a href="#nautilus_trader.live.config.LiveExecEngineConfig">LiveExecEngineConfig</a></em><a href="#exec_engine--liveexecengineconfig" class="hash-link" aria-label="Direct link to exec_engine--liveexecengineconfig" title="Direct link to exec_engine--liveexecengineconfig">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="data_clients--dictstr-livedataclientconfig">data_clients <em>: dict[str, <a href="#nautilus_trader.live.config.LiveDataClientConfig">LiveDataClientConfig</a>]</em><a href="#data_clients--dictstr-livedataclientconfig" class="hash-link" aria-label="Direct link to data_clients--dictstr-livedataclientconfig" title="Direct link to data_clients--dictstr-livedataclientconfig">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="exec_clients--dictstr-liveexecclientconfig">exec_clients <em>: dict[str, <a href="#nautilus_trader.live.config.LiveExecClientConfig">LiveExecClientConfig</a>]</em><a href="#exec_clients--dictstr-liveexecclientconfig" class="hash-link" aria-label="Direct link to exec_clients--dictstr-liveexecclientconfig" title="Direct link to exec_clients--dictstr-liveexecclientconfig">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="actors--listimportableactorconfig-1">actors <em>: list[<a href="#nautilus_trader.common.config.ImportableActorConfig">ImportableActorConfig</a>]</em><a href="#actors--listimportableactorconfig-1" class="hash-link" aria-label="Direct link to actors--listimportableactorconfig-1" title="Direct link to actors--listimportableactorconfig-1">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="cache--cacheconfig--none-1">cache <em>: <a href="#nautilus_trader.cache.config.CacheConfig">CacheConfig</a> | None</em><a href="#cache--cacheconfig--none-1" class="hash-link" aria-label="Direct link to cache--cacheconfig--none-1" title="Direct link to cache--cacheconfig--none-1">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="catalogs--listdatacatalogconfig-1">catalogs <em>: list[<a href="#nautilus_trader.persistence.config.DataCatalogConfig">DataCatalogConfig</a>]</em><a href="#catalogs--listdatacatalogconfig-1" class="hash-link" aria-label="Direct link to catalogs--listdatacatalogconfig-1" title="Direct link to catalogs--listdatacatalogconfig-1">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="controller--importablecontrollerconfig--none-1">controller <em>: <a href="#nautilus_trader.trading.config.ImportableControllerConfig">ImportableControllerConfig</a> | None</em><a href="#controller--importablecontrollerconfig--none-1" class="hash-link" aria-label="Direct link to controller--importablecontrollerconfig--none-1" title="Direct link to controller--importablecontrollerconfig--none-1">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="dict--dictstr-any-37">dict() → dict[str, Any]<a href="#dict--dictstr-any-37" class="hash-link" aria-label="Direct link to dict() → dict[str, Any]" title="Direct link to dict() → dict[str, Any]">​</a></h4>
<p>Return a dictionary representation of the configuration.</p>
<ul>
<li><strong>Return type:</strong>
dict[str, Any]</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="emulator--orderemulatorconfig--none-1">emulator <em>: <a href="#nautilus_trader.common.config.OrderEmulatorConfig">OrderEmulatorConfig</a> | None</em><a href="#emulator--orderemulatorconfig--none-1" class="hash-link" aria-label="Direct link to emulator--orderemulatorconfig--none-1" title="Direct link to emulator--orderemulatorconfig--none-1">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="exec_algorithms--listimportableexecalgorithmconfig-1">exec_algorithms <em>: list[<a href="#nautilus_trader.execution.config.ImportableExecAlgorithmConfig">ImportableExecAlgorithmConfig</a>]</em><a href="#exec_algorithms--listimportableexecalgorithmconfig-1" class="hash-link" aria-label="Direct link to exec_algorithms--listimportableexecalgorithmconfig-1" title="Direct link to exec_algorithms--listimportableexecalgorithmconfig-1">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="classmethod-fully_qualified_name--str-37"><em>classmethod</em> fully_qualified_name() → str<a href="#classmethod-fully_qualified_name--str-37" class="hash-link" aria-label="Direct link to classmethod-fully_qualified_name--str-37" title="Direct link to classmethod-fully_qualified_name--str-37">​</a></h4>
<p>Return the fully qualified name for the NautilusConfig class.</p>
<ul>
<li><strong>Return type:</strong>
str</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="property-id--str-37"><em>property</em> id <em>: str</em><a href="#property-id--str-37" class="hash-link" aria-label="Direct link to property-id--str-37" title="Direct link to property-id--str-37">​</a></h4>
<p>Return the hashed identifier for the configuration.</p>
<ul>
<li><strong>Return type:</strong>
str</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="instance_id--uuid4--none-1">instance_id <em>: <a href="../core/index.htm#nautilus_trader.core.UUID4">UUID4</a> | None</em><a href="#instance_id--uuid4--none-1" class="hash-link" aria-label="Direct link to instance_id--uuid4--none-1" title="Direct link to instance_id--uuid4--none-1">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="json--bytes-37">json() → bytes<a href="#json--bytes-37" class="hash-link" aria-label="Direct link to json() → bytes" title="Direct link to json() → bytes">​</a></h4>
<p>Return serialized JSON encoded bytes.</p>
<ul>
<li><strong>Return type:</strong>
bytes</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="json_primitives--dictstr-any-37">json_primitives() → dict[str, Any]<a href="#json_primitives--dictstr-any-37" class="hash-link" aria-label="Direct link to json_primitives() → dict[str, Any]" title="Direct link to json_primitives() → dict[str, Any]">​</a></h4>
<p>Return a dictionary representation of the configuration with JSON primitive
types as values.</p>
<ul>
<li><strong>Return type:</strong>
dict[str, Any]</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="classmethod-json_schema--dictstr-any-37"><em>classmethod</em> json_schema() → dict[str, Any]<a href="#classmethod-json_schema--dictstr-any-37" class="hash-link" aria-label="Direct link to classmethod-json_schema--dictstr-any-37" title="Direct link to classmethod-json_schema--dictstr-any-37">​</a></h4>
<p>Generate a JSON schema for this configuration class.</p>
<ul>
<li><strong>Return type:</strong>
dict[str, Any]</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="load_state--bool-1">load_state <em>: bool</em><a href="#load_state--bool-1" class="hash-link" aria-label="Direct link to load_state--bool-1" title="Direct link to load_state--bool-1">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="logging--loggingconfig--none-1">logging <em>: <a href="#nautilus_trader.common.config.LoggingConfig">LoggingConfig</a> | None</em><a href="#logging--loggingconfig--none-1" class="hash-link" aria-label="Direct link to logging--loggingconfig--none-1" title="Direct link to logging--loggingconfig--none-1">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="loop_debug--bool-1">loop_debug <em>: bool</em><a href="#loop_debug--bool-1" class="hash-link" aria-label="Direct link to loop_debug--bool-1" title="Direct link to loop_debug--bool-1">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="message_bus--messagebusconfig--none-1">message_bus <em>: <a href="#nautilus_trader.common.config.MessageBusConfig">MessageBusConfig</a> | None</em><a href="#message_bus--messagebusconfig--none-1" class="hash-link" aria-label="Direct link to message_bus--messagebusconfig--none-1" title="Direct link to message_bus--messagebusconfig--none-1">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="classmethod-parseraw-bytes--str--any-37"><em>classmethod</em> parse(raw: bytes | str) → Any<a href="#classmethod-parseraw-bytes--str--any-37" class="hash-link" aria-label="Direct link to classmethod-parseraw-bytes--str--any-37" title="Direct link to classmethod-parseraw-bytes--str--any-37">​</a></h4>
<p>Return a decoded object of the given cls.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>cls</strong> (<em>type</em>) – The type to decode to.</li>
<li><strong>raw</strong> (<em>bytes</em> <em>or</em> <em>str</em>) – The raw bytes or JSON string to decode.</li>
</ul>
</li>
<li><strong>Return type:</strong>
Any</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="portfolio--portfolioconfig--none-1">portfolio <em>: PortfolioConfig | None</em><a href="#portfolio--portfolioconfig--none-1" class="hash-link" aria-label="Direct link to portfolio--portfolioconfig--none-1" title="Direct link to portfolio--portfolioconfig--none-1">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="save_state--bool-1">save_state <em>: bool</em><a href="#save_state--bool-1" class="hash-link" aria-label="Direct link to save_state--bool-1" title="Direct link to save_state--bool-1">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="strategies--listimportablestrategyconfig-1">strategies <em>: list[<a href="#nautilus_trader.trading.config.ImportableStrategyConfig">ImportableStrategyConfig</a>]</em><a href="#strategies--listimportablestrategyconfig-1" class="hash-link" aria-label="Direct link to strategies--listimportablestrategyconfig-1" title="Direct link to strategies--listimportablestrategyconfig-1">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="streaming--streamingconfig--none-1">streaming <em>: <a href="#nautilus_trader.persistence.config.StreamingConfig">StreamingConfig</a> | None</em><a href="#streaming--streamingconfig--none-1" class="hash-link" aria-label="Direct link to streaming--streamingconfig--none-1" title="Direct link to streaming--streamingconfig--none-1">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="timeout_connection--positivefloat-1">timeout_connection <em>: PositiveFloat</em><a href="#timeout_connection--positivefloat-1" class="hash-link" aria-label="Direct link to timeout_connection--positivefloat-1" title="Direct link to timeout_connection--positivefloat-1">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="timeout_disconnection--positivefloat-1">timeout_disconnection <em>: PositiveFloat</em><a href="#timeout_disconnection--positivefloat-1" class="hash-link" aria-label="Direct link to timeout_disconnection--positivefloat-1" title="Direct link to timeout_disconnection--positivefloat-1">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="timeout_portfolio--positivefloat-1">timeout_portfolio <em>: PositiveFloat</em><a href="#timeout_portfolio--positivefloat-1" class="hash-link" aria-label="Direct link to timeout_portfolio--positivefloat-1" title="Direct link to timeout_portfolio--positivefloat-1">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="timeout_post_stop--positivefloat-1">timeout_post_stop <em>: PositiveFloat</em><a href="#timeout_post_stop--positivefloat-1" class="hash-link" aria-label="Direct link to timeout_post_stop--positivefloat-1" title="Direct link to timeout_post_stop--positivefloat-1">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="timeout_reconciliation--positivefloat-1">timeout_reconciliation <em>: PositiveFloat</em><a href="#timeout_reconciliation--positivefloat-1" class="hash-link" aria-label="Direct link to timeout_reconciliation--positivefloat-1" title="Direct link to timeout_reconciliation--positivefloat-1">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="timeout_shutdown--positivefloat-1">timeout_shutdown <em>: PositiveFloat</em><a href="#timeout_shutdown--positivefloat-1" class="hash-link" aria-label="Direct link to timeout_shutdown--positivefloat-1" title="Direct link to timeout_shutdown--positivefloat-1">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="validate--bool-37">validate() → bool<a href="#validate--bool-37" class="hash-link" aria-label="Direct link to validate() → bool" title="Direct link to validate() → bool">​</a></h4>
<p>Return whether the configuration can be represented as valid JSON.</p>
<ul>
<li><strong>Return type:</strong>
bool</li>
</ul>
<h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="persistence">Persistence<a href="#persistence" class="hash-link" aria-label="Direct link to Persistence" title="Direct link to Persistence">​</a></h2>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="class-streamingconfig"><em>class</em> StreamingConfig<a href="#class-streamingconfig" class="hash-link" aria-label="Direct link to class-streamingconfig" title="Direct link to class-streamingconfig">​</a></h3>
<p>Bases: <a href="#nautilus_trader.common.config.NautilusConfig"><code>NautilusConfig</code></a></p>
<p>Configuration for streaming live or backtest runs to the catalog in feather format.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>catalog_path</strong> (<em>str</em>) – The path to the data catalog.</li>
<li><strong>fs_protocol</strong> (<em>str</em> <em>,</em> <em>optional</em>) – The fsspec filesystem protocol for the catalog.</li>
<li><strong>fs_storage_options</strong> (<em>dict</em> <em>,</em> <em>optional</em>) – The fsspec storage options.</li>
<li><strong>flush_interval_ms</strong> (<em>int</em> <em>,</em> <em>optional</em>) – The flush interval (milliseconds) for writing chunks.</li>
<li><strong>replace_existing</strong> (<em>bool</em> <em>,</em> <em>default False</em>) – If any existing feather files should be replaced.</li>
<li><strong>include_types</strong> (<em>list</em> *[*<em>type</em> <em>]</em> <em>,</em> <em>optional</em>) – A list of Arrow serializable types to write.
If this is specified then <strong>only</strong> the included types will be written.</li>
<li><strong>rotation_mode</strong> (<a href="../persistence/index.htm#nautilus_trader.persistence.writer.RotationMode"><em>RotationMode</em></a> <em>,</em> <em>default RotationMode.NO_ROTATION</em>) – The mode for file rotation.</li>
<li><strong>max_file_size</strong> (<em>int</em> <em>,</em> <em>default 1GB</em>) – The maximum file size in bytes before rotation (for SIZE mode).</li>
<li><strong>rotation_interval</strong> (<em>pd.Timedelta</em> <em>,</em> <em>optional</em>) – The time interval for file rotation (for INTERVAL mode and SCHEDULED_DATES mode).</li>
<li><strong>rotation_time</strong> (<em>time</em> <em>,</em> <em>default 00:00</em>) – The time of day for file rotation (for SCHEDULED_DATES mode).</li>
<li><strong>rotation_timezone</strong> (<em>str</em> <em>,</em> <em>default &#x27;UTC&#x27;</em>) – The timezone for rotation calculations (for SCHEDULED_DATES mode).</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="catalog_path--str-1">catalog_path <em>: str</em><a href="#catalog_path--str-1" class="hash-link" aria-label="Direct link to catalog_path--str-1" title="Direct link to catalog_path--str-1">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="fs_protocol--str--none">fs_protocol <em>: str | None</em><a href="#fs_protocol--str--none" class="hash-link" aria-label="Direct link to fs_protocol--str--none" title="Direct link to fs_protocol--str--none">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="fs_storage_options--dict--none">fs_storage_options <em>: dict | None</em><a href="#fs_storage_options--dict--none" class="hash-link" aria-label="Direct link to fs_storage_options--dict--none" title="Direct link to fs_storage_options--dict--none">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="flush_interval_ms--int--none">flush_interval_ms <em>: int | None</em><a href="#flush_interval_ms--int--none" class="hash-link" aria-label="Direct link to flush_interval_ms--int--none" title="Direct link to flush_interval_ms--int--none">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="replace_existing--bool">replace_existing <em>: bool</em><a href="#replace_existing--bool" class="hash-link" aria-label="Direct link to replace_existing--bool" title="Direct link to replace_existing--bool">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="include_types--listtype--none">include_types <em>: list[type] | None</em><a href="#include_types--listtype--none" class="hash-link" aria-label="Direct link to include_types--listtype--none" title="Direct link to include_types--listtype--none">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="rotation_mode--rotationmode">rotation_mode <em>: <a href="../persistence/index.htm#nautilus_trader.persistence.writer.RotationMode">RotationMode</a></em><a href="#rotation_mode--rotationmode" class="hash-link" aria-label="Direct link to rotation_mode--rotationmode" title="Direct link to rotation_mode--rotationmode">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="max_file_size--int">max_file_size <em>: int</em><a href="#max_file_size--int" class="hash-link" aria-label="Direct link to max_file_size--int" title="Direct link to max_file_size--int">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="rotation_interval--timedelta--none">rotation_interval <em>: Timedelta | None</em><a href="#rotation_interval--timedelta--none" class="hash-link" aria-label="Direct link to rotation_interval--timedelta--none" title="Direct link to rotation_interval--timedelta--none">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="rotation_time--time">rotation_time <em>: time</em><a href="#rotation_time--time" class="hash-link" aria-label="Direct link to rotation_time--time" title="Direct link to rotation_time--time">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="rotation_timezone--str">rotation_timezone <em>: str</em><a href="#rotation_timezone--str" class="hash-link" aria-label="Direct link to rotation_timezone--str" title="Direct link to rotation_timezone--str">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="property-fs"><em>property</em> fs<a href="#property-fs" class="hash-link" aria-label="Direct link to property-fs" title="Direct link to property-fs">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="as_catalog">as_catalog()<a href="#as_catalog" class="hash-link" aria-label="Direct link to as_catalog()" title="Direct link to as_catalog()">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="dict--dictstr-any-38">dict() → dict[str, Any]<a href="#dict--dictstr-any-38" class="hash-link" aria-label="Direct link to dict() → dict[str, Any]" title="Direct link to dict() → dict[str, Any]">​</a></h4>
<p>Return a dictionary representation of the configuration.</p>
<ul>
<li><strong>Return type:</strong>
dict[str, Any]</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="classmethod-fully_qualified_name--str-38"><em>classmethod</em> fully_qualified_name() → str<a href="#classmethod-fully_qualified_name--str-38" class="hash-link" aria-label="Direct link to classmethod-fully_qualified_name--str-38" title="Direct link to classmethod-fully_qualified_name--str-38">​</a></h4>
<p>Return the fully qualified name for the NautilusConfig class.</p>
<ul>
<li><strong>Return type:</strong>
str</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="property-id--str-38"><em>property</em> id <em>: str</em><a href="#property-id--str-38" class="hash-link" aria-label="Direct link to property-id--str-38" title="Direct link to property-id--str-38">​</a></h4>
<p>Return the hashed identifier for the configuration.</p>
<ul>
<li><strong>Return type:</strong>
str</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="json--bytes-38">json() → bytes<a href="#json--bytes-38" class="hash-link" aria-label="Direct link to json() → bytes" title="Direct link to json() → bytes">​</a></h4>
<p>Return serialized JSON encoded bytes.</p>
<ul>
<li><strong>Return type:</strong>
bytes</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="json_primitives--dictstr-any-38">json_primitives() → dict[str, Any]<a href="#json_primitives--dictstr-any-38" class="hash-link" aria-label="Direct link to json_primitives() → dict[str, Any]" title="Direct link to json_primitives() → dict[str, Any]">​</a></h4>
<p>Return a dictionary representation of the configuration with JSON primitive
types as values.</p>
<ul>
<li><strong>Return type:</strong>
dict[str, Any]</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="classmethod-json_schema--dictstr-any-38"><em>classmethod</em> json_schema() → dict[str, Any]<a href="#classmethod-json_schema--dictstr-any-38" class="hash-link" aria-label="Direct link to classmethod-json_schema--dictstr-any-38" title="Direct link to classmethod-json_schema--dictstr-any-38">​</a></h4>
<p>Generate a JSON schema for this configuration class.</p>
<ul>
<li><strong>Return type:</strong>
dict[str, Any]</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="classmethod-parseraw-bytes--str--any-38"><em>classmethod</em> parse(raw: bytes | str) → Any<a href="#classmethod-parseraw-bytes--str--any-38" class="hash-link" aria-label="Direct link to classmethod-parseraw-bytes--str--any-38" title="Direct link to classmethod-parseraw-bytes--str--any-38">​</a></h4>
<p>Return a decoded object of the given cls.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>cls</strong> (<em>type</em>) – The type to decode to.</li>
<li><strong>raw</strong> (<em>bytes</em> <em>or</em> <em>str</em>) – The raw bytes or JSON string to decode.</li>
</ul>
</li>
<li><strong>Return type:</strong>
Any</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="validate--bool-38">validate() → bool<a href="#validate--bool-38" class="hash-link" aria-label="Direct link to validate() → bool" title="Direct link to validate() → bool">​</a></h4>
<p>Return whether the configuration can be represented as valid JSON.</p>
<ul>
<li><strong>Return type:</strong>
bool</li>
</ul>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="class-datacatalogconfig"><em>class</em> DataCatalogConfig<a href="#class-datacatalogconfig" class="hash-link" aria-label="Direct link to class-datacatalogconfig" title="Direct link to class-datacatalogconfig">​</a></h3>
<p>Bases: <a href="#nautilus_trader.common.config.NautilusConfig"><code>NautilusConfig</code></a></p>
<p>Configuration for a data catalog.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>path</strong> (<em>str</em>) – The path to the data catalog.</li>
<li><strong>fs_protocol</strong> (<em>str</em> <em>,</em> <em>optional</em>) – The fsspec file system protocol for the data catalog.</li>
<li><strong>fs_storage_options</strong> (<em>dict</em> <em>,</em> <em>optional</em>) – The fsspec storage options for the data catalog.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="path--str-2">path <em>: str</em><a href="#path--str-2" class="hash-link" aria-label="Direct link to path--str-2" title="Direct link to path--str-2">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="fs_protocol--str--none-1">fs_protocol <em>: str | None</em><a href="#fs_protocol--str--none-1" class="hash-link" aria-label="Direct link to fs_protocol--str--none-1" title="Direct link to fs_protocol--str--none-1">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="fs_storage_options--dict--none-1">fs_storage_options <em>: dict | None</em><a href="#fs_storage_options--dict--none-1" class="hash-link" aria-label="Direct link to fs_storage_options--dict--none-1" title="Direct link to fs_storage_options--dict--none-1">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="name--str--none">name <em>: str | None</em><a href="#name--str--none" class="hash-link" aria-label="Direct link to name--str--none" title="Direct link to name--str--none">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="dict--dictstr-any-39">dict() → dict[str, Any]<a href="#dict--dictstr-any-39" class="hash-link" aria-label="Direct link to dict() → dict[str, Any]" title="Direct link to dict() → dict[str, Any]">​</a></h4>
<p>Return a dictionary representation of the configuration.</p>
<ul>
<li><strong>Return type:</strong>
dict[str, Any]</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="classmethod-fully_qualified_name--str-39"><em>classmethod</em> fully_qualified_name() → str<a href="#classmethod-fully_qualified_name--str-39" class="hash-link" aria-label="Direct link to classmethod-fully_qualified_name--str-39" title="Direct link to classmethod-fully_qualified_name--str-39">​</a></h4>
<p>Return the fully qualified name for the NautilusConfig class.</p>
<ul>
<li><strong>Return type:</strong>
str</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="property-id--str-39"><em>property</em> id <em>: str</em><a href="#property-id--str-39" class="hash-link" aria-label="Direct link to property-id--str-39" title="Direct link to property-id--str-39">​</a></h4>
<p>Return the hashed identifier for the configuration.</p>
<ul>
<li><strong>Return type:</strong>
str</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="json--bytes-39">json() → bytes<a href="#json--bytes-39" class="hash-link" aria-label="Direct link to json() → bytes" title="Direct link to json() → bytes">​</a></h4>
<p>Return serialized JSON encoded bytes.</p>
<ul>
<li><strong>Return type:</strong>
bytes</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="json_primitives--dictstr-any-39">json_primitives() → dict[str, Any]<a href="#json_primitives--dictstr-any-39" class="hash-link" aria-label="Direct link to json_primitives() → dict[str, Any]" title="Direct link to json_primitives() → dict[str, Any]">​</a></h4>
<p>Return a dictionary representation of the configuration with JSON primitive
types as values.</p>
<ul>
<li><strong>Return type:</strong>
dict[str, Any]</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="classmethod-json_schema--dictstr-any-39"><em>classmethod</em> json_schema() → dict[str, Any]<a href="#classmethod-json_schema--dictstr-any-39" class="hash-link" aria-label="Direct link to classmethod-json_schema--dictstr-any-39" title="Direct link to classmethod-json_schema--dictstr-any-39">​</a></h4>
<p>Generate a JSON schema for this configuration class.</p>
<ul>
<li><strong>Return type:</strong>
dict[str, Any]</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="classmethod-parseraw-bytes--str--any-39"><em>classmethod</em> parse(raw: bytes | str) → Any<a href="#classmethod-parseraw-bytes--str--any-39" class="hash-link" aria-label="Direct link to classmethod-parseraw-bytes--str--any-39" title="Direct link to classmethod-parseraw-bytes--str--any-39">​</a></h4>
<p>Return a decoded object of the given cls.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>cls</strong> (<em>type</em>) – The type to decode to.</li>
<li><strong>raw</strong> (<em>bytes</em> <em>or</em> <em>str</em>) – The raw bytes or JSON string to decode.</li>
</ul>
</li>
<li><strong>Return type:</strong>
Any</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="validate--bool-39">validate() → bool<a href="#validate--bool-39" class="hash-link" aria-label="Direct link to validate() → bool" title="Direct link to validate() → bool">​</a></h4>
<p>Return whether the configuration can be represented as valid JSON.</p>
<ul>
<li><strong>Return type:</strong>
bool</li>
</ul>
<h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="risk">Risk<a href="#risk" class="hash-link" aria-label="Direct link to Risk" title="Direct link to Risk">​</a></h2>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="class-riskengineconfig"><em>class</em> RiskEngineConfig<a href="#class-riskengineconfig" class="hash-link" aria-label="Direct link to class-riskengineconfig" title="Direct link to class-riskengineconfig">​</a></h3>
<p>Bases: <a href="#nautilus_trader.common.config.NautilusConfig"><code>NautilusConfig</code></a></p>
<p>Configuration for <code>RiskEngine</code> instances.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>bypass</strong> (<em>bool</em> <em>,</em> <em>default False</em>) – If True, then will bypass all pre-trade risk checks and rate limits (will still check for duplicate IDs).</li>
<li><strong>max_order_submit_rate</strong> (<em>str</em> <em>,</em> <em>default 100/00:00:01</em>) – The maximum rate of submit order commands per timedelta.</li>
<li><strong>max_order_modify_rate</strong> (<em>str</em> <em>,</em> <em>default 100/00:00:01</em>) – The maximum rate of modify order commands per timedelta.</li>
<li><strong>max_notional_per_order</strong> (<em>dict</em> *[*<em>str</em> <em>,</em> <em>int</em> <em>]</em> <em>,</em> <em>default empty dict</em>) – The maximum notional value of an order per instrument ID.
The value should be a valid decimal format.</li>
<li><strong>debug</strong> (<em>bool</em> <em>,</em> <em>default False</em>) – If debug mode is active (will provide extra debug logging).</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="bypass--bool-1">bypass <em>: bool</em><a href="#bypass--bool-1" class="hash-link" aria-label="Direct link to bypass--bool-1" title="Direct link to bypass--bool-1">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="max_order_submit_rate--str-1">max_order_submit_rate <em>: str</em><a href="#max_order_submit_rate--str-1" class="hash-link" aria-label="Direct link to max_order_submit_rate--str-1" title="Direct link to max_order_submit_rate--str-1">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="max_order_modify_rate--str-1">max_order_modify_rate <em>: str</em><a href="#max_order_modify_rate--str-1" class="hash-link" aria-label="Direct link to max_order_modify_rate--str-1" title="Direct link to max_order_modify_rate--str-1">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="max_notional_per_order--dictstr-int-1">max_notional_per_order <em>: dict[str, int]</em><a href="#max_notional_per_order--dictstr-int-1" class="hash-link" aria-label="Direct link to max_notional_per_order--dictstr-int-1" title="Direct link to max_notional_per_order--dictstr-int-1">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="debug--bool-6">debug <em>: bool</em><a href="#debug--bool-6" class="hash-link" aria-label="Direct link to debug--bool-6" title="Direct link to debug--bool-6">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="dict--dictstr-any-40">dict() → dict[str, Any]<a href="#dict--dictstr-any-40" class="hash-link" aria-label="Direct link to dict() → dict[str, Any]" title="Direct link to dict() → dict[str, Any]">​</a></h4>
<p>Return a dictionary representation of the configuration.</p>
<ul>
<li><strong>Return type:</strong>
dict[str, Any]</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="classmethod-fully_qualified_name--str-40"><em>classmethod</em> fully_qualified_name() → str<a href="#classmethod-fully_qualified_name--str-40" class="hash-link" aria-label="Direct link to classmethod-fully_qualified_name--str-40" title="Direct link to classmethod-fully_qualified_name--str-40">​</a></h4>
<p>Return the fully qualified name for the NautilusConfig class.</p>
<ul>
<li><strong>Return type:</strong>
str</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="property-id--str-40"><em>property</em> id <em>: str</em><a href="#property-id--str-40" class="hash-link" aria-label="Direct link to property-id--str-40" title="Direct link to property-id--str-40">​</a></h4>
<p>Return the hashed identifier for the configuration.</p>
<ul>
<li><strong>Return type:</strong>
str</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="json--bytes-40">json() → bytes<a href="#json--bytes-40" class="hash-link" aria-label="Direct link to json() → bytes" title="Direct link to json() → bytes">​</a></h4>
<p>Return serialized JSON encoded bytes.</p>
<ul>
<li><strong>Return type:</strong>
bytes</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="json_primitives--dictstr-any-40">json_primitives() → dict[str, Any]<a href="#json_primitives--dictstr-any-40" class="hash-link" aria-label="Direct link to json_primitives() → dict[str, Any]" title="Direct link to json_primitives() → dict[str, Any]">​</a></h4>
<p>Return a dictionary representation of the configuration with JSON primitive
types as values.</p>
<ul>
<li><strong>Return type:</strong>
dict[str, Any]</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="classmethod-json_schema--dictstr-any-40"><em>classmethod</em> json_schema() → dict[str, Any]<a href="#classmethod-json_schema--dictstr-any-40" class="hash-link" aria-label="Direct link to classmethod-json_schema--dictstr-any-40" title="Direct link to classmethod-json_schema--dictstr-any-40">​</a></h4>
<p>Generate a JSON schema for this configuration class.</p>
<ul>
<li><strong>Return type:</strong>
dict[str, Any]</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="classmethod-parseraw-bytes--str--any-40"><em>classmethod</em> parse(raw: bytes | str) → Any<a href="#classmethod-parseraw-bytes--str--any-40" class="hash-link" aria-label="Direct link to classmethod-parseraw-bytes--str--any-40" title="Direct link to classmethod-parseraw-bytes--str--any-40">​</a></h4>
<p>Return a decoded object of the given cls.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>cls</strong> (<em>type</em>) – The type to decode to.</li>
<li><strong>raw</strong> (<em>bytes</em> <em>or</em> <em>str</em>) – The raw bytes or JSON string to decode.</li>
</ul>
</li>
<li><strong>Return type:</strong>
Any</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="validate--bool-40">validate() → bool<a href="#validate--bool-40" class="hash-link" aria-label="Direct link to validate() → bool" title="Direct link to validate() → bool">​</a></h4>
<p>Return whether the configuration can be represented as valid JSON.</p>
<ul>
<li><strong>Return type:</strong>
bool</li>
</ul>
<h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="system">System<a href="#system" class="hash-link" aria-label="Direct link to System" title="Direct link to System">​</a></h2>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="class-nautiluskernelconfig"><em>class</em> NautilusKernelConfig<a href="#class-nautiluskernelconfig" class="hash-link" aria-label="Direct link to class-nautiluskernelconfig" title="Direct link to class-nautiluskernelconfig">​</a></h3>
<p>Bases: <a href="#nautilus_trader.common.config.NautilusConfig"><code>NautilusConfig</code></a></p>
<p>Configuration for a <code>NautilusKernel</code> core system instance.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>environment</strong> (Environment { <code>BACKTEST</code>, <code>SANDBOX</code>, <code>LIVE</code> }) – The kernel environment context.</li>
<li><strong>trader_id</strong> (<a href="../model/identifiers/index.htm#nautilus_trader.model.identifiers.TraderId"><em>TraderId</em></a>) – The trader ID for the kernel (must be a name and ID tag separated by a hyphen).</li>
<li><strong>instance_id</strong> (<a href="../core/index.htm#nautilus_trader.core.UUID4"><em>UUID4</em></a> <em>,</em> <em>optional</em>) – The unique instance identifier for the kernel.</li>
<li><strong>cache</strong> (<a href="#nautilus_trader.cache.config.CacheConfig"><em>CacheConfig</em></a> <em>,</em> <em>optional</em>) – The cache configuration.</li>
<li><strong>message_bus</strong> (<a href="#nautilus_trader.common.config.MessageBusConfig"><em>MessageBusConfig</em></a> <em>,</em> <em>optional</em>) – The message bus configuration.</li>
<li><strong>data_engine</strong> (<a href="#nautilus_trader.data.config.DataEngineConfig"><em>DataEngineConfig</em></a> <em>,</em> <em>optional</em>) – The data engine configuration.</li>
<li><strong>risk_engine</strong> (<a href="#nautilus_trader.risk.config.RiskEngineConfig"><em>RiskEngineConfig</em></a> <em>,</em> <em>optional</em>) – The risk engine configuration.</li>
<li><strong>exec_engine</strong> (<a href="#nautilus_trader.execution.config.ExecEngineConfig"><em>ExecEngineConfig</em></a> <em>,</em> <em>optional</em>) – The execution engine configuration.</li>
<li><strong>portfolio</strong> (<em>PortfolioConfig</em> <em>,</em> <em>optional</em>) – The portfolio configuration.</li>
<li><strong>emulator</strong> (<a href="#nautilus_trader.common.config.OrderEmulatorConfig"><em>OrderEmulatorConfig</em></a> <em>,</em> <em>optional</em>) – The order emulator configuration.</li>
<li><strong>streaming</strong> (<a href="#nautilus_trader.persistence.config.StreamingConfig"><em>StreamingConfig</em></a> <em>,</em> <em>optional</em>) – The configuration for streaming to feather files.</li>
<li><strong>catalogs</strong> (<em>list</em> <em>[</em><a href="#nautilus_trader.persistence.config.DataCatalogConfig"><em>DataCatalogConfig</em></a> <em>]</em> <em>,</em> <em>optional</em>) – The list of data catalog configurations.</li>
<li><strong>actors</strong> (<em>list</em> <em>[</em><a href="#nautilus_trader.common.config.ImportableActorConfig"><em>ImportableActorConfig</em></a> <em>]</em>) – The actor configurations for the kernel.</li>
<li><strong>strategies</strong> (<em>list</em> <em>[</em><a href="#nautilus_trader.trading.config.ImportableStrategyConfig"><em>ImportableStrategyConfig</em></a> <em>]</em>) – The strategy configurations for the kernel.</li>
<li><strong>exec_algorithms</strong> (<em>list</em> <em>[</em><a href="#nautilus_trader.execution.config.ImportableExecAlgorithmConfig"><em>ImportableExecAlgorithmConfig</em></a> <em>]</em>) – The execution algorithm configurations for the kernel.</li>
<li><strong>controller</strong> (<a href="#nautilus_trader.trading.config.ImportableControllerConfig"><em>ImportableControllerConfig</em></a> <em>,</em> <em>optional</em>) – The trader controller for the kernel.</li>
<li><strong>load_state</strong> (<em>bool</em> <em>,</em> <em>default True</em>) – If trading strategy state should be loaded from the database on start.</li>
<li><strong>save_state</strong> (<em>bool</em> <em>,</em> <em>default True</em>) – If trading strategy state should be saved to the database on stop.</li>
<li><strong>loop_debug</strong> (<em>bool</em> <em>,</em> <em>default False</em>) – If the asyncio event loop should be in debug mode.</li>
<li><strong>logging</strong> (<a href="#nautilus_trader.common.config.LoggingConfig"><em>LoggingConfig</em></a> <em>,</em> <em>optional</em>) – The logging configuration for the kernel.</li>
<li><strong>timeout_connection</strong> (<em>PositiveFloat</em> <em>,</em> <em>default 60</em>) – The timeout (seconds) for all clients to connect and initialize.</li>
<li><strong>timeout_reconciliation</strong> (<em>PositiveFloat</em> <em>,</em> <em>default 30</em>) – The timeout (seconds) for execution state to reconcile.</li>
<li><strong>timeout_portfolio</strong> (<em>PositiveFloat</em> <em>,</em> <em>default 10</em>) – The timeout (seconds) for portfolio to initialize margins and unrealized PnLs.</li>
<li><strong>timeout_disconnection</strong> (<em>PositiveFloat</em> <em>,</em> <em>default 10</em>) – The timeout (seconds) for all engine clients to disconnect.</li>
<li><strong>timeout_post_stop</strong> (<em>PositiveFloat</em> <em>,</em> <em>default 10</em>) – The timeout (seconds) after stopping the node to await residual events before final shutdown.</li>
<li><strong>timeout_shutdown</strong> (<em>PositiveFloat</em> <em>,</em> <em>default 5</em>) – The timeout (seconds) to await pending tasks cancellation during shutdown.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="environment--environment-2">environment <em>: <a href="../common/index.htm#nautilus_trader.common.Environment">Environment</a></em><a href="#environment--environment-2" class="hash-link" aria-label="Direct link to environment--environment-2" title="Direct link to environment--environment-2">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="trader_id--traderid-2">trader_id <em>: <a href="../model/identifiers/index.htm#nautilus_trader.model.identifiers.TraderId">TraderId</a></em><a href="#trader_id--traderid-2" class="hash-link" aria-label="Direct link to trader_id--traderid-2" title="Direct link to trader_id--traderid-2">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="instance_id--uuid4--none-2">instance_id <em>: <a href="../core/index.htm#nautilus_trader.core.uuid.UUID4">UUID4</a> | None</em><a href="#instance_id--uuid4--none-2" class="hash-link" aria-label="Direct link to instance_id--uuid4--none-2" title="Direct link to instance_id--uuid4--none-2">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="cache--cacheconfig--none-2">cache <em>: <a href="#nautilus_trader.cache.config.CacheConfig">CacheConfig</a> | None</em><a href="#cache--cacheconfig--none-2" class="hash-link" aria-label="Direct link to cache--cacheconfig--none-2" title="Direct link to cache--cacheconfig--none-2">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="message_bus--messagebusconfig--none-2">message_bus <em>: <a href="#nautilus_trader.common.config.MessageBusConfig">MessageBusConfig</a> | None</em><a href="#message_bus--messagebusconfig--none-2" class="hash-link" aria-label="Direct link to message_bus--messagebusconfig--none-2" title="Direct link to message_bus--messagebusconfig--none-2">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="data_engine--dataengineconfig--none">data_engine <em>: <a href="#nautilus_trader.data.config.DataEngineConfig">DataEngineConfig</a> | None</em><a href="#data_engine--dataengineconfig--none" class="hash-link" aria-label="Direct link to data_engine--dataengineconfig--none" title="Direct link to data_engine--dataengineconfig--none">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="risk_engine--riskengineconfig--none">risk_engine <em>: <a href="#nautilus_trader.risk.config.RiskEngineConfig">RiskEngineConfig</a> | None</em><a href="#risk_engine--riskengineconfig--none" class="hash-link" aria-label="Direct link to risk_engine--riskengineconfig--none" title="Direct link to risk_engine--riskengineconfig--none">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="exec_engine--execengineconfig--none">exec_engine <em>: <a href="#nautilus_trader.execution.config.ExecEngineConfig">ExecEngineConfig</a> | None</em><a href="#exec_engine--execengineconfig--none" class="hash-link" aria-label="Direct link to exec_engine--execengineconfig--none" title="Direct link to exec_engine--execengineconfig--none">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="portfolio--portfolioconfig--none-2">portfolio <em>: PortfolioConfig | None</em><a href="#portfolio--portfolioconfig--none-2" class="hash-link" aria-label="Direct link to portfolio--portfolioconfig--none-2" title="Direct link to portfolio--portfolioconfig--none-2">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="emulator--orderemulatorconfig--none-2">emulator <em>: <a href="#nautilus_trader.common.config.OrderEmulatorConfig">OrderEmulatorConfig</a> | None</em><a href="#emulator--orderemulatorconfig--none-2" class="hash-link" aria-label="Direct link to emulator--orderemulatorconfig--none-2" title="Direct link to emulator--orderemulatorconfig--none-2">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="streaming--streamingconfig--none-2">streaming <em>: <a href="#nautilus_trader.persistence.config.StreamingConfig">StreamingConfig</a> | None</em><a href="#streaming--streamingconfig--none-2" class="hash-link" aria-label="Direct link to streaming--streamingconfig--none-2" title="Direct link to streaming--streamingconfig--none-2">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="catalogs--listdatacatalogconfig-2">catalogs <em>: list[<a href="#nautilus_trader.persistence.config.DataCatalogConfig">DataCatalogConfig</a>]</em><a href="#catalogs--listdatacatalogconfig-2" class="hash-link" aria-label="Direct link to catalogs--listdatacatalogconfig-2" title="Direct link to catalogs--listdatacatalogconfig-2">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="actors--listimportableactorconfig-2">actors <em>: list[<a href="#nautilus_trader.common.config.ImportableActorConfig">ImportableActorConfig</a>]</em><a href="#actors--listimportableactorconfig-2" class="hash-link" aria-label="Direct link to actors--listimportableactorconfig-2" title="Direct link to actors--listimportableactorconfig-2">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="strategies--listimportablestrategyconfig-2">strategies <em>: list[<a href="#nautilus_trader.trading.config.ImportableStrategyConfig">ImportableStrategyConfig</a>]</em><a href="#strategies--listimportablestrategyconfig-2" class="hash-link" aria-label="Direct link to strategies--listimportablestrategyconfig-2" title="Direct link to strategies--listimportablestrategyconfig-2">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="exec_algorithms--listimportableexecalgorithmconfig-2">exec_algorithms <em>: list[<a href="#nautilus_trader.execution.config.ImportableExecAlgorithmConfig">ImportableExecAlgorithmConfig</a>]</em><a href="#exec_algorithms--listimportableexecalgorithmconfig-2" class="hash-link" aria-label="Direct link to exec_algorithms--listimportableexecalgorithmconfig-2" title="Direct link to exec_algorithms--listimportableexecalgorithmconfig-2">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="controller--importablecontrollerconfig--none-2">controller <em>: <a href="#nautilus_trader.trading.config.ImportableControllerConfig">ImportableControllerConfig</a> | None</em><a href="#controller--importablecontrollerconfig--none-2" class="hash-link" aria-label="Direct link to controller--importablecontrollerconfig--none-2" title="Direct link to controller--importablecontrollerconfig--none-2">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="load_state--bool-2">load_state <em>: bool</em><a href="#load_state--bool-2" class="hash-link" aria-label="Direct link to load_state--bool-2" title="Direct link to load_state--bool-2">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="save_state--bool-2">save_state <em>: bool</em><a href="#save_state--bool-2" class="hash-link" aria-label="Direct link to save_state--bool-2" title="Direct link to save_state--bool-2">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="loop_debug--bool-2">loop_debug <em>: bool</em><a href="#loop_debug--bool-2" class="hash-link" aria-label="Direct link to loop_debug--bool-2" title="Direct link to loop_debug--bool-2">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="logging--loggingconfig--none-2">logging <em>: <a href="#nautilus_trader.common.config.LoggingConfig">LoggingConfig</a> | None</em><a href="#logging--loggingconfig--none-2" class="hash-link" aria-label="Direct link to logging--loggingconfig--none-2" title="Direct link to logging--loggingconfig--none-2">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="timeout_connection--annotatedfloat-msgspecmetagt00">timeout_connection <em>: Annotated[float, msgspec.Meta(gt=0.0)]</em><a href="#timeout_connection--annotatedfloat-msgspecmetagt00" class="hash-link" aria-label="Direct link to timeout_connection--annotatedfloat-msgspecmetagt00" title="Direct link to timeout_connection--annotatedfloat-msgspecmetagt00">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="timeout_reconciliation--annotatedfloat-msgspecmetagt00">timeout_reconciliation <em>: Annotated[float, msgspec.Meta(gt=0.0)]</em><a href="#timeout_reconciliation--annotatedfloat-msgspecmetagt00" class="hash-link" aria-label="Direct link to timeout_reconciliation--annotatedfloat-msgspecmetagt00" title="Direct link to timeout_reconciliation--annotatedfloat-msgspecmetagt00">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="timeout_portfolio--annotatedfloat-msgspecmetagt00">timeout_portfolio <em>: Annotated[float, msgspec.Meta(gt=0.0)]</em><a href="#timeout_portfolio--annotatedfloat-msgspecmetagt00" class="hash-link" aria-label="Direct link to timeout_portfolio--annotatedfloat-msgspecmetagt00" title="Direct link to timeout_portfolio--annotatedfloat-msgspecmetagt00">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="timeout_disconnection--annotatedfloat-msgspecmetagt00">timeout_disconnection <em>: Annotated[float, msgspec.Meta(gt=0.0)]</em><a href="#timeout_disconnection--annotatedfloat-msgspecmetagt00" class="hash-link" aria-label="Direct link to timeout_disconnection--annotatedfloat-msgspecmetagt00" title="Direct link to timeout_disconnection--annotatedfloat-msgspecmetagt00">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="timeout_post_stop--annotatedfloat-msgspecmetagt00">timeout_post_stop <em>: Annotated[float, msgspec.Meta(gt=0.0)]</em><a href="#timeout_post_stop--annotatedfloat-msgspecmetagt00" class="hash-link" aria-label="Direct link to timeout_post_stop--annotatedfloat-msgspecmetagt00" title="Direct link to timeout_post_stop--annotatedfloat-msgspecmetagt00">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="timeout_shutdown--annotatedfloat-msgspecmetagt00">timeout_shutdown <em>: Annotated[float, msgspec.Meta(gt=0.0)]</em><a href="#timeout_shutdown--annotatedfloat-msgspecmetagt00" class="hash-link" aria-label="Direct link to timeout_shutdown--annotatedfloat-msgspecmetagt00" title="Direct link to timeout_shutdown--annotatedfloat-msgspecmetagt00">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="dict--dictstr-any-41">dict() → dict[str, Any]<a href="#dict--dictstr-any-41" class="hash-link" aria-label="Direct link to dict() → dict[str, Any]" title="Direct link to dict() → dict[str, Any]">​</a></h4>
<p>Return a dictionary representation of the configuration.</p>
<ul>
<li><strong>Return type:</strong>
dict[str, Any]</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="classmethod-fully_qualified_name--str-41"><em>classmethod</em> fully_qualified_name() → str<a href="#classmethod-fully_qualified_name--str-41" class="hash-link" aria-label="Direct link to classmethod-fully_qualified_name--str-41" title="Direct link to classmethod-fully_qualified_name--str-41">​</a></h4>
<p>Return the fully qualified name for the NautilusConfig class.</p>
<ul>
<li><strong>Return type:</strong>
str</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="property-id--str-41"><em>property</em> id <em>: str</em><a href="#property-id--str-41" class="hash-link" aria-label="Direct link to property-id--str-41" title="Direct link to property-id--str-41">​</a></h4>
<p>Return the hashed identifier for the configuration.</p>
<ul>
<li><strong>Return type:</strong>
str</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="json--bytes-41">json() → bytes<a href="#json--bytes-41" class="hash-link" aria-label="Direct link to json() → bytes" title="Direct link to json() → bytes">​</a></h4>
<p>Return serialized JSON encoded bytes.</p>
<ul>
<li><strong>Return type:</strong>
bytes</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="json_primitives--dictstr-any-41">json_primitives() → dict[str, Any]<a href="#json_primitives--dictstr-any-41" class="hash-link" aria-label="Direct link to json_primitives() → dict[str, Any]" title="Direct link to json_primitives() → dict[str, Any]">​</a></h4>
<p>Return a dictionary representation of the configuration with JSON primitive
types as values.</p>
<ul>
<li><strong>Return type:</strong>
dict[str, Any]</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="classmethod-json_schema--dictstr-any-41"><em>classmethod</em> json_schema() → dict[str, Any]<a href="#classmethod-json_schema--dictstr-any-41" class="hash-link" aria-label="Direct link to classmethod-json_schema--dictstr-any-41" title="Direct link to classmethod-json_schema--dictstr-any-41">​</a></h4>
<p>Generate a JSON schema for this configuration class.</p>
<ul>
<li><strong>Return type:</strong>
dict[str, Any]</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="classmethod-parseraw-bytes--str--any-41"><em>classmethod</em> parse(raw: bytes | str) → Any<a href="#classmethod-parseraw-bytes--str--any-41" class="hash-link" aria-label="Direct link to classmethod-parseraw-bytes--str--any-41" title="Direct link to classmethod-parseraw-bytes--str--any-41">​</a></h4>
<p>Return a decoded object of the given cls.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>cls</strong> (<em>type</em>) – The type to decode to.</li>
<li><strong>raw</strong> (<em>bytes</em> <em>or</em> <em>str</em>) – The raw bytes or JSON string to decode.</li>
</ul>
</li>
<li><strong>Return type:</strong>
Any</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="validate--bool-41">validate() → bool<a href="#validate--bool-41" class="hash-link" aria-label="Direct link to validate() → bool" title="Direct link to validate() → bool">​</a></h4>
<p>Return whether the configuration can be represented as valid JSON.</p>
<ul>
<li><strong>Return type:</strong>
bool</li>
</ul>
<h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="trading">Trading<a href="#trading" class="hash-link" aria-label="Direct link to Trading" title="Direct link to Trading">​</a></h2>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="class-strategyconfig"><em>class</em> StrategyConfig<a href="#class-strategyconfig" class="hash-link" aria-label="Direct link to class-strategyconfig" title="Direct link to class-strategyconfig">​</a></h3>
<p>Bases: <a href="#nautilus_trader.common.config.NautilusConfig"><code>NautilusConfig</code></a></p>
<p>The base model for all trading strategy configurations.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>strategy_id</strong> (<a href="../model/identifiers/index.htm#nautilus_trader.model.identifiers.StrategyId"><em>StrategyId</em></a> <em>,</em> <em>optional</em>) – The unique ID for the strategy. Will become the strategy ID if not None.</li>
<li><strong>order_id_tag</strong> (<em>str</em> <em>,</em> <em>optional</em>) – The unique order ID tag for the strategy. Must be unique
amongst all running strategies for a particular trader ID.</li>
<li><strong>use_uuid_client_order_ids</strong> (<em>bool</em> <em>,</em> <em>default False</em>) – If UUID4’s should be used for client order ID values.</li>
<li><strong>oms_type</strong> (<em>OmsType</em> <em>,</em> <em>optional</em>) – The order management system type for the strategy. This will determine
how the ExecutionEngine handles position IDs.</li>
<li><strong>external_order_claims</strong> (<em>list</em> <em>[</em><a href="../model/identifiers/index.htm#nautilus_trader.model.identifiers.InstrumentId"><em>InstrumentId</em></a> <em>]</em> <em>,</em> <em>optional</em>) – The external order claim instrument IDs.
External orders for matching instrument IDs will be associated with (claimed by) the strategy.</li>
<li><strong>manage_contingent_orders</strong> (<em>bool</em> <em>,</em> <em>default False</em>) – If OUO and OCO <strong>open</strong> contingent orders should be managed automatically by the strategy.
Any emulated orders which are active local will be managed by the OrderEmulator instead.</li>
<li><strong>manage_gtd_expiry</strong> (<em>bool</em> <em>,</em> <em>default False</em>) – If all order GTD time in force expirations should be managed by the strategy.
If True, then will ensure open orders have their GTD timers re-activated on start.</li>
<li><strong>log_events</strong> (<em>bool</em> <em>,</em> <em>default True</em>) – If events should be logged by the strategy.
If False, then only warning events and above are logged.</li>
<li><strong>log_commands</strong> (<em>bool</em> <em>,</em> <em>default True</em>) – If commands should be logged by the strategy.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="strategy_id--strategyid--none">strategy_id <em>: <a href="../model/identifiers/index.htm#nautilus_trader.model.identifiers.StrategyId">StrategyId</a> | None</em><a href="#strategy_id--strategyid--none" class="hash-link" aria-label="Direct link to strategy_id--strategyid--none" title="Direct link to strategy_id--strategyid--none">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="order_id_tag--str--none">order_id_tag <em>: str | None</em><a href="#order_id_tag--str--none" class="hash-link" aria-label="Direct link to order_id_tag--str--none" title="Direct link to order_id_tag--str--none">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="use_uuid_client_order_ids--bool">use_uuid_client_order_ids <em>: bool</em><a href="#use_uuid_client_order_ids--bool" class="hash-link" aria-label="Direct link to use_uuid_client_order_ids--bool" title="Direct link to use_uuid_client_order_ids--bool">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="oms_type--str--none">oms_type <em>: str | None</em><a href="#oms_type--str--none" class="hash-link" aria-label="Direct link to oms_type--str--none" title="Direct link to oms_type--str--none">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="external_order_claims--listinstrumentid--none">external_order_claims <em>: list[<a href="../model/identifiers/index.htm#nautilus_trader.model.identifiers.InstrumentId">InstrumentId</a>] | None</em><a href="#external_order_claims--listinstrumentid--none" class="hash-link" aria-label="Direct link to external_order_claims--listinstrumentid--none" title="Direct link to external_order_claims--listinstrumentid--none">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="manage_contingent_orders--bool">manage_contingent_orders <em>: bool</em><a href="#manage_contingent_orders--bool" class="hash-link" aria-label="Direct link to manage_contingent_orders--bool" title="Direct link to manage_contingent_orders--bool">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="manage_gtd_expiry--bool">manage_gtd_expiry <em>: bool</em><a href="#manage_gtd_expiry--bool" class="hash-link" aria-label="Direct link to manage_gtd_expiry--bool" title="Direct link to manage_gtd_expiry--bool">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="log_events--bool-5">log_events <em>: bool</em><a href="#log_events--bool-5" class="hash-link" aria-label="Direct link to log_events--bool-5" title="Direct link to log_events--bool-5">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="log_commands--bool-5">log_commands <em>: bool</em><a href="#log_commands--bool-5" class="hash-link" aria-label="Direct link to log_commands--bool-5" title="Direct link to log_commands--bool-5">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="dict--dictstr-any-42">dict() → dict[str, Any]<a href="#dict--dictstr-any-42" class="hash-link" aria-label="Direct link to dict() → dict[str, Any]" title="Direct link to dict() → dict[str, Any]">​</a></h4>
<p>Return a dictionary representation of the configuration.</p>
<ul>
<li><strong>Return type:</strong>
dict[str, Any]</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="classmethod-fully_qualified_name--str-42"><em>classmethod</em> fully_qualified_name() → str<a href="#classmethod-fully_qualified_name--str-42" class="hash-link" aria-label="Direct link to classmethod-fully_qualified_name--str-42" title="Direct link to classmethod-fully_qualified_name--str-42">​</a></h4>
<p>Return the fully qualified name for the NautilusConfig class.</p>
<ul>
<li><strong>Return type:</strong>
str</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="property-id--str-42"><em>property</em> id <em>: str</em><a href="#property-id--str-42" class="hash-link" aria-label="Direct link to property-id--str-42" title="Direct link to property-id--str-42">​</a></h4>
<p>Return the hashed identifier for the configuration.</p>
<ul>
<li><strong>Return type:</strong>
str</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="json--bytes-42">json() → bytes<a href="#json--bytes-42" class="hash-link" aria-label="Direct link to json() → bytes" title="Direct link to json() → bytes">​</a></h4>
<p>Return serialized JSON encoded bytes.</p>
<ul>
<li><strong>Return type:</strong>
bytes</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="json_primitives--dictstr-any-42">json_primitives() → dict[str, Any]<a href="#json_primitives--dictstr-any-42" class="hash-link" aria-label="Direct link to json_primitives() → dict[str, Any]" title="Direct link to json_primitives() → dict[str, Any]">​</a></h4>
<p>Return a dictionary representation of the configuration with JSON primitive
types as values.</p>
<ul>
<li><strong>Return type:</strong>
dict[str, Any]</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="classmethod-json_schema--dictstr-any-42"><em>classmethod</em> json_schema() → dict[str, Any]<a href="#classmethod-json_schema--dictstr-any-42" class="hash-link" aria-label="Direct link to classmethod-json_schema--dictstr-any-42" title="Direct link to classmethod-json_schema--dictstr-any-42">​</a></h4>
<p>Generate a JSON schema for this configuration class.</p>
<ul>
<li><strong>Return type:</strong>
dict[str, Any]</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="classmethod-parseraw-bytes--str--any-42"><em>classmethod</em> parse(raw: bytes | str) → Any<a href="#classmethod-parseraw-bytes--str--any-42" class="hash-link" aria-label="Direct link to classmethod-parseraw-bytes--str--any-42" title="Direct link to classmethod-parseraw-bytes--str--any-42">​</a></h4>
<p>Return a decoded object of the given cls.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>cls</strong> (<em>type</em>) – The type to decode to.</li>
<li><strong>raw</strong> (<em>bytes</em> <em>or</em> <em>str</em>) – The raw bytes or JSON string to decode.</li>
</ul>
</li>
<li><strong>Return type:</strong>
Any</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="validate--bool-42">validate() → bool<a href="#validate--bool-42" class="hash-link" aria-label="Direct link to validate() → bool" title="Direct link to validate() → bool">​</a></h4>
<p>Return whether the configuration can be represented as valid JSON.</p>
<ul>
<li><strong>Return type:</strong>
bool</li>
</ul>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="class-importablestrategyconfig"><em>class</em> ImportableStrategyConfig<a href="#class-importablestrategyconfig" class="hash-link" aria-label="Direct link to class-importablestrategyconfig" title="Direct link to class-importablestrategyconfig">​</a></h3>
<p>Bases: <a href="#nautilus_trader.common.config.NautilusConfig"><code>NautilusConfig</code></a></p>
<p>Configuration for a trading strategy instance.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>strategy_path</strong> (<em>str</em>) – The fully qualified name of the strategy class.</li>
<li><strong>config_path</strong> (<em>str</em>) – The fully qualified name of the config class.</li>
<li><strong>config</strong> (<em>dict</em> *[*<em>str</em> <em>,</em> <em>Any</em> <em>]</em>) – The strategy configuration.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="strategy_path--str">strategy_path <em>: str</em><a href="#strategy_path--str" class="hash-link" aria-label="Direct link to strategy_path--str" title="Direct link to strategy_path--str">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="config_path--str-5">config_path <em>: str</em><a href="#config_path--str-5" class="hash-link" aria-label="Direct link to config_path--str-5" title="Direct link to config_path--str-5">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="config--dictstr-any-4">config <em>: dict[str, Any]</em><a href="#config--dictstr-any-4" class="hash-link" aria-label="Direct link to config--dictstr-any-4" title="Direct link to config--dictstr-any-4">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="dict--dictstr-any-43">dict() → dict[str, Any]<a href="#dict--dictstr-any-43" class="hash-link" aria-label="Direct link to dict() → dict[str, Any]" title="Direct link to dict() → dict[str, Any]">​</a></h4>
<p>Return a dictionary representation of the configuration.</p>
<ul>
<li><strong>Return type:</strong>
dict[str, Any]</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="classmethod-fully_qualified_name--str-43"><em>classmethod</em> fully_qualified_name() → str<a href="#classmethod-fully_qualified_name--str-43" class="hash-link" aria-label="Direct link to classmethod-fully_qualified_name--str-43" title="Direct link to classmethod-fully_qualified_name--str-43">​</a></h4>
<p>Return the fully qualified name for the NautilusConfig class.</p>
<ul>
<li><strong>Return type:</strong>
str</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="property-id--str-43"><em>property</em> id <em>: str</em><a href="#property-id--str-43" class="hash-link" aria-label="Direct link to property-id--str-43" title="Direct link to property-id--str-43">​</a></h4>
<p>Return the hashed identifier for the configuration.</p>
<ul>
<li><strong>Return type:</strong>
str</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="json--bytes-43">json() → bytes<a href="#json--bytes-43" class="hash-link" aria-label="Direct link to json() → bytes" title="Direct link to json() → bytes">​</a></h4>
<p>Return serialized JSON encoded bytes.</p>
<ul>
<li><strong>Return type:</strong>
bytes</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="json_primitives--dictstr-any-43">json_primitives() → dict[str, Any]<a href="#json_primitives--dictstr-any-43" class="hash-link" aria-label="Direct link to json_primitives() → dict[str, Any]" title="Direct link to json_primitives() → dict[str, Any]">​</a></h4>
<p>Return a dictionary representation of the configuration with JSON primitive
types as values.</p>
<ul>
<li><strong>Return type:</strong>
dict[str, Any]</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="classmethod-json_schema--dictstr-any-43"><em>classmethod</em> json_schema() → dict[str, Any]<a href="#classmethod-json_schema--dictstr-any-43" class="hash-link" aria-label="Direct link to classmethod-json_schema--dictstr-any-43" title="Direct link to classmethod-json_schema--dictstr-any-43">​</a></h4>
<p>Generate a JSON schema for this configuration class.</p>
<ul>
<li><strong>Return type:</strong>
dict[str, Any]</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="classmethod-parseraw-bytes--str--any-43"><em>classmethod</em> parse(raw: bytes | str) → Any<a href="#classmethod-parseraw-bytes--str--any-43" class="hash-link" aria-label="Direct link to classmethod-parseraw-bytes--str--any-43" title="Direct link to classmethod-parseraw-bytes--str--any-43">​</a></h4>
<p>Return a decoded object of the given cls.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>cls</strong> (<em>type</em>) – The type to decode to.</li>
<li><strong>raw</strong> (<em>bytes</em> <em>or</em> <em>str</em>) – The raw bytes or JSON string to decode.</li>
</ul>
</li>
<li><strong>Return type:</strong>
Any</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="validate--bool-43">validate() → bool<a href="#validate--bool-43" class="hash-link" aria-label="Direct link to validate() → bool" title="Direct link to validate() → bool">​</a></h4>
<p>Return whether the configuration can be represented as valid JSON.</p>
<ul>
<li><strong>Return type:</strong>
bool</li>
</ul>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="class-strategyfactory"><em>class</em> StrategyFactory<a href="#class-strategyfactory" class="hash-link" aria-label="Direct link to class-strategyfactory" title="Direct link to class-strategyfactory">​</a></h3>
<p>Bases: <code>object</code></p>
<p>Provides strategy creation from importable configurations.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="static-createconfig-importablestrategyconfig"><em>static</em> create(config: <a href="#nautilus_trader.trading.config.ImportableStrategyConfig">ImportableStrategyConfig</a>)<a href="#static-createconfig-importablestrategyconfig" class="hash-link" aria-label="Direct link to static-createconfig-importablestrategyconfig" title="Direct link to static-createconfig-importablestrategyconfig">​</a></h4>
<p>Create a trading strategy from the given configuration.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>config</strong> (<a href="#nautilus_trader.trading.config.ImportableStrategyConfig"><em>ImportableStrategyConfig</em></a>) – The configuration for the building step.</li>
<li><strong>Return type:</strong>
<a href="../trading/index.htm#nautilus_trader.trading.Strategy">Strategy</a></li>
<li><strong>Raises:</strong>
<strong>TypeError</strong> – If config is not of type ImportableStrategyConfig.</li>
</ul>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="class-importablecontrollerconfig"><em>class</em> ImportableControllerConfig<a href="#class-importablecontrollerconfig" class="hash-link" aria-label="Direct link to class-importablecontrollerconfig" title="Direct link to class-importablecontrollerconfig">​</a></h3>
<p>Bases: <a href="#nautilus_trader.common.config.NautilusConfig"><code>NautilusConfig</code></a></p>
<p>Configuration for a controller instance.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>controller_path</strong> (<em>str</em>) – The fully qualified name of the controller class.</li>
<li><strong>config_path</strong> (<em>str</em>) – The fully qualified name of the config class.</li>
<li><strong>config</strong> (<em>dict</em> *[*<em>str</em> <em>,</em> <em>Any</em> <em>]</em>) – The controller configuration.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="controller_path--str">controller_path <em>: str</em><a href="#controller_path--str" class="hash-link" aria-label="Direct link to controller_path--str" title="Direct link to controller_path--str">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="config_path--str-6">config_path <em>: str</em><a href="#config_path--str-6" class="hash-link" aria-label="Direct link to config_path--str-6" title="Direct link to config_path--str-6">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="config--dict-2">config <em>: dict</em><a href="#config--dict-2" class="hash-link" aria-label="Direct link to config--dict-2" title="Direct link to config--dict-2">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="dict--dictstr-any-44">dict() → dict[str, Any]<a href="#dict--dictstr-any-44" class="hash-link" aria-label="Direct link to dict() → dict[str, Any]" title="Direct link to dict() → dict[str, Any]">​</a></h4>
<p>Return a dictionary representation of the configuration.</p>
<ul>
<li><strong>Return type:</strong>
dict[str, Any]</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="classmethod-fully_qualified_name--str-44"><em>classmethod</em> fully_qualified_name() → str<a href="#classmethod-fully_qualified_name--str-44" class="hash-link" aria-label="Direct link to classmethod-fully_qualified_name--str-44" title="Direct link to classmethod-fully_qualified_name--str-44">​</a></h4>
<p>Return the fully qualified name for the NautilusConfig class.</p>
<ul>
<li><strong>Return type:</strong>
str</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="property-id--str-44"><em>property</em> id <em>: str</em><a href="#property-id--str-44" class="hash-link" aria-label="Direct link to property-id--str-44" title="Direct link to property-id--str-44">​</a></h4>
<p>Return the hashed identifier for the configuration.</p>
<ul>
<li><strong>Return type:</strong>
str</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="json--bytes-44">json() → bytes<a href="#json--bytes-44" class="hash-link" aria-label="Direct link to json() → bytes" title="Direct link to json() → bytes">​</a></h4>
<p>Return serialized JSON encoded bytes.</p>
<ul>
<li><strong>Return type:</strong>
bytes</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="json_primitives--dictstr-any-44">json_primitives() → dict[str, Any]<a href="#json_primitives--dictstr-any-44" class="hash-link" aria-label="Direct link to json_primitives() → dict[str, Any]" title="Direct link to json_primitives() → dict[str, Any]">​</a></h4>
<p>Return a dictionary representation of the configuration with JSON primitive
types as values.</p>
<ul>
<li><strong>Return type:</strong>
dict[str, Any]</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="classmethod-json_schema--dictstr-any-44"><em>classmethod</em> json_schema() → dict[str, Any]<a href="#classmethod-json_schema--dictstr-any-44" class="hash-link" aria-label="Direct link to classmethod-json_schema--dictstr-any-44" title="Direct link to classmethod-json_schema--dictstr-any-44">​</a></h4>
<p>Generate a JSON schema for this configuration class.</p>
<ul>
<li><strong>Return type:</strong>
dict[str, Any]</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="classmethod-parseraw-bytes--str--any-44"><em>classmethod</em> parse(raw: bytes | str) → Any<a href="#classmethod-parseraw-bytes--str--any-44" class="hash-link" aria-label="Direct link to classmethod-parseraw-bytes--str--any-44" title="Direct link to classmethod-parseraw-bytes--str--any-44">​</a></h4>
<p>Return a decoded object of the given cls.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>cls</strong> (<em>type</em>) – The type to decode to.</li>
<li><strong>raw</strong> (<em>bytes</em> <em>or</em> <em>str</em>) – The raw bytes or JSON string to decode.</li>
</ul>
</li>
<li><strong>Return type:</strong>
Any</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="validate--bool-44">validate() → bool<a href="#validate--bool-44" class="hash-link" aria-label="Direct link to validate() → bool" title="Direct link to validate() → bool">​</a></h4>
<p>Return whether the configuration can be represented as valid JSON.</p>
<ul>
<li><strong>Return type:</strong>
bool</li>
</ul></div></article><nav class="docusaurus-mt-lg pagination-nav" aria-label="Docs pages"><a class="pagination-nav__link pagination-nav__link--prev" href="../common/index.htm"><div class="pagination-nav__sublabel">Previous</div><div class="pagination-nav__label">Common</div></a><a class="pagination-nav__link pagination-nav__link--next" href="../core/index.htm"><div class="pagination-nav__sublabel">Next</div><div class="pagination-nav__label">Core</div></a></nav></div></div><div class="col col--3"><div class="tableOfContents_bqdL thin-scrollbar theme-doc-toc-desktop"><ul class="table-of-contents table-of-contents__left-border"><li><a href="#backtest" class="table-of-contents__link toc-highlight">Backtest</a><ul><li><a href="#parse_filters_exprs-str--none" class="table-of-contents__link toc-highlight">parse_filters_expr(s: str | None)</a></li><li><a href="#class-backtestvenueconfig" class="table-of-contents__link toc-highlight"><em>class</em> BacktestVenueConfig</a></li><li><a href="#class-backtestdataconfig" class="table-of-contents__link toc-highlight"><em>class</em> BacktestDataConfig</a></li><li><a href="#class-backtestengineconfig" class="table-of-contents__link toc-highlight"><em>class</em> BacktestEngineConfig</a></li><li><a href="#class-backtestrunconfig" class="table-of-contents__link toc-highlight"><em>class</em> BacktestRunConfig</a></li><li><a href="#class-simulationmoduleconfig" class="table-of-contents__link toc-highlight"><em>class</em> SimulationModuleConfig</a></li><li><a href="#class-fillmodelconfig" class="table-of-contents__link toc-highlight"><em>class</em> FillModelConfig</a></li><li><a href="#class-importablefillmodelconfig" class="table-of-contents__link toc-highlight"><em>class</em> ImportableFillModelConfig</a></li><li><a href="#class-fillmodelfactory" class="table-of-contents__link toc-highlight"><em>class</em> FillModelFactory</a></li><li><a href="#class-latencymodelconfig" class="table-of-contents__link toc-highlight"><em>class</em> LatencyModelConfig</a></li><li><a href="#class-importablelatencymodelconfig" class="table-of-contents__link toc-highlight"><em>class</em> ImportableLatencyModelConfig</a></li><li><a href="#class-latencymodelfactory" class="table-of-contents__link toc-highlight"><em>class</em> LatencyModelFactory</a></li><li><a href="#class-feemodelconfig" class="table-of-contents__link toc-highlight"><em>class</em> FeeModelConfig</a></li><li><a href="#class-makertakerfeemodelconfig" class="table-of-contents__link toc-highlight"><em>class</em> MakerTakerFeeModelConfig</a></li><li><a href="#class-fixedfeemodelconfig" class="table-of-contents__link toc-highlight"><em>class</em> FixedFeeModelConfig</a></li><li><a href="#class-percontractfeemodelconfig" class="table-of-contents__link toc-highlight"><em>class</em> PerContractFeeModelConfig</a></li><li><a href="#class-importablefeemodelconfig" class="table-of-contents__link toc-highlight"><em>class</em> ImportableFeeModelConfig</a></li><li><a href="#class-feemodelfactory" class="table-of-contents__link toc-highlight"><em>class</em> FeeModelFactory</a></li><li><a href="#class-fxrolloverinterestconfig" class="table-of-contents__link toc-highlight"><em>class</em> FXRolloverInterestConfig</a></li></ul></li><li><a href="#cache" class="table-of-contents__link toc-highlight">Cache</a><ul><li><a href="#class-cacheconfig" class="table-of-contents__link toc-highlight"><em>class</em> CacheConfig</a></li></ul></li><li><a href="#common" class="table-of-contents__link toc-highlight">Common</a><ul><li><a href="#exception-invalidconfiguration" class="table-of-contents__link toc-highlight"><em>exception</em> InvalidConfiguration</a></li><li><a href="#resolve_pathpath-str--type" class="table-of-contents__link toc-highlight">resolve_path(path: str) → type</a></li><li><a href="#resolve_config_pathpath-str--typenautilusconfig" class="table-of-contents__link toc-highlight">resolve_config_path(path: str) → type[NautilusConfig]</a></li><li><a href="#nautilus_schema_hooktype_-typeany--dictstr-any" class="table-of-contents__link toc-highlight">nautilus_schema_hook(type_: type[Any]) → dict[str, Any]</a></li><li><a href="#msgspec_encoding_hookobj-any--any" class="table-of-contents__link toc-highlight">msgspec_encoding_hook(obj: Any) → Any</a></li><li><a href="#msgspec_decoding_hookobj_type-type-obj-any--any" class="table-of-contents__link toc-highlight">msgspec_decoding_hook(obj_type: type, obj: Any) → Any</a></li><li><a href="#register_config_encodingtype_-type-encoder-callable--none" class="table-of-contents__link toc-highlight">register_config_encoding(type_: type, encoder: Callable) → None</a></li><li><a href="#register_config_decodingtype_-type-decoder-callable--none" class="table-of-contents__link toc-highlight">register_config_decoding(type_: type, decoder: Callable) → None</a></li><li><a href="#tokenize_configobj-nautilusconfig--str" class="table-of-contents__link toc-highlight">tokenize_config(obj: NautilusConfig) → str</a></li><li><a href="#class-nautilusconfig" class="table-of-contents__link toc-highlight"><em>class</em> NautilusConfig</a></li><li><a href="#class-databaseconfig" class="table-of-contents__link toc-highlight"><em>class</em> DatabaseConfig</a></li><li><a href="#class-messagebusconfig" class="table-of-contents__link toc-highlight"><em>class</em> MessageBusConfig</a></li><li><a href="#class-instrumentproviderconfig" class="table-of-contents__link toc-highlight"><em>class</em> InstrumentProviderConfig</a></li><li><a href="#class-orderemulatorconfig" class="table-of-contents__link toc-highlight"><em>class</em> OrderEmulatorConfig</a></li><li><a href="#class-actorconfig" class="table-of-contents__link toc-highlight"><em>class</em> ActorConfig</a></li><li><a href="#class-importableactorconfig" class="table-of-contents__link toc-highlight"><em>class</em> ImportableActorConfig</a></li><li><a href="#class-actorfactory" class="table-of-contents__link toc-highlight"><em>class</em> ActorFactory</a></li><li><a href="#class-loggingconfig" class="table-of-contents__link toc-highlight"><em>class</em> LoggingConfig</a></li><li><a href="#class-importablefactoryconfig" class="table-of-contents__link toc-highlight"><em>class</em> ImportableFactoryConfig</a></li><li><a href="#class-importableconfig" class="table-of-contents__link toc-highlight"><em>class</em> ImportableConfig</a></li></ul></li><li><a href="#data" class="table-of-contents__link toc-highlight">Data</a><ul><li><a href="#class-dataengineconfig" class="table-of-contents__link toc-highlight"><em>class</em> DataEngineConfig</a></li></ul></li><li><a href="#execution" class="table-of-contents__link toc-highlight">Execution</a><ul><li><a href="#class-execengineconfig" class="table-of-contents__link toc-highlight"><em>class</em> ExecEngineConfig</a></li><li><a href="#class-execalgorithmconfig" class="table-of-contents__link toc-highlight"><em>class</em> ExecAlgorithmConfig</a></li><li><a href="#class-importableexecalgorithmconfig" class="table-of-contents__link toc-highlight"><em>class</em> ImportableExecAlgorithmConfig</a></li><li><a href="#class-execalgorithmfactory" class="table-of-contents__link toc-highlight"><em>class</em> ExecAlgorithmFactory</a></li></ul></li><li><a href="#live" class="table-of-contents__link toc-highlight">Live</a><ul><li><a href="#class-livedataengineconfig" class="table-of-contents__link toc-highlight"><em>class</em> LiveDataEngineConfig</a></li><li><a href="#class-liveriskengineconfig" class="table-of-contents__link toc-highlight"><em>class</em> LiveRiskEngineConfig</a></li><li><a href="#class-liveexecengineconfig" class="table-of-contents__link toc-highlight"><em>class</em> LiveExecEngineConfig</a></li><li><a href="#class-routingconfig" class="table-of-contents__link toc-highlight"><em>class</em> RoutingConfig</a></li><li><a href="#class-livedataclientconfig" class="table-of-contents__link toc-highlight"><em>class</em> LiveDataClientConfig</a></li><li><a href="#class-liveexecclientconfig" class="table-of-contents__link toc-highlight"><em>class</em> LiveExecClientConfig</a></li><li><a href="#class-controllerconfig" class="table-of-contents__link toc-highlight"><em>class</em> ControllerConfig</a></li><li><a href="#class-controllerfactory" class="table-of-contents__link toc-highlight"><em>class</em> ControllerFactory</a></li><li><a href="#class-tradingnodeconfig" class="table-of-contents__link toc-highlight"><em>class</em> TradingNodeConfig</a></li></ul></li><li><a href="#persistence" class="table-of-contents__link toc-highlight">Persistence</a><ul><li><a href="#class-streamingconfig" class="table-of-contents__link toc-highlight"><em>class</em> StreamingConfig</a></li><li><a href="#class-datacatalogconfig" class="table-of-contents__link toc-highlight"><em>class</em> DataCatalogConfig</a></li></ul></li><li><a href="#risk" class="table-of-contents__link toc-highlight">Risk</a><ul><li><a href="#class-riskengineconfig" class="table-of-contents__link toc-highlight"><em>class</em> RiskEngineConfig</a></li></ul></li><li><a href="#system" class="table-of-contents__link toc-highlight">System</a><ul><li><a href="#class-nautiluskernelconfig" class="table-of-contents__link toc-highlight"><em>class</em> NautilusKernelConfig</a></li></ul></li><li><a href="#trading" class="table-of-contents__link toc-highlight">Trading</a><ul><li><a href="#class-strategyconfig" class="table-of-contents__link toc-highlight"><em>class</em> StrategyConfig</a></li><li><a href="#class-importablestrategyconfig" class="table-of-contents__link toc-highlight"><em>class</em> ImportableStrategyConfig</a></li><li><a href="#class-strategyfactory" class="table-of-contents__link toc-highlight"><em>class</em> StrategyFactory</a></li><li><a href="#class-importablecontrollerconfig" class="table-of-contents__link toc-highlight"><em>class</em> ImportableControllerConfig</a></li></ul></li></ul></div></div></div><div class="footer-wrapper MuiBox-root css-0"><div class="social-footer-box MuiBox-root css-0"><style data-emotion="css 17rjyz3">.css-17rjyz3{-webkit-text-decoration:underline;text-decoration:underline;text-decoration-color:rgba(25, 118, 210, 0.4);padding:12px;margin-right:10px;}.css-17rjyz3:hover{text-decoration-color:inherit;}</style><style data-emotion="css jl1bw5">.css-jl1bw5{margin:0;font:inherit;color:#1976d2;-webkit-text-decoration:underline;text-decoration:underline;text-decoration-color:rgba(25, 118, 210, 0.4);padding:12px;margin-right:10px;}.css-jl1bw5:hover{text-decoration-color:inherit;}</style><a class="MuiTypography-root MuiTypography-inherit MuiLink-root MuiLink-underlineAlways github-footer css-jl1bw5" href="https://github.com/nautechsystems/nautilus_trader" target="_blank"></a><a class="MuiTypography-root MuiTypography-inherit MuiLink-root MuiLink-underlineAlways discord-footer css-jl1bw5" href="https://discord.gg/NautilusTrader" target="_blank"></a><a class="MuiTypography-root MuiTypography-inherit MuiLink-root MuiLink-underlineAlways linkedin-footer css-jl1bw5" href="https://www.linkedin.com/company/nautechsystems/" target="_blank"></a><a class="MuiTypography-root MuiTypography-inherit MuiLink-root MuiLink-underlineAlways x-footer css-jl1bw5" href="https://twitter.com/NautilusTrader" target="_blank"></a></div><div class="footer-copyright">© 2025 Nautech Systems Pty Ltd. All rights reserved.</div></div></div></div></main></div></div></div></div>
</body>
</html>