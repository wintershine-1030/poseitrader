<!doctype html>
<html lang="en" dir="ltr" class="docs-wrapper plugin-docs plugin-id-default docs-version-nightly docs-doc-page docs-doc-id-api_reference/execution" data-has-hydrated="false">
<head>
<meta charset="UTF-8">
<meta name="generator" content="Docusaurus v3.8.1">
<title data-rh="true">Execution | PoseiTrader Documentation</title><meta data-rh="true" name="viewport" content="width=device-width,initial-scale=1"><meta data-rh="true" name="twitter:card" content="summary_large_image"><meta data-rh="true" property="og:image" content="docs/latestimg/docusaurus-social-card.jpg"><meta data-rh="true" name="twitter:image" content="docs/latestimg/docusaurus-social-card.jpg"><meta data-rh="true" property="og:url" content="docs/latestnightly/api_reference/execution"><meta data-rh="true" property="og:locale" content="en"><meta data-rh="true" name="docusaurus_locale" content="en"><meta data-rh="true" name="docsearch:language" content="en"><meta data-rh="true" name="keywords" content="Open-source trading platform, Algorithmic trading software, Event-driven backtesting, Live trading with no code changes, Trade any asset class, Low-latency trading execution, Python API for trading strategies, Custom market data integration, Futures and options trading, Crypto spot and derivatives trading, Equities trading simulation, FX spot trading, Sports betting markets trading, Fast backtesting strategies, Advanced trading orders, Rust-based trading platform, High-performance trading system, Nanosecond resolution market simulation, Trading across multiple venues, Trading platform for hedge funds, Seamless data integration, Customizable trading strategies, AI and ML trading strategies, Posei trading platform, Multi-venue trading, Unlimited backtesting strategies, Fast trading execution solutions, Realistic market simulations, Seamless trading API integration, PoseiTrader Documentation, Docs, PoseiTrader Docs"><meta data-rh="true" name="title" content="PoseiTrader Documentation"><meta data-rh="true" name="og:title" content="PoseiTrader Documentation"><meta data-rh="true" name="og:description" content="PoseiTrader is a high-performance platform for automating trading strategies, built on the powerful Posei framework for backtesting and real-time trading."><meta data-rh="true" name="og:image" content="img/preview.png"><meta data-rh="true" name="og:url" content="/docs/latest"><meta data-rh="true" name="docusaurus_version" content="nightly"><meta data-rh="true" name="docusaurus_tag" content="docs-default-nightly"><meta data-rh="true" name="docsearch:version" content="nightly"><meta data-rh="true" name="docsearch:docusaurus_tag" content="docs-default-nightly"><meta data-rh="true" property="og:title" content="Execution | PoseiTrader Documentation"><meta data-rh="true" name="description" content="The execution subpackage groups components relating to the execution stack for the"><meta data-rh="true" property="og:description" content="The execution subpackage groups components relating to the execution stack for the"><link data-rh="true" rel="icon" href="../../../img/shell.ico"><link data-rh="true" rel="canonical" href="index.htm"><link data-rh="true" rel="alternate" href="index.htm" hreflang="en"><link data-rh="true" rel="alternate" href="index.htm" hreflang="x-default"><link data-rh="true" rel="preconnect" href="https://CWRKEEL01M-dsn.algolia.net" crossorigin="anonymous"><script data-rh="true" type="application/ld+json">{"@context":"https://schema.org","@type":"BreadcrumbList","itemListElement":[{"@type":"ListItem","position":1,"name":"Python API","item":"docs/latestnightly/api_reference/"},{"@type":"ListItem","position":2,"name":"Execution","item":"docs/latestnightly/api_reference/execution"}]}</script><link rel="search" type="application/opensearchdescription+xml" title="PoseiTrader Documentation" href="../../../opensearch.xml">
<script>!function(){var t=window.location.pathname;if(t.startsWith("/docs")&&!t.startsWith("/docs/latest")&&!t.startsWith("/docs/nightly")){var s=t.replace("/docs","/docs/latest");window.location.href=s}}()</script>
<link rel="preconnect" href="https://www.google-analytics.com">
<link rel="preconnect" href="https://www.googletagmanager.com">
<script async src="https://www.googletagmanager.com/gtag/js?id=G-TR4XK597XK"></script>
<script>function gtag(){dataLayer.push(arguments)}window.dataLayer=window.dataLayer||[],gtag("js",new Date),gtag("config","G-TR4XK597XK",{anonymize_ip:!0})</script><link rel="stylesheet" href="../../../assets/css/styles.0f0f692e.css">
<script src="../../../assets/js/runtime~main.92b727d5.js" defer="defer"></script>
<script src="../../../assets/js/main.1cd42d85.js" defer="defer"></script>
</head>
<body class="navigation-with-keyboard">
<svg xmlns="http://www.w3.org/2000/svg" style="display: none;"><defs>
<symbol id="theme-svg-external-link" viewbox="0 0 24 24"><path fill="currentColor" d="M21 13v10h-21v-19h12v2h-10v15h17v-8h2zm3-12h-10.988l4.035 4-6.977 7.07 2.828 2.828 6.977-7.07 4.125 4.172v-11z"></path></symbol>
</defs></svg>
<script>!function(){var t="dark";var e=function(){try{return new URLSearchParams(window.location.search).get("docusaurus-theme")}catch(t){}}()||function(){try{return window.localStorage.getItem("theme")}catch(t){}}();document.documentElement.setAttribute("data-theme",e||t),document.documentElement.setAttribute("data-theme-choice",e||t)}(),function(){try{const c=new URLSearchParams(window.location.search).entries();for(var[t,e]of c)if(t.startsWith("docusaurus-data-")){var a=t.replace("docusaurus-data-","data-");document.documentElement.setAttribute(a,e)}}catch(t){}}()</script><div id="__docusaurus"><div role="region" aria-label="Skip to main content"><a class="skipToContent_fXgn" href="#__docusaurus_skipToContent_fallback">Skip to main content</a></div><nav aria-label="Main" class="theme-layout-navbar navbar navbar--fixed-top navbarHideable_m1mJ"><div class="navbar__inner"><div class="theme-layout-navbar-left navbar__items"><button aria-label="Toggle navigation bar" aria-expanded="false" class="navbar__toggle clean-btn" type="button"><svg width="30" height="30" viewbox="0 0 30 30" aria-hidden="true"><path stroke="currentColor" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" d="M4 7h22M4 15h22M4 23h22"></path></svg></button><a href="../../../../index.htm" target="_blank" rel="noopener noreferrer" class="navbar__brand"><div class="navbar__logo"><img src="../../../img/nt-black-large.webp" alt="PoseiTrader Logo" class="themedComponent_mlkZ themedComponent--light_NVdE"><img src="../../../img/nt-white-large.webp" alt="PoseiTrader Logo" class="themedComponent_mlkZ themedComponent--dark_xIcU"></div><b class="navbar__title text--truncate"></b></a><div class="navbar__item dropdown dropdown--hoverable"><a href="#" aria-haspopup="true" aria-expanded="false" role="button" class="navbar__link">Version</a><ul class="dropdown__menu"><li><a class="dropdown__link" href="../../../latest/index.html">latest</a></li><li><a aria-current="page" class="dropdown__link dropdown__link--active" href="../../index.htm">nightly</a></li></ul></div><div class="navbarSearchContainer_Bca1"><button type="button" class="DocSearch DocSearch-Button" aria-label="Search (Command+K)"><span class="DocSearch-Button-Container"><svg width="20" height="20" class="DocSearch-Search-Icon" viewbox="0 0 20 20" aria-hidden="true"><path d="M14.386 14.386l4.0877 4.0877-4.0877-4.0877c-2.9418 2.9419-7.7115 2.9419-10.6533 0-2.9419-2.9418-2.9419-7.7115 0-10.6533 2.9418-2.9419 7.7115-2.9419 10.6533 0 2.9419 2.9418 2.9419 7.7115 0 10.6533z" stroke="currentColor" fill="none" fill-rule="evenodd" stroke-linecap="round" stroke-linejoin="round"></path></svg><span class="DocSearch-Button-Placeholder">Search</span></span><span class="DocSearch-Button-Keys"></span></button></div></div><div class="theme-layout-navbar-right navbar__items navbar__items--right"><a href="https://github.com/poseisysstems" target="_blank" rel="noopener noreferrer" class="navbar__item navbar__link header-github-link common-social" aria-label="GitHub repository"></a> <a href="https://twitter.com/PoseiTrader" target="_blank" rel="noopener noreferrer" class="navbar__item navbar__link header-x-link common-social" aria-label="X"></a><div class="toggleContainer_T22x colorModeToggle_DEke"><button class="clean-btn toggleButton_yw5v toggleButtonDisabled_BJd7" type="button" disabled="" title="Switch between dark and light mode (currently light mode)" aria-label="Switch between dark and light mode (currently light mode)" aria-live="polite"><div class="switch_Ms1n"><span class="iconWrapper_FHql"><style data-emotion="css lp52so">.css-lp52so{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;width:1em;height:1em;display:inline-block;fill:currentColor;-webkit-flex-shrink:0;-ms-flex-negative:0;flex-shrink:0;-webkit-transition:fill 200ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;transition:fill 200ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;font-size:1.5rem;color:black;font-size:14px;}</style><svg class="MuiSvgIcon-root MuiSvgIcon-fontSizeMedium lightToggleIcon_SFTY css-lp52so" focusable="false" aria-hidden="true" viewbox="0 0 24 24" data-testid="LightModeIcon"><path d="M12 7c-2.76 0-5 2.24-5 5s2.24 5 5 5 5-2.24 5-5-2.24-5-5-5M2 13h2c.55 0 1-.45 1-1s-.45-1-1-1H2c-.55 0-1 .45-1 1s.45 1 1 1m18 0h2c.55 0 1-.45 1-1s-.45-1-1-1h-2c-.55 0-1 .45-1 1s.45 1 1 1M11 2v2c0 .55.45 1 1 1s1-.45 1-1V2c0-.55-.45-1-1-1s-1 .45-1 1m0 18v2c0 .55.45 1 1 1s1-.45 1-1v-2c0-.55-.45-1-1-1s-1 .45-1 1M5.99 4.58c-.39-.39-1.03-.39-1.41 0-.39.39-.39 1.03 0 1.41l1.06 1.06c.39.39 1.03.39 1.41 0s.39-1.03 0-1.41zm12.37 12.37c-.39-.39-1.03-.39-1.41 0-.39.39-.39 1.03 0 1.41l1.06 1.06c.39.39 1.03.39 1.41 0 .39-.39.39-1.03 0-1.41zm1.06-10.96c.39-.39.39-1.03 0-1.41-.39-.39-1.03-.39-1.41 0l-1.06 1.06c-.39.39-.39 1.03 0 1.41s1.03.39 1.41 0zM7.05 18.36c.39-.39.39-1.03 0-1.41-.39-.39-1.03-.39-1.41 0l-1.06 1.06c-.39.39-.39 1.03 0 1.41s1.03.39 1.41 0z"></path></svg><style data-emotion="css 13m6tje">.css-13m6tje{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;width:1em;height:1em;display:inline-block;fill:currentColor;-webkit-flex-shrink:0;-ms-flex-negative:0;flex-shrink:0;-webkit-transition:fill 200ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;transition:fill 200ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;font-size:1.5rem;color:white;font-size:14px;}</style><svg class="MuiSvgIcon-root MuiSvgIcon-fontSizeMedium darkToggleIcon_ekgs css-13m6tje" focusable="false" aria-hidden="true" viewbox="0 0 24 24" data-testid="DarkModeIcon"><path d="M12 3c-4.97 0-9 4.03-9 9s4.03 9 9 9 9-4.03 9-9c0-.46-.04-.92-.1-1.36-.98 1.37-2.58 2.26-4.4 2.26-2.98 0-5.4-2.42-5.4-5.4 0-1.81.89-3.42 2.26-4.4-.44-.06-.9-.1-1.36-.1"></path></svg></span></div></button></div></div></div><div role="presentation" class="navbar-sidebar__backdrop"></div></nav><div id="__docusaurus_skipToContent_fallback" class="theme-layout-main main-wrapper mainWrapper_z2l0"><div class="docsWrapper_hBAB"><button aria-label="Scroll back to top" class="clean-btn theme-back-to-top-button backToTopButton_sjWU" type="button"></button><div class="docRoot_UBD9"><aside class="theme-doc-sidebar-container docSidebarContainer_YfHR"><div class="sidebarViewport_aRkj"><div class="sidebar_njMd sidebarWithHideableNavbar_wUlq"><a href="../../../../index.htm" target="_blank" rel="noopener noreferrer" tabindex="-1" class="sidebarLogo_isFc"><img src="../../../img/nt-black-large.webp" alt="PoseiTrader Logo" class="themedComponent_mlkZ themedComponent--light_NVdE"><img src="../../../img/nt-white-large.webp" alt="PoseiTrader Logo" class="themedComponent_mlkZ themedComponent--dark_xIcU"><b></b></a><nav aria-label="Docs sidebar" class="menu thin-scrollbar menu_SIkG"><ul class="theme-doc-sidebar-menu menu__list"><li class="theme-doc-sidebar-item-link theme-doc-sidebar-item-link-level-1 menu__list-item"><a class="menu__link" href="../../index.htm">PoseiTrader Documentation</a></li><li class="theme-doc-sidebar-item-category theme-doc-sidebar-item-category-level-1 menu__list-item menu__list-item--collapsed"><div class="menu__list-item-collapsible"><a class="menu__link menu__link--sublist" href="../../getting_started/index.htm">Getting Started</a><button aria-label="Expand sidebar category &#x27;Getting Started&#x27;" aria-expanded="false" type="button" class="clean-btn menu__caret"></button></div></li><li class="theme-doc-sidebar-item-category theme-doc-sidebar-item-category-level-1 menu__list-item menu__list-item--collapsed"><div class="menu__list-item-collapsible"><a class="menu__link menu__link--sublist" href="../../concepts/index.htm">Concepts</a><button aria-label="Expand sidebar category &#x27;Concepts&#x27;" aria-expanded="false" type="button" class="clean-btn menu__caret"></button></div></li><li class="theme-doc-sidebar-item-category theme-doc-sidebar-item-category-level-1 menu__list-item menu__list-item--collapsed"><div class="menu__list-item-collapsible"><a class="menu__link menu__link--sublist" href="../../tutorials/index.htm">Tutorials</a><button aria-label="Expand sidebar category &#x27;Tutorials&#x27;" aria-expanded="false" type="button" class="clean-btn menu__caret"></button></div></li><li class="theme-doc-sidebar-item-category theme-doc-sidebar-item-category-level-1 menu__list-item menu__list-item--collapsed"><div class="menu__list-item-collapsible"><a class="menu__link menu__link--sublist" href="../../integrations/index.htm">Integrations</a><button aria-label="Expand sidebar category &#x27;Integrations&#x27;" aria-expanded="false" type="button" class="clean-btn menu__caret"></button></div></li><li class="theme-doc-sidebar-item-category theme-doc-sidebar-item-category-level-1 menu__list-item"><div class="menu__list-item-collapsible"><a class="menu__link menu__link--sublist menu__link--active" href="../index.htm">Python API</a><button aria-label="Collapse sidebar category &#x27;Python API&#x27;" aria-expanded="true" type="button" class="clean-btn menu__caret"></button></div><ul class="menu__list"><li class="theme-doc-sidebar-item-link theme-doc-sidebar-item-link-level-2 menu__list-item"><a class="menu__link" tabindex="0" href="../accounting/index.htm">Accounting</a></li><li class="theme-doc-sidebar-item-category theme-doc-sidebar-item-category-level-2 menu__list-item menu__list-item--collapsed"><div class="menu__list-item-collapsible"><a class="menu__link menu__link--sublist" tabindex="0" href="../adapters/index.htm">Adapters</a><button aria-label="Expand sidebar category &#x27;Adapters&#x27;" aria-expanded="false" type="button" class="clean-btn menu__caret"></button></div></li><li class="theme-doc-sidebar-item-link theme-doc-sidebar-item-link-level-2 menu__list-item"><a class="menu__link" tabindex="0" href="../analysis/index.htm">Analysis</a></li><li class="theme-doc-sidebar-item-link theme-doc-sidebar-item-link-level-2 menu__list-item"><a class="menu__link" tabindex="0" href="../backtest/index.htm">Backtest</a></li><li class="theme-doc-sidebar-item-link theme-doc-sidebar-item-link-level-2 menu__list-item"><a class="menu__link" tabindex="0" href="../cache/index.htm">Cache</a></li><li class="theme-doc-sidebar-item-link theme-doc-sidebar-item-link-level-2 menu__list-item"><a class="menu__link" tabindex="0" href="../common/index.htm">Common</a></li><li class="theme-doc-sidebar-item-link theme-doc-sidebar-item-link-level-2 menu__list-item"><a class="menu__link" tabindex="0" href="../config/index.htm">Config</a></li><li class="theme-doc-sidebar-item-link theme-doc-sidebar-item-link-level-2 menu__list-item"><a class="menu__link" tabindex="0" href="../core/index.htm">Core</a></li><li class="theme-doc-sidebar-item-link theme-doc-sidebar-item-link-level-2 menu__list-item"><a class="menu__link" tabindex="0" href="../data/index.htm">Data</a></li><li class="theme-doc-sidebar-item-link theme-doc-sidebar-item-link-level-2 menu__list-item"><a class="menu__link menu__link--active" aria-current="page" tabindex="0" href="index.htm">Execution</a></li><li class="theme-doc-sidebar-item-link theme-doc-sidebar-item-link-level-2 menu__list-item"><a class="menu__link" tabindex="0" href="../indicators/index.htm">Indicators</a></li><li class="theme-doc-sidebar-item-link theme-doc-sidebar-item-link-level-2 menu__list-item"><a class="menu__link" tabindex="0" href="../live/index.htm">Live</a></li><li class="theme-doc-sidebar-item-category theme-doc-sidebar-item-category-level-2 menu__list-item menu__list-item--collapsed"><div class="menu__list-item-collapsible"><a class="menu__link menu__link--sublist" tabindex="0" href="../model/index.htm">Model</a><button aria-label="Expand sidebar category &#x27;Model&#x27;" aria-expanded="false" type="button" class="clean-btn menu__caret"></button></div></li><li class="theme-doc-sidebar-item-link theme-doc-sidebar-item-link-level-2 menu__list-item"><a class="menu__link" tabindex="0" href="../persistence/index.htm">Persistence</a></li><li class="theme-doc-sidebar-item-link theme-doc-sidebar-item-link-level-2 menu__list-item"><a class="menu__link" tabindex="0" href="../portfolio/index.htm">Portfolio</a></li><li class="theme-doc-sidebar-item-link theme-doc-sidebar-item-link-level-2 menu__list-item"><a class="menu__link" tabindex="0" href="../risk/index.htm">Risk</a></li><li class="theme-doc-sidebar-item-link theme-doc-sidebar-item-link-level-2 menu__list-item"><a class="menu__link" tabindex="0" href="../serialization/index.htm">Serialization</a></li><li class="theme-doc-sidebar-item-link theme-doc-sidebar-item-link-level-2 menu__list-item"><a class="menu__link" tabindex="0" href="../system/index.htm">System</a></li><li class="theme-doc-sidebar-item-link theme-doc-sidebar-item-link-level-2 menu__list-item"><a class="menu__link" tabindex="0" href="../trading/index.htm">Trading</a></li></ul></li><li class="theme-doc-sidebar-item-link theme-doc-sidebar-item-link-level-1 menu__list-item"><a href="../../../core-nightly/index.html" target="_blank" rel="noopener noreferrer" class="menu__link menuExternalLink_NmtK">Rust API<svg width="13.5" height="13.5" aria-hidden="true" class="iconExternalLink_nPIU"><use href="#theme-svg-external-link"></use></svg></a></li><li class="theme-doc-sidebar-item-category theme-doc-sidebar-item-category-level-1 menu__list-item menu__list-item--collapsed"><div class="menu__list-item-collapsible"><a class="menu__link menu__link--sublist" href="../../developer_guide/index.htm">Developer Guide</a><button aria-label="Expand sidebar category &#x27;Developer Guide&#x27;" aria-expanded="false" type="button" class="clean-btn menu__caret"></button></div></li></ul></nav></div></div></aside><main class="docMainContainer_TBSr"><div class="container padding-top--md padding-bottom--lg"><div><div class="row"><div class="col docItemCol_VOVn"><div class="docItemContainer_Djhp"><article><nav class="theme-doc-breadcrumbs breadcrumbsContainer_Z_bl" aria-label="Breadcrumbs"><ul class="breadcrumbs"><li class="breadcrumbs__item"><a class="breadcrumbs__link" href="../index.htm"><span>Python API</span></a></li><li class="breadcrumbs__item breadcrumbs__item--active"><span class="breadcrumbs__link">Execution</span></li></ul></nav><span class="theme-doc-version-badge badge badge--secondary">Version: nightly</span><div class="tocCollapsible_ETCw theme-doc-toc-mobile tocMobile_ITEo"><button type="button" class="clean-btn tocCollapsibleButton_TO0P">On this page</button></div><div class="theme-doc-markdown markdown"><header><h1>Execution</h1></header>
<p>The execution subpackage groups components relating to the execution stack for the
platform.</p>
<p>The layered architecture of the execution stack somewhat mirrors the
data stack with a central engine, cache layer beneath, database layer
beneath, with alternative implementations able to be written on top.</p>
<p>Due to the high-performance, the core components are reusable between both
backtest and live implementations - helping to ensure consistent logic for
trading operations.</p>
<h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="components">Components<a href="#components" class="hash-link" aria-label="Direct link to Components" title="Direct link to Components">​</a></h2>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="class-execalgorithm"><em>class</em> ExecAlgorithm<a href="#class-execalgorithm" class="hash-link" aria-label="Direct link to class-execalgorithm" title="Direct link to class-execalgorithm">​</a></h3>
<p>Bases: <a href="../common/index.htm#posei_trader.common.actor.Actor"><code>Actor</code></a></p>
<p>ExecAlgorithm(config: ExecAlgorithmConfig | None = None)</p>
<p>The base class for all execution algorithms.</p>
<p>This class allows traders to implement their own customized execution algorithms.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>config</strong> (<a href="../config/index.htm#posei_trader.execution.config.ExecAlgorithmConfig"><em>ExecAlgorithmConfig</em></a> <em>,</em> <em>optional</em>) – The execution algorithm configuration.</li>
<li><strong>Raises:</strong>
<strong>TypeError</strong> – If config is not of type ExecAlgorithmConfig.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning">WARNING<a href="#warning" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>This class should not be used directly, but through a concrete subclass.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="active_task_idsself--list">active_task_ids(self) → list<a href="#active_task_idsself--list" class="hash-link" aria-label="Direct link to active_task_ids(self) → list" title="Direct link to active_task_ids(self) → list">​</a></h4>
<p>Return the active task identifiers.</p>
<ul>
<li><strong>Return type:</strong>
list[<a href="../common/index.htm#posei_trader.common.executor.TaskId">TaskId</a>]</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="add_syntheticself-syntheticinstrument-synthetic--void">add_synthetic(self, SyntheticInstrument synthetic) → void<a href="#add_syntheticself-syntheticinstrument-synthetic--void" class="hash-link" aria-label="Direct link to add_synthetic(self, SyntheticInstrument synthetic) → void" title="Direct link to add_synthetic(self, SyntheticInstrument synthetic) → void">​</a></h4>
<p>Add the created synthetic instrument to the cache.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>synthetic</strong> (<a href="../model/instruments/index.htm#posei_trader.model.instruments.SyntheticInstrument"><em>SyntheticInstrument</em></a>) – The synthetic instrument to add to the cache.</li>
<li><strong>Raises:</strong>
<strong>KeyError</strong> – If synthetic is already in the cache.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="cache">cache<a href="#cache" class="hash-link" aria-label="Direct link to cache" title="Direct link to cache">​</a></h4>
<p>The read-only cache for the actor.</p>
<ul>
<li><strong>Returns:</strong>
CacheFacade</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="cancel_all_tasksself--void">cancel_all_tasks(self) → void<a href="#cancel_all_tasksself--void" class="hash-link" aria-label="Direct link to cancel_all_tasks(self) → void" title="Direct link to cancel_all_tasks(self) → void">​</a></h4>
<p>Cancel all queued and active tasks.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="cancel_orderself-order-order-clientid-client_idnone--void">cancel_order(self, Order order, ClientId client_id=None) → void<a href="#cancel_orderself-order-order-clientid-client_idnone--void" class="hash-link" aria-label="Direct link to cancel_order(self, Order order, ClientId client_id=None) → void" title="Direct link to cancel_order(self, Order order, ClientId client_id=None) → void">​</a></h4>
<p>Cancel the given order with optional routing instructions.</p>
<p>A CancelOrder command will be created and then sent to <strong>either</strong> the
OrderEmulator or the ExecutionEngine (depending on whether the order is emulated).</p>
<p>Logs an error if no VenueOrderId has been assigned to the order.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>order</strong> (<a href="../model/orders/index.htm#posei_trader.model.orders.Order"><em>Order</em></a>) – The order to cancel.</li>
<li><strong>client_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.ClientId"><em>ClientId</em></a> <em>,</em> <em>optional</em>) – The specific client ID for the command.
If <code>None</code> then will be inferred from the venue in the instrument ID.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="cancel_taskself-task_id-taskid--void">cancel_task(self, task_id: <a href="../common/index.htm#posei_trader.common.executor.TaskId">TaskId</a>) → void<a href="#cancel_taskself-task_id-taskid--void" class="hash-link" aria-label="Direct link to cancel_taskself-task_id-taskid--void" title="Direct link to cancel_taskself-task_id-taskid--void">​</a></h4>
<p>Cancel the task with the given task_id (if queued or active).</p>
<p>If the task is not found then a warning is logged.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>task_id</strong> (<a href="../common/index.htm#posei_trader.common.executor.TaskId"><em>TaskId</em></a>) – The task identifier.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="clock">clock<a href="#clock" class="hash-link" aria-label="Direct link to clock" title="Direct link to clock">​</a></h4>
<p>The actors clock.</p>
<ul>
<li><strong>Returns:</strong>
Clock</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="config">config<a href="#config" class="hash-link" aria-label="Direct link to config" title="Direct link to config">​</a></h4>
<p>The actors configuration.</p>
<ul>
<li><strong>Returns:</strong>
PoseiConfig</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="degradeself--void">degrade(self) → void<a href="#degradeself--void" class="hash-link" aria-label="Direct link to degrade(self) → void" title="Direct link to degrade(self) → void">​</a></h4>
<p>Degrade the component.</p>
<p>While executing on_degrade() any exception will be logged and reraised, then the component
will remain in a <code>DEGRADING</code> state.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-1">WARNING<a href="#warning-1" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>Do not override.</p>
<p>If the component is not in a valid state from which to execute this method,
then the component state will not change, and an error will be logged.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="deregister_warning_eventself-type-event--void">deregister_warning_event(self, type event) → void<a href="#deregister_warning_eventself-type-event--void" class="hash-link" aria-label="Direct link to deregister_warning_event(self, type event) → void" title="Direct link to deregister_warning_event(self, type event) → void">​</a></h4>
<p>Deregister the given event type from warning log levels.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>event</strong> (<em>type</em>) – The event class to deregister.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="disposeself--void">dispose(self) → void<a href="#disposeself--void" class="hash-link" aria-label="Direct link to dispose(self) → void" title="Direct link to dispose(self) → void">​</a></h4>
<p>Dispose of the component.</p>
<p>While executing on_dispose() any exception will be logged and reraised, then the component
will remain in a <code>DISPOSING</code> state.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-2">WARNING<a href="#warning-2" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>Do not override.</p>
<p>If the component is not in a valid state from which to execute this method,
then the component state will not change, and an error will be logged.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="executeself-tradingcommand-command--void">execute(self, TradingCommand command) → void<a href="#executeself-tradingcommand-command--void" class="hash-link" aria-label="Direct link to execute(self, TradingCommand command) → void" title="Direct link to execute(self, TradingCommand command) → void">​</a></h4>
<p>Handle the given trading command by processing it with the execution algorithm.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>command</strong> (<a href="#posei_trader.execution.messages.SubmitOrder"><em>SubmitOrder</em></a>) – The command to handle.</li>
<li><strong>Raises:</strong>
<strong>ValueError</strong> – If command.exec_algorithm_id is not equal to self.id.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="faultself--void">fault(self) → void<a href="#faultself--void" class="hash-link" aria-label="Direct link to fault(self) → void" title="Direct link to fault(self) → void">​</a></h4>
<p>Fault the component.</p>
<p>Calling this method multiple times has the same effect as calling it once (it is idempotent).
Once called, it cannot be reversed, and no other methods should be called on this instance.</p>
<p>While executing on_fault() any exception will be logged and reraised, then the component
will remain in a <code>FAULTING</code> state.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-3">WARNING<a href="#warning-3" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>Do not override.</p>
<p>If the component is not in a valid state from which to execute this method,
then the component state will not change, and an error will be logged.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="classmethod-fully_qualified_namecls--str"><em>classmethod</em> fully_qualified_name(cls) → str<a href="#classmethod-fully_qualified_namecls--str" class="hash-link" aria-label="Direct link to classmethod-fully_qualified_namecls--str" title="Direct link to classmethod-fully_qualified_namecls--str">​</a></h4>
<p>Return the fully qualified name for the components class.</p>
<ul>
<li><strong>Return type:</strong>
str</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="greeks">greeks<a href="#greeks" class="hash-link" aria-label="Direct link to greeks" title="Direct link to greeks">​</a></h4>
<p>The read-only greeks calculator for the actor.</p>
<ul>
<li><strong>Returns:</strong>
GreeksCalculator</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="handle_barself-bar-bar--void">handle_bar(self, Bar bar) → void<a href="#handle_barself-bar-bar--void" class="hash-link" aria-label="Direct link to handle_bar(self, Bar bar) → void" title="Direct link to handle_bar(self, Bar bar) → void">​</a></h4>
<p>Handle the given bar data.</p>
<p>If state is <code>RUNNING</code> then passes to on_bar.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>bar</strong> (<a href="../model/data/index.htm#posei_trader.model.data.Bar"><em>Bar</em></a>) – The bar received.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-4">WARNING<a href="#warning-4" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>System method (not intended to be called by user code).</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="handle_barsself-list-bars--void">handle_bars(self, list bars) → void<a href="#handle_barsself-list-bars--void" class="hash-link" aria-label="Direct link to handle_bars(self, list bars) → void" title="Direct link to handle_bars(self, list bars) → void">​</a></h4>
<p>Handle the given historical bar data by handling each bar individually.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>bars</strong> (<em>list</em> <em>[</em><a href="../model/data/index.htm#posei_trader.model.data.Bar"><em>Bar</em></a> <em>]</em>) – The bars to handle.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-5">WARNING<a href="#warning-5" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>System method (not intended to be called by user code).</p>
<ul>
<li><strong>Raises:</strong>
<strong>RuntimeError</strong> – If bar data has incorrectly sorted timestamps (not monotonically increasing).</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="handle_dataself-data-data--void">handle_data(self, Data data) → void<a href="#handle_dataself-data-data--void" class="hash-link" aria-label="Direct link to handle_data(self, Data data) → void" title="Direct link to handle_data(self, Data data) → void">​</a></h4>
<p>Handle the given data.</p>
<p>If state is <code>RUNNING</code> then passes to on_data.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>data</strong> (<a href="../core/index.htm#posei_trader.core.Data"><em>Data</em></a>) – The data received.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-6">WARNING<a href="#warning-6" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>System method (not intended to be called by user code).</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="handle_eventself-event-event--void">handle_event(self, Event event) → void<a href="#handle_eventself-event-event--void" class="hash-link" aria-label="Direct link to handle_event(self, Event event) → void" title="Direct link to handle_event(self, Event event) → void">​</a></h4>
<p>Handle the given event.</p>
<p>If state is <code>RUNNING</code> then passes to on_event.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>event</strong> (<a href="../core/index.htm#posei_trader.core.Event"><em>Event</em></a>) – The event received.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-7">WARNING<a href="#warning-7" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>System method (not intended to be called by user code).</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="handle_historical_dataself-data--void">handle_historical_data(self, data) → void<a href="#handle_historical_dataself-data--void" class="hash-link" aria-label="Direct link to handle_historical_data(self, data) → void" title="Direct link to handle_historical_data(self, data) → void">​</a></h4>
<p>Handle the given historical data.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>data</strong> (<a href="../core/index.htm#posei_trader.core.Data"><em>Data</em></a>) – The historical data received.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-8">WARNING<a href="#warning-8" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>System method (not intended to be called by user code).</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="handle_index_priceself-indexpriceupdate-index_price--void">handle_index_price(self, IndexPriceUpdate index_price) → void<a href="#handle_index_priceself-indexpriceupdate-index_price--void" class="hash-link" aria-label="Direct link to handle_index_price(self, IndexPriceUpdate index_price) → void" title="Direct link to handle_index_price(self, IndexPriceUpdate index_price) → void">​</a></h4>
<p>Handle the given index price update.</p>
<p>If state is <code>RUNNING</code> then passes to on_index_price.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>index_price</strong> (<a href="../model/data/index.htm#posei_trader.model.data.IndexPriceUpdate"><em>IndexPriceUpdate</em></a>) – The index price update received.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-9">WARNING<a href="#warning-9" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>System method (not intended to be called by user code).</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="handle_instrumentself-instrument-instrument--void">handle_instrument(self, Instrument instrument) → void<a href="#handle_instrumentself-instrument-instrument--void" class="hash-link" aria-label="Direct link to handle_instrument(self, Instrument instrument) → void" title="Direct link to handle_instrument(self, Instrument instrument) → void">​</a></h4>
<p>Handle the given instrument.</p>
<p>Passes to on_instrument if state is <code>RUNNING</code>.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>instrument</strong> (<a href="../model/instruments/index.htm#posei_trader.model.instruments.Instrument"><em>Instrument</em></a>) – The instrument received.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-10">WARNING<a href="#warning-10" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>System method (not intended to be called by user code).</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="handle_instrument_closeself-instrumentclose-update--void">handle_instrument_close(self, InstrumentClose update) → void<a href="#handle_instrument_closeself-instrumentclose-update--void" class="hash-link" aria-label="Direct link to handle_instrument_close(self, InstrumentClose update) → void" title="Direct link to handle_instrument_close(self, InstrumentClose update) → void">​</a></h4>
<p>Handle the given instrument close update.</p>
<p>If state is <code>RUNNING</code> then passes to on_instrument_close.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>update</strong> (<a href="../model/data/index.htm#posei_trader.model.data.InstrumentClose"><em>InstrumentClose</em></a>) – The update received.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-11">WARNING<a href="#warning-11" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>System method (not intended to be called by user code).</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="handle_instrument_statusself-instrumentstatus-data--void">handle_instrument_status(self, InstrumentStatus data) → void<a href="#handle_instrument_statusself-instrumentstatus-data--void" class="hash-link" aria-label="Direct link to handle_instrument_status(self, InstrumentStatus data) → void" title="Direct link to handle_instrument_status(self, InstrumentStatus data) → void">​</a></h4>
<p>Handle the given instrument status update.</p>
<p>If state is <code>RUNNING</code> then passes to on_instrument_status.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>data</strong> (<a href="../model/data/index.htm#posei_trader.model.data.InstrumentStatus"><em>InstrumentStatus</em></a>) – The status update received.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-12">WARNING<a href="#warning-12" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>System method (not intended to be called by user code).</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="handle_instrumentsself-list-instruments--void">handle_instruments(self, list instruments) → void<a href="#handle_instrumentsself-list-instruments--void" class="hash-link" aria-label="Direct link to handle_instruments(self, list instruments) → void" title="Direct link to handle_instruments(self, list instruments) → void">​</a></h4>
<p>Handle the given instruments data by handling each instrument individually.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>instruments</strong> (<em>list</em> <em>[</em><a href="../model/instruments/index.htm#posei_trader.model.instruments.Instrument"><em>Instrument</em></a> <em>]</em>) – The instruments received.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-13">WARNING<a href="#warning-13" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>System method (not intended to be called by user code).</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="handle_mark_priceself-markpriceupdate-mark_price--void">handle_mark_price(self, MarkPriceUpdate mark_price) → void<a href="#handle_mark_priceself-markpriceupdate-mark_price--void" class="hash-link" aria-label="Direct link to handle_mark_price(self, MarkPriceUpdate mark_price) → void" title="Direct link to handle_mark_price(self, MarkPriceUpdate mark_price) → void">​</a></h4>
<p>Handle the given mark price update.</p>
<p>If state is <code>RUNNING</code> then passes to on_mark_price.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>mark_price</strong> (<a href="../model/data/index.htm#posei_trader.model.data.MarkPriceUpdate"><em>MarkPriceUpdate</em></a>) – The mark price update received.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-14">WARNING<a href="#warning-14" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>System method (not intended to be called by user code).</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="handle_order_bookself-orderbook-order_book--void">handle_order_book(self, OrderBook order_book) → void<a href="#handle_order_bookself-orderbook-order_book--void" class="hash-link" aria-label="Direct link to handle_order_book(self, OrderBook order_book) → void" title="Direct link to handle_order_book(self, OrderBook order_book) → void">​</a></h4>
<p>Handle the given order book.</p>
<p>Passes to on_order_book if state is <code>RUNNING</code>.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>order_book</strong> (<a href="../model/book/index.htm#posei_trader.model.book.OrderBook"><em>OrderBook</em></a>) – The order book received.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-15">WARNING<a href="#warning-15" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>System method (not intended to be called by user code).</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="handle_order_book_deltasself-deltas--void">handle_order_book_deltas(self, deltas) → void<a href="#handle_order_book_deltasself-deltas--void" class="hash-link" aria-label="Direct link to handle_order_book_deltas(self, deltas) → void" title="Direct link to handle_order_book_deltas(self, deltas) → void">​</a></h4>
<p>Handle the given order book deltas.</p>
<p>Passes to on_order_book_deltas if state is <code>RUNNING</code>.
The deltas will be nautilus_pyo3.OrderBookDeltas if the
pyo3_conversion flag was set for the subscription.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>deltas</strong> (<a href="../model/data/index.htm#posei_trader.model.data.OrderBookDeltas"><em>OrderBookDeltas</em></a> <em>or</em> <em>nautilus_pyo3.OrderBookDeltas</em>) – The order book deltas received.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-16">WARNING<a href="#warning-16" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>System method (not intended to be called by user code).</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="handle_order_book_depthself-orderbookdepth10-depth--void">handle_order_book_depth(self, OrderBookDepth10 depth) → void<a href="#handle_order_book_depthself-orderbookdepth10-depth--void" class="hash-link" aria-label="Direct link to handle_order_book_depth(self, OrderBookDepth10 depth) → void" title="Direct link to handle_order_book_depth(self, OrderBookDepth10 depth) → void">​</a></h4>
<p>Handle the given order book depth</p>
<p>Passes to on_order_book_depth if state is <code>RUNNING</code>.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>depth</strong> (<a href="../model/data/index.htm#posei_trader.model.data.OrderBookDepth10"><em>OrderBookDepth10</em></a>) – The order book depth received.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-17">WARNING<a href="#warning-17" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>System method (not intended to be called by user code).</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="handle_quote_tickself-quotetick-tick--void">handle_quote_tick(self, QuoteTick tick) → void<a href="#handle_quote_tickself-quotetick-tick--void" class="hash-link" aria-label="Direct link to handle_quote_tick(self, QuoteTick tick) → void" title="Direct link to handle_quote_tick(self, QuoteTick tick) → void">​</a></h4>
<p>Handle the given quote tick.</p>
<p>If state is <code>RUNNING</code> then passes to on_quote_tick.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>tick</strong> (<a href="../model/data/index.htm#posei_trader.model.data.QuoteTick"><em>QuoteTick</em></a>) – The tick received.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-18">WARNING<a href="#warning-18" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>System method (not intended to be called by user code).</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="handle_quote_ticksself-list-ticks--void">handle_quote_ticks(self, list ticks) → void<a href="#handle_quote_ticksself-list-ticks--void" class="hash-link" aria-label="Direct link to handle_quote_ticks(self, list ticks) → void" title="Direct link to handle_quote_ticks(self, list ticks) → void">​</a></h4>
<p>Handle the given historical quote tick data by handling each tick individually.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>ticks</strong> (<em>list</em> <em>[</em><a href="../model/data/index.htm#posei_trader.model.data.QuoteTick"><em>QuoteTick</em></a> <em>]</em>) – The ticks received.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-19">WARNING<a href="#warning-19" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>System method (not intended to be called by user code).</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="handle_signalself-data-signal--void">handle_signal(self, Data signal) → void<a href="#handle_signalself-data-signal--void" class="hash-link" aria-label="Direct link to handle_signal(self, Data signal) → void" title="Direct link to handle_signal(self, Data signal) → void">​</a></h4>
<p>Handle the given signal.</p>
<p>If state is <code>RUNNING</code> then passes to on_signal.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>signal</strong> (<a href="../core/index.htm#posei_trader.core.Data"><em>Data</em></a>) – The signal received.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-20">WARNING<a href="#warning-20" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>System method (not intended to be called by user code).</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="handle_trade_tickself-tradetick-tick--void">handle_trade_tick(self, TradeTick tick) → void<a href="#handle_trade_tickself-tradetick-tick--void" class="hash-link" aria-label="Direct link to handle_trade_tick(self, TradeTick tick) → void" title="Direct link to handle_trade_tick(self, TradeTick tick) → void">​</a></h4>
<p>Handle the given trade tick.</p>
<p>If state is <code>RUNNING</code> then passes to on_trade_tick.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>tick</strong> (<a href="../model/data/index.htm#posei_trader.model.data.TradeTick"><em>TradeTick</em></a>) – The tick received.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-21">WARNING<a href="#warning-21" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>System method (not intended to be called by user code).</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="handle_trade_ticksself-list-ticks--void">handle_trade_ticks(self, list ticks) → void<a href="#handle_trade_ticksself-list-ticks--void" class="hash-link" aria-label="Direct link to handle_trade_ticks(self, list ticks) → void" title="Direct link to handle_trade_ticks(self, list ticks) → void">​</a></h4>
<p>Handle the given historical trade tick data by handling each tick individually.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>ticks</strong> (<em>list</em> <em>[</em><a href="../model/data/index.htm#posei_trader.model.data.TradeTick"><em>TradeTick</em></a> <em>]</em>) – The ticks received.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-22">WARNING<a href="#warning-22" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>System method (not intended to be called by user code).</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="has_active_tasksself--bool">has_active_tasks(self) → bool<a href="#has_active_tasksself--bool" class="hash-link" aria-label="Direct link to has_active_tasks(self) → bool" title="Direct link to has_active_tasks(self) → bool">​</a></h4>
<p>Return a value indicating whether there are any active tasks.</p>
<ul>
<li><strong>Return type:</strong>
bool</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="has_any_tasksself--bool">has_any_tasks(self) → bool<a href="#has_any_tasksself--bool" class="hash-link" aria-label="Direct link to has_any_tasks(self) → bool" title="Direct link to has_any_tasks(self) → bool">​</a></h4>
<p>Return a value indicating whether there are any queued OR active tasks.</p>
<ul>
<li><strong>Return type:</strong>
bool</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="has_pending_requestsself--bool">has_pending_requests(self) → bool<a href="#has_pending_requestsself--bool" class="hash-link" aria-label="Direct link to has_pending_requests(self) → bool" title="Direct link to has_pending_requests(self) → bool">​</a></h4>
<p>Return whether the actor is pending processing for any requests.</p>
<ul>
<li><strong>Returns:</strong>
True if any requests are pending, else False.</li>
<li><strong>Return type:</strong>
bool</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="has_queued_tasksself--bool">has_queued_tasks(self) → bool<a href="#has_queued_tasksself--bool" class="hash-link" aria-label="Direct link to has_queued_tasks(self) → bool" title="Direct link to has_queued_tasks(self) → bool">​</a></h4>
<p>Return a value indicating whether there are any queued tasks.</p>
<ul>
<li><strong>Return type:</strong>
bool</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="id">id<a href="#id" class="hash-link" aria-label="Direct link to id" title="Direct link to id">​</a></h4>
<p>The components ID.</p>
<ul>
<li><strong>Returns:</strong>
ComponentId</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="indicators_initializedself--bool">indicators_initialized(self) → bool<a href="#indicators_initializedself--bool" class="hash-link" aria-label="Direct link to indicators_initialized(self) → bool" title="Direct link to indicators_initialized(self) → bool">​</a></h4>
<p>Return a value indicating whether all indicators are initialized.</p>
<ul>
<li><strong>Returns:</strong>
True if all initialized, else False</li>
<li><strong>Return type:</strong>
bool</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="is_degraded">is_degraded<a href="#is_degraded" class="hash-link" aria-label="Direct link to is_degraded" title="Direct link to is_degraded">​</a></h4>
<p>bool</p>
<p>Return whether the current component state is <code>DEGRADED</code>.</p>
<ul>
<li><strong>Return type:</strong>
bool</li>
<li><strong>Type:</strong>
Component.is_degraded</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="is_disposed">is_disposed<a href="#is_disposed" class="hash-link" aria-label="Direct link to is_disposed" title="Direct link to is_disposed">​</a></h4>
<p>bool</p>
<p>Return whether the current component state is <code>DISPOSED</code>.</p>
<ul>
<li><strong>Return type:</strong>
bool</li>
<li><strong>Type:</strong>
Component.is_disposed</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="is_faulted">is_faulted<a href="#is_faulted" class="hash-link" aria-label="Direct link to is_faulted" title="Direct link to is_faulted">​</a></h4>
<p>bool</p>
<p>Return whether the current component state is <code>FAULTED</code>.</p>
<ul>
<li><strong>Return type:</strong>
bool</li>
<li><strong>Type:</strong>
Component.is_faulted</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="is_initialized">is_initialized<a href="#is_initialized" class="hash-link" aria-label="Direct link to is_initialized" title="Direct link to is_initialized">​</a></h4>
<p>bool</p>
<p>Return whether the component has been initialized (component.state &gt;= <code>INITIALIZED</code>).</p>
<ul>
<li><strong>Return type:</strong>
bool</li>
<li><strong>Type:</strong>
Component.is_initialized</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="is_pending_requestself-uuid4-request_id--bool">is_pending_request(self, UUID4 request_id) → bool<a href="#is_pending_requestself-uuid4-request_id--bool" class="hash-link" aria-label="Direct link to is_pending_request(self, UUID4 request_id) → bool" title="Direct link to is_pending_request(self, UUID4 request_id) → bool">​</a></h4>
<p>Return whether the request for the given identifier is pending processing.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>request_id</strong> (<a href="../core/index.htm#posei_trader.core.UUID4"><em>UUID4</em></a>) – The request ID to check.</li>
<li><strong>Returns:</strong>
True if request is pending, else False.</li>
<li><strong>Return type:</strong>
bool</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="is_running">is_running<a href="#is_running" class="hash-link" aria-label="Direct link to is_running" title="Direct link to is_running">​</a></h4>
<p>bool</p>
<p>Return whether the current component state is <code>RUNNING</code>.</p>
<ul>
<li><strong>Return type:</strong>
bool</li>
<li><strong>Type:</strong>
Component.is_running</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="is_stopped">is_stopped<a href="#is_stopped" class="hash-link" aria-label="Direct link to is_stopped" title="Direct link to is_stopped">​</a></h4>
<p>bool</p>
<p>Return whether the current component state is <code>STOPPED</code>.</p>
<ul>
<li><strong>Return type:</strong>
bool</li>
<li><strong>Type:</strong>
Component.is_stopped</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="loadself-dict-state--void">load(self, dict state) → void<a href="#loadself-dict-state--void" class="hash-link" aria-label="Direct link to load(self, dict state) → void" title="Direct link to load(self, dict state) → void">​</a></h4>
<p>Load the actor/strategy state from the give state dictionary.</p>
<p>Calls on_load and passes the state.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>state</strong> (<em>dict</em> *[*<em>str</em> <em>,</em> <em>bytes</em> <em>]</em>) – The strategy state to load.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-23">WARNING<a href="#warning-23" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>Exceptions raised will be caught, logged, and reraised.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="log">log<a href="#log" class="hash-link" aria-label="Direct link to log" title="Direct link to log">​</a></h4>
<p>The actors logger.</p>
<ul>
<li><strong>Returns:</strong>
Logger</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="modify_orderself-order-order-quantity-quantitynone-price-pricenone-price-trigger_pricenone-clientid-client_idnone--void">modify_order(self, Order order, Quantity quantity=None, Price price=None, Price trigger_price=None, ClientId client_id=None) → void<a href="#modify_orderself-order-order-quantity-quantitynone-price-pricenone-price-trigger_pricenone-clientid-client_idnone--void" class="hash-link" aria-label="Direct link to modify_order(self, Order order, Quantity quantity=None, Price price=None, Price trigger_price=None, ClientId client_id=None) → void" title="Direct link to modify_order(self, Order order, Quantity quantity=None, Price price=None, Price trigger_price=None, ClientId client_id=None) → void">​</a></h4>
<p>Modify the given order with optional parameters and routing instructions.</p>
<p>An ModifyOrder command will be created and then sent to the RiskEngine.</p>
<p>At least one value must differ from the original order for the command to be valid.</p>
<p>Will use an Order Cancel/Replace Request (a.k.a Order Modification)
for FIX protocols, otherwise if order update is not available for
the API, then will cancel and replace with a new order using the
original ClientOrderId.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>order</strong> (<a href="../model/orders/index.htm#posei_trader.model.orders.Order"><em>Order</em></a>) – The order to update.</li>
<li><strong>quantity</strong> (<a href="../model/index.htm#posei_trader.model.Quantity"><em>Quantity</em></a> <em>,</em> <em>optional</em>) – The updated quantity for the given order.</li>
<li><strong>price</strong> (<a href="../model/index.htm#posei_trader.model.Price"><em>Price</em></a> <em>,</em> <em>optional</em>) – The updated price for the given order (if applicable).</li>
<li><strong>trigger_price</strong> (<a href="../model/index.htm#posei_trader.model.Price"><em>Price</em></a> <em>,</em> <em>optional</em>) – The updated trigger price for the given order (if applicable).</li>
<li><strong>client_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.ClientId"><em>ClientId</em></a> <em>,</em> <em>optional</em>) – The specific client ID for the command.
If <code>None</code> then will be inferred from the venue in the instrument ID.</li>
</ul>
</li>
<li><strong>Raises:</strong>
<ul>
<li><strong>ValueError</strong> – If price is not <code>None</code> and order does not have a price.</li>
<li><strong>ValueError</strong> – If trigger is not <code>None</code> and order does not have a trigger_price.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-24">WARNING<a href="#warning-24" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>If the order is already closed or at PENDING_CANCEL status
then the command will not be generated, and a warning will be logged.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="modify_order_in_placeself-order-order-quantity-quantitynone-price-pricenone-price-trigger_pricenone--void">modify_order_in_place(self, Order order, Quantity quantity=None, Price price=None, Price trigger_price=None) → void<a href="#modify_order_in_placeself-order-order-quantity-quantitynone-price-pricenone-price-trigger_pricenone--void" class="hash-link" aria-label="Direct link to modify_order_in_place(self, Order order, Quantity quantity=None, Price price=None, Price trigger_price=None) → void" title="Direct link to modify_order_in_place(self, Order order, Quantity quantity=None, Price price=None, Price trigger_price=None) → void">​</a></h4>
<p>Modify the given <code>INITIALIZED</code> order in place (immediately) with optional parameters.</p>
<p>At least one value must differ from the original order for the command to be valid.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>order</strong> (<a href="../model/orders/index.htm#posei_trader.model.orders.Order"><em>Order</em></a>) – The order to update.</li>
<li><strong>quantity</strong> (<a href="../model/index.htm#posei_trader.model.Quantity"><em>Quantity</em></a> <em>,</em> <em>optional</em>) – The updated quantity for the given order.</li>
<li><strong>price</strong> (<a href="../model/index.htm#posei_trader.model.Price"><em>Price</em></a> <em>,</em> <em>optional</em>) – The updated price for the given order (if applicable).</li>
<li><strong>trigger_price</strong> (<a href="../model/index.htm#posei_trader.model.Price"><em>Price</em></a> <em>,</em> <em>optional</em>) – The updated trigger price for the given order (if applicable).</li>
</ul>
</li>
<li><strong>Raises:</strong>
<ul>
<li><strong>ValueError</strong> – If order.status is not <code>INITIALIZED</code> or <code>RELEASED</code>.</li>
<li><strong>ValueError</strong> – If price is not <code>None</code> and order does not have a price.</li>
<li><strong>ValueError</strong> – If trigger is not <code>None</code> and order does not have a trigger_price.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-25">WARNING<a href="#warning-25" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>If the order is already closed or at PENDING_CANCEL status
then the command will not be generated, and a warning will be logged.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="msgbus">msgbus<a href="#msgbus" class="hash-link" aria-label="Direct link to msgbus" title="Direct link to msgbus">​</a></h4>
<p>The message bus for the actor (if registered).</p>
<ul>
<li><strong>Returns:</strong>
MessageBus or <code>None</code></li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="on_barself-bar-bar--void">on_bar(self, Bar bar) → void<a href="#on_barself-bar-bar--void" class="hash-link" aria-label="Direct link to on_bar(self, Bar bar) → void" title="Direct link to on_bar(self, Bar bar) → void">​</a></h4>
<p>Actions to be performed when running and receives a bar.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>bar</strong> (<a href="../model/data/index.htm#posei_trader.model.data.Bar"><em>Bar</em></a>) – The bar received.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-26">WARNING<a href="#warning-26" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>System method (not intended to be called by user code).</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="on_dataself-data--void">on_data(self, data) → void<a href="#on_dataself-data--void" class="hash-link" aria-label="Direct link to on_data(self, data) → void" title="Direct link to on_data(self, data) → void">​</a></h4>
<p>Actions to be performed when running and receives data.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>data</strong> (<a href="../core/index.htm#posei_trader.core.Data"><em>Data</em></a>) – The data received.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-27">WARNING<a href="#warning-27" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>System method (not intended to be called by user code).</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="on_degradeself--void">on_degrade(self) → void<a href="#on_degradeself--void" class="hash-link" aria-label="Direct link to on_degrade(self) → void" title="Direct link to on_degrade(self) → void">​</a></h4>
<p>Actions to be performed on degrade.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-28">WARNING<a href="#warning-28" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>System method (not intended to be called by user code).</p>
<p>Should be overridden in the actor implementation.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="on_disposeself--void">on_dispose(self) → void<a href="#on_disposeself--void" class="hash-link" aria-label="Direct link to on_dispose(self) → void" title="Direct link to on_dispose(self) → void">​</a></h4>
<p>Actions to be performed on dispose.</p>
<p>Cleanup/release any resources used here.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-29">WARNING<a href="#warning-29" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>System method (not intended to be called by user code).</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="on_eventself-event-event--void">on_event(self, Event event) → void<a href="#on_eventself-event-event--void" class="hash-link" aria-label="Direct link to on_event(self, Event event) → void" title="Direct link to on_event(self, Event event) → void">​</a></h4>
<p>Actions to be performed running and receives an event.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>event</strong> (<a href="../core/index.htm#posei_trader.core.Event"><em>Event</em></a>) – The event received.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-30">WARNING<a href="#warning-30" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>System method (not intended to be called by user code).</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="on_faultself--void">on_fault(self) → void<a href="#on_faultself--void" class="hash-link" aria-label="Direct link to on_fault(self) → void" title="Direct link to on_fault(self) → void">​</a></h4>
<p>Actions to be performed on fault.</p>
<p>Cleanup any resources used by the actor here.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-31">WARNING<a href="#warning-31" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>System method (not intended to be called by user code).</p>
<p>Should be overridden in the actor implementation.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="on_historical_dataself-data--void">on_historical_data(self, data) → void<a href="#on_historical_dataself-data--void" class="hash-link" aria-label="Direct link to on_historical_data(self, data) → void" title="Direct link to on_historical_data(self, data) → void">​</a></h4>
<p>Actions to be performed when running and receives historical data.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>data</strong> (<a href="../core/index.htm#posei_trader.core.Data"><em>Data</em></a>) – The historical data received.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-32">WARNING<a href="#warning-32" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>System method (not intended to be called by user code).</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="on_index_priceself-indexpriceupdate-index_price--void">on_index_price(self, IndexPriceUpdate index_price) → void<a href="#on_index_priceself-indexpriceupdate-index_price--void" class="hash-link" aria-label="Direct link to on_index_price(self, IndexPriceUpdate index_price) → void" title="Direct link to on_index_price(self, IndexPriceUpdate index_price) → void">​</a></h4>
<p>Actions to be performed when running and receives an index price update.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>index_price</strong> (<a href="../model/data/index.htm#posei_trader.model.data.IndexPriceUpdate"><em>IndexPriceUpdate</em></a>) – The index price update received.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-33">WARNING<a href="#warning-33" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>System method (not intended to be called by user code).</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="on_instrumentself-instrument-instrument--void">on_instrument(self, Instrument instrument) → void<a href="#on_instrumentself-instrument-instrument--void" class="hash-link" aria-label="Direct link to on_instrument(self, Instrument instrument) → void" title="Direct link to on_instrument(self, Instrument instrument) → void">​</a></h4>
<p>Actions to be performed when running and receives an instrument.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>instrument</strong> (<a href="../model/instruments/index.htm#posei_trader.model.instruments.Instrument"><em>Instrument</em></a>) – The instrument received.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-34">WARNING<a href="#warning-34" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>System method (not intended to be called by user code).</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="on_instrument_closeself-instrumentclose-update--void">on_instrument_close(self, InstrumentClose update) → void<a href="#on_instrument_closeself-instrumentclose-update--void" class="hash-link" aria-label="Direct link to on_instrument_close(self, InstrumentClose update) → void" title="Direct link to on_instrument_close(self, InstrumentClose update) → void">​</a></h4>
<p>Actions to be performed when running and receives an instrument close
update.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>update</strong> (<a href="../model/data/index.htm#posei_trader.model.data.InstrumentClose"><em>InstrumentClose</em></a>) – The instrument close received.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-35">WARNING<a href="#warning-35" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>System method (not intended to be called by user code).</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="on_instrument_statusself-instrumentstatus-data--void">on_instrument_status(self, InstrumentStatus data) → void<a href="#on_instrument_statusself-instrumentstatus-data--void" class="hash-link" aria-label="Direct link to on_instrument_status(self, InstrumentStatus data) → void" title="Direct link to on_instrument_status(self, InstrumentStatus data) → void">​</a></h4>
<p>Actions to be performed when running and receives an instrument status
update.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>data</strong> (<a href="../model/data/index.htm#posei_trader.model.data.InstrumentStatus"><em>InstrumentStatus</em></a>) – The instrument status update received.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-36">WARNING<a href="#warning-36" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>System method (not intended to be called by user code).</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="on_loadself-dict-state--void">on_load(self, dict state) → void<a href="#on_loadself-dict-state--void" class="hash-link" aria-label="Direct link to on_load(self, dict state) → void" title="Direct link to on_load(self, dict state) → void">​</a></h4>
<p>Actions to be performed when the actor state is loaded.</p>
<p>Saved state values will be contained in the give state dictionary.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>state</strong> (<em>dict</em> *[*<em>str</em> <em>,</em> <em>bytes</em> <em>]</em>) – The strategy state to load.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-37">WARNING<a href="#warning-37" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>System method (not intended to be called by user code).</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="on_mark_priceself-markpriceupdate-mark_price--void">on_mark_price(self, MarkPriceUpdate mark_price) → void<a href="#on_mark_priceself-markpriceupdate-mark_price--void" class="hash-link" aria-label="Direct link to on_mark_price(self, MarkPriceUpdate mark_price) → void" title="Direct link to on_mark_price(self, MarkPriceUpdate mark_price) → void">​</a></h4>
<p>Actions to be performed when running and receives a mark price update.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>mark_price</strong> (<a href="../model/data/index.htm#posei_trader.model.data.MarkPriceUpdate"><em>MarkPriceUpdate</em></a>) – The mark price update received.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-38">WARNING<a href="#warning-38" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>System method (not intended to be called by user code).</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="on_orderself-order-order--void">on_order(self, Order order) → void<a href="#on_orderself-order-order--void" class="hash-link" aria-label="Direct link to on_order(self, Order order) → void" title="Direct link to on_order(self, Order order) → void">​</a></h4>
<p>Actions to be performed when running and receives an order.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>order</strong> (<a href="../model/orders/index.htm#posei_trader.model.orders.Order"><em>Order</em></a>) – The order to be handled.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-39">WARNING<a href="#warning-39" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>System method (not intended to be called by user code).</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="on_order_acceptedself-orderaccepted-event--void">on_order_accepted(self, OrderAccepted event) → void<a href="#on_order_acceptedself-orderaccepted-event--void" class="hash-link" aria-label="Direct link to on_order_accepted(self, OrderAccepted event) → void" title="Direct link to on_order_accepted(self, OrderAccepted event) → void">​</a></h4>
<p>Actions to be performed when running and receives an order accepted event.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>event</strong> (<a href="../model/events/index.htm#posei_trader.model.events.OrderAccepted"><em>OrderAccepted</em></a>) – The event received.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-40">WARNING<a href="#warning-40" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>System method (not intended to be called by user code).</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="on_order_bookself-orderbook-order_book--void">on_order_book(self, OrderBook order_book) → void<a href="#on_order_bookself-orderbook-order_book--void" class="hash-link" aria-label="Direct link to on_order_book(self, OrderBook order_book) → void" title="Direct link to on_order_book(self, OrderBook order_book) → void">​</a></h4>
<p>Actions to be performed when running and receives an order book.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>order_book</strong> (<a href="../model/book/index.htm#posei_trader.model.book.OrderBook"><em>OrderBook</em></a>) – The order book received.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-41">WARNING<a href="#warning-41" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>System method (not intended to be called by user code).</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="on_order_book_deltasself-deltas--void">on_order_book_deltas(self, deltas) → void<a href="#on_order_book_deltasself-deltas--void" class="hash-link" aria-label="Direct link to on_order_book_deltas(self, deltas) → void" title="Direct link to on_order_book_deltas(self, deltas) → void">​</a></h4>
<p>Actions to be performed when running and receives order book deltas.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>deltas</strong> (<a href="../model/data/index.htm#posei_trader.model.data.OrderBookDeltas"><em>OrderBookDeltas</em></a> <em>or</em> <em>nautilus_pyo3.OrderBookDeltas</em>) – The order book deltas received.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-42">WARNING<a href="#warning-42" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>System method (not intended to be called by user code).</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="on_order_book_depthself-depth--void">on_order_book_depth(self, depth) → void<a href="#on_order_book_depthself-depth--void" class="hash-link" aria-label="Direct link to on_order_book_depth(self, depth) → void" title="Direct link to on_order_book_depth(self, depth) → void">​</a></h4>
<p>Actions to be performed when running and receives an order book depth.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>depth</strong> (<a href="../model/data/index.htm#posei_trader.model.data.OrderBookDepth10"><em>OrderBookDepth10</em></a>) – The order book depth received.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-43">WARNING<a href="#warning-43" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>System method (not intended to be called by user code).</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="on_order_cancel_rejectedself-ordercancelrejected-event--void">on_order_cancel_rejected(self, OrderCancelRejected event) → void<a href="#on_order_cancel_rejectedself-ordercancelrejected-event--void" class="hash-link" aria-label="Direct link to on_order_cancel_rejected(self, OrderCancelRejected event) → void" title="Direct link to on_order_cancel_rejected(self, OrderCancelRejected event) → void">​</a></h4>
<p>Actions to be performed when running and receives an order cancel rejected event.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>event</strong> (<a href="../model/events/index.htm#posei_trader.model.events.OrderCancelRejected"><em>OrderCancelRejected</em></a>) – The event received.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-44">WARNING<a href="#warning-44" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>System method (not intended to be called by user code).</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="on_order_canceledself-ordercanceled-event--void">on_order_canceled(self, OrderCanceled event) → void<a href="#on_order_canceledself-ordercanceled-event--void" class="hash-link" aria-label="Direct link to on_order_canceled(self, OrderCanceled event) → void" title="Direct link to on_order_canceled(self, OrderCanceled event) → void">​</a></h4>
<p>Actions to be performed when running and receives an order canceled event.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>event</strong> (<a href="../model/events/index.htm#posei_trader.model.events.OrderCanceled"><em>OrderCanceled</em></a>) – The event received.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-45">WARNING<a href="#warning-45" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>System method (not intended to be called by user code).</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="on_order_deniedself-orderdenied-event--void">on_order_denied(self, OrderDenied event) → void<a href="#on_order_deniedself-orderdenied-event--void" class="hash-link" aria-label="Direct link to on_order_denied(self, OrderDenied event) → void" title="Direct link to on_order_denied(self, OrderDenied event) → void">​</a></h4>
<p>Actions to be performed when running and receives an order denied event.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>event</strong> (<a href="../model/events/index.htm#posei_trader.model.events.OrderDenied"><em>OrderDenied</em></a>) – The event received.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-46">WARNING<a href="#warning-46" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>System method (not intended to be called by user code).</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="on_order_emulatedself-orderemulated-event--void">on_order_emulated(self, OrderEmulated event) → void<a href="#on_order_emulatedself-orderemulated-event--void" class="hash-link" aria-label="Direct link to on_order_emulated(self, OrderEmulated event) → void" title="Direct link to on_order_emulated(self, OrderEmulated event) → void">​</a></h4>
<p>Actions to be performed when running and receives an order initialized event.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>event</strong> (<a href="../model/events/index.htm#posei_trader.model.events.OrderEmulated"><em>OrderEmulated</em></a>) – The event received.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-47">WARNING<a href="#warning-47" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>System method (not intended to be called by user code).</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="on_order_eventself-orderevent-event--void">on_order_event(self, OrderEvent event) → void<a href="#on_order_eventself-orderevent-event--void" class="hash-link" aria-label="Direct link to on_order_event(self, OrderEvent event) → void" title="Direct link to on_order_event(self, OrderEvent event) → void">​</a></h4>
<p>Actions to be performed when running and receives an order event.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>event</strong> (<a href="../model/events/index.htm#posei_trader.model.events.OrderEvent"><em>OrderEvent</em></a>) – The event received.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-48">WARNING<a href="#warning-48" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>System method (not intended to be called by user code).</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="on_order_expiredself-orderexpired-event--void">on_order_expired(self, OrderExpired event) → void<a href="#on_order_expiredself-orderexpired-event--void" class="hash-link" aria-label="Direct link to on_order_expired(self, OrderExpired event) → void" title="Direct link to on_order_expired(self, OrderExpired event) → void">​</a></h4>
<p>Actions to be performed when running and receives an order expired event.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>event</strong> (<a href="../model/events/index.htm#posei_trader.model.events.OrderExpired"><em>OrderExpired</em></a>) – The event received.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-49">WARNING<a href="#warning-49" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>System method (not intended to be called by user code).</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="on_order_filledself-orderfilled-event--void">on_order_filled(self, OrderFilled event) → void<a href="#on_order_filledself-orderfilled-event--void" class="hash-link" aria-label="Direct link to on_order_filled(self, OrderFilled event) → void" title="Direct link to on_order_filled(self, OrderFilled event) → void">​</a></h4>
<p>Actions to be performed when running and receives an order filled event.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>event</strong> (<a href="../model/events/index.htm#posei_trader.model.events.OrderFilled"><em>OrderFilled</em></a>) – The event received.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-50">WARNING<a href="#warning-50" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>System method (not intended to be called by user code).</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="on_order_initializedself-orderinitialized-event--void">on_order_initialized(self, OrderInitialized event) → void<a href="#on_order_initializedself-orderinitialized-event--void" class="hash-link" aria-label="Direct link to on_order_initialized(self, OrderInitialized event) → void" title="Direct link to on_order_initialized(self, OrderInitialized event) → void">​</a></h4>
<p>Actions to be performed when running and receives an order initialized event.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>event</strong> (<a href="../model/events/index.htm#posei_trader.model.events.OrderInitialized"><em>OrderInitialized</em></a>) – The event received.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-51">WARNING<a href="#warning-51" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>System method (not intended to be called by user code).</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="on_order_listself-orderlist-order_list--void">on_order_list(self, OrderList order_list) → void<a href="#on_order_listself-orderlist-order_list--void" class="hash-link" aria-label="Direct link to on_order_list(self, OrderList order_list) → void" title="Direct link to on_order_list(self, OrderList order_list) → void">​</a></h4>
<p>Actions to be performed when running and receives an order list.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>order_list</strong> (<a href="../model/orders/index.htm#posei_trader.model.orders.OrderList"><em>OrderList</em></a>) – The order list to be handled.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-52">WARNING<a href="#warning-52" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>System method (not intended to be called by user code).</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="on_order_modify_rejectedself-ordermodifyrejected-event--void">on_order_modify_rejected(self, OrderModifyRejected event) → void<a href="#on_order_modify_rejectedself-ordermodifyrejected-event--void" class="hash-link" aria-label="Direct link to on_order_modify_rejected(self, OrderModifyRejected event) → void" title="Direct link to on_order_modify_rejected(self, OrderModifyRejected event) → void">​</a></h4>
<p>Actions to be performed when running and receives an order modify rejected event.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>event</strong> (<a href="../model/events/index.htm#posei_trader.model.events.OrderModifyRejected"><em>OrderModifyRejected</em></a>) – The event received.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-53">WARNING<a href="#warning-53" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>System method (not intended to be called by user code).</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="on_order_pending_cancelself-orderpendingcancel-event--void">on_order_pending_cancel(self, OrderPendingCancel event) → void<a href="#on_order_pending_cancelself-orderpendingcancel-event--void" class="hash-link" aria-label="Direct link to on_order_pending_cancel(self, OrderPendingCancel event) → void" title="Direct link to on_order_pending_cancel(self, OrderPendingCancel event) → void">​</a></h4>
<p>Actions to be performed when running and receives an order pending cancel event.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>event</strong> (<a href="../model/events/index.htm#posei_trader.model.events.OrderPendingCancel"><em>OrderPendingCancel</em></a>) – The event received.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-54">WARNING<a href="#warning-54" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>System method (not intended to be called by user code).</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="on_order_pending_updateself-orderpendingupdate-event--void">on_order_pending_update(self, OrderPendingUpdate event) → void<a href="#on_order_pending_updateself-orderpendingupdate-event--void" class="hash-link" aria-label="Direct link to on_order_pending_update(self, OrderPendingUpdate event) → void" title="Direct link to on_order_pending_update(self, OrderPendingUpdate event) → void">​</a></h4>
<p>Actions to be performed when running and receives an order pending update event.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>event</strong> (<a href="../model/events/index.htm#posei_trader.model.events.OrderPendingUpdate"><em>OrderPendingUpdate</em></a>) – The event received.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-55">WARNING<a href="#warning-55" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>System method (not intended to be called by user code).</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="on_order_rejectedself-orderrejected-event--void">on_order_rejected(self, OrderRejected event) → void<a href="#on_order_rejectedself-orderrejected-event--void" class="hash-link" aria-label="Direct link to on_order_rejected(self, OrderRejected event) → void" title="Direct link to on_order_rejected(self, OrderRejected event) → void">​</a></h4>
<p>Actions to be performed when running and receives an order rejected event.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>event</strong> (<a href="../model/events/index.htm#posei_trader.model.events.OrderRejected"><em>OrderRejected</em></a>) – The event received.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-56">WARNING<a href="#warning-56" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>System method (not intended to be called by user code).</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="on_order_releasedself-orderreleased-event--void">on_order_released(self, OrderReleased event) → void<a href="#on_order_releasedself-orderreleased-event--void" class="hash-link" aria-label="Direct link to on_order_released(self, OrderReleased event) → void" title="Direct link to on_order_released(self, OrderReleased event) → void">​</a></h4>
<p>Actions to be performed when running and receives an order released event.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>event</strong> (<a href="../model/events/index.htm#posei_trader.model.events.OrderReleased"><em>OrderReleased</em></a>) – The event received.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-57">WARNING<a href="#warning-57" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>System method (not intended to be called by user code).</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="on_order_submittedself-ordersubmitted-event--void">on_order_submitted(self, OrderSubmitted event) → void<a href="#on_order_submittedself-ordersubmitted-event--void" class="hash-link" aria-label="Direct link to on_order_submitted(self, OrderSubmitted event) → void" title="Direct link to on_order_submitted(self, OrderSubmitted event) → void">​</a></h4>
<p>Actions to be performed when running and receives an order submitted event.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>event</strong> (<a href="../model/events/index.htm#posei_trader.model.events.OrderSubmitted"><em>OrderSubmitted</em></a>) – The event received.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-58">WARNING<a href="#warning-58" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>System method (not intended to be called by user code).</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="on_order_triggeredself-ordertriggered-event--void">on_order_triggered(self, OrderTriggered event) → void<a href="#on_order_triggeredself-ordertriggered-event--void" class="hash-link" aria-label="Direct link to on_order_triggered(self, OrderTriggered event) → void" title="Direct link to on_order_triggered(self, OrderTriggered event) → void">​</a></h4>
<p>Actions to be performed when running and receives an order triggered event.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>event</strong> (<a href="../model/events/index.htm#posei_trader.model.events.OrderTriggered"><em>OrderTriggered</em></a>) – The event received.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-59">WARNING<a href="#warning-59" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>System method (not intended to be called by user code).</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="on_order_updatedself-orderupdated-event--void">on_order_updated(self, OrderUpdated event) → void<a href="#on_order_updatedself-orderupdated-event--void" class="hash-link" aria-label="Direct link to on_order_updated(self, OrderUpdated event) → void" title="Direct link to on_order_updated(self, OrderUpdated event) → void">​</a></h4>
<p>Actions to be performed when running and receives an order updated event.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>event</strong> (<a href="../model/events/index.htm#posei_trader.model.events.OrderUpdated"><em>OrderUpdated</em></a>) – The event received.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-60">WARNING<a href="#warning-60" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>System method (not intended to be called by user code).</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="on_position_changedself-positionchanged-event--void">on_position_changed(self, PositionChanged event) → void<a href="#on_position_changedself-positionchanged-event--void" class="hash-link" aria-label="Direct link to on_position_changed(self, PositionChanged event) → void" title="Direct link to on_position_changed(self, PositionChanged event) → void">​</a></h4>
<p>Actions to be performed when running and receives a position changed event.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>event</strong> (<a href="../model/events/index.htm#posei_trader.model.events.PositionChanged"><em>PositionChanged</em></a>) – The event received.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-61">WARNING<a href="#warning-61" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>System method (not intended to be called by user code).</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="on_position_closedself-positionclosed-event--void">on_position_closed(self, PositionClosed event) → void<a href="#on_position_closedself-positionclosed-event--void" class="hash-link" aria-label="Direct link to on_position_closed(self, PositionClosed event) → void" title="Direct link to on_position_closed(self, PositionClosed event) → void">​</a></h4>
<p>Actions to be performed when running and receives a position closed event.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>event</strong> (<a href="../model/events/index.htm#posei_trader.model.events.PositionClosed"><em>PositionClosed</em></a>) – The event received.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-62">WARNING<a href="#warning-62" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>System method (not intended to be called by user code).</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="on_position_eventself-positionevent-event--void">on_position_event(self, PositionEvent event) → void<a href="#on_position_eventself-positionevent-event--void" class="hash-link" aria-label="Direct link to on_position_event(self, PositionEvent event) → void" title="Direct link to on_position_event(self, PositionEvent event) → void">​</a></h4>
<p>Actions to be performed when running and receives a position event.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>event</strong> (<a href="../model/events/index.htm#posei_trader.model.events.PositionEvent"><em>PositionEvent</em></a>) – The event received.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-63">WARNING<a href="#warning-63" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>System method (not intended to be called by user code).</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="on_position_openedself-positionopened-event--void">on_position_opened(self, PositionOpened event) → void<a href="#on_position_openedself-positionopened-event--void" class="hash-link" aria-label="Direct link to on_position_opened(self, PositionOpened event) → void" title="Direct link to on_position_opened(self, PositionOpened event) → void">​</a></h4>
<p>Actions to be performed when running and receives a position opened event.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>event</strong> (<a href="../model/events/index.htm#posei_trader.model.events.PositionOpened"><em>PositionOpened</em></a>) – The event received.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-64">WARNING<a href="#warning-64" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>System method (not intended to be called by user code).</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="on_quote_tickself-quotetick-tick--void">on_quote_tick(self, QuoteTick tick) → void<a href="#on_quote_tickself-quotetick-tick--void" class="hash-link" aria-label="Direct link to on_quote_tick(self, QuoteTick tick) → void" title="Direct link to on_quote_tick(self, QuoteTick tick) → void">​</a></h4>
<p>Actions to be performed when running and receives a quote tick.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>tick</strong> (<a href="../model/data/index.htm#posei_trader.model.data.QuoteTick"><em>QuoteTick</em></a>) – The tick received.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-65">WARNING<a href="#warning-65" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>System method (not intended to be called by user code).</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="on_resetself--void">on_reset(self) → void<a href="#on_resetself--void" class="hash-link" aria-label="Direct link to on_reset(self) → void" title="Direct link to on_reset(self) → void">​</a></h4>
<p>Actions to be performed on reset.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-66">WARNING<a href="#warning-66" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>System method (not intended to be called by user code).</p>
<p>Should be overridden in a user implementation.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="on_resumeself--void">on_resume(self) → void<a href="#on_resumeself--void" class="hash-link" aria-label="Direct link to on_resume(self) → void" title="Direct link to on_resume(self) → void">​</a></h4>
<p>Actions to be performed on resume.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-67">WARNING<a href="#warning-67" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>System method (not intended to be called by user code).</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="on_saveself--dict">on_save(self) → dict<a href="#on_saveself--dict" class="hash-link" aria-label="Direct link to on_save(self) → dict" title="Direct link to on_save(self) → dict">​</a></h4>
<p>Actions to be performed when the actor state is saved.</p>
<p>Create and return a state dictionary of values to be saved.</p>
<ul>
<li><strong>Returns:</strong>
The strategy state to save.</li>
<li><strong>Return type:</strong>
dict[str, bytes]</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-68">WARNING<a href="#warning-68" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>System method (not intended to be called by user code).</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="on_signalself-signal--void">on_signal(self, signal) → void<a href="#on_signalself-signal--void" class="hash-link" aria-label="Direct link to on_signal(self, signal) → void" title="Direct link to on_signal(self, signal) → void">​</a></h4>
<p>Actions to be performed when running and receives signal data.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>signal</strong> (<a href="../core/index.htm#posei_trader.core.Data"><em>Data</em></a>) – The signal received.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-69">WARNING<a href="#warning-69" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>System method (not intended to be called by user code).</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="on_startself--void">on_start(self) → void<a href="#on_startself--void" class="hash-link" aria-label="Direct link to on_start(self) → void" title="Direct link to on_start(self) → void">​</a></h4>
<p>Actions to be performed on start.</p>
<p>The intent is that this method is called once per trading ‘run’, when
initially starting.</p>
<p>It is recommended to subscribe/request for data here.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-70">WARNING<a href="#warning-70" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>System method (not intended to be called by user code).</p>
<p>Should be overridden in a user implementation.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="on_stopself--void">on_stop(self) → void<a href="#on_stopself--void" class="hash-link" aria-label="Direct link to on_stop(self) → void" title="Direct link to on_stop(self) → void">​</a></h4>
<p>Actions to be performed on stop.</p>
<p>The intent is that this method is called to pause, or when done for day.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-71">WARNING<a href="#warning-71" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>System method (not intended to be called by user code).</p>
<p>Should be overridden in a user implementation.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="on_trade_tickself-tradetick-tick--void">on_trade_tick(self, TradeTick tick) → void<a href="#on_trade_tickself-tradetick-tick--void" class="hash-link" aria-label="Direct link to on_trade_tick(self, TradeTick tick) → void" title="Direct link to on_trade_tick(self, TradeTick tick) → void">​</a></h4>
<p>Actions to be performed when running and receives a trade tick.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>tick</strong> (<a href="../model/data/index.htm#posei_trader.model.data.TradeTick"><em>TradeTick</em></a>) – The tick received.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-72">WARNING<a href="#warning-72" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>System method (not intended to be called by user code).</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="pending_requestsself--set">pending_requests(self) → set<a href="#pending_requestsself--set" class="hash-link" aria-label="Direct link to pending_requests(self) → set" title="Direct link to pending_requests(self) → set">​</a></h4>
<p>Return the request IDs which are currently pending processing.</p>
<ul>
<li><strong>Return type:</strong>
set[<a href="../core/index.htm#posei_trader.core.UUID4">UUID4</a>]</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="portfolio">portfolio<a href="#portfolio" class="hash-link" aria-label="Direct link to portfolio" title="Direct link to portfolio">​</a></h4>
<p>The read-only portfolio for the actor.</p>
<ul>
<li><strong>Returns:</strong>
PortfolioFacade</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="publish_dataself-datatype-data_type-data-data--void">publish_data(self, DataType data_type, Data data) → void<a href="#publish_dataself-datatype-data_type-data-data--void" class="hash-link" aria-label="Direct link to publish_data(self, DataType data_type, Data data) → void" title="Direct link to publish_data(self, DataType data_type, Data data) → void">​</a></h4>
<p>Publish the given data to the message bus.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>data_type</strong> (<a href="../model/data/index.htm#posei_trader.model.data.DataType"><em>DataType</em></a>) – The data type being published.</li>
<li><strong>data</strong> (<a href="../core/index.htm#posei_trader.core.Data"><em>Data</em></a>) – The data to publish.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="publish_signalself-str-name-value-uint64_t-ts_event0--void">publish_signal(self, str name, value, uint64_t ts_event=0) → void<a href="#publish_signalself-str-name-value-uint64_t-ts_event0--void" class="hash-link" aria-label="Direct link to publish_signal(self, str name, value, uint64_t ts_event=0) → void" title="Direct link to publish_signal(self, str name, value, uint64_t ts_event=0) → void">​</a></h4>
<p>Publish the given value as a signal to the message bus.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>name</strong> (<em>str</em>) – The name of the signal being published.
The signal name will be converted to title case, with each word capitalized
(e.g., ‘example’ becomes ‘SignalExample’).</li>
<li><strong>value</strong> (<em>object</em>) – The signal data to publish.</li>
<li><strong>ts_event</strong> (<em>uint64_t</em> <em>,</em> <em>optional</em>) – UNIX timestamp (nanoseconds) when the signal event occurred.
If <code>None</code> then will timestamp current time.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="queue_for_executorself-func-callable-any-tuple-argsnone-dict-kwargsnone">queue_for_executor(self, func: Callable[..., Any], tuple args=None, dict kwargs=None)<a href="#queue_for_executorself-func-callable-any-tuple-argsnone-dict-kwargsnone" class="hash-link" aria-label="Direct link to queue_for_executor(self, func: Callable[..., Any], tuple args=None, dict kwargs=None)" title="Direct link to queue_for_executor(self, func: Callable[..., Any], tuple args=None, dict kwargs=None)">​</a></h4>
<p>Queues the callable func to be executed as fn(*args, **kwargs) sequentially.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>func</strong> (<em>Callable</em>) – The function to be executed.</li>
<li><strong>args</strong> (<em>positional arguments</em>) – The positional arguments for the call to func.</li>
<li><strong>kwargs</strong> (<em>arbitrary keyword arguments</em>) – The keyword arguments for the call to func.</li>
</ul>
</li>
<li><strong>Raises:</strong>
<strong>TypeError</strong> – If func is not of type Callable.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="queued_task_idsself--list">queued_task_ids(self) → list<a href="#queued_task_idsself--list" class="hash-link" aria-label="Direct link to queued_task_ids(self) → list" title="Direct link to queued_task_ids(self) → list">​</a></h4>
<p>Return the queued task identifiers.</p>
<ul>
<li><strong>Return type:</strong>
list[<a href="../common/index.htm#posei_trader.common.executor.TaskId">TaskId</a>]</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="registerself-traderid-trader_id-portfoliofacade-portfolio-messagebus-msgbus-cachefacade-cache-clock-clock--void">register(self, TraderId trader_id, PortfolioFacade portfolio, MessageBus msgbus, CacheFacade cache, Clock clock) → void<a href="#registerself-traderid-trader_id-portfoliofacade-portfolio-messagebus-msgbus-cachefacade-cache-clock-clock--void" class="hash-link" aria-label="Direct link to register(self, TraderId trader_id, PortfolioFacade portfolio, MessageBus msgbus, CacheFacade cache, Clock clock) → void" title="Direct link to register(self, TraderId trader_id, PortfolioFacade portfolio, MessageBus msgbus, CacheFacade cache, Clock clock) → void">​</a></h4>
<p>Register the execution algorithm with a trader.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>trader_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.TraderId"><em>TraderId</em></a>) – The trader ID for the execution algorithm.</li>
<li><strong>portfolio</strong> (<a href="../portfolio/index.htm#posei_trader.portfolio.PortfolioFacade"><em>PortfolioFacade</em></a>) – The read-only portfolio for the execution algorithm.</li>
<li><strong>msgbus</strong> (<a href="../common/index.htm#posei_trader.common.component.MessageBus"><em>MessageBus</em></a>) – The message bus for the execution algorithm.</li>
<li><strong>cache</strong> (<a href="../cache/index.htm#posei_trader.cache.base.CacheFacade"><em>CacheFacade</em></a>) – The read-only cache for the execution algorithm.</li>
<li><strong>clock</strong> (<a href="../common/index.htm#posei_trader.common.component.Clock"><em>Clock</em></a>) – The clock for the execution algorithm.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-73">WARNING<a href="#warning-73" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>System method (not intended to be called by user code).</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="register_baseself-portfoliofacade-portfolio-messagebus-msgbus-cachefacade-cache-clock-clock--void">register_base(self, PortfolioFacade portfolio, MessageBus msgbus, CacheFacade cache, Clock clock) → void<a href="#register_baseself-portfoliofacade-portfolio-messagebus-msgbus-cachefacade-cache-clock-clock--void" class="hash-link" aria-label="Direct link to register_base(self, PortfolioFacade portfolio, MessageBus msgbus, CacheFacade cache, Clock clock) → void" title="Direct link to register_base(self, PortfolioFacade portfolio, MessageBus msgbus, CacheFacade cache, Clock clock) → void">​</a></h4>
<p>Register with a trader.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>portfolio</strong> (<a href="../portfolio/index.htm#posei_trader.portfolio.PortfolioFacade"><em>PortfolioFacade</em></a>) – The read-only portfolio for the actor.</li>
<li><strong>msgbus</strong> (<a href="../common/index.htm#posei_trader.common.component.MessageBus"><em>MessageBus</em></a>) – The message bus for the actor.</li>
<li><strong>cache</strong> (<a href="../cache/index.htm#posei_trader.cache.base.CacheFacade"><em>CacheFacade</em></a>) – The read-only cache for the actor.</li>
<li><strong>clock</strong> (<a href="../common/index.htm#posei_trader.common.component.Clock"><em>Clock</em></a>) – The clock for the actor.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-74">WARNING<a href="#warning-74" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>System method (not intended to be called by user code).</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="register_executorself-loop-asyncioabstracteventloop-executor-executor--void">register_executor(self, loop: asyncio.AbstractEventLoop, executor: Executor) → void<a href="#register_executorself-loop-asyncioabstracteventloop-executor-executor--void" class="hash-link" aria-label="Direct link to register_executor(self, loop: asyncio.AbstractEventLoop, executor: Executor) → void" title="Direct link to register_executor(self, loop: asyncio.AbstractEventLoop, executor: Executor) → void">​</a></h4>
<p>Register the given Executor for the actor.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>loop</strong> (<em>asyncio.AbstractEventLoop</em>) – The event loop of the application.</li>
<li><strong>executor</strong> (<em>concurrent.futures.Executor</em>) – The executor to register.</li>
</ul>
</li>
<li><strong>Raises:</strong>
<strong>TypeError</strong> – If executor is not of type concurrent.futures.Executor</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="register_indicator_for_barsself-bartype-bar_type-indicator-indicator--void">register_indicator_for_bars(self, BarType bar_type, Indicator indicator) → void<a href="#register_indicator_for_barsself-bartype-bar_type-indicator-indicator--void" class="hash-link" aria-label="Direct link to register_indicator_for_bars(self, BarType bar_type, Indicator indicator) → void" title="Direct link to register_indicator_for_bars(self, BarType bar_type, Indicator indicator) → void">​</a></h4>
<p>Register the given indicator with the actor/strategy to receive bar data for the
given bar type.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>bar_type</strong> (<a href="../model/data/index.htm#posei_trader.model.data.BarType"><em>BarType</em></a>) – The bar type for bar updates.</li>
<li><strong>indicator</strong> (<a href="../indicators/index.htm#posei_trader.indicators.base.indicator.Indicator"><em>Indicator</em></a>) – The indicator to register.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="register_indicator_for_quote_ticksself-instrumentid-instrument_id-indicator-indicator--void">register_indicator_for_quote_ticks(self, InstrumentId instrument_id, Indicator indicator) → void<a href="#register_indicator_for_quote_ticksself-instrumentid-instrument_id-indicator-indicator--void" class="hash-link" aria-label="Direct link to register_indicator_for_quote_ticks(self, InstrumentId instrument_id, Indicator indicator) → void" title="Direct link to register_indicator_for_quote_ticks(self, InstrumentId instrument_id, Indicator indicator) → void">​</a></h4>
<p>Register the given indicator with the actor/strategy to receive quote tick
data for the given instrument ID.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>instrument_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.InstrumentId"><em>InstrumentId</em></a>) – The instrument ID for tick updates.</li>
<li><strong>indicator</strong> (<a href="../indicators/index.htm#posei_trader.indicators.base.indicator.Indicator"><em>Indicator</em></a>) – The indicator to register.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="register_indicator_for_trade_ticksself-instrumentid-instrument_id-indicator-indicator--void">register_indicator_for_trade_ticks(self, InstrumentId instrument_id, Indicator indicator) → void<a href="#register_indicator_for_trade_ticksself-instrumentid-instrument_id-indicator-indicator--void" class="hash-link" aria-label="Direct link to register_indicator_for_trade_ticks(self, InstrumentId instrument_id, Indicator indicator) → void" title="Direct link to register_indicator_for_trade_ticks(self, InstrumentId instrument_id, Indicator indicator) → void">​</a></h4>
<p>Register the given indicator with the actor/strategy to receive trade tick
data for the given instrument ID.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>instrument_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.InstrumentId"><em>InstrumentId</em></a>) – The instrument ID for tick updates.</li>
<li><strong>indicator</strong> (<em>indicator</em>) – The indicator to register.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="register_warning_eventself-type-event--void">register_warning_event(self, type event) → void<a href="#register_warning_eventself-type-event--void" class="hash-link" aria-label="Direct link to register_warning_event(self, type event) → void" title="Direct link to register_warning_event(self, type event) → void">​</a></h4>
<p>Register the given event type for warning log levels.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>event</strong> (<em>type</em>) – The event class to register.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="registered_indicators">registered_indicators<a href="#registered_indicators" class="hash-link" aria-label="Direct link to registered_indicators" title="Direct link to registered_indicators">​</a></h4>
<p>Return the registered indicators for the strategy.</p>
<ul>
<li><strong>Return type:</strong>
list[<a href="../indicators/index.htm#posei_trader.indicators.base.indicator.Indicator">Indicator</a>]</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="request_aggregated_barsself-list-bar_types-datetime-startnone-datetime-endnone-int-limit0-clientid-client_idnone-callback-callableuuid4-none--none--none-bool-include_external_datafalse-bool-update_subscriptionsfalse-update_catalog-bool--false-dict-paramsnone--uuid4">request_aggregated_bars(self, list bar_types, datetime start=None, datetime end=None, int limit=0, ClientId client_id=None, callback: Callable[[UUID4], None] | None = None, bool include_external_data=False, bool update_subscriptions=False, update_catalog: bool = False, dict params=None) → <a href="../core/index.htm#posei_trader.core.UUID4">UUID4</a><a href="#request_aggregated_barsself-list-bar_types-datetime-startnone-datetime-endnone-int-limit0-clientid-client_idnone-callback-callableuuid4-none--none--none-bool-include_external_datafalse-bool-update_subscriptionsfalse-update_catalog-bool--false-dict-paramsnone--uuid4" class="hash-link" aria-label="Direct link to request_aggregated_barsself-list-bar_types-datetime-startnone-datetime-endnone-int-limit0-clientid-client_idnone-callback-callableuuid4-none--none--none-bool-include_external_datafalse-bool-update_subscriptionsfalse-update_catalog-bool--false-dict-paramsnone--uuid4" title="Direct link to request_aggregated_barsself-list-bar_types-datetime-startnone-datetime-endnone-int-limit0-clientid-client_idnone-callback-callableuuid4-none--none--none-bool-include_external_datafalse-bool-update_subscriptionsfalse-update_catalog-bool--false-dict-paramsnone--uuid4">​</a></h4>
<p>Request historical aggregated Bar data for multiple bar types.
The first bar is used to determine which market data type will be queried.
This can either be quotes, trades or bars. If bars are queried,
the first bar type needs to have a composite bar that is external (i.e. not internal/aggregated).
This external bar type will be queried.</p>
<p>If end is <code>None</code> then will request up to the most recent data.</p>
<p>Once the response is received, the bar data is forwarded from the message bus
to the on_historical_data handler. Any tick data used for aggregation is also
forwarded to the on_historical_data handler.</p>
<p>If the request fails, then an error is logged.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>bar_types</strong> (<em>list</em> <em>[</em><a href="../model/data/index.htm#posei_trader.model.data.BarType"><em>BarType</em></a> <em>]</em>) – The list of bar types for the request. Composite bars can also be used and need to
figure in the list after a BarType on which it depends.</li>
<li><strong>start</strong> (<em>datetime</em> <em>,</em> <em>optional</em>) – The start datetime (UTC) of request time range.
The inclusiveness depends on individual data client implementation.</li>
<li><strong>end</strong> (<em>datetime</em> <em>,</em> <em>optional</em>) – The end datetime (UTC) of request time range.
The inclusiveness depends on individual data client implementation.</li>
<li><strong>limit</strong> (<em>int</em> <em>,</em> <em>optional</em>) – The limit on the amount of data received (quote ticks, trade ticks or bars).</li>
<li><strong>client_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.ClientId"><em>ClientId</em></a> <em>,</em> <em>optional</em>) – The specific client ID for the command.
If <code>None</code> then will be inferred from the venue in the instrument ID.</li>
<li><strong>callback</strong> (<em>Callable</em> <em>[</em> <em>[</em><a href="../core/index.htm#posei_trader.core.UUID4"><em>UUID4</em></a> <em>]</em> <em>,</em> <em>None</em> <em>]</em> <em>,</em> <em>optional</em>) – The registered callback, to be called with the request ID when the response has
completed processing.</li>
<li><strong>include_external_data</strong> (<em>bool</em> <em>,</em> <em>default False</em>) – If True, includes the queried external data in the response.</li>
<li><strong>update_subscriptions</strong> (<em>bool</em> <em>,</em> <em>default False</em>) – If True, updates the aggregators of any existing or future subscription with the queried external data.</li>
<li><strong>update_catalog</strong> (<em>bool</em> <em>,</em> <em>optional</em>) – Whether to update a catalog with the received data.</li>
<li><strong>params</strong> (<em>dict</em> *[*<em>str</em> <em>,</em> <em>Any</em> <em>]</em> <em>,</em> <em>optional</em>) – Additional parameters potentially used by a specific client.</li>
</ul>
</li>
<li><strong>Returns:</strong>
The request_id for the request.</li>
<li><strong>Return type:</strong>
<a href="../core/index.htm#posei_trader.core.UUID4">UUID4</a></li>
<li><strong>Raises:</strong>
<ul>
<li><strong>ValueError</strong> – If start is not None and &gt; current timestamp (now).</li>
<li><strong>ValueError</strong> – If end is not None and &gt; current timestamp (now).</li>
<li><strong>ValueError</strong> – If start and end are not None and start is &gt;= end.</li>
<li><strong>ValueError</strong> – If bar_types is empty.</li>
<li><strong>TypeError</strong> – If callback is not None and not of type Callable.</li>
<li><strong>TypeError</strong> – If bar_types is empty or contains elements not of type BarType.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="request_barsself-bartype-bar_type-datetime-startnone-datetime-endnone-int-limit0-clientid-client_idnone-callback-callableuuid4-none--none--none-update_catalog-bool--false-dict-paramsnone--uuid4">request_bars(self, BarType bar_type, datetime start=None, datetime end=None, int limit=0, ClientId client_id=None, callback: Callable[[UUID4], None] | None = None, update_catalog: bool = False, dict params=None) → <a href="../core/index.htm#posei_trader.core.UUID4">UUID4</a><a href="#request_barsself-bartype-bar_type-datetime-startnone-datetime-endnone-int-limit0-clientid-client_idnone-callback-callableuuid4-none--none--none-update_catalog-bool--false-dict-paramsnone--uuid4" class="hash-link" aria-label="Direct link to request_barsself-bartype-bar_type-datetime-startnone-datetime-endnone-int-limit0-clientid-client_idnone-callback-callableuuid4-none--none--none-update_catalog-bool--false-dict-paramsnone--uuid4" title="Direct link to request_barsself-bartype-bar_type-datetime-startnone-datetime-endnone-int-limit0-clientid-client_idnone-callback-callableuuid4-none--none--none-update_catalog-bool--false-dict-paramsnone--uuid4">​</a></h4>
<p>Request historical Bar data.</p>
<p>If end is <code>None</code> then will request up to the most recent data.</p>
<p>Once the response is received, the bar data is forwarded from the message bus
to the on_historical_data handler.</p>
<p>If the request fails, then an error is logged.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>bar_type</strong> (<a href="../model/data/index.htm#posei_trader.model.data.BarType"><em>BarType</em></a>) – The bar type for the request.</li>
<li><strong>start</strong> (<em>datetime</em> <em>,</em> <em>optional</em>) – The start datetime (UTC) of request time range.
The inclusiveness depends on individual data client implementation.</li>
<li><strong>end</strong> (<em>datetime</em> <em>,</em> <em>optional</em>) – The end datetime (UTC) of request time range.
The inclusiveness depends on individual data client implementation.</li>
<li><strong>limit</strong> (<em>int</em> <em>,</em> <em>optional</em>) – The limit on the amount of bars received.</li>
<li><strong>client_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.ClientId"><em>ClientId</em></a> <em>,</em> <em>optional</em>) – The specific client ID for the command.
If <code>None</code> then will be inferred from the venue in the instrument ID.</li>
<li><strong>callback</strong> (<em>Callable</em> <em>[</em> <em>[</em><a href="../core/index.htm#posei_trader.core.UUID4"><em>UUID4</em></a> <em>]</em> <em>,</em> <em>None</em> <em>]</em> <em>,</em> <em>optional</em>) – The registered callback, to be called with the request ID when the response has
completed processing.</li>
<li><strong>update_catalog</strong> (<em>bool</em> <em>,</em> <em>optional</em>) – Whether to update a catalog with the received data.</li>
<li><strong>params</strong> (<em>dict</em> *[*<em>str</em> <em>,</em> <em>Any</em> <em>]</em> <em>,</em> <em>optional</em>) – Additional parameters potentially used by a specific client.</li>
</ul>
</li>
<li><strong>Returns:</strong>
The request_id for the request.</li>
<li><strong>Return type:</strong>
<a href="../core/index.htm#posei_trader.core.UUID4">UUID4</a></li>
<li><strong>Raises:</strong>
<ul>
<li><strong>ValueError</strong> – If start is not None and &gt; current timestamp (now).</li>
<li><strong>ValueError</strong> – If end is not None and &gt; current timestamp (now).</li>
<li><strong>ValueError</strong> – If start and end are not None and start is &gt;= end.</li>
<li><strong>TypeError</strong> – If callback is not None and not of type Callable.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="request_dataself-datatype-data_type-clientid-client_id-instrumentid-instrument_idnone-datetime-startnone-datetime-endnone-int-limit0-callback-callableuuid4-none--none--none-update_catalog-bool--false-dict-paramsnone--uuid4">request_data(self, DataType data_type, ClientId client_id, InstrumentId instrument_id=None, datetime start=None, datetime end=None, int limit=0, callback: Callable[[UUID4], None] | None = None, update_catalog: bool = False, dict params=None) → <a href="../core/index.htm#posei_trader.core.UUID4">UUID4</a><a href="#request_dataself-datatype-data_type-clientid-client_id-instrumentid-instrument_idnone-datetime-startnone-datetime-endnone-int-limit0-callback-callableuuid4-none--none--none-update_catalog-bool--false-dict-paramsnone--uuid4" class="hash-link" aria-label="Direct link to request_dataself-datatype-data_type-clientid-client_id-instrumentid-instrument_idnone-datetime-startnone-datetime-endnone-int-limit0-callback-callableuuid4-none--none--none-update_catalog-bool--false-dict-paramsnone--uuid4" title="Direct link to request_dataself-datatype-data_type-clientid-client_id-instrumentid-instrument_idnone-datetime-startnone-datetime-endnone-int-limit0-callback-callableuuid4-none--none--none-update_catalog-bool--false-dict-paramsnone--uuid4">​</a></h4>
<p>Request custom data for the given data type from the given data client.</p>
<p>Once the response is received, the data is forwarded from the message bus
to the on_historical_data handler.</p>
<p>If the request fails, then an error is logged.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>data_type</strong> (<a href="../model/data/index.htm#posei_trader.model.data.DataType"><em>DataType</em></a>) – The data type for the request.</li>
<li><strong>client_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.ClientId"><em>ClientId</em></a>) – The data client ID.</li>
<li><strong>start</strong> (<em>datetime</em> <em>,</em> <em>optional</em>) – The start datetime (UTC) of request time range.
The inclusiveness depends on individual data client implementation.</li>
<li><strong>end</strong> (<em>datetime</em> <em>,</em> <em>optional</em>) – The end datetime (UTC) of request time range.
The inclusiveness depends on individual data client implementation.</li>
<li><strong>limit</strong> (<em>int</em> <em>,</em> <em>optional</em>) – The limit on the amount of data points received.</li>
<li><strong>callback</strong> (<em>Callable</em> <em>[</em> <em>[</em><a href="../core/index.htm#posei_trader.core.UUID4"><em>UUID4</em></a> <em>]</em> <em>,</em> <em>None</em> <em>]</em> <em>,</em> <em>optional</em>) – The registered callback, to be called with the request ID when the response has
completed processing.</li>
<li><strong>update_catalog</strong> (<em>bool</em> <em>,</em> <em>optional</em>) – Whether to update a catalog with the received data.</li>
<li><strong>params</strong> (<em>dict</em> *[*<em>str</em> <em>,</em> <em>Any</em> <em>]</em> <em>,</em> <em>optional</em>) – Additional parameters potentially used by a specific client.</li>
</ul>
</li>
<li><strong>Returns:</strong>
The request_id for the request.</li>
<li><strong>Return type:</strong>
<a href="../core/index.htm#posei_trader.core.UUID4">UUID4</a></li>
<li><strong>Raises:</strong>
<strong>TypeError</strong> – If callback is not None and not of type Callable.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="request_instrumentself-instrumentid-instrument_id-datetime-startnone-datetime-endnone-clientid-client_idnone-callback-callableuuid4-noane--none--none-update_catalog-bool--false-dict-paramsnone--uuid4">request_instrument(self, InstrumentId instrument_id, datetime start=None, datetime end=None, ClientId client_id=None, callback: Callable[[UUID4], Noane] | None = None, update_catalog: bool = False, dict params=None) → <a href="../core/index.htm#posei_trader.core.UUID4">UUID4</a><a href="#request_instrumentself-instrumentid-instrument_id-datetime-startnone-datetime-endnone-clientid-client_idnone-callback-callableuuid4-noane--none--none-update_catalog-bool--false-dict-paramsnone--uuid4" class="hash-link" aria-label="Direct link to request_instrumentself-instrumentid-instrument_id-datetime-startnone-datetime-endnone-clientid-client_idnone-callback-callableuuid4-noane--none--none-update_catalog-bool--false-dict-paramsnone--uuid4" title="Direct link to request_instrumentself-instrumentid-instrument_id-datetime-startnone-datetime-endnone-clientid-client_idnone-callback-callableuuid4-noane--none--none-update_catalog-bool--false-dict-paramsnone--uuid4">​</a></h4>
<p>Request Instrument data for the given instrument ID.</p>
<p>If end is <code>None</code> then will request up to the most recent data.</p>
<p>Once the response is received, the instrument data is forwarded from the message bus
to the on_instrument handler.</p>
<p>If the request fails, then an error is logged.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>instrument_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.InstrumentId"><em>InstrumentId</em></a>) – The instrument ID for the request.</li>
<li><strong>start</strong> (<em>datetime</em> <em>,</em> <em>optional</em>) – The start datetime (UTC) of request time range.
The inclusiveness depends on individual data client implementation.</li>
<li><strong>end</strong> (<em>datetime</em> <em>,</em> <em>optional</em>) – The end datetime (UTC) of request time range.
The inclusiveness depends on individual data client implementation.</li>
<li><strong>client_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.ClientId"><em>ClientId</em></a> <em>,</em> <em>optional</em>) – The specific client ID for the command.
If <code>None</code> then will be inferred from the venue in the instrument ID.</li>
<li><strong>callback</strong> (<em>Callable</em> <em>[</em> <em>[</em><a href="../core/index.htm#posei_trader.core.UUID4"><em>UUID4</em></a> <em>]</em> <em>,</em> <em>None</em> <em>]</em> <em>,</em> <em>optional</em>) – The registered callback, to be called with the request ID when the response has
completed processing.</li>
<li><strong>update_catalog</strong> (<em>bool</em> <em>,</em> <em>optional</em>) – Whether to update a catalog with the received data.</li>
<li><strong>params</strong> (<em>dict</em> *[*<em>str</em> <em>,</em> <em>Any</em> <em>]</em> <em>,</em> <em>optional</em>) – Additional parameters potentially used by a specific client.</li>
</ul>
</li>
<li><strong>Returns:</strong>
The request_id for the request.</li>
<li><strong>Return type:</strong>
<a href="../core/index.htm#posei_trader.core.UUID4">UUID4</a></li>
<li><strong>Raises:</strong>
<ul>
<li><strong>ValueError</strong> – If start is not None and &gt; current timestamp (now).</li>
<li><strong>ValueError</strong> – If end is not None and &gt; current timestamp (now).</li>
<li><strong>ValueError</strong> – If start and end are not None and start is &gt;= end.</li>
<li><strong>TypeError</strong> – If callback is not None and not of type Callable.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="request_instrumentsself-venue-venue-datetime-startnone-datetime-endnone-clientid-client_idnone-callback-callableuuid4-none--none--none-update_catalog-bool--false-dict-paramsnone--uuid4">request_instruments(self, Venue venue, datetime start=None, datetime end=None, ClientId client_id=None, callback: Callable[[UUID4], None] | None = None, update_catalog: bool = False, dict params=None) → <a href="../core/index.htm#posei_trader.core.UUID4">UUID4</a><a href="#request_instrumentsself-venue-venue-datetime-startnone-datetime-endnone-clientid-client_idnone-callback-callableuuid4-none--none--none-update_catalog-bool--false-dict-paramsnone--uuid4" class="hash-link" aria-label="Direct link to request_instrumentsself-venue-venue-datetime-startnone-datetime-endnone-clientid-client_idnone-callback-callableuuid4-none--none--none-update_catalog-bool--false-dict-paramsnone--uuid4" title="Direct link to request_instrumentsself-venue-venue-datetime-startnone-datetime-endnone-clientid-client_idnone-callback-callableuuid4-none--none--none-update_catalog-bool--false-dict-paramsnone--uuid4">​</a></h4>
<p>Request all Instrument data for the given venue.</p>
<p>If end is <code>None</code> then will request up to the most recent data.</p>
<p>Once the response is received, the instrument data is forwarded from the message bus
to the on_instrument handler.</p>
<p>If the request fails, then an error is logged.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>venue</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.Venue"><em>Venue</em></a>) – The venue for the request.</li>
<li><strong>start</strong> (<em>datetime</em> <em>,</em> <em>optional</em>) – The start datetime (UTC) of request time range.
The inclusiveness depends on individual data client implementation.</li>
<li><strong>end</strong> (<em>datetime</em> <em>,</em> <em>optional</em>) – The end datetime (UTC) of request time range.
The inclusiveness depends on individual data client implementation.</li>
<li><strong>client_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.ClientId"><em>ClientId</em></a> <em>,</em> <em>optional</em>) – The specific client ID for the command.
If <code>None</code> then will be inferred from the venue in the instrument ID.</li>
<li><strong>callback</strong> (<em>Callable</em> <em>[</em> <em>[</em><a href="../core/index.htm#posei_trader.core.UUID4"><em>UUID4</em></a> <em>]</em> <em>,</em> <em>None</em> <em>]</em> <em>,</em> <em>optional</em>) – The registered callback, to be called with the request ID when the response has
completed processing.</li>
<li><strong>update_catalog</strong> (<em>bool</em> <em>,</em> <em>optional</em>) – Whether to update a catalog with the received data.</li>
<li><strong>params</strong> (<em>dict</em> *[*<em>str</em> <em>,</em> <em>Any</em> <em>]</em> <em>,</em> <em>optional</em>) – Additional parameters potentially used by a specific client.</li>
</ul>
</li>
<li><strong>Returns:</strong>
The request_id for the request.</li>
<li><strong>Return type:</strong>
<a href="../core/index.htm#posei_trader.core.UUID4">UUID4</a></li>
<li><strong>Raises:</strong>
<ul>
<li><strong>ValueError</strong> – If start is not None and &gt; current timestamp (now).</li>
<li><strong>ValueError</strong> – If end is not None and &gt; current timestamp (now).</li>
<li><strong>ValueError</strong> – If start and end are not None and start is &gt;= end.</li>
<li><strong>TypeError</strong> – If callback is not None and not of type Callable.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="request_order_book_snapshotself-instrumentid-instrument_id-int-limit0-clientid-client_idnone-callback-callableuuid4-none--none--none-dict-paramsnone--uuid4">request_order_book_snapshot(self, InstrumentId instrument_id, int limit=0, ClientId client_id=None, callback: Callable[[UUID4], None] | None = None, dict params=None) → <a href="../core/index.htm#posei_trader.core.UUID4">UUID4</a><a href="#request_order_book_snapshotself-instrumentid-instrument_id-int-limit0-clientid-client_idnone-callback-callableuuid4-none--none--none-dict-paramsnone--uuid4" class="hash-link" aria-label="Direct link to request_order_book_snapshotself-instrumentid-instrument_id-int-limit0-clientid-client_idnone-callback-callableuuid4-none--none--none-dict-paramsnone--uuid4" title="Direct link to request_order_book_snapshotself-instrumentid-instrument_id-int-limit0-clientid-client_idnone-callback-callableuuid4-none--none--none-dict-paramsnone--uuid4">​</a></h4>
<p>Request an order book snapshot.</p>
<p>Once the response is received, the order book data is forwarded from the message bus
to the on_historical_data handler.</p>
<p>If the request fails, then an error is logged.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>instrument_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.InstrumentId"><em>InstrumentId</em></a>) – The instrument ID for the order book snapshot request.</li>
<li><strong>limit</strong> (<em>int</em> <em>,</em> <em>optional</em>) – The limit on the depth of the order book snapshot.</li>
<li><strong>client_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.ClientId"><em>ClientId</em></a> <em>,</em> <em>optional</em>) – The specific client ID for the command.
If None, it will be inferred from the venue in the instrument ID.</li>
<li><strong>callback</strong> (<em>Callable</em> <em>[</em> <em>[</em><a href="../core/index.htm#posei_trader.core.UUID4"><em>UUID4</em></a> <em>]</em> <em>,</em> <em>None</em> <em>]</em> <em>,</em> <em>optional</em>) – The registered callback, to be called with the request ID when the response has completed processing.</li>
<li><strong>params</strong> (<em>dict</em> *[*<em>str</em> <em>,</em> <em>Any</em> <em>]</em> <em>,</em> <em>optional</em>) – Additional parameters potentially used by a specific client.</li>
</ul>
</li>
<li><strong>Returns:</strong>
The request_id for the request.</li>
<li><strong>Return type:</strong>
<a href="../core/index.htm#posei_trader.core.UUID4">UUID4</a></li>
<li><strong>Raises:</strong>
<ul>
<li><strong>ValueError</strong> – If the instrument_id is None.</li>
<li><strong>TypeError</strong> – If callback is not None and not of type Callable.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="request_quote_ticksself-instrumentid-instrument_id-datetime-startnone-datetime-endnone-int-limit0-clientid-client_idnone-callback-callableuuid4-none--none--none-update_catalog-bool--false-dict-paramsnone--uuid4">request_quote_ticks(self, InstrumentId instrument_id, datetime start=None, datetime end=None, int limit=0, ClientId client_id=None, callback: Callable[[UUID4], None] | None = None, update_catalog: bool = False, dict params=None) → <a href="../core/index.htm#posei_trader.core.UUID4">UUID4</a><a href="#request_quote_ticksself-instrumentid-instrument_id-datetime-startnone-datetime-endnone-int-limit0-clientid-client_idnone-callback-callableuuid4-none--none--none-update_catalog-bool--false-dict-paramsnone--uuid4" class="hash-link" aria-label="Direct link to request_quote_ticksself-instrumentid-instrument_id-datetime-startnone-datetime-endnone-int-limit0-clientid-client_idnone-callback-callableuuid4-none--none--none-update_catalog-bool--false-dict-paramsnone--uuid4" title="Direct link to request_quote_ticksself-instrumentid-instrument_id-datetime-startnone-datetime-endnone-int-limit0-clientid-client_idnone-callback-callableuuid4-none--none--none-update_catalog-bool--false-dict-paramsnone--uuid4">​</a></h4>
<p>Request historical QuoteTick data.</p>
<p>If end is <code>None</code> then will request up to the most recent data.</p>
<p>Once the response is received, the quote tick data is forwarded from the message bus
to the on_historical_data handler.</p>
<p>If the request fails, then an error is logged.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>instrument_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.InstrumentId"><em>InstrumentId</em></a>) – The tick instrument ID for the request.</li>
<li><strong>start</strong> (<em>datetime</em> <em>,</em> <em>optional</em>) – The start datetime (UTC) of request time range.
The inclusiveness depends on individual data client implementation.</li>
<li><strong>end</strong> (<em>datetime</em> <em>,</em> <em>optional</em>) – The end datetime (UTC) of request time range.
The inclusiveness depends on individual data client implementation.</li>
<li><strong>limit</strong> (<em>int</em> <em>,</em> <em>optional</em>) – The limit on the amount of quote ticks received.</li>
<li><strong>client_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.ClientId"><em>ClientId</em></a> <em>,</em> <em>optional</em>) – The specific client ID for the command.
If <code>None</code> then will be inferred from the venue in the instrument ID.</li>
<li><strong>callback</strong> (<em>Callable</em> <em>[</em> <em>[</em><a href="../core/index.htm#posei_trader.core.UUID4"><em>UUID4</em></a> <em>]</em> <em>,</em> <em>None</em> <em>]</em> <em>,</em> <em>optional</em>) – The registered callback, to be called with the request ID when the response has
completed processing.</li>
<li><strong>update_catalog</strong> (<em>bool</em> <em>,</em> <em>optional</em>) – Whether to update a catalog with the received data.</li>
<li><strong>params</strong> (<em>dict</em> *[*<em>str</em> <em>,</em> <em>Any</em> <em>]</em> <em>,</em> <em>optional</em>) – Additional parameters potentially used by a specific client.</li>
</ul>
</li>
<li><strong>Returns:</strong>
The request_id for the request.</li>
<li><strong>Return type:</strong>
<a href="../core/index.htm#posei_trader.core.UUID4">UUID4</a></li>
<li><strong>Raises:</strong>
<ul>
<li><strong>ValueError</strong> – If start is not None and &gt; current timestamp (now).</li>
<li><strong>ValueError</strong> – If end is not None and &gt; current timestamp (now).</li>
<li><strong>ValueError</strong> – If start and end are not None and start is &gt;= end.</li>
<li><strong>TypeError</strong> – If callback is not None and not of type Callable.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="request_trade_ticksself-instrumentid-instrument_id-datetime-startnone-datetime-endnone-int-limit0-clientid-client_idnone-callback-callableuuid4-none--none--none-update_catalog-bool--false-dict-paramsnone--uuid4">request_trade_ticks(self, InstrumentId instrument_id, datetime start=None, datetime end=None, int limit=0, ClientId client_id=None, callback: Callable[[UUID4], None] | None = None, update_catalog: bool = False, dict params=None) → <a href="../core/index.htm#posei_trader.core.UUID4">UUID4</a><a href="#request_trade_ticksself-instrumentid-instrument_id-datetime-startnone-datetime-endnone-int-limit0-clientid-client_idnone-callback-callableuuid4-none--none--none-update_catalog-bool--false-dict-paramsnone--uuid4" class="hash-link" aria-label="Direct link to request_trade_ticksself-instrumentid-instrument_id-datetime-startnone-datetime-endnone-int-limit0-clientid-client_idnone-callback-callableuuid4-none--none--none-update_catalog-bool--false-dict-paramsnone--uuid4" title="Direct link to request_trade_ticksself-instrumentid-instrument_id-datetime-startnone-datetime-endnone-int-limit0-clientid-client_idnone-callback-callableuuid4-none--none--none-update_catalog-bool--false-dict-paramsnone--uuid4">​</a></h4>
<p>Request historical TradeTick data.</p>
<p>If end is <code>None</code> then will request up to the most recent data.</p>
<p>Once the response is received, the trade tick data is forwarded from the message bus
to the on_historical_data handler.</p>
<p>If the request fails, then an error is logged.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>instrument_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.InstrumentId"><em>InstrumentId</em></a>) – The tick instrument ID for the request.</li>
<li><strong>start</strong> (<em>datetime</em> <em>,</em> <em>optional</em>) – The start datetime (UTC) of request time range.
The inclusiveness depends on individual data client implementation.</li>
<li><strong>end</strong> (<em>datetime</em> <em>,</em> <em>optional</em>) – The end datetime (UTC) of request time range.
The inclusiveness depends on individual data client implementation.</li>
<li><strong>limit</strong> (<em>int</em> <em>,</em> <em>optional</em>) – The limit on the amount of trade ticks received.</li>
<li><strong>client_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.ClientId"><em>ClientId</em></a> <em>,</em> <em>optional</em>) – The specific client ID for the command.
If <code>None</code> then will be inferred from the venue in the instrument ID.</li>
<li><strong>callback</strong> (<em>Callable</em> <em>[</em> <em>[</em><a href="../core/index.htm#posei_trader.core.UUID4"><em>UUID4</em></a> <em>]</em> <em>,</em> <em>None</em> <em>]</em> <em>,</em> <em>optional</em>) – The registered callback, to be called with the request ID when the response has
completed processing.</li>
<li><strong>update_catalog</strong> (<em>bool</em> <em>,</em> <em>optional</em>) – Whether to update a catalog with the received data.</li>
<li><strong>params</strong> (<em>dict</em> *[*<em>str</em> <em>,</em> <em>Any</em> <em>]</em> <em>,</em> <em>optional</em>) – Additional parameters potentially used by a specific client.</li>
</ul>
</li>
<li><strong>Returns:</strong>
The request_id for the request.</li>
<li><strong>Return type:</strong>
<a href="../core/index.htm#posei_trader.core.UUID4">UUID4</a></li>
<li><strong>Raises:</strong>
<ul>
<li><strong>ValueError</strong> – If start is not None and &gt; current timestamp (now).</li>
<li><strong>ValueError</strong> – If end is not None and &gt; current timestamp (now).</li>
<li><strong>ValueError</strong> – If start and end are not None and start is &gt;= end.</li>
<li><strong>TypeError</strong> – If callback is not None and not of type Callable.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="resetself--void">reset(self) → void<a href="#resetself--void" class="hash-link" aria-label="Direct link to reset(self) → void" title="Direct link to reset(self) → void">​</a></h4>
<p>Reset the component.</p>
<p>All stateful fields are reset to their initial value.</p>
<p>While executing on_reset() any exception will be logged and reraised, then the component
will remain in a <code>RESETTING</code> state.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-75">WARNING<a href="#warning-75" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>Do not override.</p>
<p>If the component is not in a valid state from which to execute this method,
then the component state will not change, and an error will be logged.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="resumeself--void">resume(self) → void<a href="#resumeself--void" class="hash-link" aria-label="Direct link to resume(self) → void" title="Direct link to resume(self) → void">​</a></h4>
<p>Resume the component.</p>
<p>While executing on_resume() any exception will be logged and reraised, then the component
will remain in a <code>RESUMING</code> state.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-76">WARNING<a href="#warning-76" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>Do not override.</p>
<p>If the component is not in a valid state from which to execute this method,
then the component state will not change, and an error will be logged.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="run_in_executorself-func-callable-any-tuple-argsnone-dict-kwargsnone">run_in_executor(self, func: Callable[..., Any], tuple args=None, dict kwargs=None)<a href="#run_in_executorself-func-callable-any-tuple-argsnone-dict-kwargsnone" class="hash-link" aria-label="Direct link to run_in_executor(self, func: Callable[..., Any], tuple args=None, dict kwargs=None)" title="Direct link to run_in_executor(self, func: Callable[..., Any], tuple args=None, dict kwargs=None)">​</a></h4>
<p>Schedules the callable func to be executed as fn(*args, **kwargs).</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>func</strong> (<em>Callable</em>) – The function to be executed.</li>
<li><strong>args</strong> (<em>positional arguments</em>) – The positional arguments for the call to func.</li>
<li><strong>kwargs</strong> (<em>arbitrary keyword arguments</em>) – The keyword arguments for the call to func.</li>
</ul>
</li>
<li><strong>Returns:</strong>
The unique task identifier for the execution.
This also corresponds to any future objects memory address.</li>
<li><strong>Return type:</strong>
<a href="../common/index.htm#posei_trader.common.executor.TaskId">TaskId</a></li>
<li><strong>Raises:</strong>
<strong>TypeError</strong> – If func is not of type Callable.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="saveself--dict">save(self) → dict<a href="#saveself--dict" class="hash-link" aria-label="Direct link to save(self) → dict" title="Direct link to save(self) → dict">​</a></h4>
<p>Return the actor/strategy state dictionary to be saved.</p>
<p>Calls on_save.</p>
<ul>
<li><strong>Returns:</strong>
The strategy state to save.</li>
<li><strong>Return type:</strong>
dict[str, bytes]</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-77">WARNING<a href="#warning-77" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>Exceptions raised will be caught, logged, and reraised.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="shutdown_systemself-str-reasonnone--void">shutdown_system(self, str reason=None) → void<a href="#shutdown_systemself-str-reasonnone--void" class="hash-link" aria-label="Direct link to shutdown_system(self, str reason=None) → void" title="Direct link to shutdown_system(self, str reason=None) → void">​</a></h4>
<p>Initiate a system-wide shutdown by generating and publishing a ShutdownSystem command.</p>
<p>The command is handled by the system’s PoseiKernel, which will invoke either stop (synchronously)
or stop_async (asynchronously) depending on the execution context and the presence of an active event loop.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>reason</strong> (<em>str</em> <em>,</em> <em>optional</em>) – The reason for issuing the shutdown command.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="spawn_limitself-order-primary-quantity-quantity-price-price-timeinforce-time_in_forcetimeinforcegtc-datetime-expire_timenone-bool-post_onlyfalse-bool-reduce_onlyfalse-quantity-display_qtynone-triggertype-emulation_triggertriggertypeno_trigger-list-tagsnone-bool-reduce_primarytrue--limitorder">spawn_limit(self, Order primary, Quantity quantity, Price price, TimeInForce time_in_force=TimeInForce.GTC, datetime expire_time=None, bool post_only=False, bool reduce_only=False, Quantity display_qty=None, TriggerType emulation_trigger=TriggerType.NO_TRIGGER, list tags=None, bool reduce_primary=True) → <a href="../model/orders/index.htm#posei_trader.model.orders.LimitOrder">LimitOrder</a><a href="#spawn_limitself-order-primary-quantity-quantity-price-price-timeinforce-time_in_forcetimeinforcegtc-datetime-expire_timenone-bool-post_onlyfalse-bool-reduce_onlyfalse-quantity-display_qtynone-triggertype-emulation_triggertriggertypeno_trigger-list-tagsnone-bool-reduce_primarytrue--limitorder" class="hash-link" aria-label="Direct link to spawn_limitself-order-primary-quantity-quantity-price-price-timeinforce-time_in_forcetimeinforcegtc-datetime-expire_timenone-bool-post_onlyfalse-bool-reduce_onlyfalse-quantity-display_qtynone-triggertype-emulation_triggertriggertypeno_trigger-list-tagsnone-bool-reduce_primarytrue--limitorder" title="Direct link to spawn_limitself-order-primary-quantity-quantity-price-price-timeinforce-time_in_forcetimeinforcegtc-datetime-expire_timenone-bool-post_onlyfalse-bool-reduce_onlyfalse-quantity-display_qtynone-triggertype-emulation_triggertriggertypeno_trigger-list-tagsnone-bool-reduce_primarytrue--limitorder">​</a></h4>
<p>Spawn a new <code>LIMIT</code> order from the given primary order.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>primary</strong> (<a href="../model/orders/index.htm#posei_trader.model.orders.Order"><em>Order</em></a>) – The primary order from which this order will spawn.</li>
<li><strong>quantity</strong> (<a href="../model/index.htm#posei_trader.model.Quantity"><em>Quantity</em></a>) – The spawned orders quantity (&gt; 0). Must be less than primary.quantity.</li>
<li><strong>price</strong> (<a href="../model/index.htm#posei_trader.model.Price"><em>Price</em></a>) – The spawned orders price.</li>
<li><strong>time_in_force</strong> (TimeInForce {<code>GTC</code>, <code>IOC</code>, <code>FOK</code>, <code>GTD</code>, <code>DAY</code>, <code>AT_THE_OPEN</code>, <code>AT_THE_CLOSE</code>}, default <code>GTC</code>) – The spawned orders time in force.</li>
<li><strong>expire_time</strong> (<em>datetime</em> <em>,</em> <em>optional</em>) – The spawned order expiration (for <code>GTD</code> orders).</li>
<li><strong>post_only</strong> (<em>bool</em> <em>,</em> <em>default False</em>) – If the spawned order will only provide liquidity (make a market).</li>
<li><strong>reduce_only</strong> (<em>bool</em> <em>,</em> <em>default False</em>) – If the spawned order carries the ‘reduce-only’ execution instruction.</li>
<li><strong>display_qty</strong> (<a href="../model/index.htm#posei_trader.model.Quantity"><em>Quantity</em></a> <em>,</em> <em>optional</em>) – The quantity of the spawned order to display on the public book (iceberg).</li>
<li><strong>emulation_trigger</strong> (TriggerType, default <code>NO_TRIGGER</code>) – The type of market price trigger to use for local order emulation.
<ul>
<li><code>NO_TRIGGER</code> (default): Disables local emulation; orders are sent directly to the venue.</li>
<li><code>DEFAULT</code> (the same as <code>BID_ASK</code>): Enables local order emulation by triggering orders based on bid/ask prices.
Additional trigger types are available. See the “Emulated Orders” section in the documentation for more details.</li>
</ul>
</li>
<li><strong>tags</strong> (<em>list</em> *[*<em>str</em> <em>]</em> <em>,</em> <em>optional</em>) – The custom user tags for the order.</li>
<li><strong>reduce_primary</strong> (<em>bool</em> <em>,</em> <em>default True</em>) – If the primary order quantity should be reduced by the given quantity.</li>
</ul>
</li>
<li><strong>Return type:</strong>
<a href="../model/orders/index.htm#posei_trader.model.orders.LimitOrder">LimitOrder</a></li>
<li><strong>Raises:</strong>
<ul>
<li><strong>ValueError</strong> – If primary.exec_algorithm_id is not equal to self.id.</li>
<li><strong>ValueError</strong> – If quantity is not positive (&gt; 0).</li>
<li><strong>ValueError</strong> – If time_in_force is <code>GTD</code> and expire_time &lt;= UNIX epoch.</li>
<li><strong>ValueError</strong> – If display_qty is negative (&lt; 0) or greater than quantity.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="spawn_marketself-order-primary-quantity-quantity-timeinforce-time_in_forcetimeinforcegtc-bool-reduce_onlyfalse-list-tagsnone-bool-reduce_primarytrue--marketorder">spawn_market(self, Order primary, Quantity quantity, TimeInForce time_in_force=TimeInForce.GTC, bool reduce_only=False, list tags=None, bool reduce_primary=True) → <a href="../model/orders/index.htm#posei_trader.model.orders.MarketOrder">MarketOrder</a><a href="#spawn_marketself-order-primary-quantity-quantity-timeinforce-time_in_forcetimeinforcegtc-bool-reduce_onlyfalse-list-tagsnone-bool-reduce_primarytrue--marketorder" class="hash-link" aria-label="Direct link to spawn_marketself-order-primary-quantity-quantity-timeinforce-time_in_forcetimeinforcegtc-bool-reduce_onlyfalse-list-tagsnone-bool-reduce_primarytrue--marketorder" title="Direct link to spawn_marketself-order-primary-quantity-quantity-timeinforce-time_in_forcetimeinforcegtc-bool-reduce_onlyfalse-list-tagsnone-bool-reduce_primarytrue--marketorder">​</a></h4>
<p>Spawn a new <code>MARKET</code> order from the given primary order.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>primary</strong> (<a href="../model/orders/index.htm#posei_trader.model.orders.Order"><em>Order</em></a>) – The primary order from which this order will spawn.</li>
<li><strong>quantity</strong> (<a href="../model/index.htm#posei_trader.model.Quantity"><em>Quantity</em></a>) – The spawned orders quantity (&gt; 0).</li>
<li><strong>time_in_force</strong> (TimeInForce {<code>GTC</code>, <code>IOC</code>, <code>FOK</code>, <code>DAY</code>, <code>AT_THE_OPEN</code>, <code>AT_THE_CLOSE</code>}, default <code>GTC</code>) – The spawned orders time in force. Often not applicable for market orders.</li>
<li><strong>reduce_only</strong> (<em>bool</em> <em>,</em> <em>default False</em>) – If the spawned order carries the ‘reduce-only’ execution instruction.</li>
<li><strong>tags</strong> (<em>list</em> *[*<em>str</em> <em>]</em> <em>,</em> <em>optional</em>) – The custom user tags for the order.</li>
<li><strong>reduce_primary</strong> (<em>bool</em> <em>,</em> <em>default True</em>) – If the primary order quantity should be reduced by the given quantity.</li>
</ul>
</li>
<li><strong>Return type:</strong>
<a href="../model/orders/index.htm#posei_trader.model.orders.MarketOrder">MarketOrder</a></li>
<li><strong>Raises:</strong>
<ul>
<li><strong>ValueError</strong> – If primary.exec_algorithm_id is not equal to self.id.</li>
<li><strong>ValueError</strong> – If quantity is not positive (&gt; 0).</li>
<li><strong>ValueError</strong> – If time_in_force is <code>GTD</code>.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="spawn_market_to_limitself-order-primary-quantity-quantity-timeinforce-time_in_forcetimeinforcegtc-datetime-expire_timenone-bool-reduce_onlyfalse-quantity-display_qtynone-triggertype-emulation_triggertriggertypeno_trigger-list-tagsnone-bool-reduce_primarytrue--markettolimitorder">spawn_market_to_limit(self, Order primary, Quantity quantity, TimeInForce time_in_force=TimeInForce.GTC, datetime expire_time=None, bool reduce_only=False, Quantity display_qty=None, TriggerType emulation_trigger=TriggerType.NO_TRIGGER, list tags=None, bool reduce_primary=True) → <a href="../model/orders/index.htm#posei_trader.model.orders.MarketToLimitOrder">MarketToLimitOrder</a><a href="#spawn_market_to_limitself-order-primary-quantity-quantity-timeinforce-time_in_forcetimeinforcegtc-datetime-expire_timenone-bool-reduce_onlyfalse-quantity-display_qtynone-triggertype-emulation_triggertriggertypeno_trigger-list-tagsnone-bool-reduce_primarytrue--markettolimitorder" class="hash-link" aria-label="Direct link to spawn_market_to_limitself-order-primary-quantity-quantity-timeinforce-time_in_forcetimeinforcegtc-datetime-expire_timenone-bool-reduce_onlyfalse-quantity-display_qtynone-triggertype-emulation_triggertriggertypeno_trigger-list-tagsnone-bool-reduce_primarytrue--markettolimitorder" title="Direct link to spawn_market_to_limitself-order-primary-quantity-quantity-timeinforce-time_in_forcetimeinforcegtc-datetime-expire_timenone-bool-reduce_onlyfalse-quantity-display_qtynone-triggertype-emulation_triggertriggertypeno_trigger-list-tagsnone-bool-reduce_primarytrue--markettolimitorder">​</a></h4>
<p>Spawn a new <code>MARKET_TO_LIMIT</code> order from the given primary order.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>primary</strong> (<a href="../model/orders/index.htm#posei_trader.model.orders.Order"><em>Order</em></a>) – The primary order from which this order will spawn.</li>
<li><strong>quantity</strong> (<a href="../model/index.htm#posei_trader.model.Quantity"><em>Quantity</em></a>) – The spawned orders quantity (&gt; 0). Must be less than primary.quantity.</li>
<li><strong>time_in_force</strong> (TimeInForce {<code>GTC</code>, <code>IOC</code>, <code>FOK</code>, <code>GTD</code>, <code>DAY</code>, <code>AT_THE_OPEN</code>, <code>AT_THE_CLOSE</code>}, default <code>GTC</code>) – The spawned orders time in force.</li>
<li><strong>expire_time</strong> (<em>datetime</em> <em>,</em> <em>optional</em>) – The spawned order expiration (for <code>GTD</code> orders).</li>
<li><strong>reduce_only</strong> (<em>bool</em> <em>,</em> <em>default False</em>) – If the spawned order carries the ‘reduce-only’ execution instruction.</li>
<li><strong>display_qty</strong> (<a href="../model/index.htm#posei_trader.model.Quantity"><em>Quantity</em></a> <em>,</em> <em>optional</em>) – The quantity of the spawned order to display on the public book (iceberg).</li>
<li><strong>emulation_trigger</strong> (TriggerType, default <code>NO_TRIGGER</code>) – The type of market price trigger to use for local order emulation.
<ul>
<li><code>NO_TRIGGER</code> (default): Disables local emulation; orders are sent directly to the venue.</li>
<li><code>DEFAULT</code> (the same as <code>BID_ASK</code>): Enables local order emulation by triggering orders based on bid/ask prices.
Additional trigger types are available. See the “Emulated Orders” section in the documentation for more details.</li>
</ul>
</li>
<li><strong>tags</strong> (<em>list</em> *[*<em>str</em> <em>]</em> <em>,</em> <em>optional</em>) – The custom user tags for the order.</li>
<li><strong>reduce_primary</strong> (<em>bool</em> <em>,</em> <em>default True</em>) – If the primary order quantity should be reduced by the given quantity.</li>
</ul>
</li>
<li><strong>Return type:</strong>
<a href="../model/orders/index.htm#posei_trader.model.orders.MarketToLimitOrder">MarketToLimitOrder</a></li>
<li><strong>Raises:</strong>
<ul>
<li><strong>ValueError</strong> – If primary.exec_algorithm_id is not equal to self.id.</li>
<li><strong>ValueError</strong> – If quantity is not positive (&gt; 0).</li>
<li><strong>ValueError</strong> – If time_in_force is <code>GTD</code> and expire_time &lt;= UNIX epoch.</li>
<li><strong>ValueError</strong> – If display_qty is negative (&lt; 0) or greater than quantity.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="startself--void">start(self) → void<a href="#startself--void" class="hash-link" aria-label="Direct link to start(self) → void" title="Direct link to start(self) → void">​</a></h4>
<p>Start the component.</p>
<p>While executing on_start() any exception will be logged and reraised, then the component
will remain in a <code>STARTING</code> state.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-78">WARNING<a href="#warning-78" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>Do not override.</p>
<p>If the component is not in a valid state from which to execute this method,
then the component state will not change, and an error will be logged.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="state">state<a href="#state" class="hash-link" aria-label="Direct link to state" title="Direct link to state">​</a></h4>
<p>ComponentState</p>
<p>Return the components current state.</p>
<ul>
<li><strong>Return type:</strong>
ComponentState</li>
<li><strong>Type:</strong>
Component.state</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="stopself--void">stop(self) → void<a href="#stopself--void" class="hash-link" aria-label="Direct link to stop(self) → void" title="Direct link to stop(self) → void">​</a></h4>
<p>Stop the component.</p>
<p>While executing on_stop() any exception will be logged and reraised, then the component
will remain in a <code>STOPPING</code> state.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-79">WARNING<a href="#warning-79" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>Do not override.</p>
<p>If the component is not in a valid state from which to execute this method,
then the component state will not change, and an error will be logged.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="submit_orderself-order-order--void">submit_order(self, Order order) → void<a href="#submit_orderself-order-order--void" class="hash-link" aria-label="Direct link to submit_order(self, Order order) → void" title="Direct link to submit_order(self, Order order) → void">​</a></h4>
<p>Submit the given order (may be the primary or spawned order).</p>
<p>A SubmitOrder command will be created and sent to the RiskEngine.</p>
<p>If the client order ID is duplicate, then the order will be denied.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>order</strong> (<a href="../model/orders/index.htm#posei_trader.model.orders.Order"><em>Order</em></a>) – The order to submit.</li>
<li><strong>parent_order_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.ClientOrderId"><em>ClientOrderId</em></a> <em>,</em> <em>optional</em>) – The parent client order identifier. If provided then will be considered a child order
of the parent.</li>
</ul>
</li>
<li><strong>Raises:</strong>
<ul>
<li><strong>ValueError</strong> – If order.status is not <code>INITIALIZED</code> or <code>RELEASED</code>.</li>
<li><strong>ValueError</strong> – If order.emulation_trigger is not <code>NO_TRIGGER</code>.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-80">WARNING<a href="#warning-80" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>If a position_id is passed and a position does not yet exist, then any
position opened by the order will have this position ID assigned. This may
not be what you intended.</p>
<p>Emulated orders cannot be sent from execution algorithms (intentionally constraining complexity).</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="subscribe_barsself-bartype-bar_type-clientid-client_idnone-bool-await_partialfalse-bool-update_catalogfalse-dict-paramsnone--void">subscribe_bars(self, BarType bar_type, ClientId client_id=None, bool await_partial=False, bool update_catalog=False, dict params=None) → void<a href="#subscribe_barsself-bartype-bar_type-clientid-client_idnone-bool-await_partialfalse-bool-update_catalogfalse-dict-paramsnone--void" class="hash-link" aria-label="Direct link to subscribe_bars(self, BarType bar_type, ClientId client_id=None, bool await_partial=False, bool update_catalog=False, dict params=None) → void" title="Direct link to subscribe_bars(self, BarType bar_type, ClientId client_id=None, bool await_partial=False, bool update_catalog=False, dict params=None) → void">​</a></h4>
<p>Subscribe to streaming Bar data for the given bar type.</p>
<p>Once subscribed, any matching bar data published on the message bus is forwarded
to the on_bar handler.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>bar_type</strong> (<a href="../model/data/index.htm#posei_trader.model.data.BarType"><em>BarType</em></a>) – The bar type to subscribe to.</li>
<li><strong>client_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.ClientId"><em>ClientId</em></a> <em>,</em> <em>optional</em>) – The specific client ID for the command.
If <code>None</code> then will be inferred from the venue in the instrument ID.</li>
<li><strong>await_partial</strong> (<em>bool</em> <em>,</em> <em>default False</em>) – If the bar aggregator should await the arrival of a historical partial bar prior
to actively aggregating new bars.</li>
<li><strong>update_catalog</strong> (<em>bool</em> <em>,</em> <em>optional</em>) – Whether to update a catalog with the received data.
Only useful when downloading data during a backtest.</li>
<li><strong>params</strong> (<em>dict</em> *[*<em>str</em> <em>,</em> <em>Any</em> <em>]</em> <em>,</em> <em>optional</em>) – Additional parameters potentially used by a specific client.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="subscribe_dataself-datatype-data_type-clientid-client_idnone-instrumentid-instrument_idnone-bool-update_catalogfalse-dict-paramsnone--void">subscribe_data(self, DataType data_type, ClientId client_id=None, InstrumentId instrument_id=None, bool update_catalog=False, dict params=None) → void<a href="#subscribe_dataself-datatype-data_type-clientid-client_idnone-instrumentid-instrument_idnone-bool-update_catalogfalse-dict-paramsnone--void" class="hash-link" aria-label="Direct link to subscribe_data(self, DataType data_type, ClientId client_id=None, InstrumentId instrument_id=None, bool update_catalog=False, dict params=None) → void" title="Direct link to subscribe_data(self, DataType data_type, ClientId client_id=None, InstrumentId instrument_id=None, bool update_catalog=False, dict params=None) → void">​</a></h4>
<p>Subscribe to data of the given data type.</p>
<p>Once subscribed, any matching data published on the message bus is forwarded
to the on_data handler.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>data_type</strong> (<a href="../model/data/index.htm#posei_trader.model.data.DataType"><em>DataType</em></a>) – The data type to subscribe to.</li>
<li><strong>client_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.ClientId"><em>ClientId</em></a> <em>,</em> <em>optional</em>) – The data client ID. If supplied then a Subscribe command will be
sent to the corresponding data client.</li>
<li><strong>update_catalog</strong> (<em>bool</em> <em>,</em> <em>optional</em>) – Whether to update a catalog with the received data.
Only useful when downloading data during a backtest.</li>
<li><strong>params</strong> (<em>dict</em> *[*<em>str</em> <em>,</em> <em>Any</em> <em>]</em> <em>,</em> <em>optional</em>) – Additional parameters potentially used by a specific client.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="subscribe_index_pricesself-instrumentid-instrument_id-clientid-client_idnone-dict-paramsnone--void">subscribe_index_prices(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) → void<a href="#subscribe_index_pricesself-instrumentid-instrument_id-clientid-client_idnone-dict-paramsnone--void" class="hash-link" aria-label="Direct link to subscribe_index_prices(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) → void" title="Direct link to subscribe_index_prices(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) → void">​</a></h4>
<p>Subscribe to streaming IndexPriceUpdate data for the given instrument ID.</p>
<p>Once subscribed, any matching index price updates published on the message bus are forwarded
to the on_index_price handler.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>instrument_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.InstrumentId"><em>InstrumentId</em></a>) – The instrument to subscribe to.</li>
<li><strong>client_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.ClientId"><em>ClientId</em></a> <em>,</em> <em>optional</em>) – The specific client ID for the command.
If <code>None</code> then will be inferred from the venue in the instrument ID.</li>
<li><strong>params</strong> (<em>dict</em> *[*<em>str</em> <em>,</em> <em>Any</em> <em>]</em> <em>,</em> <em>optional</em>) – Additional parameters potentially used by a specific client.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="subscribe_instrumentself-instrumentid-instrument_id-clientid-client_idnone-dict-paramsnone--void">subscribe_instrument(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) → void<a href="#subscribe_instrumentself-instrumentid-instrument_id-clientid-client_idnone-dict-paramsnone--void" class="hash-link" aria-label="Direct link to subscribe_instrument(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) → void" title="Direct link to subscribe_instrument(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) → void">​</a></h4>
<p>Subscribe to update Instrument data for the given instrument ID.</p>
<p>Once subscribed, any matching instrument data published on the message bus is forwarded
to the on_instrument handler.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>instrument_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.InstrumentId"><em>InstrumentId</em></a>) – The instrument ID for the subscription.</li>
<li><strong>client_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.ClientId"><em>ClientId</em></a> <em>,</em> <em>optional</em>) – The specific client ID for the command.
If <code>None</code> then will be inferred from the venue in the instrument ID.</li>
<li><strong>params</strong> (<em>dict</em> *[*<em>str</em> <em>,</em> <em>Any</em> <em>]</em> <em>,</em> <em>optional</em>) – Additional parameters potentially used by a specific client.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="subscribe_instrument_closeself-instrumentid-instrument_id-clientid-client_idnone-dict-paramsnone--void">subscribe_instrument_close(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) → void<a href="#subscribe_instrument_closeself-instrumentid-instrument_id-clientid-client_idnone-dict-paramsnone--void" class="hash-link" aria-label="Direct link to subscribe_instrument_close(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) → void" title="Direct link to subscribe_instrument_close(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) → void">​</a></h4>
<p>Subscribe to close updates for the given instrument ID.</p>
<p>Once subscribed, any matching instrument close data published on the message bus is forwarded
to the on_instrument_close handler.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>instrument_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.InstrumentId"><em>InstrumentId</em></a>) – The instrument to subscribe to status updates for.</li>
<li><strong>client_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.ClientId"><em>ClientId</em></a> <em>,</em> <em>optional</em>) – The specific client ID for the command.
If <code>None</code> then will be inferred from the venue in the instrument ID.</li>
<li><strong>params</strong> (<em>dict</em> *[*<em>str</em> <em>,</em> <em>Any</em> <em>]</em> <em>,</em> <em>optional</em>) – Additional parameters potentially used by a specific client.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="subscribe_instrument_statusself-instrumentid-instrument_id-clientid-client_idnone-dict-paramsnone--void">subscribe_instrument_status(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) → void<a href="#subscribe_instrument_statusself-instrumentid-instrument_id-clientid-client_idnone-dict-paramsnone--void" class="hash-link" aria-label="Direct link to subscribe_instrument_status(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) → void" title="Direct link to subscribe_instrument_status(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) → void">​</a></h4>
<p>Subscribe to status updates for the given instrument ID.</p>
<p>Once subscribed, any matching instrument status data published on the message bus is forwarded
to the on_instrument_status handler.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>instrument_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.InstrumentId"><em>InstrumentId</em></a>) – The instrument to subscribe to status updates for.</li>
<li><strong>client_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.ClientId"><em>ClientId</em></a> <em>,</em> <em>optional</em>) – The specific client ID for the command.
If <code>None</code> then will be inferred from the venue in the instrument ID.</li>
<li><strong>params</strong> (<em>dict</em> *[*<em>str</em> <em>,</em> <em>Any</em> <em>]</em> <em>,</em> <em>optional</em>) – Additional parameters potentially used by a specific client.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="subscribe_instrumentsself-venue-venue-clientid-client_idnone-dict-paramsnone--void">subscribe_instruments(self, Venue venue, ClientId client_id=None, dict params=None) → void<a href="#subscribe_instrumentsself-venue-venue-clientid-client_idnone-dict-paramsnone--void" class="hash-link" aria-label="Direct link to subscribe_instruments(self, Venue venue, ClientId client_id=None, dict params=None) → void" title="Direct link to subscribe_instruments(self, Venue venue, ClientId client_id=None, dict params=None) → void">​</a></h4>
<p>Subscribe to update Instrument data for the given venue.</p>
<p>Once subscribed, any matching instrument data published on the message bus is forwarded
the on_instrument handler.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>venue</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.Venue"><em>Venue</em></a>) – The venue for the subscription.</li>
<li><strong>client_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.ClientId"><em>ClientId</em></a> <em>,</em> <em>optional</em>) – The specific client ID for the command.
If <code>None</code> then will be inferred from the venue.</li>
<li><strong>params</strong> (<em>dict</em> *[*<em>str</em> <em>,</em> <em>Any</em> <em>]</em> <em>,</em> <em>optional</em>) – Additional parameters potentially used by a specific client.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="subscribe_mark_pricesself-instrumentid-instrument_id-clientid-client_idnone-dict-paramsnone--void">subscribe_mark_prices(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) → void<a href="#subscribe_mark_pricesself-instrumentid-instrument_id-clientid-client_idnone-dict-paramsnone--void" class="hash-link" aria-label="Direct link to subscribe_mark_prices(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) → void" title="Direct link to subscribe_mark_prices(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) → void">​</a></h4>
<p>Subscribe to streaming MarkPriceUpdate data for the given instrument ID.</p>
<p>Once subscribed, any matching mark price updates published on the message bus are forwarded
to the on_mark_price handler.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>instrument_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.InstrumentId"><em>InstrumentId</em></a>) – The instrument to subscribe to.</li>
<li><strong>client_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.ClientId"><em>ClientId</em></a> <em>,</em> <em>optional</em>) – The specific client ID for the command.
If <code>None</code> then will be inferred from the venue in the instrument ID.</li>
<li><strong>params</strong> (<em>dict</em> *[*<em>str</em> <em>,</em> <em>Any</em> <em>]</em> <em>,</em> <em>optional</em>) – Additional parameters potentially used by a specific client.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="subscribe_order_book_at_intervalself-instrumentid-instrument_id-booktype-book_typebooktypel2_mbp-int-depth0-int-interval_ms1000-clientid-client_idnone-bool-managedtrue-dict-paramsnone--void">subscribe_order_book_at_interval(self, InstrumentId instrument_id, BookType book_type=BookType.L2_MBP, int depth=0, int interval_ms=1000, ClientId client_id=None, bool managed=True, dict params=None) → void<a href="#subscribe_order_book_at_intervalself-instrumentid-instrument_id-booktype-book_typebooktypel2_mbp-int-depth0-int-interval_ms1000-clientid-client_idnone-bool-managedtrue-dict-paramsnone--void" class="hash-link" aria-label="Direct link to subscribe_order_book_at_interval(self, InstrumentId instrument_id, BookType book_type=BookType.L2_MBP, int depth=0, int interval_ms=1000, ClientId client_id=None, bool managed=True, dict params=None) → void" title="Direct link to subscribe_order_book_at_interval(self, InstrumentId instrument_id, BookType book_type=BookType.L2_MBP, int depth=0, int interval_ms=1000, ClientId client_id=None, bool managed=True, dict params=None) → void">​</a></h4>
<p>Subscribe to an OrderBook at a specified interval for the given instrument ID.</p>
<p>Once subscribed, any matching order book updates published on the message bus are forwarded
to the on_order_book handler.</p>
<p>The DataEngine will only maintain one order book for each instrument.
Because of this - the level, depth and params for the stream will be set
as per the last subscription request (this will also affect all subscribers).</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>instrument_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.InstrumentId"><em>InstrumentId</em></a>) – The order book instrument ID to subscribe to.</li>
<li><strong>book_type</strong> (BookType {<code>L1_MBP</code>, <code>L2_MBP</code>, <code>L3_MBO</code>}) – The order book type.</li>
<li><strong>depth</strong> (<em>int</em> <em>,</em> <em>optional</em>) – The maximum depth for the order book. A depth of 0 is maximum depth.</li>
<li><strong>interval_ms</strong> (<em>int</em> <em>,</em> <em>default 1000</em>) – The order book snapshot interval (milliseconds).</li>
<li><strong>client_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.ClientId"><em>ClientId</em></a> <em>,</em> <em>optional</em>) – The specific client ID for the command.
If <code>None</code> then will be inferred from the venue in the instrument ID.</li>
<li><strong>managed</strong> (<em>bool</em> <em>,</em> <em>default True</em>) – If an order book should be managed by the data engine based on the subscribed feed.</li>
<li><strong>params</strong> (<em>dict</em> *[*<em>str</em> <em>,</em> <em>Any</em> <em>]</em> <em>,</em> <em>optional</em>) – Additional parameters potentially used by a specific client.</li>
</ul>
</li>
<li><strong>Raises:</strong>
<ul>
<li><strong>ValueError</strong> – If depth is negative (&lt; 0).</li>
<li><strong>ValueError</strong> – If interval_ms is not positive (&gt; 0).</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-81">WARNING<a href="#warning-81" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>Consider subscribing to order book deltas if you need intervals less than 100 milliseconds.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="subscribe_order_book_deltasself-instrumentid-instrument_id-booktype-book_typebooktypel2_mbp-int-depth0-clientid-client_idnone-bool-managedtrue-bool-pyo3_conversionfalse-dict-paramsnone--void">subscribe_order_book_deltas(self, InstrumentId instrument_id, BookType book_type=BookType.L2_MBP, int depth=0, ClientId client_id=None, bool managed=True, bool pyo3_conversion=False, dict params=None) → void<a href="#subscribe_order_book_deltasself-instrumentid-instrument_id-booktype-book_typebooktypel2_mbp-int-depth0-clientid-client_idnone-bool-managedtrue-bool-pyo3_conversionfalse-dict-paramsnone--void" class="hash-link" aria-label="Direct link to subscribe_order_book_deltas(self, InstrumentId instrument_id, BookType book_type=BookType.L2_MBP, int depth=0, ClientId client_id=None, bool managed=True, bool pyo3_conversion=False, dict params=None) → void" title="Direct link to subscribe_order_book_deltas(self, InstrumentId instrument_id, BookType book_type=BookType.L2_MBP, int depth=0, ClientId client_id=None, bool managed=True, bool pyo3_conversion=False, dict params=None) → void">​</a></h4>
<p>Subscribe to the order book data stream, being a snapshot then deltas
for the given instrument ID.</p>
<p>Once subscribed, any matching order book data published on the message bus is forwarded
to the on_order_book_deltas handler.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>instrument_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.InstrumentId"><em>InstrumentId</em></a>) – The order book instrument ID to subscribe to.</li>
<li><strong>book_type</strong> (BookType {<code>L1_MBP</code>, <code>L2_MBP</code>, <code>L3_MBO</code>}) – The order book type.</li>
<li><strong>depth</strong> (<em>int</em> <em>,</em> <em>optional</em>) – The maximum depth for the order book. A depth of 0 is maximum depth.</li>
<li><strong>client_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.ClientId"><em>ClientId</em></a> <em>,</em> <em>optional</em>) – The specific client ID for the command.
If <code>None</code> then will be inferred from the venue in the instrument ID.</li>
<li><strong>managed</strong> (<em>bool</em> <em>,</em> <em>default True</em>) – If an order book should be managed by the data engine based on the subscribed feed.</li>
<li><strong>pyo3_conversion</strong> (<em>bool</em> <em>,</em> <em>default False</em>) – If received deltas should be converted to nautilus_pyo3.OrderBookDeltas
prior to being passed to the on_order_book_deltas handler.</li>
<li><strong>params</strong> (<em>dict</em> *[*<em>str</em> <em>,</em> <em>Any</em> <em>]</em> <em>,</em> <em>optional</em>) – Additional parameters potentially used by a specific client.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="subscribe_order_book_depthself-instrumentid-instrument_id-booktype-book_typebooktypel2_mbp-int-depth0-clientid-client_idnone-bool-managedtrue-bool-pyo3_conversionfalse-dict-paramsnone--void">subscribe_order_book_depth(self, InstrumentId instrument_id, BookType book_type=BookType.L2_MBP, int depth=0, ClientId client_id=None, bool managed=True, bool pyo3_conversion=False, dict params=None) → void<a href="#subscribe_order_book_depthself-instrumentid-instrument_id-booktype-book_typebooktypel2_mbp-int-depth0-clientid-client_idnone-bool-managedtrue-bool-pyo3_conversionfalse-dict-paramsnone--void" class="hash-link" aria-label="Direct link to subscribe_order_book_depth(self, InstrumentId instrument_id, BookType book_type=BookType.L2_MBP, int depth=0, ClientId client_id=None, bool managed=True, bool pyo3_conversion=False, dict params=None) → void" title="Direct link to subscribe_order_book_depth(self, InstrumentId instrument_id, BookType book_type=BookType.L2_MBP, int depth=0, ClientId client_id=None, bool managed=True, bool pyo3_conversion=False, dict params=None) → void">​</a></h4>
<p>Subscribe to the order book depth stream for the given instrument ID.</p>
<p>Once subscribed, any matching order book data published on the message bus is forwarded
to the on_order_book_depth handler.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>instrument_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.InstrumentId"><em>InstrumentId</em></a>) – The order book instrument ID to subscribe to.</li>
<li><strong>book_type</strong> (BookType {<code>L1_MBP</code>, <code>L2_MBP</code>, <code>L3_MBO</code>}) – The order book type.</li>
<li><strong>client_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.ClientId"><em>ClientId</em></a> <em>,</em> <em>optional</em>) – The specific client ID for the command.
If <code>None</code> then will be inferred from the venue in the instrument ID.</li>
<li><strong>managed</strong> (<em>bool</em> <em>,</em> <em>default True</em>) – If an order book should be managed by the data engine based on the subscribed feed.</li>
<li><strong>pyo3_conversion</strong> (<em>bool</em> <em>,</em> <em>default False</em>) – If received deltas should be converted to nautilus_pyo3.OrderBookDepth
prior to being passed to the on_order_book_depth handler.</li>
<li><strong>params</strong> (<em>dict</em> *[*<em>str</em> <em>,</em> <em>Any</em> <em>]</em> <em>,</em> <em>optional</em>) – Additional parameters potentially used by a specific client.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="subscribe_quote_ticksself-instrumentid-instrument_id-clientid-client_idnone-bool-update_catalogfalse-dict-paramsnone--void">subscribe_quote_ticks(self, InstrumentId instrument_id, ClientId client_id=None, bool update_catalog=False, dict params=None) → void<a href="#subscribe_quote_ticksself-instrumentid-instrument_id-clientid-client_idnone-bool-update_catalogfalse-dict-paramsnone--void" class="hash-link" aria-label="Direct link to subscribe_quote_ticks(self, InstrumentId instrument_id, ClientId client_id=None, bool update_catalog=False, dict params=None) → void" title="Direct link to subscribe_quote_ticks(self, InstrumentId instrument_id, ClientId client_id=None, bool update_catalog=False, dict params=None) → void">​</a></h4>
<p>Subscribe to streaming QuoteTick data for the given instrument ID.</p>
<p>Once subscribed, any matching quote tick data published on the message bus is forwarded
to the on_quote_tick handler.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>instrument_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.InstrumentId"><em>InstrumentId</em></a>) – The tick instrument to subscribe to.</li>
<li><strong>client_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.ClientId"><em>ClientId</em></a> <em>,</em> <em>optional</em>) – The specific client ID for the command.
If <code>None</code> then will be inferred from the venue in the instrument ID.</li>
<li><strong>update_catalog</strong> (<em>bool</em> <em>,</em> <em>optional</em>) – Whether to update a catalog with the received data.
Only useful when downloading data during a backtest.</li>
<li><strong>params</strong> (<em>dict</em> *[*<em>str</em> <em>,</em> <em>Any</em> <em>]</em> <em>,</em> <em>optional</em>) – Additional parameters potentially used by a specific client.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="subscribe_signalself-str-name--void">subscribe_signal(self, str name=&#x27;&#x27;) → void<a href="#subscribe_signalself-str-name--void" class="hash-link" aria-label="Direct link to subscribe_signal(self, str name=&#x27;&#x27;) → void" title="Direct link to subscribe_signal(self, str name=&#x27;&#x27;) → void">​</a></h4>
<p>Subscribe to a specific signal by name, or to all signals if no name is provided.</p>
<p>Once subscribed, any matching signal data published on the message bus is forwarded
to the on_signal handler.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>name</strong> (<em>str</em> <em>,</em> <em>optional</em>) – The name of the signal to subscribe to. If not provided or an empty
string is passed, the subscription will include all signals.
The signal name is case-insensitive and will be capitalized
(e.g., ‘example’ becomes ‘SignalExample*’).</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="subscribe_trade_ticksself-instrumentid-instrument_id-clientid-client_idnone-bool-update_catalogfalse-dict-paramsnone--void">subscribe_trade_ticks(self, InstrumentId instrument_id, ClientId client_id=None, bool update_catalog=False, dict params=None) → void<a href="#subscribe_trade_ticksself-instrumentid-instrument_id-clientid-client_idnone-bool-update_catalogfalse-dict-paramsnone--void" class="hash-link" aria-label="Direct link to subscribe_trade_ticks(self, InstrumentId instrument_id, ClientId client_id=None, bool update_catalog=False, dict params=None) → void" title="Direct link to subscribe_trade_ticks(self, InstrumentId instrument_id, ClientId client_id=None, bool update_catalog=False, dict params=None) → void">​</a></h4>
<p>Subscribe to streaming TradeTick data for the given instrument ID.</p>
<p>Once subscribed, any matching trade tick data published on the message bus is forwarded
to the on_trade_tick handler.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>instrument_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.InstrumentId"><em>InstrumentId</em></a>) – The tick instrument to subscribe to.</li>
<li><strong>client_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.ClientId"><em>ClientId</em></a> <em>,</em> <em>optional</em>) – The specific client ID for the command.
If <code>None</code> then will be inferred from the venue in the instrument ID.</li>
<li><strong>update_catalog</strong> (<em>bool</em> <em>,</em> <em>optional</em>) – Whether to update a catalog with the received data.
Only useful when downloading data during a backtest.</li>
<li><strong>params</strong> (<em>dict</em> *[*<em>str</em> <em>,</em> <em>Any</em> <em>]</em> <em>,</em> <em>optional</em>) – Additional parameters potentially used by a specific client.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="to_importable_configself--importableexecalgorithmconfig">to_importable_config(self) → <a href="../config/index.htm#posei_trader.execution.config.ImportableExecAlgorithmConfig">ImportableExecAlgorithmConfig</a><a href="#to_importable_configself--importableexecalgorithmconfig" class="hash-link" aria-label="Direct link to to_importable_configself--importableexecalgorithmconfig" title="Direct link to to_importable_configself--importableexecalgorithmconfig">​</a></h4>
<p>Returns an importable configuration for this execution algorithm.</p>
<ul>
<li><strong>Return type:</strong>
<a href="../config/index.htm#posei_trader.execution.config.ImportableExecAlgorithmConfig">ImportableExecAlgorithmConfig</a></li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="trader_id">trader_id<a href="#trader_id" class="hash-link" aria-label="Direct link to trader_id" title="Direct link to trader_id">​</a></h4>
<p>The trader ID associated with the component.</p>
<ul>
<li><strong>Returns:</strong>
TraderId</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="type">type<a href="#type" class="hash-link" aria-label="Direct link to type" title="Direct link to type">​</a></h4>
<p>The components type.</p>
<ul>
<li><strong>Returns:</strong>
type</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="unsubscribe_barsself-bartype-bar_type-clientid-client_idnone-dict-paramsnone--void">unsubscribe_bars(self, BarType bar_type, ClientId client_id=None, dict params=None) → void<a href="#unsubscribe_barsself-bartype-bar_type-clientid-client_idnone-dict-paramsnone--void" class="hash-link" aria-label="Direct link to unsubscribe_bars(self, BarType bar_type, ClientId client_id=None, dict params=None) → void" title="Direct link to unsubscribe_bars(self, BarType bar_type, ClientId client_id=None, dict params=None) → void">​</a></h4>
<p>Unsubscribe from streaming Bar data for the given bar type.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>bar_type</strong> (<a href="../model/data/index.htm#posei_trader.model.data.BarType"><em>BarType</em></a>) – The bar type to unsubscribe from.</li>
<li><strong>client_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.ClientId"><em>ClientId</em></a> <em>,</em> <em>optional</em>) – The specific client ID for the command.
If <code>None</code> then will be inferred from the venue in the instrument ID.</li>
<li><strong>params</strong> (<em>dict</em> *[*<em>str</em> <em>,</em> <em>Any</em> <em>]</em> <em>,</em> <em>optional</em>) – Additional parameters potentially used by a specific client.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="unsubscribe_dataself-datatype-data_type-clientid-client_idnone-instrumentid-instrument_idnone-dict-paramsnone--void">unsubscribe_data(self, DataType data_type, ClientId client_id=None, InstrumentId instrument_id=None, dict params=None) → void<a href="#unsubscribe_dataself-datatype-data_type-clientid-client_idnone-instrumentid-instrument_idnone-dict-paramsnone--void" class="hash-link" aria-label="Direct link to unsubscribe_data(self, DataType data_type, ClientId client_id=None, InstrumentId instrument_id=None, dict params=None) → void" title="Direct link to unsubscribe_data(self, DataType data_type, ClientId client_id=None, InstrumentId instrument_id=None, dict params=None) → void">​</a></h4>
<p>Unsubscribe from data of the given data type.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>data_type</strong> (<a href="../model/data/index.htm#posei_trader.model.data.DataType"><em>DataType</em></a>) – The data type to unsubscribe from.</li>
<li><strong>client_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.ClientId"><em>ClientId</em></a> <em>,</em> <em>optional</em>) – The data client ID. If supplied then an Unsubscribe command will
be sent to the data client.</li>
<li><strong>params</strong> (<em>dict</em> *[*<em>str</em> <em>,</em> <em>Any</em> <em>]</em> <em>,</em> <em>optional</em>) – Additional parameters potentially used by a specific client.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="unsubscribe_index_pricesself-instrumentid-instrument_id-clientid-client_idnone-dict-paramsnone--void">unsubscribe_index_prices(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) → void<a href="#unsubscribe_index_pricesself-instrumentid-instrument_id-clientid-client_idnone-dict-paramsnone--void" class="hash-link" aria-label="Direct link to unsubscribe_index_prices(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) → void" title="Direct link to unsubscribe_index_prices(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) → void">​</a></h4>
<p>Unsubscribe from streaming IndexPriceUpdate data for the given instrument ID.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>instrument_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.InstrumentId"><em>InstrumentId</em></a>) – The instrument to subscribe to.</li>
<li><strong>client_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.ClientId"><em>ClientId</em></a> <em>,</em> <em>optional</em>) – The specific client ID for the command.
If <code>None</code> then will be inferred from the venue in the instrument ID.</li>
<li><strong>params</strong> (<em>dict</em> *[*<em>str</em> <em>,</em> <em>Any</em> <em>]</em> <em>,</em> <em>optional</em>) – Additional parameters potentially used by a specific client.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="unsubscribe_instrumentself-instrumentid-instrument_id-clientid-client_idnone-dict-paramsnone--void">unsubscribe_instrument(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) → void<a href="#unsubscribe_instrumentself-instrumentid-instrument_id-clientid-client_idnone-dict-paramsnone--void" class="hash-link" aria-label="Direct link to unsubscribe_instrument(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) → void" title="Direct link to unsubscribe_instrument(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) → void">​</a></h4>
<p>Unsubscribe from update Instrument data for the given instrument ID.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>instrument_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.InstrumentId"><em>InstrumentId</em></a>) – The instrument to unsubscribe from.</li>
<li><strong>client_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.ClientId"><em>ClientId</em></a> <em>,</em> <em>optional</em>) – The specific client ID for the command.
If <code>None</code> then will be inferred from the venue in the instrument ID.</li>
<li><strong>params</strong> (<em>dict</em> *[*<em>str</em> <em>,</em> <em>Any</em> <em>]</em> <em>,</em> <em>optional</em>) – Additional parameters potentially used by a specific client.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="unsubscribe_instrument_statusself-instrumentid-instrument_id-clientid-client_idnone-dict-paramsnone--void">unsubscribe_instrument_status(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) → void<a href="#unsubscribe_instrument_statusself-instrumentid-instrument_id-clientid-client_idnone-dict-paramsnone--void" class="hash-link" aria-label="Direct link to unsubscribe_instrument_status(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) → void" title="Direct link to unsubscribe_instrument_status(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) → void">​</a></h4>
<p>Unsubscribe to status updates of the given venue.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>instrument_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.InstrumentId"><em>InstrumentId</em></a>) – The instrument to unsubscribe to status updates for.</li>
<li><strong>client_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.ClientId"><em>ClientId</em></a> <em>,</em> <em>optional</em>) – The specific client ID for the command.
If <code>None</code> then will be inferred from the venue.</li>
<li><strong>params</strong> (<em>dict</em> *[*<em>str</em> <em>,</em> <em>Any</em> <em>]</em> <em>,</em> <em>optional</em>) – Additional parameters potentially used by a specific client.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="unsubscribe_instrumentsself-venue-venue-clientid-client_idnone-dict-paramsnone--void">unsubscribe_instruments(self, Venue venue, ClientId client_id=None, dict params=None) → void<a href="#unsubscribe_instrumentsself-venue-venue-clientid-client_idnone-dict-paramsnone--void" class="hash-link" aria-label="Direct link to unsubscribe_instruments(self, Venue venue, ClientId client_id=None, dict params=None) → void" title="Direct link to unsubscribe_instruments(self, Venue venue, ClientId client_id=None, dict params=None) → void">​</a></h4>
<p>Unsubscribe from update Instrument data for the given venue.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>venue</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.Venue"><em>Venue</em></a>) – The venue for the subscription.</li>
<li><strong>client_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.ClientId"><em>ClientId</em></a> <em>,</em> <em>optional</em>) – The specific client ID for the command.
If <code>None</code> then will be inferred from the venue.</li>
<li><strong>params</strong> (<em>dict</em> *[*<em>str</em> <em>,</em> <em>Any</em> <em>]</em> <em>,</em> <em>optional</em>) – Additional parameters potentially used by a specific client.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="unsubscribe_mark_pricesself-instrumentid-instrument_id-clientid-client_idnone-dict-paramsnone--void">unsubscribe_mark_prices(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) → void<a href="#unsubscribe_mark_pricesself-instrumentid-instrument_id-clientid-client_idnone-dict-paramsnone--void" class="hash-link" aria-label="Direct link to unsubscribe_mark_prices(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) → void" title="Direct link to unsubscribe_mark_prices(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) → void">​</a></h4>
<p>Unsubscribe from streaming MarkPriceUpdate data for the given instrument ID.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>instrument_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.InstrumentId"><em>InstrumentId</em></a>) – The instrument to subscribe to.</li>
<li><strong>client_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.ClientId"><em>ClientId</em></a> <em>,</em> <em>optional</em>) – The specific client ID for the command.
If <code>None</code> then will be inferred from the venue in the instrument ID.</li>
<li><strong>params</strong> (<em>dict</em> *[*<em>str</em> <em>,</em> <em>Any</em> <em>]</em> <em>,</em> <em>optional</em>) – Additional parameters potentially used by a specific client.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="unsubscribe_order_book_at_intervalself-instrumentid-instrument_id-int-interval_ms1000-clientid-client_idnone-dict-paramsnone--void">unsubscribe_order_book_at_interval(self, InstrumentId instrument_id, int interval_ms=1000, ClientId client_id=None, dict params=None) → void<a href="#unsubscribe_order_book_at_intervalself-instrumentid-instrument_id-int-interval_ms1000-clientid-client_idnone-dict-paramsnone--void" class="hash-link" aria-label="Direct link to unsubscribe_order_book_at_interval(self, InstrumentId instrument_id, int interval_ms=1000, ClientId client_id=None, dict params=None) → void" title="Direct link to unsubscribe_order_book_at_interval(self, InstrumentId instrument_id, int interval_ms=1000, ClientId client_id=None, dict params=None) → void">​</a></h4>
<p>Unsubscribe from an OrderBook at a specified interval for the given instrument ID.</p>
<p>The interval must match the previously subscribed interval.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>instrument_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.InstrumentId"><em>InstrumentId</em></a>) – The order book instrument to subscribe to.</li>
<li><strong>interval_ms</strong> (<em>int</em> <em>,</em> <em>default 1000</em>) – The order book snapshot interval (milliseconds).</li>
<li><strong>client_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.ClientId"><em>ClientId</em></a> <em>,</em> <em>optional</em>) – The specific client ID for the command.
If <code>None</code> then will be inferred from the venue in the instrument ID.</li>
<li><strong>params</strong> (<em>dict</em> *[*<em>str</em> <em>,</em> <em>Any</em> <em>]</em> <em>,</em> <em>optional</em>) – Additional parameters potentially used by a specific client.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="unsubscribe_order_book_deltasself-instrumentid-instrument_id-clientid-client_idnone-dict-paramsnone--void">unsubscribe_order_book_deltas(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) → void<a href="#unsubscribe_order_book_deltasself-instrumentid-instrument_id-clientid-client_idnone-dict-paramsnone--void" class="hash-link" aria-label="Direct link to unsubscribe_order_book_deltas(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) → void" title="Direct link to unsubscribe_order_book_deltas(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) → void">​</a></h4>
<p>Unsubscribe the order book deltas stream for the given instrument ID.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>instrument_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.InstrumentId"><em>InstrumentId</em></a>) – The order book instrument to subscribe to.</li>
<li><strong>client_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.ClientId"><em>ClientId</em></a> <em>,</em> <em>optional</em>) – The specific client ID for the command.
If <code>None</code> then will be inferred from the venue in the instrument ID.</li>
<li><strong>params</strong> (<em>dict</em> *[*<em>str</em> <em>,</em> <em>Any</em> <em>]</em> <em>,</em> <em>optional</em>) – Additional parameters potentially used by a specific client.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="unsubscribe_order_book_depthself-instrumentid-instrument_id-clientid-client_idnone-dict-paramsnone--void">unsubscribe_order_book_depth(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) → void<a href="#unsubscribe_order_book_depthself-instrumentid-instrument_id-clientid-client_idnone-dict-paramsnone--void" class="hash-link" aria-label="Direct link to unsubscribe_order_book_depth(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) → void" title="Direct link to unsubscribe_order_book_depth(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) → void">​</a></h4>
<p>Unsubscribe the order book depth stream for the given instrument ID.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>instrument_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.InstrumentId"><em>InstrumentId</em></a>) – The order book instrument to subscribe to.</li>
<li><strong>client_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.ClientId"><em>ClientId</em></a> <em>,</em> <em>optional</em>) – The specific client ID for the command.
If <code>None</code> then will be inferred from the venue in the instrument ID.</li>
<li><strong>params</strong> (<em>dict</em> *[*<em>str</em> <em>,</em> <em>Any</em> <em>]</em> <em>,</em> <em>optional</em>) – Additional parameters potentially used by a specific client.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="unsubscribe_quote_ticksself-instrumentid-instrument_id-clientid-client_idnone-dict-paramsnone--void">unsubscribe_quote_ticks(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) → void<a href="#unsubscribe_quote_ticksself-instrumentid-instrument_id-clientid-client_idnone-dict-paramsnone--void" class="hash-link" aria-label="Direct link to unsubscribe_quote_ticks(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) → void" title="Direct link to unsubscribe_quote_ticks(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) → void">​</a></h4>
<p>Unsubscribe from streaming QuoteTick data for the given instrument ID.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>instrument_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.InstrumentId"><em>InstrumentId</em></a>) – The tick instrument to unsubscribe from.</li>
<li><strong>client_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.ClientId"><em>ClientId</em></a> <em>,</em> <em>optional</em>) – The specific client ID for the command.
If <code>None</code> then will be inferred from the venue in the instrument ID.</li>
<li><strong>params</strong> (<em>dict</em> *[*<em>str</em> <em>,</em> <em>Any</em> <em>]</em> <em>,</em> <em>optional</em>) – Additional parameters potentially used by a specific client.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="unsubscribe_trade_ticksself-instrumentid-instrument_id-clientid-client_idnone-dict-paramsnone--void">unsubscribe_trade_ticks(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) → void<a href="#unsubscribe_trade_ticksself-instrumentid-instrument_id-clientid-client_idnone-dict-paramsnone--void" class="hash-link" aria-label="Direct link to unsubscribe_trade_ticks(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) → void" title="Direct link to unsubscribe_trade_ticks(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) → void">​</a></h4>
<p>Unsubscribe from streaming TradeTick data for the given instrument ID.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>instrument_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.InstrumentId"><em>InstrumentId</em></a>) – The tick instrument ID to unsubscribe from.</li>
<li><strong>client_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.ClientId"><em>ClientId</em></a> <em>,</em> <em>optional</em>) – The specific client ID for the command.
If <code>None</code> then will be inferred from the venue in the instrument ID.</li>
<li><strong>params</strong> (<em>dict</em> *[*<em>str</em> <em>,</em> <em>Any</em> <em>]</em> <em>,</em> <em>optional</em>) – Additional parameters potentially used by a specific client.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="update_syntheticself-syntheticinstrument-synthetic--void">update_synthetic(self, SyntheticInstrument synthetic) → void<a href="#update_syntheticself-syntheticinstrument-synthetic--void" class="hash-link" aria-label="Direct link to update_synthetic(self, SyntheticInstrument synthetic) → void" title="Direct link to update_synthetic(self, SyntheticInstrument synthetic) → void">​</a></h4>
<p>Update the synthetic instrument in the cache.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>synthetic</strong> (<a href="../model/instruments/index.htm#posei_trader.model.instruments.SyntheticInstrument"><em>SyntheticInstrument</em></a>) – The synthetic instrument to update in the cache.</li>
<li><strong>Raises:</strong>
<strong>KeyError</strong> – If synthetic does not already exist in the cache.</li>
</ul>
<p><a id="module-posei_trader.execution.client"></a></p>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="class-executionclient"><em>class</em> ExecutionClient<a href="#class-executionclient" class="hash-link" aria-label="Direct link to class-executionclient" title="Direct link to class-executionclient">​</a></h3>
<p>Bases: <a href="../common/index.htm#posei_trader.common.component.Component"><code>Component</code></a></p>
<p>ExecutionClient(ClientId client_id, Venue venue: Venue | None, OmsType oms_type, AccountType account_type, Currency base_currency: Currency | None, MessageBus msgbus, Cache cache, Clock clock, config: PoseiConfig | None = None)</p>
<p>The base class for all execution clients.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>client_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.ClientId"><em>ClientId</em></a>) – The client ID.</li>
<li><strong>venue</strong> (Venue or <code>None</code>) – The client venue. If multi-venue then can be <code>None</code>.</li>
<li><strong>oms_type</strong> (<em>OmsType</em>) – The venues order management system type.</li>
<li><strong>account_type</strong> (<em>AccountType</em>) – The account type for the client.</li>
<li><strong>base_currency</strong> (Currency or <code>None</code>) – The account base currency. Use <code>None</code> for multi-currency accounts.</li>
<li><strong>msgbus</strong> (<a href="../common/index.htm#posei_trader.common.component.MessageBus"><em>MessageBus</em></a>) – The message bus for the client.</li>
<li><strong>cache</strong> (<a href="../cache/index.htm#posei_trader.cache.Cache"><em>Cache</em></a>) – The cache for the client.</li>
<li><strong>clock</strong> (<a href="../common/index.htm#posei_trader.common.component.Clock"><em>Clock</em></a>) – The clock for the client.</li>
<li><strong>config</strong> (<a href="../config/index.htm#posei_trader.common.config.PoseiConfig"><em>PoseiConfig</em></a> <em>,</em> <em>optional</em>) – The configuration for the instance.</li>
</ul>
</li>
<li><strong>Raises:</strong>
<ul>
<li><strong>ValueError</strong> – If client_id is not equal to account_id.get_issuer().</li>
<li><strong>ValueError</strong> – If oms_type is <code>UNSPECIFIED</code> (must be specified).</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-82">WARNING<a href="#warning-82" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>This class should not be used directly, but through a concrete subclass.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="account_id">account_id<a href="#account_id" class="hash-link" aria-label="Direct link to account_id" title="Direct link to account_id">​</a></h4>
<p>The clients account ID.</p>
<ul>
<li><strong>Returns:</strong>
AccountId or <code>None</code></li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="account_type">account_type<a href="#account_type" class="hash-link" aria-label="Direct link to account_type" title="Direct link to account_type">​</a></h4>
<p>The clients account type.</p>
<ul>
<li><strong>Returns:</strong>
AccountType</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="base_currency">base_currency<a href="#base_currency" class="hash-link" aria-label="Direct link to base_currency" title="Direct link to base_currency">​</a></h4>
<p>The clients account base currency (None for multi-currency accounts).</p>
<ul>
<li><strong>Returns:</strong>
Currency or <code>None</code></li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="batch_cancel_ordersself-batchcancelorders-command--void">batch_cancel_orders(self, BatchCancelOrders command) → void<a href="#batch_cancel_ordersself-batchcancelorders-command--void" class="hash-link" aria-label="Direct link to batch_cancel_orders(self, BatchCancelOrders command) → void" title="Direct link to batch_cancel_orders(self, BatchCancelOrders command) → void">​</a></h4>
<p>Batch cancel orders for the instrument ID contained in the given command.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>command</strong> (<a href="#posei_trader.execution.messages.BatchCancelOrders"><em>BatchCancelOrders</em></a>) – The command to execute.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="cancel_all_ordersself-cancelallorders-command--void">cancel_all_orders(self, CancelAllOrders command) → void<a href="#cancel_all_ordersself-cancelallorders-command--void" class="hash-link" aria-label="Direct link to cancel_all_orders(self, CancelAllOrders command) → void" title="Direct link to cancel_all_orders(self, CancelAllOrders command) → void">​</a></h4>
<p>Cancel all orders for the instrument ID contained in the given command.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>command</strong> (<a href="#posei_trader.execution.messages.CancelAllOrders"><em>CancelAllOrders</em></a>) – The command to execute.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="cancel_orderself-cancelorder-command--void">cancel_order(self, CancelOrder command) → void<a href="#cancel_orderself-cancelorder-command--void" class="hash-link" aria-label="Direct link to cancel_order(self, CancelOrder command) → void" title="Direct link to cancel_order(self, CancelOrder command) → void">​</a></h4>
<p>Cancel the order with the client order ID contained in the given command.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>command</strong> (<a href="#posei_trader.execution.messages.CancelOrder"><em>CancelOrder</em></a>) – The command to execute.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="degradeself--void-1">degrade(self) → void<a href="#degradeself--void-1" class="hash-link" aria-label="Direct link to degrade(self) → void" title="Direct link to degrade(self) → void">​</a></h4>
<p>Degrade the component.</p>
<p>While executing on_degrade() any exception will be logged and reraised, then the component
will remain in a <code>DEGRADING</code> state.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-83">WARNING<a href="#warning-83" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>Do not override.</p>
<p>If the component is not in a valid state from which to execute this method,
then the component state will not change, and an error will be logged.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="disposeself--void-1">dispose(self) → void<a href="#disposeself--void-1" class="hash-link" aria-label="Direct link to dispose(self) → void" title="Direct link to dispose(self) → void">​</a></h4>
<p>Dispose of the component.</p>
<p>While executing on_dispose() any exception will be logged and reraised, then the component
will remain in a <code>DISPOSING</code> state.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-84">WARNING<a href="#warning-84" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>Do not override.</p>
<p>If the component is not in a valid state from which to execute this method,
then the component state will not change, and an error will be logged.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="faultself--void-1">fault(self) → void<a href="#faultself--void-1" class="hash-link" aria-label="Direct link to fault(self) → void" title="Direct link to fault(self) → void">​</a></h4>
<p>Fault the component.</p>
<p>Calling this method multiple times has the same effect as calling it once (it is idempotent).
Once called, it cannot be reversed, and no other methods should be called on this instance.</p>
<p>While executing on_fault() any exception will be logged and reraised, then the component
will remain in a <code>FAULTING</code> state.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-85">WARNING<a href="#warning-85" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>Do not override.</p>
<p>If the component is not in a valid state from which to execute this method,
then the component state will not change, and an error will be logged.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="classmethod-fully_qualified_namecls--str-1"><em>classmethod</em> fully_qualified_name(cls) → str<a href="#classmethod-fully_qualified_namecls--str-1" class="hash-link" aria-label="Direct link to classmethod-fully_qualified_namecls--str-1" title="Direct link to classmethod-fully_qualified_namecls--str-1">​</a></h4>
<p>Return the fully qualified name for the components class.</p>
<ul>
<li><strong>Return type:</strong>
str</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="generate_account_stateself-list-balances-list-margins-bool-reported-uint64_t-ts_event-dict-infonone--void">generate_account_state(self, list balances, list margins, bool reported, uint64_t ts_event, dict info=None) → void<a href="#generate_account_stateself-list-balances-list-margins-bool-reported-uint64_t-ts_event-dict-infonone--void" class="hash-link" aria-label="Direct link to generate_account_state(self, list balances, list margins, bool reported, uint64_t ts_event, dict info=None) → void" title="Direct link to generate_account_state(self, list balances, list margins, bool reported, uint64_t ts_event, dict info=None) → void">​</a></h4>
<p>Generate an AccountState event and publish on the message bus.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>balances</strong> (<em>list</em> <em>[</em><a href="../model/index.htm#posei_trader.model.AccountBalance"><em>AccountBalance</em></a> <em>]</em>) – The account balances.</li>
<li><strong>margins</strong> (<em>list</em> <em>[</em><a href="../model/index.htm#posei_trader.model.MarginBalance"><em>MarginBalance</em></a> <em>]</em>) – The margin balances.</li>
<li><strong>reported</strong> (<em>bool</em>) – If the balances are reported directly from the exchange.</li>
<li><strong>ts_event</strong> (<em>uint64_t</em>) – UNIX timestamp (nanoseconds) when the account state event occurred.</li>
<li><strong>info</strong> (<em>dict</em> *[*<em>str</em> <em>,</em> <em>object</em> <em>]</em>) – The additional implementation specific account information.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="generate_order_acceptedself-strategyid-strategy_id-instrumentid-instrument_id-clientorderid-client_order_id-venueorderid-venue_order_id-uint64_t-ts_event--void">generate_order_accepted(self, StrategyId strategy_id, InstrumentId instrument_id, ClientOrderId client_order_id, VenueOrderId venue_order_id, uint64_t ts_event) → void<a href="#generate_order_acceptedself-strategyid-strategy_id-instrumentid-instrument_id-clientorderid-client_order_id-venueorderid-venue_order_id-uint64_t-ts_event--void" class="hash-link" aria-label="Direct link to generate_order_accepted(self, StrategyId strategy_id, InstrumentId instrument_id, ClientOrderId client_order_id, VenueOrderId venue_order_id, uint64_t ts_event) → void" title="Direct link to generate_order_accepted(self, StrategyId strategy_id, InstrumentId instrument_id, ClientOrderId client_order_id, VenueOrderId venue_order_id, uint64_t ts_event) → void">​</a></h4>
<p>Generate an OrderAccepted event and send it to the ExecutionEngine.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>strategy_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.StrategyId"><em>StrategyId</em></a>) – The strategy ID associated with the event.</li>
<li><strong>instrument_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.InstrumentId"><em>InstrumentId</em></a>) – The instrument ID.</li>
<li><strong>client_order_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.ClientOrderId"><em>ClientOrderId</em></a>) – The client order ID.</li>
<li><strong>venue_order_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.VenueOrderId"><em>VenueOrderId</em></a>) – The venue order ID (assigned by the venue).</li>
<li><strong>ts_event</strong> (<em>uint64_t</em>) – UNIX timestamp (nanoseconds) when the order accepted event occurred.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="generate_order_cancel_rejectedself-strategyid-strategy_id-instrumentid-instrument_id-clientorderid-client_order_id-venueorderid-venue_order_id-str-reason-uint64_t-ts_event--void">generate_order_cancel_rejected(self, StrategyId strategy_id, InstrumentId instrument_id, ClientOrderId client_order_id, VenueOrderId venue_order_id, str reason, uint64_t ts_event) → void<a href="#generate_order_cancel_rejectedself-strategyid-strategy_id-instrumentid-instrument_id-clientorderid-client_order_id-venueorderid-venue_order_id-str-reason-uint64_t-ts_event--void" class="hash-link" aria-label="Direct link to generate_order_cancel_rejected(self, StrategyId strategy_id, InstrumentId instrument_id, ClientOrderId client_order_id, VenueOrderId venue_order_id, str reason, uint64_t ts_event) → void" title="Direct link to generate_order_cancel_rejected(self, StrategyId strategy_id, InstrumentId instrument_id, ClientOrderId client_order_id, VenueOrderId venue_order_id, str reason, uint64_t ts_event) → void">​</a></h4>
<p>Generate an OrderCancelRejected event and send it to the ExecutionEngine.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>strategy_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.StrategyId"><em>StrategyId</em></a>) – The strategy ID associated with the event.</li>
<li><strong>instrument_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.InstrumentId"><em>InstrumentId</em></a>) – The instrument ID.</li>
<li><strong>client_order_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.ClientOrderId"><em>ClientOrderId</em></a>) – The client order ID.</li>
<li><strong>venue_order_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.VenueOrderId"><em>VenueOrderId</em></a>) – The venue order ID (assigned by the venue).</li>
<li><strong>reason</strong> (<em>str</em>) – The order cancel rejected reason.</li>
<li><strong>ts_event</strong> (<em>uint64_t</em>) – UNIX timestamp (nanoseconds) when the order cancel rejected event occurred.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="generate_order_canceledself-strategyid-strategy_id-instrumentid-instrument_id-clientorderid-client_order_id-venueorderid-venue_order_id-uint64_t-ts_event--void">generate_order_canceled(self, StrategyId strategy_id, InstrumentId instrument_id, ClientOrderId client_order_id, VenueOrderId venue_order_id, uint64_t ts_event) → void<a href="#generate_order_canceledself-strategyid-strategy_id-instrumentid-instrument_id-clientorderid-client_order_id-venueorderid-venue_order_id-uint64_t-ts_event--void" class="hash-link" aria-label="Direct link to generate_order_canceled(self, StrategyId strategy_id, InstrumentId instrument_id, ClientOrderId client_order_id, VenueOrderId venue_order_id, uint64_t ts_event) → void" title="Direct link to generate_order_canceled(self, StrategyId strategy_id, InstrumentId instrument_id, ClientOrderId client_order_id, VenueOrderId venue_order_id, uint64_t ts_event) → void">​</a></h4>
<p>Generate an OrderCanceled event and send it to the ExecutionEngine.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>strategy_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.StrategyId"><em>StrategyId</em></a>) – The strategy ID associated with the event.</li>
<li><strong>instrument_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.InstrumentId"><em>InstrumentId</em></a>) – The instrument ID.</li>
<li><strong>client_order_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.ClientOrderId"><em>ClientOrderId</em></a>) – The client order ID.</li>
<li><strong>venue_order_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.VenueOrderId"><em>VenueOrderId</em></a>) – The venue order ID (assigned by the venue).</li>
<li><strong>ts_event</strong> (<em>uint64_t</em>) – UNIX timestamp (nanoseconds) when order canceled event occurred.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="generate_order_expiredself-strategyid-strategy_id-instrumentid-instrument_id-clientorderid-client_order_id-venueorderid-venue_order_id-uint64_t-ts_event--void">generate_order_expired(self, StrategyId strategy_id, InstrumentId instrument_id, ClientOrderId client_order_id, VenueOrderId venue_order_id, uint64_t ts_event) → void<a href="#generate_order_expiredself-strategyid-strategy_id-instrumentid-instrument_id-clientorderid-client_order_id-venueorderid-venue_order_id-uint64_t-ts_event--void" class="hash-link" aria-label="Direct link to generate_order_expired(self, StrategyId strategy_id, InstrumentId instrument_id, ClientOrderId client_order_id, VenueOrderId venue_order_id, uint64_t ts_event) → void" title="Direct link to generate_order_expired(self, StrategyId strategy_id, InstrumentId instrument_id, ClientOrderId client_order_id, VenueOrderId venue_order_id, uint64_t ts_event) → void">​</a></h4>
<p>Generate an OrderExpired event and send it to the ExecutionEngine.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>strategy_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.StrategyId"><em>StrategyId</em></a>) – The strategy ID associated with the event.</li>
<li><strong>instrument_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.InstrumentId"><em>InstrumentId</em></a>) – The instrument ID.</li>
<li><strong>client_order_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.ClientOrderId"><em>ClientOrderId</em></a>) – The client order ID.</li>
<li><strong>venue_order_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.VenueOrderId"><em>VenueOrderId</em></a>) – The venue order ID (assigned by the venue).</li>
<li><strong>ts_event</strong> (<em>uint64_t</em>) – UNIX timestamp (nanoseconds) when the order expired event occurred.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="generate_order_filledself-strategyid-strategy_id-instrumentid-instrument_id-clientorderid-client_order_id-venueorderid-venue_order_id-positionid-venue_position_id-positionid--none-tradeid-trade_id-orderside-order_side-ordertype-order_type-quantity-last_qty-price-last_px-currency-quote_currency-money-commission-liquidityside-liquidity_side-uint64_t-ts_event-dict-infonone--void">generate_order_filled(self, StrategyId strategy_id, InstrumentId instrument_id, ClientOrderId client_order_id, VenueOrderId venue_order_id, PositionId venue_position_id: PositionId | None, TradeId trade_id, OrderSide order_side, OrderType order_type, Quantity last_qty, Price last_px, Currency quote_currency, Money commission, LiquiditySide liquidity_side, uint64_t ts_event, dict info=None) → void<a href="#generate_order_filledself-strategyid-strategy_id-instrumentid-instrument_id-clientorderid-client_order_id-venueorderid-venue_order_id-positionid-venue_position_id-positionid--none-tradeid-trade_id-orderside-order_side-ordertype-order_type-quantity-last_qty-price-last_px-currency-quote_currency-money-commission-liquidityside-liquidity_side-uint64_t-ts_event-dict-infonone--void" class="hash-link" aria-label="Direct link to generate_order_filled(self, StrategyId strategy_id, InstrumentId instrument_id, ClientOrderId client_order_id, VenueOrderId venue_order_id, PositionId venue_position_id: PositionId | None, TradeId trade_id, OrderSide order_side, OrderType order_type, Quantity last_qty, Price last_px, Currency quote_currency, Money commission, LiquiditySide liquidity_side, uint64_t ts_event, dict info=None) → void" title="Direct link to generate_order_filled(self, StrategyId strategy_id, InstrumentId instrument_id, ClientOrderId client_order_id, VenueOrderId venue_order_id, PositionId venue_position_id: PositionId | None, TradeId trade_id, OrderSide order_side, OrderType order_type, Quantity last_qty, Price last_px, Currency quote_currency, Money commission, LiquiditySide liquidity_side, uint64_t ts_event, dict info=None) → void">​</a></h4>
<p>Generate an OrderFilled event and send it to the ExecutionEngine.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>strategy_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.StrategyId"><em>StrategyId</em></a>) – The strategy ID associated with the event.</li>
<li><strong>instrument_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.InstrumentId"><em>InstrumentId</em></a>) – The instrument ID.</li>
<li><strong>client_order_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.ClientOrderId"><em>ClientOrderId</em></a>) – The client order ID.</li>
<li><strong>venue_order_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.VenueOrderId"><em>VenueOrderId</em></a>) – The venue order ID (assigned by the venue).</li>
<li><strong>trade_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.TradeId"><em>TradeId</em></a>) – The trade ID.</li>
<li><strong>venue_position_id</strong> (PositionId or <code>None</code>) – The venue position ID associated with the order. If the trading
venue has assigned a position ID / ticket then pass that here,
otherwise pass <code>None</code> and the execution engine OMS will handle
position ID resolution.</li>
<li><strong>order_side</strong> (OrderSide {<code>BUY</code>, <code>SELL</code>}) – The execution order side.</li>
<li><strong>order_type</strong> (<em>OrderType</em>) – The execution order type.</li>
<li><strong>last_qty</strong> (<a href="../model/index.htm#posei_trader.model.Quantity"><em>Quantity</em></a>) – The fill quantity for this execution.</li>
<li><strong>last_px</strong> (<a href="../model/index.htm#posei_trader.model.Price"><em>Price</em></a>) – The fill price for this execution (not average price).</li>
<li><strong>quote_currency</strong> (<a href="../model/index.htm#posei_trader.model.Currency"><em>Currency</em></a>) – The currency of the price.</li>
<li><strong>commission</strong> (<a href="../model/index.htm#posei_trader.model.Money"><em>Money</em></a>) – The fill commission.</li>
<li><strong>liquidity_side</strong> (LiquiditySide {<code>NO_LIQUIDITY_SIDE</code>, <code>MAKER</code>, <code>TAKER</code>}) – The execution liquidity side.</li>
<li><strong>ts_event</strong> (<em>uint64_t</em>) – UNIX timestamp (nanoseconds) when the order filled event occurred.</li>
<li><strong>info</strong> (<em>dict</em> *[*<em>str</em> <em>,</em> <em>object</em> <em>]</em> <em>,</em> <em>optional</em>) – The additional fill information.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="generate_order_modify_rejectedself-strategyid-strategy_id-instrumentid-instrument_id-clientorderid-client_order_id-venueorderid-venue_order_id-str-reason-uint64_t-ts_event--void">generate_order_modify_rejected(self, StrategyId strategy_id, InstrumentId instrument_id, ClientOrderId client_order_id, VenueOrderId venue_order_id, str reason, uint64_t ts_event) → void<a href="#generate_order_modify_rejectedself-strategyid-strategy_id-instrumentid-instrument_id-clientorderid-client_order_id-venueorderid-venue_order_id-str-reason-uint64_t-ts_event--void" class="hash-link" aria-label="Direct link to generate_order_modify_rejected(self, StrategyId strategy_id, InstrumentId instrument_id, ClientOrderId client_order_id, VenueOrderId venue_order_id, str reason, uint64_t ts_event) → void" title="Direct link to generate_order_modify_rejected(self, StrategyId strategy_id, InstrumentId instrument_id, ClientOrderId client_order_id, VenueOrderId venue_order_id, str reason, uint64_t ts_event) → void">​</a></h4>
<p>Generate an OrderModifyRejected event and send it to the ExecutionEngine.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>strategy_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.StrategyId"><em>StrategyId</em></a>) – The strategy ID associated with the event.</li>
<li><strong>instrument_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.InstrumentId"><em>InstrumentId</em></a>) – The instrument ID.</li>
<li><strong>client_order_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.ClientOrderId"><em>ClientOrderId</em></a>) – The client order ID.</li>
<li><strong>venue_order_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.VenueOrderId"><em>VenueOrderId</em></a>) – The venue order ID (assigned by the venue).</li>
<li><strong>reason</strong> (<em>str</em>) – The order update rejected reason.</li>
<li><strong>ts_event</strong> (<em>uint64_t</em>) – UNIX timestamp (nanoseconds) when the order update rejection event occurred.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="generate_order_rejectedself-strategyid-strategy_id-instrumentid-instrument_id-clientorderid-client_order_id-str-reason-uint64_t-ts_event--void">generate_order_rejected(self, StrategyId strategy_id, InstrumentId instrument_id, ClientOrderId client_order_id, str reason, uint64_t ts_event) → void<a href="#generate_order_rejectedself-strategyid-strategy_id-instrumentid-instrument_id-clientorderid-client_order_id-str-reason-uint64_t-ts_event--void" class="hash-link" aria-label="Direct link to generate_order_rejected(self, StrategyId strategy_id, InstrumentId instrument_id, ClientOrderId client_order_id, str reason, uint64_t ts_event) → void" title="Direct link to generate_order_rejected(self, StrategyId strategy_id, InstrumentId instrument_id, ClientOrderId client_order_id, str reason, uint64_t ts_event) → void">​</a></h4>
<p>Generate an OrderRejected event and send it to the ExecutionEngine.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>strategy_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.StrategyId"><em>StrategyId</em></a>) – The strategy ID associated with the event.</li>
<li><strong>instrument_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.InstrumentId"><em>InstrumentId</em></a>) – The instrument ID.</li>
<li><strong>client_order_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.ClientOrderId"><em>ClientOrderId</em></a>) – The client order ID.</li>
<li><strong>reason</strong> (<em>datetime</em>) – The order rejected reason.</li>
<li><strong>ts_event</strong> (<em>uint64_t</em>) – UNIX timestamp (nanoseconds) when the order rejected event occurred.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="generate_order_submittedself-strategyid-strategy_id-instrumentid-instrument_id-clientorderid-client_order_id-uint64_t-ts_event--void">generate_order_submitted(self, StrategyId strategy_id, InstrumentId instrument_id, ClientOrderId client_order_id, uint64_t ts_event) → void<a href="#generate_order_submittedself-strategyid-strategy_id-instrumentid-instrument_id-clientorderid-client_order_id-uint64_t-ts_event--void" class="hash-link" aria-label="Direct link to generate_order_submitted(self, StrategyId strategy_id, InstrumentId instrument_id, ClientOrderId client_order_id, uint64_t ts_event) → void" title="Direct link to generate_order_submitted(self, StrategyId strategy_id, InstrumentId instrument_id, ClientOrderId client_order_id, uint64_t ts_event) → void">​</a></h4>
<p>Generate an OrderSubmitted event and send it to the ExecutionEngine.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>strategy_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.StrategyId"><em>StrategyId</em></a>) – The strategy ID associated with the event.</li>
<li><strong>instrument_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.InstrumentId"><em>InstrumentId</em></a>) – The instrument ID.</li>
<li><strong>client_order_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.ClientOrderId"><em>ClientOrderId</em></a>) – The client order ID.</li>
<li><strong>ts_event</strong> (<em>uint64_t</em>) – UNIX timestamp (nanoseconds) when the order submitted event occurred.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="generate_order_triggeredself-strategyid-strategy_id-instrumentid-instrument_id-clientorderid-client_order_id-venueorderid-venue_order_id-uint64_t-ts_event--void">generate_order_triggered(self, StrategyId strategy_id, InstrumentId instrument_id, ClientOrderId client_order_id, VenueOrderId venue_order_id, uint64_t ts_event) → void<a href="#generate_order_triggeredself-strategyid-strategy_id-instrumentid-instrument_id-clientorderid-client_order_id-venueorderid-venue_order_id-uint64_t-ts_event--void" class="hash-link" aria-label="Direct link to generate_order_triggered(self, StrategyId strategy_id, InstrumentId instrument_id, ClientOrderId client_order_id, VenueOrderId venue_order_id, uint64_t ts_event) → void" title="Direct link to generate_order_triggered(self, StrategyId strategy_id, InstrumentId instrument_id, ClientOrderId client_order_id, VenueOrderId venue_order_id, uint64_t ts_event) → void">​</a></h4>
<p>Generate an OrderTriggered event and send it to the ExecutionEngine.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>strategy_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.StrategyId"><em>StrategyId</em></a>) – The strategy ID associated with the event.</li>
<li><strong>instrument_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.InstrumentId"><em>InstrumentId</em></a>) – The instrument ID.</li>
<li><strong>client_order_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.ClientOrderId"><em>ClientOrderId</em></a>) – The client order ID.</li>
<li><strong>venue_order_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.VenueOrderId"><em>VenueOrderId</em></a>) – The venue order ID (assigned by the venue).</li>
<li><strong>ts_event</strong> (<em>uint64_t</em>) – UNIX timestamp (nanoseconds) when the order triggered event occurred.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="generate_order_updatedself-strategyid-strategy_id-instrumentid-instrument_id-clientorderid-client_order_id-venueorderid-venue_order_id-quantity-quantity-price-price-price-trigger_price-uint64_t-ts_event-bool-venue_order_id_modifiedfalse--void">generate_order_updated(self, StrategyId strategy_id, InstrumentId instrument_id, ClientOrderId client_order_id, VenueOrderId venue_order_id, Quantity quantity, Price price, Price trigger_price, uint64_t ts_event, bool venue_order_id_modified=False) → void<a href="#generate_order_updatedself-strategyid-strategy_id-instrumentid-instrument_id-clientorderid-client_order_id-venueorderid-venue_order_id-quantity-quantity-price-price-price-trigger_price-uint64_t-ts_event-bool-venue_order_id_modifiedfalse--void" class="hash-link" aria-label="Direct link to generate_order_updated(self, StrategyId strategy_id, InstrumentId instrument_id, ClientOrderId client_order_id, VenueOrderId venue_order_id, Quantity quantity, Price price, Price trigger_price, uint64_t ts_event, bool venue_order_id_modified=False) → void" title="Direct link to generate_order_updated(self, StrategyId strategy_id, InstrumentId instrument_id, ClientOrderId client_order_id, VenueOrderId venue_order_id, Quantity quantity, Price price, Price trigger_price, uint64_t ts_event, bool venue_order_id_modified=False) → void">​</a></h4>
<p>Generate an OrderUpdated event and send it to the ExecutionEngine.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>strategy_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.StrategyId"><em>StrategyId</em></a>) – The strategy ID associated with the event.</li>
<li><strong>instrument_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.InstrumentId"><em>InstrumentId</em></a>) – The instrument ID.</li>
<li><strong>client_order_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.ClientOrderId"><em>ClientOrderId</em></a>) – The client order ID.</li>
<li><strong>venue_order_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.VenueOrderId"><em>VenueOrderId</em></a>) – The venue order ID (assigned by the venue).</li>
<li><strong>quantity</strong> (<a href="../model/index.htm#posei_trader.model.Quantity"><em>Quantity</em></a>) – The orders current quantity.</li>
<li><strong>price</strong> (<a href="../model/index.htm#posei_trader.model.Price"><em>Price</em></a>) – The orders current price.</li>
<li><strong>trigger_price</strong> (Price or <code>None</code>) – The orders current trigger price.</li>
<li><strong>ts_event</strong> (<em>uint64_t</em>) – UNIX timestamp (nanoseconds) when the order update event occurred.</li>
<li><strong>venue_order_id_modified</strong> (<em>bool</em>) – If the ID was modified for this event.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="get_accountself--account">get_account(self) → Account<a href="#get_accountself--account" class="hash-link" aria-label="Direct link to get_account(self) → Account" title="Direct link to get_account(self) → Account">​</a></h4>
<p>Return the account for the client (if registered).</p>
<ul>
<li><strong>Return type:</strong>
Account or <code>None</code></li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="id-1">id<a href="#id-1" class="hash-link" aria-label="Direct link to id" title="Direct link to id">​</a></h4>
<p>The components ID.</p>
<ul>
<li><strong>Returns:</strong>
ComponentId</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="is_connected">is_connected<a href="#is_connected" class="hash-link" aria-label="Direct link to is_connected" title="Direct link to is_connected">​</a></h4>
<p>If the client is connected.</p>
<ul>
<li><strong>Returns:</strong>
bool</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="is_degraded-1">is_degraded<a href="#is_degraded-1" class="hash-link" aria-label="Direct link to is_degraded" title="Direct link to is_degraded">​</a></h4>
<p>bool</p>
<p>Return whether the current component state is <code>DEGRADED</code>.</p>
<ul>
<li><strong>Return type:</strong>
bool</li>
<li><strong>Type:</strong>
Component.is_degraded</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="is_disposed-1">is_disposed<a href="#is_disposed-1" class="hash-link" aria-label="Direct link to is_disposed" title="Direct link to is_disposed">​</a></h4>
<p>bool</p>
<p>Return whether the current component state is <code>DISPOSED</code>.</p>
<ul>
<li><strong>Return type:</strong>
bool</li>
<li><strong>Type:</strong>
Component.is_disposed</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="is_faulted-1">is_faulted<a href="#is_faulted-1" class="hash-link" aria-label="Direct link to is_faulted" title="Direct link to is_faulted">​</a></h4>
<p>bool</p>
<p>Return whether the current component state is <code>FAULTED</code>.</p>
<ul>
<li><strong>Return type:</strong>
bool</li>
<li><strong>Type:</strong>
Component.is_faulted</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="is_initialized-1">is_initialized<a href="#is_initialized-1" class="hash-link" aria-label="Direct link to is_initialized" title="Direct link to is_initialized">​</a></h4>
<p>bool</p>
<p>Return whether the component has been initialized (component.state &gt;= <code>INITIALIZED</code>).</p>
<ul>
<li><strong>Return type:</strong>
bool</li>
<li><strong>Type:</strong>
Component.is_initialized</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="is_running-1">is_running<a href="#is_running-1" class="hash-link" aria-label="Direct link to is_running" title="Direct link to is_running">​</a></h4>
<p>bool</p>
<p>Return whether the current component state is <code>RUNNING</code>.</p>
<ul>
<li><strong>Return type:</strong>
bool</li>
<li><strong>Type:</strong>
Component.is_running</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="is_stopped-1">is_stopped<a href="#is_stopped-1" class="hash-link" aria-label="Direct link to is_stopped" title="Direct link to is_stopped">​</a></h4>
<p>bool</p>
<p>Return whether the current component state is <code>STOPPED</code>.</p>
<ul>
<li><strong>Return type:</strong>
bool</li>
<li><strong>Type:</strong>
Component.is_stopped</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="modify_orderself-modifyorder-command--void">modify_order(self, ModifyOrder command) → void<a href="#modify_orderself-modifyorder-command--void" class="hash-link" aria-label="Direct link to modify_order(self, ModifyOrder command) → void" title="Direct link to modify_order(self, ModifyOrder command) → void">​</a></h4>
<p>Modify the order with parameters contained in the command.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>command</strong> (<a href="#posei_trader.execution.messages.ModifyOrder"><em>ModifyOrder</em></a>) – The command to execute.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="oms_type">oms_type<a href="#oms_type" class="hash-link" aria-label="Direct link to oms_type" title="Direct link to oms_type">​</a></h4>
<p>The venues order management system type.</p>
<ul>
<li><strong>Returns:</strong>
OmsType</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="query_orderself-queryorder-command--void">query_order(self, QueryOrder command) → void<a href="#query_orderself-queryorder-command--void" class="hash-link" aria-label="Direct link to query_order(self, QueryOrder command) → void" title="Direct link to query_order(self, QueryOrder command) → void">​</a></h4>
<p>Initiate a reconciliation for the queried order which will generate an
OrderStatusReport.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>command</strong> (<a href="#posei_trader.execution.messages.QueryOrder"><em>QueryOrder</em></a>) – The command to execute.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="resetself--void-1">reset(self) → void<a href="#resetself--void-1" class="hash-link" aria-label="Direct link to reset(self) → void" title="Direct link to reset(self) → void">​</a></h4>
<p>Reset the component.</p>
<p>All stateful fields are reset to their initial value.</p>
<p>While executing on_reset() any exception will be logged and reraised, then the component
will remain in a <code>RESETTING</code> state.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-86">WARNING<a href="#warning-86" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>Do not override.</p>
<p>If the component is not in a valid state from which to execute this method,
then the component state will not change, and an error will be logged.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="resumeself--void-1">resume(self) → void<a href="#resumeself--void-1" class="hash-link" aria-label="Direct link to resume(self) → void" title="Direct link to resume(self) → void">​</a></h4>
<p>Resume the component.</p>
<p>While executing on_resume() any exception will be logged and reraised, then the component
will remain in a <code>RESUMING</code> state.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-87">WARNING<a href="#warning-87" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>Do not override.</p>
<p>If the component is not in a valid state from which to execute this method,
then the component state will not change, and an error will be logged.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="shutdown_systemself-str-reasonnone--void-1">shutdown_system(self, str reason=None) → void<a href="#shutdown_systemself-str-reasonnone--void-1" class="hash-link" aria-label="Direct link to shutdown_system(self, str reason=None) → void" title="Direct link to shutdown_system(self, str reason=None) → void">​</a></h4>
<p>Initiate a system-wide shutdown by generating and publishing a ShutdownSystem command.</p>
<p>The command is handled by the system’s PoseiKernel, which will invoke either stop (synchronously)
or stop_async (asynchronously) depending on the execution context and the presence of an active event loop.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>reason</strong> (<em>str</em> <em>,</em> <em>optional</em>) – The reason for issuing the shutdown command.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="startself--void-1">start(self) → void<a href="#startself--void-1" class="hash-link" aria-label="Direct link to start(self) → void" title="Direct link to start(self) → void">​</a></h4>
<p>Start the component.</p>
<p>While executing on_start() any exception will be logged and reraised, then the component
will remain in a <code>STARTING</code> state.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-88">WARNING<a href="#warning-88" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>Do not override.</p>
<p>If the component is not in a valid state from which to execute this method,
then the component state will not change, and an error will be logged.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="state-1">state<a href="#state-1" class="hash-link" aria-label="Direct link to state" title="Direct link to state">​</a></h4>
<p>ComponentState</p>
<p>Return the components current state.</p>
<ul>
<li><strong>Return type:</strong>
ComponentState</li>
<li><strong>Type:</strong>
Component.state</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="stopself--void-1">stop(self) → void<a href="#stopself--void-1" class="hash-link" aria-label="Direct link to stop(self) → void" title="Direct link to stop(self) → void">​</a></h4>
<p>Stop the component.</p>
<p>While executing on_stop() any exception will be logged and reraised, then the component
will remain in a <code>STOPPING</code> state.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-89">WARNING<a href="#warning-89" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>Do not override.</p>
<p>If the component is not in a valid state from which to execute this method,
then the component state will not change, and an error will be logged.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="submit_orderself-submitorder-command--void">submit_order(self, SubmitOrder command) → void<a href="#submit_orderself-submitorder-command--void" class="hash-link" aria-label="Direct link to submit_order(self, SubmitOrder command) → void" title="Direct link to submit_order(self, SubmitOrder command) → void">​</a></h4>
<p>Submit the order contained in the given command for execution.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>command</strong> (<a href="#posei_trader.execution.messages.SubmitOrder"><em>SubmitOrder</em></a>) – The command to execute.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="submit_order_listself-submitorderlist-command--void">submit_order_list(self, SubmitOrderList command) → void<a href="#submit_order_listself-submitorderlist-command--void" class="hash-link" aria-label="Direct link to submit_order_list(self, SubmitOrderList command) → void" title="Direct link to submit_order_list(self, SubmitOrderList command) → void">​</a></h4>
<p>Submit the order list contained in the given command for execution.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>command</strong> (<a href="#posei_trader.execution.messages.SubmitOrderList"><em>SubmitOrderList</em></a>) – The command to execute.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="trader_id-1">trader_id<a href="#trader_id-1" class="hash-link" aria-label="Direct link to trader_id" title="Direct link to trader_id">​</a></h4>
<p>The trader ID associated with the component.</p>
<ul>
<li><strong>Returns:</strong>
TraderId</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="type-1">type<a href="#type-1" class="hash-link" aria-label="Direct link to type" title="Direct link to type">​</a></h4>
<p>The components type.</p>
<ul>
<li><strong>Returns:</strong>
type</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="venue">venue<a href="#venue" class="hash-link" aria-label="Direct link to venue" title="Direct link to venue">​</a></h4>
<p>The clients venue ID (if not a routing client).</p>
<ul>
<li><strong>Returns:</strong>
Venue or <code>None</code></li>
</ul>
<p><a id="module-posei_trader.execution.emulator"></a></p>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="class-orderemulator"><em>class</em> OrderEmulator<a href="#class-orderemulator" class="hash-link" aria-label="Direct link to class-orderemulator" title="Direct link to class-orderemulator">​</a></h3>
<p>Bases: <a href="../common/index.htm#posei_trader.common.actor.Actor"><code>Actor</code></a></p>
<p>OrderEmulator(PortfolioFacade portfolio, MessageBus msgbus, Cache cache, Clock clock, config: OrderEmulatorConfig | None = None)</p>
<p>Provides order emulation for specified trigger types.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>portfolio</strong> (<a href="../portfolio/index.htm#posei_trader.portfolio.PortfolioFacade"><em>PortfolioFacade</em></a>) – The read-only portfolio for the order emulator.</li>
<li><strong>msgbus</strong> (<a href="../common/index.htm#posei_trader.common.component.MessageBus"><em>MessageBus</em></a>) – The message bus for the order emulator.</li>
<li><strong>cache</strong> (<a href="../cache/index.htm#posei_trader.cache.Cache"><em>Cache</em></a>) – The cache for the order emulator.</li>
<li><strong>clock</strong> (<a href="../common/index.htm#posei_trader.common.component.Clock"><em>Clock</em></a>) – The clock for the order emulator.</li>
<li><strong>config</strong> (<a href="../config/index.htm#posei_trader.common.config.OrderEmulatorConfig"><em>OrderEmulatorConfig</em></a> <em>,</em> <em>optional</em>) – The configuration for the order emulator.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="active_task_idsself--list-1">active_task_ids(self) → list<a href="#active_task_idsself--list-1" class="hash-link" aria-label="Direct link to active_task_ids(self) → list" title="Direct link to active_task_ids(self) → list">​</a></h4>
<p>Return the active task identifiers.</p>
<ul>
<li><strong>Return type:</strong>
list[<a href="../common/index.htm#posei_trader.common.executor.TaskId">TaskId</a>]</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="add_syntheticself-syntheticinstrument-synthetic--void-1">add_synthetic(self, SyntheticInstrument synthetic) → void<a href="#add_syntheticself-syntheticinstrument-synthetic--void-1" class="hash-link" aria-label="Direct link to add_synthetic(self, SyntheticInstrument synthetic) → void" title="Direct link to add_synthetic(self, SyntheticInstrument synthetic) → void">​</a></h4>
<p>Add the created synthetic instrument to the cache.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>synthetic</strong> (<a href="../model/instruments/index.htm#posei_trader.model.instruments.SyntheticInstrument"><em>SyntheticInstrument</em></a>) – The synthetic instrument to add to the cache.</li>
<li><strong>Raises:</strong>
<strong>KeyError</strong> – If synthetic is already in the cache.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="cache-1">cache<a href="#cache-1" class="hash-link" aria-label="Direct link to cache" title="Direct link to cache">​</a></h4>
<p>The read-only cache for the actor.</p>
<ul>
<li><strong>Returns:</strong>
CacheFacade</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="cancel_all_tasksself--void-1">cancel_all_tasks(self) → void<a href="#cancel_all_tasksself--void-1" class="hash-link" aria-label="Direct link to cancel_all_tasks(self) → void" title="Direct link to cancel_all_tasks(self) → void">​</a></h4>
<p>Cancel all queued and active tasks.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="cancel_taskself-task_id-taskid--void-1">cancel_task(self, task_id: <a href="../common/index.htm#posei_trader.common.executor.TaskId">TaskId</a>) → void<a href="#cancel_taskself-task_id-taskid--void-1" class="hash-link" aria-label="Direct link to cancel_taskself-task_id-taskid--void-1" title="Direct link to cancel_taskself-task_id-taskid--void-1">​</a></h4>
<p>Cancel the task with the given task_id (if queued or active).</p>
<p>If the task is not found then a warning is logged.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>task_id</strong> (<a href="../common/index.htm#posei_trader.common.executor.TaskId"><em>TaskId</em></a>) – The task identifier.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="clock-1">clock<a href="#clock-1" class="hash-link" aria-label="Direct link to clock" title="Direct link to clock">​</a></h4>
<p>The actors clock.</p>
<ul>
<li><strong>Returns:</strong>
Clock</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="command_count">command_count<a href="#command_count" class="hash-link" aria-label="Direct link to command_count" title="Direct link to command_count">​</a></h4>
<p>The total count of commands received by the emulator.</p>
<ul>
<li><strong>Returns:</strong>
int</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="config-1">config<a href="#config-1" class="hash-link" aria-label="Direct link to config" title="Direct link to config">​</a></h4>
<p>The actors configuration.</p>
<ul>
<li><strong>Returns:</strong>
PoseiConfig</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="create_matching_coreself-instrumentid-instrument_id-price-price_increment--matchingcore">create_matching_core(self, InstrumentId instrument_id, Price price_increment) → <a href="#posei_trader.execution.matching_core.MatchingCore">MatchingCore</a><a href="#create_matching_coreself-instrumentid-instrument_id-price-price_increment--matchingcore" class="hash-link" aria-label="Direct link to create_matching_coreself-instrumentid-instrument_id-price-price_increment--matchingcore" title="Direct link to create_matching_coreself-instrumentid-instrument_id-price-price_increment--matchingcore">​</a></h4>
<p>Create an internal matching core for the given instrument.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>instrument_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.InstrumentId"><em>InstrumentId</em></a>) – The instrument ID for the matching core.</li>
<li><strong>price_increment</strong> (<a href="../model/index.htm#posei_trader.model.Price"><em>Price</em></a>) – The minimum price increment (tick size) for the matching core.</li>
</ul>
</li>
<li><strong>Return type:</strong>
<a href="#posei_trader.execution.matching_core.MatchingCore">MatchingCore</a></li>
<li><strong>Raises:</strong>
<strong>KeyError</strong> – If a matching core for the given instrument_id already exists.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="debug">debug<a href="#debug" class="hash-link" aria-label="Direct link to debug" title="Direct link to debug">​</a></h4>
<p>If debug mode is active (will provide extra debug logging).</p>
<ul>
<li><strong>Returns:</strong>
bool</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="degradeself--void-2">degrade(self) → void<a href="#degradeself--void-2" class="hash-link" aria-label="Direct link to degrade(self) → void" title="Direct link to degrade(self) → void">​</a></h4>
<p>Degrade the component.</p>
<p>While executing on_degrade() any exception will be logged and reraised, then the component
will remain in a <code>DEGRADING</code> state.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-90">WARNING<a href="#warning-90" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>Do not override.</p>
<p>If the component is not in a valid state from which to execute this method,
then the component state will not change, and an error will be logged.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="deregister_warning_eventself-type-event--void-1">deregister_warning_event(self, type event) → void<a href="#deregister_warning_eventself-type-event--void-1" class="hash-link" aria-label="Direct link to deregister_warning_event(self, type event) → void" title="Direct link to deregister_warning_event(self, type event) → void">​</a></h4>
<p>Deregister the given event type from warning log levels.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>event</strong> (<em>type</em>) – The event class to deregister.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="disposeself--void-2">dispose(self) → void<a href="#disposeself--void-2" class="hash-link" aria-label="Direct link to dispose(self) → void" title="Direct link to dispose(self) → void">​</a></h4>
<p>Dispose of the component.</p>
<p>While executing on_dispose() any exception will be logged and reraised, then the component
will remain in a <code>DISPOSING</code> state.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-91">WARNING<a href="#warning-91" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>Do not override.</p>
<p>If the component is not in a valid state from which to execute this method,
then the component state will not change, and an error will be logged.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="event_count">event_count<a href="#event_count" class="hash-link" aria-label="Direct link to event_count" title="Direct link to event_count">​</a></h4>
<p>The total count of events received by the emulator.</p>
<ul>
<li><strong>Returns:</strong>
int</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="executeself-tradingcommand-command--void-1">execute(self, TradingCommand command) → void<a href="#executeself-tradingcommand-command--void-1" class="hash-link" aria-label="Direct link to execute(self, TradingCommand command) → void" title="Direct link to execute(self, TradingCommand command) → void">​</a></h4>
<p>Execute the given command.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>command</strong> (<a href="#posei_trader.execution.messages.TradingCommand"><em>TradingCommand</em></a>) – The command to execute.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="faultself--void-2">fault(self) → void<a href="#faultself--void-2" class="hash-link" aria-label="Direct link to fault(self) → void" title="Direct link to fault(self) → void">​</a></h4>
<p>Fault the component.</p>
<p>Calling this method multiple times has the same effect as calling it once (it is idempotent).
Once called, it cannot be reversed, and no other methods should be called on this instance.</p>
<p>While executing on_fault() any exception will be logged and reraised, then the component
will remain in a <code>FAULTING</code> state.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-92">WARNING<a href="#warning-92" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>Do not override.</p>
<p>If the component is not in a valid state from which to execute this method,
then the component state will not change, and an error will be logged.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="classmethod-fully_qualified_namecls--str-2"><em>classmethod</em> fully_qualified_name(cls) → str<a href="#classmethod-fully_qualified_namecls--str-2" class="hash-link" aria-label="Direct link to classmethod-fully_qualified_namecls--str-2" title="Direct link to classmethod-fully_qualified_namecls--str-2">​</a></h4>
<p>Return the fully qualified name for the components class.</p>
<ul>
<li><strong>Return type:</strong>
str</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="get_matching_coreself-instrumentid-instrument_id--matchingcore--none">get_matching_core(self, InstrumentId instrument_id) → <a href="#posei_trader.execution.matching_core.MatchingCore">MatchingCore</a> | None<a href="#get_matching_coreself-instrumentid-instrument_id--matchingcore--none" class="hash-link" aria-label="Direct link to get_matching_coreself-instrumentid-instrument_id--matchingcore--none" title="Direct link to get_matching_coreself-instrumentid-instrument_id--matchingcore--none">​</a></h4>
<p>Return the emulators matching core for the given instrument ID.</p>
<ul>
<li><strong>Return type:</strong>
MatchingCore or <code>None</code></li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="get_submit_order_commandsself--dictclientorderid-submitorder">get_submit_order_commands(self) → dict[<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.ClientOrderId">ClientOrderId</a>, <a href="#posei_trader.execution.messages.SubmitOrder">SubmitOrder</a>]<a href="#get_submit_order_commandsself--dictclientorderid-submitorder" class="hash-link" aria-label="Direct link to get_submit_order_commandsself--dictclientorderid-submitorder" title="Direct link to get_submit_order_commandsself--dictclientorderid-submitorder">​</a></h4>
<p>Return the emulators cached submit order commands.</p>
<ul>
<li><strong>Return type:</strong>
dict[<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.ClientOrderId">ClientOrderId</a>, <a href="#posei_trader.execution.messages.SubmitOrder">SubmitOrder</a>]</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="greeks-1">greeks<a href="#greeks-1" class="hash-link" aria-label="Direct link to greeks" title="Direct link to greeks">​</a></h4>
<p>The read-only greeks calculator for the actor.</p>
<ul>
<li><strong>Returns:</strong>
GreeksCalculator</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="handle_barself-bar-bar--void-1">handle_bar(self, Bar bar) → void<a href="#handle_barself-bar-bar--void-1" class="hash-link" aria-label="Direct link to handle_bar(self, Bar bar) → void" title="Direct link to handle_bar(self, Bar bar) → void">​</a></h4>
<p>Handle the given bar data.</p>
<p>If state is <code>RUNNING</code> then passes to on_bar.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>bar</strong> (<a href="../model/data/index.htm#posei_trader.model.data.Bar"><em>Bar</em></a>) – The bar received.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-93">WARNING<a href="#warning-93" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>System method (not intended to be called by user code).</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="handle_barsself-list-bars--void-1">handle_bars(self, list bars) → void<a href="#handle_barsself-list-bars--void-1" class="hash-link" aria-label="Direct link to handle_bars(self, list bars) → void" title="Direct link to handle_bars(self, list bars) → void">​</a></h4>
<p>Handle the given historical bar data by handling each bar individually.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>bars</strong> (<em>list</em> <em>[</em><a href="../model/data/index.htm#posei_trader.model.data.Bar"><em>Bar</em></a> <em>]</em>) – The bars to handle.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-94">WARNING<a href="#warning-94" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>System method (not intended to be called by user code).</p>
<ul>
<li><strong>Raises:</strong>
<strong>RuntimeError</strong> – If bar data has incorrectly sorted timestamps (not monotonically increasing).</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="handle_dataself-data-data--void-1">handle_data(self, Data data) → void<a href="#handle_dataself-data-data--void-1" class="hash-link" aria-label="Direct link to handle_data(self, Data data) → void" title="Direct link to handle_data(self, Data data) → void">​</a></h4>
<p>Handle the given data.</p>
<p>If state is <code>RUNNING</code> then passes to on_data.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>data</strong> (<a href="../core/index.htm#posei_trader.core.Data"><em>Data</em></a>) – The data received.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-95">WARNING<a href="#warning-95" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>System method (not intended to be called by user code).</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="handle_eventself-event-event--void-1">handle_event(self, Event event) → void<a href="#handle_eventself-event-event--void-1" class="hash-link" aria-label="Direct link to handle_event(self, Event event) → void" title="Direct link to handle_event(self, Event event) → void">​</a></h4>
<p>Handle the given event.</p>
<p>If state is <code>RUNNING</code> then passes to on_event.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>event</strong> (<a href="../core/index.htm#posei_trader.core.Event"><em>Event</em></a>) – The event received.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-96">WARNING<a href="#warning-96" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>System method (not intended to be called by user code).</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="handle_historical_dataself-data--void-1">handle_historical_data(self, data) → void<a href="#handle_historical_dataself-data--void-1" class="hash-link" aria-label="Direct link to handle_historical_data(self, data) → void" title="Direct link to handle_historical_data(self, data) → void">​</a></h4>
<p>Handle the given historical data.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>data</strong> (<a href="../core/index.htm#posei_trader.core.Data"><em>Data</em></a>) – The historical data received.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-97">WARNING<a href="#warning-97" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>System method (not intended to be called by user code).</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="handle_index_priceself-indexpriceupdate-index_price--void-1">handle_index_price(self, IndexPriceUpdate index_price) → void<a href="#handle_index_priceself-indexpriceupdate-index_price--void-1" class="hash-link" aria-label="Direct link to handle_index_price(self, IndexPriceUpdate index_price) → void" title="Direct link to handle_index_price(self, IndexPriceUpdate index_price) → void">​</a></h4>
<p>Handle the given index price update.</p>
<p>If state is <code>RUNNING</code> then passes to on_index_price.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>index_price</strong> (<a href="../model/data/index.htm#posei_trader.model.data.IndexPriceUpdate"><em>IndexPriceUpdate</em></a>) – The index price update received.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-98">WARNING<a href="#warning-98" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>System method (not intended to be called by user code).</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="handle_instrumentself-instrument-instrument--void-1">handle_instrument(self, Instrument instrument) → void<a href="#handle_instrumentself-instrument-instrument--void-1" class="hash-link" aria-label="Direct link to handle_instrument(self, Instrument instrument) → void" title="Direct link to handle_instrument(self, Instrument instrument) → void">​</a></h4>
<p>Handle the given instrument.</p>
<p>Passes to on_instrument if state is <code>RUNNING</code>.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>instrument</strong> (<a href="../model/instruments/index.htm#posei_trader.model.instruments.Instrument"><em>Instrument</em></a>) – The instrument received.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-99">WARNING<a href="#warning-99" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>System method (not intended to be called by user code).</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="handle_instrument_closeself-instrumentclose-update--void-1">handle_instrument_close(self, InstrumentClose update) → void<a href="#handle_instrument_closeself-instrumentclose-update--void-1" class="hash-link" aria-label="Direct link to handle_instrument_close(self, InstrumentClose update) → void" title="Direct link to handle_instrument_close(self, InstrumentClose update) → void">​</a></h4>
<p>Handle the given instrument close update.</p>
<p>If state is <code>RUNNING</code> then passes to on_instrument_close.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>update</strong> (<a href="../model/data/index.htm#posei_trader.model.data.InstrumentClose"><em>InstrumentClose</em></a>) – The update received.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-100">WARNING<a href="#warning-100" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>System method (not intended to be called by user code).</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="handle_instrument_statusself-instrumentstatus-data--void-1">handle_instrument_status(self, InstrumentStatus data) → void<a href="#handle_instrument_statusself-instrumentstatus-data--void-1" class="hash-link" aria-label="Direct link to handle_instrument_status(self, InstrumentStatus data) → void" title="Direct link to handle_instrument_status(self, InstrumentStatus data) → void">​</a></h4>
<p>Handle the given instrument status update.</p>
<p>If state is <code>RUNNING</code> then passes to on_instrument_status.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>data</strong> (<a href="../model/data/index.htm#posei_trader.model.data.InstrumentStatus"><em>InstrumentStatus</em></a>) – The status update received.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-101">WARNING<a href="#warning-101" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>System method (not intended to be called by user code).</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="handle_instrumentsself-list-instruments--void-1">handle_instruments(self, list instruments) → void<a href="#handle_instrumentsself-list-instruments--void-1" class="hash-link" aria-label="Direct link to handle_instruments(self, list instruments) → void" title="Direct link to handle_instruments(self, list instruments) → void">​</a></h4>
<p>Handle the given instruments data by handling each instrument individually.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>instruments</strong> (<em>list</em> <em>[</em><a href="../model/instruments/index.htm#posei_trader.model.instruments.Instrument"><em>Instrument</em></a> <em>]</em>) – The instruments received.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-102">WARNING<a href="#warning-102" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>System method (not intended to be called by user code).</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="handle_mark_priceself-markpriceupdate-mark_price--void-1">handle_mark_price(self, MarkPriceUpdate mark_price) → void<a href="#handle_mark_priceself-markpriceupdate-mark_price--void-1" class="hash-link" aria-label="Direct link to handle_mark_price(self, MarkPriceUpdate mark_price) → void" title="Direct link to handle_mark_price(self, MarkPriceUpdate mark_price) → void">​</a></h4>
<p>Handle the given mark price update.</p>
<p>If state is <code>RUNNING</code> then passes to on_mark_price.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>mark_price</strong> (<a href="../model/data/index.htm#posei_trader.model.data.MarkPriceUpdate"><em>MarkPriceUpdate</em></a>) – The mark price update received.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-103">WARNING<a href="#warning-103" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>System method (not intended to be called by user code).</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="handle_order_bookself-orderbook-order_book--void-1">handle_order_book(self, OrderBook order_book) → void<a href="#handle_order_bookself-orderbook-order_book--void-1" class="hash-link" aria-label="Direct link to handle_order_book(self, OrderBook order_book) → void" title="Direct link to handle_order_book(self, OrderBook order_book) → void">​</a></h4>
<p>Handle the given order book.</p>
<p>Passes to on_order_book if state is <code>RUNNING</code>.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>order_book</strong> (<a href="../model/book/index.htm#posei_trader.model.book.OrderBook"><em>OrderBook</em></a>) – The order book received.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-104">WARNING<a href="#warning-104" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>System method (not intended to be called by user code).</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="handle_order_book_deltasself-deltas--void-1">handle_order_book_deltas(self, deltas) → void<a href="#handle_order_book_deltasself-deltas--void-1" class="hash-link" aria-label="Direct link to handle_order_book_deltas(self, deltas) → void" title="Direct link to handle_order_book_deltas(self, deltas) → void">​</a></h4>
<p>Handle the given order book deltas.</p>
<p>Passes to on_order_book_deltas if state is <code>RUNNING</code>.
The deltas will be nautilus_pyo3.OrderBookDeltas if the
pyo3_conversion flag was set for the subscription.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>deltas</strong> (<a href="../model/data/index.htm#posei_trader.model.data.OrderBookDeltas"><em>OrderBookDeltas</em></a> <em>or</em> <em>nautilus_pyo3.OrderBookDeltas</em>) – The order book deltas received.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-105">WARNING<a href="#warning-105" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>System method (not intended to be called by user code).</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="handle_order_book_depthself-orderbookdepth10-depth--void-1">handle_order_book_depth(self, OrderBookDepth10 depth) → void<a href="#handle_order_book_depthself-orderbookdepth10-depth--void-1" class="hash-link" aria-label="Direct link to handle_order_book_depth(self, OrderBookDepth10 depth) → void" title="Direct link to handle_order_book_depth(self, OrderBookDepth10 depth) → void">​</a></h4>
<p>Handle the given order book depth</p>
<p>Passes to on_order_book_depth if state is <code>RUNNING</code>.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>depth</strong> (<a href="../model/data/index.htm#posei_trader.model.data.OrderBookDepth10"><em>OrderBookDepth10</em></a>) – The order book depth received.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-106">WARNING<a href="#warning-106" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>System method (not intended to be called by user code).</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="handle_quote_tickself-quotetick-tick--void-1">handle_quote_tick(self, QuoteTick tick) → void<a href="#handle_quote_tickself-quotetick-tick--void-1" class="hash-link" aria-label="Direct link to handle_quote_tick(self, QuoteTick tick) → void" title="Direct link to handle_quote_tick(self, QuoteTick tick) → void">​</a></h4>
<p>Handle the given quote tick.</p>
<p>If state is <code>RUNNING</code> then passes to on_quote_tick.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>tick</strong> (<a href="../model/data/index.htm#posei_trader.model.data.QuoteTick"><em>QuoteTick</em></a>) – The tick received.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-107">WARNING<a href="#warning-107" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>System method (not intended to be called by user code).</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="handle_quote_ticksself-list-ticks--void-1">handle_quote_ticks(self, list ticks) → void<a href="#handle_quote_ticksself-list-ticks--void-1" class="hash-link" aria-label="Direct link to handle_quote_ticks(self, list ticks) → void" title="Direct link to handle_quote_ticks(self, list ticks) → void">​</a></h4>
<p>Handle the given historical quote tick data by handling each tick individually.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>ticks</strong> (<em>list</em> <em>[</em><a href="../model/data/index.htm#posei_trader.model.data.QuoteTick"><em>QuoteTick</em></a> <em>]</em>) – The ticks received.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-108">WARNING<a href="#warning-108" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>System method (not intended to be called by user code).</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="handle_signalself-data-signal--void-1">handle_signal(self, Data signal) → void<a href="#handle_signalself-data-signal--void-1" class="hash-link" aria-label="Direct link to handle_signal(self, Data signal) → void" title="Direct link to handle_signal(self, Data signal) → void">​</a></h4>
<p>Handle the given signal.</p>
<p>If state is <code>RUNNING</code> then passes to on_signal.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>signal</strong> (<a href="../core/index.htm#posei_trader.core.Data"><em>Data</em></a>) – The signal received.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-109">WARNING<a href="#warning-109" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>System method (not intended to be called by user code).</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="handle_trade_tickself-tradetick-tick--void-1">handle_trade_tick(self, TradeTick tick) → void<a href="#handle_trade_tickself-tradetick-tick--void-1" class="hash-link" aria-label="Direct link to handle_trade_tick(self, TradeTick tick) → void" title="Direct link to handle_trade_tick(self, TradeTick tick) → void">​</a></h4>
<p>Handle the given trade tick.</p>
<p>If state is <code>RUNNING</code> then passes to on_trade_tick.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>tick</strong> (<a href="../model/data/index.htm#posei_trader.model.data.TradeTick"><em>TradeTick</em></a>) – The tick received.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-110">WARNING<a href="#warning-110" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>System method (not intended to be called by user code).</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="handle_trade_ticksself-list-ticks--void-1">handle_trade_ticks(self, list ticks) → void<a href="#handle_trade_ticksself-list-ticks--void-1" class="hash-link" aria-label="Direct link to handle_trade_ticks(self, list ticks) → void" title="Direct link to handle_trade_ticks(self, list ticks) → void">​</a></h4>
<p>Handle the given historical trade tick data by handling each tick individually.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>ticks</strong> (<em>list</em> <em>[</em><a href="../model/data/index.htm#posei_trader.model.data.TradeTick"><em>TradeTick</em></a> <em>]</em>) – The ticks received.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-111">WARNING<a href="#warning-111" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>System method (not intended to be called by user code).</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="has_active_tasksself--bool-1">has_active_tasks(self) → bool<a href="#has_active_tasksself--bool-1" class="hash-link" aria-label="Direct link to has_active_tasks(self) → bool" title="Direct link to has_active_tasks(self) → bool">​</a></h4>
<p>Return a value indicating whether there are any active tasks.</p>
<ul>
<li><strong>Return type:</strong>
bool</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="has_any_tasksself--bool-1">has_any_tasks(self) → bool<a href="#has_any_tasksself--bool-1" class="hash-link" aria-label="Direct link to has_any_tasks(self) → bool" title="Direct link to has_any_tasks(self) → bool">​</a></h4>
<p>Return a value indicating whether there are any queued OR active tasks.</p>
<ul>
<li><strong>Return type:</strong>
bool</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="has_pending_requestsself--bool-1">has_pending_requests(self) → bool<a href="#has_pending_requestsself--bool-1" class="hash-link" aria-label="Direct link to has_pending_requests(self) → bool" title="Direct link to has_pending_requests(self) → bool">​</a></h4>
<p>Return whether the actor is pending processing for any requests.</p>
<ul>
<li><strong>Returns:</strong>
True if any requests are pending, else False.</li>
<li><strong>Return type:</strong>
bool</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="has_queued_tasksself--bool-1">has_queued_tasks(self) → bool<a href="#has_queued_tasksself--bool-1" class="hash-link" aria-label="Direct link to has_queued_tasks(self) → bool" title="Direct link to has_queued_tasks(self) → bool">​</a></h4>
<p>Return a value indicating whether there are any queued tasks.</p>
<ul>
<li><strong>Return type:</strong>
bool</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="id-2">id<a href="#id-2" class="hash-link" aria-label="Direct link to id" title="Direct link to id">​</a></h4>
<p>The components ID.</p>
<ul>
<li><strong>Returns:</strong>
ComponentId</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="indicators_initializedself--bool-1">indicators_initialized(self) → bool<a href="#indicators_initializedself--bool-1" class="hash-link" aria-label="Direct link to indicators_initialized(self) → bool" title="Direct link to indicators_initialized(self) → bool">​</a></h4>
<p>Return a value indicating whether all indicators are initialized.</p>
<ul>
<li><strong>Returns:</strong>
True if all initialized, else False</li>
<li><strong>Return type:</strong>
bool</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="is_degraded-2">is_degraded<a href="#is_degraded-2" class="hash-link" aria-label="Direct link to is_degraded" title="Direct link to is_degraded">​</a></h4>
<p>bool</p>
<p>Return whether the current component state is <code>DEGRADED</code>.</p>
<ul>
<li><strong>Return type:</strong>
bool</li>
<li><strong>Type:</strong>
Component.is_degraded</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="is_disposed-2">is_disposed<a href="#is_disposed-2" class="hash-link" aria-label="Direct link to is_disposed" title="Direct link to is_disposed">​</a></h4>
<p>bool</p>
<p>Return whether the current component state is <code>DISPOSED</code>.</p>
<ul>
<li><strong>Return type:</strong>
bool</li>
<li><strong>Type:</strong>
Component.is_disposed</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="is_faulted-2">is_faulted<a href="#is_faulted-2" class="hash-link" aria-label="Direct link to is_faulted" title="Direct link to is_faulted">​</a></h4>
<p>bool</p>
<p>Return whether the current component state is <code>FAULTED</code>.</p>
<ul>
<li><strong>Return type:</strong>
bool</li>
<li><strong>Type:</strong>
Component.is_faulted</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="is_initialized-2">is_initialized<a href="#is_initialized-2" class="hash-link" aria-label="Direct link to is_initialized" title="Direct link to is_initialized">​</a></h4>
<p>bool</p>
<p>Return whether the component has been initialized (component.state &gt;= <code>INITIALIZED</code>).</p>
<ul>
<li><strong>Return type:</strong>
bool</li>
<li><strong>Type:</strong>
Component.is_initialized</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="is_pending_requestself-uuid4-request_id--bool-1">is_pending_request(self, UUID4 request_id) → bool<a href="#is_pending_requestself-uuid4-request_id--bool-1" class="hash-link" aria-label="Direct link to is_pending_request(self, UUID4 request_id) → bool" title="Direct link to is_pending_request(self, UUID4 request_id) → bool">​</a></h4>
<p>Return whether the request for the given identifier is pending processing.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>request_id</strong> (<a href="../core/index.htm#posei_trader.core.UUID4"><em>UUID4</em></a>) – The request ID to check.</li>
<li><strong>Returns:</strong>
True if request is pending, else False.</li>
<li><strong>Return type:</strong>
bool</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="is_running-2">is_running<a href="#is_running-2" class="hash-link" aria-label="Direct link to is_running" title="Direct link to is_running">​</a></h4>
<p>bool</p>
<p>Return whether the current component state is <code>RUNNING</code>.</p>
<ul>
<li><strong>Return type:</strong>
bool</li>
<li><strong>Type:</strong>
Component.is_running</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="is_stopped-2">is_stopped<a href="#is_stopped-2" class="hash-link" aria-label="Direct link to is_stopped" title="Direct link to is_stopped">​</a></h4>
<p>bool</p>
<p>Return whether the current component state is <code>STOPPED</code>.</p>
<ul>
<li><strong>Return type:</strong>
bool</li>
<li><strong>Type:</strong>
Component.is_stopped</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="loadself-dict-state--void-1">load(self, dict state) → void<a href="#loadself-dict-state--void-1" class="hash-link" aria-label="Direct link to load(self, dict state) → void" title="Direct link to load(self, dict state) → void">​</a></h4>
<p>Load the actor/strategy state from the give state dictionary.</p>
<p>Calls on_load and passes the state.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>state</strong> (<em>dict</em> *[*<em>str</em> <em>,</em> <em>bytes</em> <em>]</em>) – The strategy state to load.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-112">WARNING<a href="#warning-112" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>Exceptions raised will be caught, logged, and reraised.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="log-1">log<a href="#log-1" class="hash-link" aria-label="Direct link to log" title="Direct link to log">​</a></h4>
<p>The actors logger.</p>
<ul>
<li><strong>Returns:</strong>
Logger</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="msgbus-1">msgbus<a href="#msgbus-1" class="hash-link" aria-label="Direct link to msgbus" title="Direct link to msgbus">​</a></h4>
<p>The message bus for the actor (if registered).</p>
<ul>
<li><strong>Returns:</strong>
MessageBus or <code>None</code></li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="on_barself-bar-bar--void-1">on_bar(self, Bar bar) → void<a href="#on_barself-bar-bar--void-1" class="hash-link" aria-label="Direct link to on_bar(self, Bar bar) → void" title="Direct link to on_bar(self, Bar bar) → void">​</a></h4>
<p>Actions to be performed when running and receives a bar.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>bar</strong> (<a href="../model/data/index.htm#posei_trader.model.data.Bar"><em>Bar</em></a>) – The bar received.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-113">WARNING<a href="#warning-113" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>System method (not intended to be called by user code).</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="on_dataself-data--void-1">on_data(self, data) → void<a href="#on_dataself-data--void-1" class="hash-link" aria-label="Direct link to on_data(self, data) → void" title="Direct link to on_data(self, data) → void">​</a></h4>
<p>Actions to be performed when running and receives data.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>data</strong> (<a href="../core/index.htm#posei_trader.core.Data"><em>Data</em></a>) – The data received.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-114">WARNING<a href="#warning-114" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>System method (not intended to be called by user code).</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="on_degradeself--void-1">on_degrade(self) → void<a href="#on_degradeself--void-1" class="hash-link" aria-label="Direct link to on_degrade(self) → void" title="Direct link to on_degrade(self) → void">​</a></h4>
<p>Actions to be performed on degrade.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-115">WARNING<a href="#warning-115" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>System method (not intended to be called by user code).</p>
<p>Should be overridden in the actor implementation.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="on_disposeself--void-1">on_dispose(self) → void<a href="#on_disposeself--void-1" class="hash-link" aria-label="Direct link to on_dispose(self) → void" title="Direct link to on_dispose(self) → void">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="on_eventself-event-event--void-1">on_event(self, Event event) → void<a href="#on_eventself-event-event--void-1" class="hash-link" aria-label="Direct link to on_event(self, Event event) → void" title="Direct link to on_event(self, Event event) → void">​</a></h4>
<p>Handle the given event.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>event</strong> (<a href="../core/index.htm#posei_trader.core.Event"><em>Event</em></a>) – The received event to handle.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="on_faultself--void-1">on_fault(self) → void<a href="#on_faultself--void-1" class="hash-link" aria-label="Direct link to on_fault(self) → void" title="Direct link to on_fault(self) → void">​</a></h4>
<p>Actions to be performed on fault.</p>
<p>Cleanup any resources used by the actor here.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-116">WARNING<a href="#warning-116" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>System method (not intended to be called by user code).</p>
<p>Should be overridden in the actor implementation.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="on_historical_dataself-data--void-1">on_historical_data(self, data) → void<a href="#on_historical_dataself-data--void-1" class="hash-link" aria-label="Direct link to on_historical_data(self, data) → void" title="Direct link to on_historical_data(self, data) → void">​</a></h4>
<p>Actions to be performed when running and receives historical data.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>data</strong> (<a href="../core/index.htm#posei_trader.core.Data"><em>Data</em></a>) – The historical data received.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-117">WARNING<a href="#warning-117" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>System method (not intended to be called by user code).</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="on_index_priceself-indexpriceupdate-index_price--void-1">on_index_price(self, IndexPriceUpdate index_price) → void<a href="#on_index_priceself-indexpriceupdate-index_price--void-1" class="hash-link" aria-label="Direct link to on_index_price(self, IndexPriceUpdate index_price) → void" title="Direct link to on_index_price(self, IndexPriceUpdate index_price) → void">​</a></h4>
<p>Actions to be performed when running and receives an index price update.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>index_price</strong> (<a href="../model/data/index.htm#posei_trader.model.data.IndexPriceUpdate"><em>IndexPriceUpdate</em></a>) – The index price update received.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-118">WARNING<a href="#warning-118" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>System method (not intended to be called by user code).</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="on_instrumentself-instrument-instrument--void-1">on_instrument(self, Instrument instrument) → void<a href="#on_instrumentself-instrument-instrument--void-1" class="hash-link" aria-label="Direct link to on_instrument(self, Instrument instrument) → void" title="Direct link to on_instrument(self, Instrument instrument) → void">​</a></h4>
<p>Actions to be performed when running and receives an instrument.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>instrument</strong> (<a href="../model/instruments/index.htm#posei_trader.model.instruments.Instrument"><em>Instrument</em></a>) – The instrument received.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-119">WARNING<a href="#warning-119" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>System method (not intended to be called by user code).</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="on_instrument_closeself-instrumentclose-update--void-1">on_instrument_close(self, InstrumentClose update) → void<a href="#on_instrument_closeself-instrumentclose-update--void-1" class="hash-link" aria-label="Direct link to on_instrument_close(self, InstrumentClose update) → void" title="Direct link to on_instrument_close(self, InstrumentClose update) → void">​</a></h4>
<p>Actions to be performed when running and receives an instrument close
update.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>update</strong> (<a href="../model/data/index.htm#posei_trader.model.data.InstrumentClose"><em>InstrumentClose</em></a>) – The instrument close received.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-120">WARNING<a href="#warning-120" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>System method (not intended to be called by user code).</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="on_instrument_statusself-instrumentstatus-data--void-1">on_instrument_status(self, InstrumentStatus data) → void<a href="#on_instrument_statusself-instrumentstatus-data--void-1" class="hash-link" aria-label="Direct link to on_instrument_status(self, InstrumentStatus data) → void" title="Direct link to on_instrument_status(self, InstrumentStatus data) → void">​</a></h4>
<p>Actions to be performed when running and receives an instrument status
update.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>data</strong> (<a href="../model/data/index.htm#posei_trader.model.data.InstrumentStatus"><em>InstrumentStatus</em></a>) – The instrument status update received.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-121">WARNING<a href="#warning-121" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>System method (not intended to be called by user code).</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="on_loadself-dict-state--void-1">on_load(self, dict state) → void<a href="#on_loadself-dict-state--void-1" class="hash-link" aria-label="Direct link to on_load(self, dict state) → void" title="Direct link to on_load(self, dict state) → void">​</a></h4>
<p>Actions to be performed when the actor state is loaded.</p>
<p>Saved state values will be contained in the give state dictionary.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>state</strong> (<em>dict</em> *[*<em>str</em> <em>,</em> <em>bytes</em> <em>]</em>) – The strategy state to load.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-122">WARNING<a href="#warning-122" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>System method (not intended to be called by user code).</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="on_mark_priceself-markpriceupdate-mark_price--void-1">on_mark_price(self, MarkPriceUpdate mark_price) → void<a href="#on_mark_priceself-markpriceupdate-mark_price--void-1" class="hash-link" aria-label="Direct link to on_mark_price(self, MarkPriceUpdate mark_price) → void" title="Direct link to on_mark_price(self, MarkPriceUpdate mark_price) → void">​</a></h4>
<p>Actions to be performed when running and receives a mark price update.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>mark_price</strong> (<a href="../model/data/index.htm#posei_trader.model.data.MarkPriceUpdate"><em>MarkPriceUpdate</em></a>) – The mark price update received.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-123">WARNING<a href="#warning-123" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>System method (not intended to be called by user code).</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="on_order_bookself-orderbook-order_book--void-1">on_order_book(self, OrderBook order_book) → void<a href="#on_order_bookself-orderbook-order_book--void-1" class="hash-link" aria-label="Direct link to on_order_book(self, OrderBook order_book) → void" title="Direct link to on_order_book(self, OrderBook order_book) → void">​</a></h4>
<p>Actions to be performed when running and receives an order book.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>order_book</strong> (<a href="../model/book/index.htm#posei_trader.model.book.OrderBook"><em>OrderBook</em></a>) – The order book received.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-124">WARNING<a href="#warning-124" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>System method (not intended to be called by user code).</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="on_order_book_deltasself-deltas--void-1">on_order_book_deltas(self, deltas) → void<a href="#on_order_book_deltasself-deltas--void-1" class="hash-link" aria-label="Direct link to on_order_book_deltas(self, deltas) → void" title="Direct link to on_order_book_deltas(self, deltas) → void">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="on_order_book_depthself-depth--void-1">on_order_book_depth(self, depth) → void<a href="#on_order_book_depthself-depth--void-1" class="hash-link" aria-label="Direct link to on_order_book_depth(self, depth) → void" title="Direct link to on_order_book_depth(self, depth) → void">​</a></h4>
<p>Actions to be performed when running and receives an order book depth.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>depth</strong> (<a href="../model/data/index.htm#posei_trader.model.data.OrderBookDepth10"><em>OrderBookDepth10</em></a>) – The order book depth received.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-125">WARNING<a href="#warning-125" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>System method (not intended to be called by user code).</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="on_quote_tickself-quotetick-tick--void-1">on_quote_tick(self, QuoteTick tick) → void<a href="#on_quote_tickself-quotetick-tick--void-1" class="hash-link" aria-label="Direct link to on_quote_tick(self, QuoteTick tick) → void" title="Direct link to on_quote_tick(self, QuoteTick tick) → void">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="on_resetself--void-1">on_reset(self) → void<a href="#on_resetself--void-1" class="hash-link" aria-label="Direct link to on_reset(self) → void" title="Direct link to on_reset(self) → void">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="on_resumeself--void-1">on_resume(self) → void<a href="#on_resumeself--void-1" class="hash-link" aria-label="Direct link to on_resume(self) → void" title="Direct link to on_resume(self) → void">​</a></h4>
<p>Actions to be performed on resume.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-126">WARNING<a href="#warning-126" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>System method (not intended to be called by user code).</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="on_saveself--dict-1">on_save(self) → dict<a href="#on_saveself--dict-1" class="hash-link" aria-label="Direct link to on_save(self) → dict" title="Direct link to on_save(self) → dict">​</a></h4>
<p>Actions to be performed when the actor state is saved.</p>
<p>Create and return a state dictionary of values to be saved.</p>
<ul>
<li><strong>Returns:</strong>
The strategy state to save.</li>
<li><strong>Return type:</strong>
dict[str, bytes]</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-127">WARNING<a href="#warning-127" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>System method (not intended to be called by user code).</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="on_signalself-signal--void-1">on_signal(self, signal) → void<a href="#on_signalself-signal--void-1" class="hash-link" aria-label="Direct link to on_signal(self, signal) → void" title="Direct link to on_signal(self, signal) → void">​</a></h4>
<p>Actions to be performed when running and receives signal data.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>signal</strong> (<a href="../core/index.htm#posei_trader.core.Data"><em>Data</em></a>) – The signal received.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-128">WARNING<a href="#warning-128" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>System method (not intended to be called by user code).</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="on_startself--void-1">on_start(self) → void<a href="#on_startself--void-1" class="hash-link" aria-label="Direct link to on_start(self) → void" title="Direct link to on_start(self) → void">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="on_stopself--void-1">on_stop(self) → void<a href="#on_stopself--void-1" class="hash-link" aria-label="Direct link to on_stop(self) → void" title="Direct link to on_stop(self) → void">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="on_trade_tickself-tradetick-tick--void-1">on_trade_tick(self, TradeTick tick) → void<a href="#on_trade_tickself-tradetick-tick--void-1" class="hash-link" aria-label="Direct link to on_trade_tick(self, TradeTick tick) → void" title="Direct link to on_trade_tick(self, TradeTick tick) → void">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="pending_requestsself--set-1">pending_requests(self) → set<a href="#pending_requestsself--set-1" class="hash-link" aria-label="Direct link to pending_requests(self) → set" title="Direct link to pending_requests(self) → set">​</a></h4>
<p>Return the request IDs which are currently pending processing.</p>
<ul>
<li><strong>Return type:</strong>
set[<a href="../core/index.htm#posei_trader.core.UUID4">UUID4</a>]</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="portfolio-1">portfolio<a href="#portfolio-1" class="hash-link" aria-label="Direct link to portfolio" title="Direct link to portfolio">​</a></h4>
<p>The read-only portfolio for the actor.</p>
<ul>
<li><strong>Returns:</strong>
PortfolioFacade</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="publish_dataself-datatype-data_type-data-data--void-1">publish_data(self, DataType data_type, Data data) → void<a href="#publish_dataself-datatype-data_type-data-data--void-1" class="hash-link" aria-label="Direct link to publish_data(self, DataType data_type, Data data) → void" title="Direct link to publish_data(self, DataType data_type, Data data) → void">​</a></h4>
<p>Publish the given data to the message bus.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>data_type</strong> (<a href="../model/data/index.htm#posei_trader.model.data.DataType"><em>DataType</em></a>) – The data type being published.</li>
<li><strong>data</strong> (<a href="../core/index.htm#posei_trader.core.Data"><em>Data</em></a>) – The data to publish.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="publish_signalself-str-name-value-uint64_t-ts_event0--void-1">publish_signal(self, str name, value, uint64_t ts_event=0) → void<a href="#publish_signalself-str-name-value-uint64_t-ts_event0--void-1" class="hash-link" aria-label="Direct link to publish_signal(self, str name, value, uint64_t ts_event=0) → void" title="Direct link to publish_signal(self, str name, value, uint64_t ts_event=0) → void">​</a></h4>
<p>Publish the given value as a signal to the message bus.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>name</strong> (<em>str</em>) – The name of the signal being published.
The signal name will be converted to title case, with each word capitalized
(e.g., ‘example’ becomes ‘SignalExample’).</li>
<li><strong>value</strong> (<em>object</em>) – The signal data to publish.</li>
<li><strong>ts_event</strong> (<em>uint64_t</em> <em>,</em> <em>optional</em>) – UNIX timestamp (nanoseconds) when the signal event occurred.
If <code>None</code> then will timestamp current time.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="queue_for_executorself-func-callable-any-tuple-argsnone-dict-kwargsnone-1">queue_for_executor(self, func: Callable[..., Any], tuple args=None, dict kwargs=None)<a href="#queue_for_executorself-func-callable-any-tuple-argsnone-dict-kwargsnone-1" class="hash-link" aria-label="Direct link to queue_for_executor(self, func: Callable[..., Any], tuple args=None, dict kwargs=None)" title="Direct link to queue_for_executor(self, func: Callable[..., Any], tuple args=None, dict kwargs=None)">​</a></h4>
<p>Queues the callable func to be executed as fn(*args, **kwargs) sequentially.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>func</strong> (<em>Callable</em>) – The function to be executed.</li>
<li><strong>args</strong> (<em>positional arguments</em>) – The positional arguments for the call to func.</li>
<li><strong>kwargs</strong> (<em>arbitrary keyword arguments</em>) – The keyword arguments for the call to func.</li>
</ul>
</li>
<li><strong>Raises:</strong>
<strong>TypeError</strong> – If func is not of type Callable.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="queued_task_idsself--list-1">queued_task_ids(self) → list<a href="#queued_task_idsself--list-1" class="hash-link" aria-label="Direct link to queued_task_ids(self) → list" title="Direct link to queued_task_ids(self) → list">​</a></h4>
<p>Return the queued task identifiers.</p>
<ul>
<li><strong>Return type:</strong>
list[<a href="../common/index.htm#posei_trader.common.executor.TaskId">TaskId</a>]</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="register_baseself-portfoliofacade-portfolio-messagebus-msgbus-cachefacade-cache-clock-clock--void-1">register_base(self, PortfolioFacade portfolio, MessageBus msgbus, CacheFacade cache, Clock clock) → void<a href="#register_baseself-portfoliofacade-portfolio-messagebus-msgbus-cachefacade-cache-clock-clock--void-1" class="hash-link" aria-label="Direct link to register_base(self, PortfolioFacade portfolio, MessageBus msgbus, CacheFacade cache, Clock clock) → void" title="Direct link to register_base(self, PortfolioFacade portfolio, MessageBus msgbus, CacheFacade cache, Clock clock) → void">​</a></h4>
<p>Register with a trader.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>portfolio</strong> (<a href="../portfolio/index.htm#posei_trader.portfolio.PortfolioFacade"><em>PortfolioFacade</em></a>) – The read-only portfolio for the actor.</li>
<li><strong>msgbus</strong> (<a href="../common/index.htm#posei_trader.common.component.MessageBus"><em>MessageBus</em></a>) – The message bus for the actor.</li>
<li><strong>cache</strong> (<a href="../cache/index.htm#posei_trader.cache.base.CacheFacade"><em>CacheFacade</em></a>) – The read-only cache for the actor.</li>
<li><strong>clock</strong> (<a href="../common/index.htm#posei_trader.common.component.Clock"><em>Clock</em></a>) – The clock for the actor.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-129">WARNING<a href="#warning-129" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>System method (not intended to be called by user code).</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="register_executorself-loop-asyncioabstracteventloop-executor-executor--void-1">register_executor(self, loop: asyncio.AbstractEventLoop, executor: Executor) → void<a href="#register_executorself-loop-asyncioabstracteventloop-executor-executor--void-1" class="hash-link" aria-label="Direct link to register_executor(self, loop: asyncio.AbstractEventLoop, executor: Executor) → void" title="Direct link to register_executor(self, loop: asyncio.AbstractEventLoop, executor: Executor) → void">​</a></h4>
<p>Register the given Executor for the actor.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>loop</strong> (<em>asyncio.AbstractEventLoop</em>) – The event loop of the application.</li>
<li><strong>executor</strong> (<em>concurrent.futures.Executor</em>) – The executor to register.</li>
</ul>
</li>
<li><strong>Raises:</strong>
<strong>TypeError</strong> – If executor is not of type concurrent.futures.Executor</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="register_indicator_for_barsself-bartype-bar_type-indicator-indicator--void-1">register_indicator_for_bars(self, BarType bar_type, Indicator indicator) → void<a href="#register_indicator_for_barsself-bartype-bar_type-indicator-indicator--void-1" class="hash-link" aria-label="Direct link to register_indicator_for_bars(self, BarType bar_type, Indicator indicator) → void" title="Direct link to register_indicator_for_bars(self, BarType bar_type, Indicator indicator) → void">​</a></h4>
<p>Register the given indicator with the actor/strategy to receive bar data for the
given bar type.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>bar_type</strong> (<a href="../model/data/index.htm#posei_trader.model.data.BarType"><em>BarType</em></a>) – The bar type for bar updates.</li>
<li><strong>indicator</strong> (<a href="../indicators/index.htm#posei_trader.indicators.base.indicator.Indicator"><em>Indicator</em></a>) – The indicator to register.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="register_indicator_for_quote_ticksself-instrumentid-instrument_id-indicator-indicator--void-1">register_indicator_for_quote_ticks(self, InstrumentId instrument_id, Indicator indicator) → void<a href="#register_indicator_for_quote_ticksself-instrumentid-instrument_id-indicator-indicator--void-1" class="hash-link" aria-label="Direct link to register_indicator_for_quote_ticks(self, InstrumentId instrument_id, Indicator indicator) → void" title="Direct link to register_indicator_for_quote_ticks(self, InstrumentId instrument_id, Indicator indicator) → void">​</a></h4>
<p>Register the given indicator with the actor/strategy to receive quote tick
data for the given instrument ID.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>instrument_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.InstrumentId"><em>InstrumentId</em></a>) – The instrument ID for tick updates.</li>
<li><strong>indicator</strong> (<a href="../indicators/index.htm#posei_trader.indicators.base.indicator.Indicator"><em>Indicator</em></a>) – The indicator to register.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="register_indicator_for_trade_ticksself-instrumentid-instrument_id-indicator-indicator--void-1">register_indicator_for_trade_ticks(self, InstrumentId instrument_id, Indicator indicator) → void<a href="#register_indicator_for_trade_ticksself-instrumentid-instrument_id-indicator-indicator--void-1" class="hash-link" aria-label="Direct link to register_indicator_for_trade_ticks(self, InstrumentId instrument_id, Indicator indicator) → void" title="Direct link to register_indicator_for_trade_ticks(self, InstrumentId instrument_id, Indicator indicator) → void">​</a></h4>
<p>Register the given indicator with the actor/strategy to receive trade tick
data for the given instrument ID.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>instrument_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.InstrumentId"><em>InstrumentId</em></a>) – The instrument ID for tick updates.</li>
<li><strong>indicator</strong> (<em>indicator</em>) – The indicator to register.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="register_warning_eventself-type-event--void-1">register_warning_event(self, type event) → void<a href="#register_warning_eventself-type-event--void-1" class="hash-link" aria-label="Direct link to register_warning_event(self, type event) → void" title="Direct link to register_warning_event(self, type event) → void">​</a></h4>
<p>Register the given event type for warning log levels.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>event</strong> (<em>type</em>) – The event class to register.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="registered_indicators-1">registered_indicators<a href="#registered_indicators-1" class="hash-link" aria-label="Direct link to registered_indicators" title="Direct link to registered_indicators">​</a></h4>
<p>Return the registered indicators for the strategy.</p>
<ul>
<li><strong>Return type:</strong>
list[<a href="../indicators/index.htm#posei_trader.indicators.base.indicator.Indicator">Indicator</a>]</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="request_aggregated_barsself-list-bar_types-datetime-startnone-datetime-endnone-int-limit0-clientid-client_idnone-callback-callableuuid4-none--none--none-bool-include_external_datafalse-bool-update_subscriptionsfalse-update_catalog-bool--false-dict-paramsnone--uuid4-1">request_aggregated_bars(self, list bar_types, datetime start=None, datetime end=None, int limit=0, ClientId client_id=None, callback: Callable[[UUID4], None] | None = None, bool include_external_data=False, bool update_subscriptions=False, update_catalog: bool = False, dict params=None) → <a href="../core/index.htm#posei_trader.core.UUID4">UUID4</a><a href="#request_aggregated_barsself-list-bar_types-datetime-startnone-datetime-endnone-int-limit0-clientid-client_idnone-callback-callableuuid4-none--none--none-bool-include_external_datafalse-bool-update_subscriptionsfalse-update_catalog-bool--false-dict-paramsnone--uuid4-1" class="hash-link" aria-label="Direct link to request_aggregated_barsself-list-bar_types-datetime-startnone-datetime-endnone-int-limit0-clientid-client_idnone-callback-callableuuid4-none--none--none-bool-include_external_datafalse-bool-update_subscriptionsfalse-update_catalog-bool--false-dict-paramsnone--uuid4-1" title="Direct link to request_aggregated_barsself-list-bar_types-datetime-startnone-datetime-endnone-int-limit0-clientid-client_idnone-callback-callableuuid4-none--none--none-bool-include_external_datafalse-bool-update_subscriptionsfalse-update_catalog-bool--false-dict-paramsnone--uuid4-1">​</a></h4>
<p>Request historical aggregated Bar data for multiple bar types.
The first bar is used to determine which market data type will be queried.
This can either be quotes, trades or bars. If bars are queried,
the first bar type needs to have a composite bar that is external (i.e. not internal/aggregated).
This external bar type will be queried.</p>
<p>If end is <code>None</code> then will request up to the most recent data.</p>
<p>Once the response is received, the bar data is forwarded from the message bus
to the on_historical_data handler. Any tick data used for aggregation is also
forwarded to the on_historical_data handler.</p>
<p>If the request fails, then an error is logged.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>bar_types</strong> (<em>list</em> <em>[</em><a href="../model/data/index.htm#posei_trader.model.data.BarType"><em>BarType</em></a> <em>]</em>) – The list of bar types for the request. Composite bars can also be used and need to
figure in the list after a BarType on which it depends.</li>
<li><strong>start</strong> (<em>datetime</em> <em>,</em> <em>optional</em>) – The start datetime (UTC) of request time range.
The inclusiveness depends on individual data client implementation.</li>
<li><strong>end</strong> (<em>datetime</em> <em>,</em> <em>optional</em>) – The end datetime (UTC) of request time range.
The inclusiveness depends on individual data client implementation.</li>
<li><strong>limit</strong> (<em>int</em> <em>,</em> <em>optional</em>) – The limit on the amount of data received (quote ticks, trade ticks or bars).</li>
<li><strong>client_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.ClientId"><em>ClientId</em></a> <em>,</em> <em>optional</em>) – The specific client ID for the command.
If <code>None</code> then will be inferred from the venue in the instrument ID.</li>
<li><strong>callback</strong> (<em>Callable</em> <em>[</em> <em>[</em><a href="../core/index.htm#posei_trader.core.UUID4"><em>UUID4</em></a> <em>]</em> <em>,</em> <em>None</em> <em>]</em> <em>,</em> <em>optional</em>) – The registered callback, to be called with the request ID when the response has
completed processing.</li>
<li><strong>include_external_data</strong> (<em>bool</em> <em>,</em> <em>default False</em>) – If True, includes the queried external data in the response.</li>
<li><strong>update_subscriptions</strong> (<em>bool</em> <em>,</em> <em>default False</em>) – If True, updates the aggregators of any existing or future subscription with the queried external data.</li>
<li><strong>update_catalog</strong> (<em>bool</em> <em>,</em> <em>optional</em>) – Whether to update a catalog with the received data.</li>
<li><strong>params</strong> (<em>dict</em> *[*<em>str</em> <em>,</em> <em>Any</em> <em>]</em> <em>,</em> <em>optional</em>) – Additional parameters potentially used by a specific client.</li>
</ul>
</li>
<li><strong>Returns:</strong>
The request_id for the request.</li>
<li><strong>Return type:</strong>
<a href="../core/index.htm#posei_trader.core.UUID4">UUID4</a></li>
<li><strong>Raises:</strong>
<ul>
<li><strong>ValueError</strong> – If start is not None and &gt; current timestamp (now).</li>
<li><strong>ValueError</strong> – If end is not None and &gt; current timestamp (now).</li>
<li><strong>ValueError</strong> – If start and end are not None and start is &gt;= end.</li>
<li><strong>ValueError</strong> – If bar_types is empty.</li>
<li><strong>TypeError</strong> – If callback is not None and not of type Callable.</li>
<li><strong>TypeError</strong> – If bar_types is empty or contains elements not of type BarType.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="request_barsself-bartype-bar_type-datetime-startnone-datetime-endnone-int-limit0-clientid-client_idnone-callback-callableuuid4-none--none--none-update_catalog-bool--false-dict-paramsnone--uuid4-1">request_bars(self, BarType bar_type, datetime start=None, datetime end=None, int limit=0, ClientId client_id=None, callback: Callable[[UUID4], None] | None = None, update_catalog: bool = False, dict params=None) → <a href="../core/index.htm#posei_trader.core.UUID4">UUID4</a><a href="#request_barsself-bartype-bar_type-datetime-startnone-datetime-endnone-int-limit0-clientid-client_idnone-callback-callableuuid4-none--none--none-update_catalog-bool--false-dict-paramsnone--uuid4-1" class="hash-link" aria-label="Direct link to request_barsself-bartype-bar_type-datetime-startnone-datetime-endnone-int-limit0-clientid-client_idnone-callback-callableuuid4-none--none--none-update_catalog-bool--false-dict-paramsnone--uuid4-1" title="Direct link to request_barsself-bartype-bar_type-datetime-startnone-datetime-endnone-int-limit0-clientid-client_idnone-callback-callableuuid4-none--none--none-update_catalog-bool--false-dict-paramsnone--uuid4-1">​</a></h4>
<p>Request historical Bar data.</p>
<p>If end is <code>None</code> then will request up to the most recent data.</p>
<p>Once the response is received, the bar data is forwarded from the message bus
to the on_historical_data handler.</p>
<p>If the request fails, then an error is logged.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>bar_type</strong> (<a href="../model/data/index.htm#posei_trader.model.data.BarType"><em>BarType</em></a>) – The bar type for the request.</li>
<li><strong>start</strong> (<em>datetime</em> <em>,</em> <em>optional</em>) – The start datetime (UTC) of request time range.
The inclusiveness depends on individual data client implementation.</li>
<li><strong>end</strong> (<em>datetime</em> <em>,</em> <em>optional</em>) – The end datetime (UTC) of request time range.
The inclusiveness depends on individual data client implementation.</li>
<li><strong>limit</strong> (<em>int</em> <em>,</em> <em>optional</em>) – The limit on the amount of bars received.</li>
<li><strong>client_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.ClientId"><em>ClientId</em></a> <em>,</em> <em>optional</em>) – The specific client ID for the command.
If <code>None</code> then will be inferred from the venue in the instrument ID.</li>
<li><strong>callback</strong> (<em>Callable</em> <em>[</em> <em>[</em><a href="../core/index.htm#posei_trader.core.UUID4"><em>UUID4</em></a> <em>]</em> <em>,</em> <em>None</em> <em>]</em> <em>,</em> <em>optional</em>) – The registered callback, to be called with the request ID when the response has
completed processing.</li>
<li><strong>update_catalog</strong> (<em>bool</em> <em>,</em> <em>optional</em>) – Whether to update a catalog with the received data.</li>
<li><strong>params</strong> (<em>dict</em> *[*<em>str</em> <em>,</em> <em>Any</em> <em>]</em> <em>,</em> <em>optional</em>) – Additional parameters potentially used by a specific client.</li>
</ul>
</li>
<li><strong>Returns:</strong>
The request_id for the request.</li>
<li><strong>Return type:</strong>
<a href="../core/index.htm#posei_trader.core.UUID4">UUID4</a></li>
<li><strong>Raises:</strong>
<ul>
<li><strong>ValueError</strong> – If start is not None and &gt; current timestamp (now).</li>
<li><strong>ValueError</strong> – If end is not None and &gt; current timestamp (now).</li>
<li><strong>ValueError</strong> – If start and end are not None and start is &gt;= end.</li>
<li><strong>TypeError</strong> – If callback is not None and not of type Callable.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="request_dataself-datatype-data_type-clientid-client_id-instrumentid-instrument_idnone-datetime-startnone-datetime-endnone-int-limit0-callback-callableuuid4-none--none--none-update_catalog-bool--false-dict-paramsnone--uuid4-1">request_data(self, DataType data_type, ClientId client_id, InstrumentId instrument_id=None, datetime start=None, datetime end=None, int limit=0, callback: Callable[[UUID4], None] | None = None, update_catalog: bool = False, dict params=None) → <a href="../core/index.htm#posei_trader.core.UUID4">UUID4</a><a href="#request_dataself-datatype-data_type-clientid-client_id-instrumentid-instrument_idnone-datetime-startnone-datetime-endnone-int-limit0-callback-callableuuid4-none--none--none-update_catalog-bool--false-dict-paramsnone--uuid4-1" class="hash-link" aria-label="Direct link to request_dataself-datatype-data_type-clientid-client_id-instrumentid-instrument_idnone-datetime-startnone-datetime-endnone-int-limit0-callback-callableuuid4-none--none--none-update_catalog-bool--false-dict-paramsnone--uuid4-1" title="Direct link to request_dataself-datatype-data_type-clientid-client_id-instrumentid-instrument_idnone-datetime-startnone-datetime-endnone-int-limit0-callback-callableuuid4-none--none--none-update_catalog-bool--false-dict-paramsnone--uuid4-1">​</a></h4>
<p>Request custom data for the given data type from the given data client.</p>
<p>Once the response is received, the data is forwarded from the message bus
to the on_historical_data handler.</p>
<p>If the request fails, then an error is logged.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>data_type</strong> (<a href="../model/data/index.htm#posei_trader.model.data.DataType"><em>DataType</em></a>) – The data type for the request.</li>
<li><strong>client_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.ClientId"><em>ClientId</em></a>) – The data client ID.</li>
<li><strong>start</strong> (<em>datetime</em> <em>,</em> <em>optional</em>) – The start datetime (UTC) of request time range.
The inclusiveness depends on individual data client implementation.</li>
<li><strong>end</strong> (<em>datetime</em> <em>,</em> <em>optional</em>) – The end datetime (UTC) of request time range.
The inclusiveness depends on individual data client implementation.</li>
<li><strong>limit</strong> (<em>int</em> <em>,</em> <em>optional</em>) – The limit on the amount of data points received.</li>
<li><strong>callback</strong> (<em>Callable</em> <em>[</em> <em>[</em><a href="../core/index.htm#posei_trader.core.UUID4"><em>UUID4</em></a> <em>]</em> <em>,</em> <em>None</em> <em>]</em> <em>,</em> <em>optional</em>) – The registered callback, to be called with the request ID when the response has
completed processing.</li>
<li><strong>update_catalog</strong> (<em>bool</em> <em>,</em> <em>optional</em>) – Whether to update a catalog with the received data.</li>
<li><strong>params</strong> (<em>dict</em> *[*<em>str</em> <em>,</em> <em>Any</em> <em>]</em> <em>,</em> <em>optional</em>) – Additional parameters potentially used by a specific client.</li>
</ul>
</li>
<li><strong>Returns:</strong>
The request_id for the request.</li>
<li><strong>Return type:</strong>
<a href="../core/index.htm#posei_trader.core.UUID4">UUID4</a></li>
<li><strong>Raises:</strong>
<strong>TypeError</strong> – If callback is not None and not of type Callable.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="request_instrumentself-instrumentid-instrument_id-datetime-startnone-datetime-endnone-clientid-client_idnone-callback-callableuuid4-noane--none--none-update_catalog-bool--false-dict-paramsnone--uuid4-1">request_instrument(self, InstrumentId instrument_id, datetime start=None, datetime end=None, ClientId client_id=None, callback: Callable[[UUID4], Noane] | None = None, update_catalog: bool = False, dict params=None) → <a href="../core/index.htm#posei_trader.core.UUID4">UUID4</a><a href="#request_instrumentself-instrumentid-instrument_id-datetime-startnone-datetime-endnone-clientid-client_idnone-callback-callableuuid4-noane--none--none-update_catalog-bool--false-dict-paramsnone--uuid4-1" class="hash-link" aria-label="Direct link to request_instrumentself-instrumentid-instrument_id-datetime-startnone-datetime-endnone-clientid-client_idnone-callback-callableuuid4-noane--none--none-update_catalog-bool--false-dict-paramsnone--uuid4-1" title="Direct link to request_instrumentself-instrumentid-instrument_id-datetime-startnone-datetime-endnone-clientid-client_idnone-callback-callableuuid4-noane--none--none-update_catalog-bool--false-dict-paramsnone--uuid4-1">​</a></h4>
<p>Request Instrument data for the given instrument ID.</p>
<p>If end is <code>None</code> then will request up to the most recent data.</p>
<p>Once the response is received, the instrument data is forwarded from the message bus
to the on_instrument handler.</p>
<p>If the request fails, then an error is logged.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>instrument_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.InstrumentId"><em>InstrumentId</em></a>) – The instrument ID for the request.</li>
<li><strong>start</strong> (<em>datetime</em> <em>,</em> <em>optional</em>) – The start datetime (UTC) of request time range.
The inclusiveness depends on individual data client implementation.</li>
<li><strong>end</strong> (<em>datetime</em> <em>,</em> <em>optional</em>) – The end datetime (UTC) of request time range.
The inclusiveness depends on individual data client implementation.</li>
<li><strong>client_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.ClientId"><em>ClientId</em></a> <em>,</em> <em>optional</em>) – The specific client ID for the command.
If <code>None</code> then will be inferred from the venue in the instrument ID.</li>
<li><strong>callback</strong> (<em>Callable</em> <em>[</em> <em>[</em><a href="../core/index.htm#posei_trader.core.UUID4"><em>UUID4</em></a> <em>]</em> <em>,</em> <em>None</em> <em>]</em> <em>,</em> <em>optional</em>) – The registered callback, to be called with the request ID when the response has
completed processing.</li>
<li><strong>update_catalog</strong> (<em>bool</em> <em>,</em> <em>optional</em>) – Whether to update a catalog with the received data.</li>
<li><strong>params</strong> (<em>dict</em> *[*<em>str</em> <em>,</em> <em>Any</em> <em>]</em> <em>,</em> <em>optional</em>) – Additional parameters potentially used by a specific client.</li>
</ul>
</li>
<li><strong>Returns:</strong>
The request_id for the request.</li>
<li><strong>Return type:</strong>
<a href="../core/index.htm#posei_trader.core.UUID4">UUID4</a></li>
<li><strong>Raises:</strong>
<ul>
<li><strong>ValueError</strong> – If start is not None and &gt; current timestamp (now).</li>
<li><strong>ValueError</strong> – If end is not None and &gt; current timestamp (now).</li>
<li><strong>ValueError</strong> – If start and end are not None and start is &gt;= end.</li>
<li><strong>TypeError</strong> – If callback is not None and not of type Callable.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="request_instrumentsself-venue-venue-datetime-startnone-datetime-endnone-clientid-client_idnone-callback-callableuuid4-none--none--none-update_catalog-bool--false-dict-paramsnone--uuid4-1">request_instruments(self, Venue venue, datetime start=None, datetime end=None, ClientId client_id=None, callback: Callable[[UUID4], None] | None = None, update_catalog: bool = False, dict params=None) → <a href="../core/index.htm#posei_trader.core.UUID4">UUID4</a><a href="#request_instrumentsself-venue-venue-datetime-startnone-datetime-endnone-clientid-client_idnone-callback-callableuuid4-none--none--none-update_catalog-bool--false-dict-paramsnone--uuid4-1" class="hash-link" aria-label="Direct link to request_instrumentsself-venue-venue-datetime-startnone-datetime-endnone-clientid-client_idnone-callback-callableuuid4-none--none--none-update_catalog-bool--false-dict-paramsnone--uuid4-1" title="Direct link to request_instrumentsself-venue-venue-datetime-startnone-datetime-endnone-clientid-client_idnone-callback-callableuuid4-none--none--none-update_catalog-bool--false-dict-paramsnone--uuid4-1">​</a></h4>
<p>Request all Instrument data for the given venue.</p>
<p>If end is <code>None</code> then will request up to the most recent data.</p>
<p>Once the response is received, the instrument data is forwarded from the message bus
to the on_instrument handler.</p>
<p>If the request fails, then an error is logged.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>venue</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.Venue"><em>Venue</em></a>) – The venue for the request.</li>
<li><strong>start</strong> (<em>datetime</em> <em>,</em> <em>optional</em>) – The start datetime (UTC) of request time range.
The inclusiveness depends on individual data client implementation.</li>
<li><strong>end</strong> (<em>datetime</em> <em>,</em> <em>optional</em>) – The end datetime (UTC) of request time range.
The inclusiveness depends on individual data client implementation.</li>
<li><strong>client_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.ClientId"><em>ClientId</em></a> <em>,</em> <em>optional</em>) – The specific client ID for the command.
If <code>None</code> then will be inferred from the venue in the instrument ID.</li>
<li><strong>callback</strong> (<em>Callable</em> <em>[</em> <em>[</em><a href="../core/index.htm#posei_trader.core.UUID4"><em>UUID4</em></a> <em>]</em> <em>,</em> <em>None</em> <em>]</em> <em>,</em> <em>optional</em>) – The registered callback, to be called with the request ID when the response has
completed processing.</li>
<li><strong>update_catalog</strong> (<em>bool</em> <em>,</em> <em>optional</em>) – Whether to update a catalog with the received data.</li>
<li><strong>params</strong> (<em>dict</em> *[*<em>str</em> <em>,</em> <em>Any</em> <em>]</em> <em>,</em> <em>optional</em>) – Additional parameters potentially used by a specific client.</li>
</ul>
</li>
<li><strong>Returns:</strong>
The request_id for the request.</li>
<li><strong>Return type:</strong>
<a href="../core/index.htm#posei_trader.core.UUID4">UUID4</a></li>
<li><strong>Raises:</strong>
<ul>
<li><strong>ValueError</strong> – If start is not None and &gt; current timestamp (now).</li>
<li><strong>ValueError</strong> – If end is not None and &gt; current timestamp (now).</li>
<li><strong>ValueError</strong> – If start and end are not None and start is &gt;= end.</li>
<li><strong>TypeError</strong> – If callback is not None and not of type Callable.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="request_order_book_snapshotself-instrumentid-instrument_id-int-limit0-clientid-client_idnone-callback-callableuuid4-none--none--none-dict-paramsnone--uuid4-1">request_order_book_snapshot(self, InstrumentId instrument_id, int limit=0, ClientId client_id=None, callback: Callable[[UUID4], None] | None = None, dict params=None) → <a href="../core/index.htm#posei_trader.core.UUID4">UUID4</a><a href="#request_order_book_snapshotself-instrumentid-instrument_id-int-limit0-clientid-client_idnone-callback-callableuuid4-none--none--none-dict-paramsnone--uuid4-1" class="hash-link" aria-label="Direct link to request_order_book_snapshotself-instrumentid-instrument_id-int-limit0-clientid-client_idnone-callback-callableuuid4-none--none--none-dict-paramsnone--uuid4-1" title="Direct link to request_order_book_snapshotself-instrumentid-instrument_id-int-limit0-clientid-client_idnone-callback-callableuuid4-none--none--none-dict-paramsnone--uuid4-1">​</a></h4>
<p>Request an order book snapshot.</p>
<p>Once the response is received, the order book data is forwarded from the message bus
to the on_historical_data handler.</p>
<p>If the request fails, then an error is logged.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>instrument_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.InstrumentId"><em>InstrumentId</em></a>) – The instrument ID for the order book snapshot request.</li>
<li><strong>limit</strong> (<em>int</em> <em>,</em> <em>optional</em>) – The limit on the depth of the order book snapshot.</li>
<li><strong>client_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.ClientId"><em>ClientId</em></a> <em>,</em> <em>optional</em>) – The specific client ID for the command.
If None, it will be inferred from the venue in the instrument ID.</li>
<li><strong>callback</strong> (<em>Callable</em> <em>[</em> <em>[</em><a href="../core/index.htm#posei_trader.core.UUID4"><em>UUID4</em></a> <em>]</em> <em>,</em> <em>None</em> <em>]</em> <em>,</em> <em>optional</em>) – The registered callback, to be called with the request ID when the response has completed processing.</li>
<li><strong>params</strong> (<em>dict</em> *[*<em>str</em> <em>,</em> <em>Any</em> <em>]</em> <em>,</em> <em>optional</em>) – Additional parameters potentially used by a specific client.</li>
</ul>
</li>
<li><strong>Returns:</strong>
The request_id for the request.</li>
<li><strong>Return type:</strong>
<a href="../core/index.htm#posei_trader.core.UUID4">UUID4</a></li>
<li><strong>Raises:</strong>
<ul>
<li><strong>ValueError</strong> – If the instrument_id is None.</li>
<li><strong>TypeError</strong> – If callback is not None and not of type Callable.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="request_quote_ticksself-instrumentid-instrument_id-datetime-startnone-datetime-endnone-int-limit0-clientid-client_idnone-callback-callableuuid4-none--none--none-update_catalog-bool--false-dict-paramsnone--uuid4-1">request_quote_ticks(self, InstrumentId instrument_id, datetime start=None, datetime end=None, int limit=0, ClientId client_id=None, callback: Callable[[UUID4], None] | None = None, update_catalog: bool = False, dict params=None) → <a href="../core/index.htm#posei_trader.core.UUID4">UUID4</a><a href="#request_quote_ticksself-instrumentid-instrument_id-datetime-startnone-datetime-endnone-int-limit0-clientid-client_idnone-callback-callableuuid4-none--none--none-update_catalog-bool--false-dict-paramsnone--uuid4-1" class="hash-link" aria-label="Direct link to request_quote_ticksself-instrumentid-instrument_id-datetime-startnone-datetime-endnone-int-limit0-clientid-client_idnone-callback-callableuuid4-none--none--none-update_catalog-bool--false-dict-paramsnone--uuid4-1" title="Direct link to request_quote_ticksself-instrumentid-instrument_id-datetime-startnone-datetime-endnone-int-limit0-clientid-client_idnone-callback-callableuuid4-none--none--none-update_catalog-bool--false-dict-paramsnone--uuid4-1">​</a></h4>
<p>Request historical QuoteTick data.</p>
<p>If end is <code>None</code> then will request up to the most recent data.</p>
<p>Once the response is received, the quote tick data is forwarded from the message bus
to the on_historical_data handler.</p>
<p>If the request fails, then an error is logged.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>instrument_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.InstrumentId"><em>InstrumentId</em></a>) – The tick instrument ID for the request.</li>
<li><strong>start</strong> (<em>datetime</em> <em>,</em> <em>optional</em>) – The start datetime (UTC) of request time range.
The inclusiveness depends on individual data client implementation.</li>
<li><strong>end</strong> (<em>datetime</em> <em>,</em> <em>optional</em>) – The end datetime (UTC) of request time range.
The inclusiveness depends on individual data client implementation.</li>
<li><strong>limit</strong> (<em>int</em> <em>,</em> <em>optional</em>) – The limit on the amount of quote ticks received.</li>
<li><strong>client_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.ClientId"><em>ClientId</em></a> <em>,</em> <em>optional</em>) – The specific client ID for the command.
If <code>None</code> then will be inferred from the venue in the instrument ID.</li>
<li><strong>callback</strong> (<em>Callable</em> <em>[</em> <em>[</em><a href="../core/index.htm#posei_trader.core.UUID4"><em>UUID4</em></a> <em>]</em> <em>,</em> <em>None</em> <em>]</em> <em>,</em> <em>optional</em>) – The registered callback, to be called with the request ID when the response has
completed processing.</li>
<li><strong>update_catalog</strong> (<em>bool</em> <em>,</em> <em>optional</em>) – Whether to update a catalog with the received data.</li>
<li><strong>params</strong> (<em>dict</em> *[*<em>str</em> <em>,</em> <em>Any</em> <em>]</em> <em>,</em> <em>optional</em>) – Additional parameters potentially used by a specific client.</li>
</ul>
</li>
<li><strong>Returns:</strong>
The request_id for the request.</li>
<li><strong>Return type:</strong>
<a href="../core/index.htm#posei_trader.core.UUID4">UUID4</a></li>
<li><strong>Raises:</strong>
<ul>
<li><strong>ValueError</strong> – If start is not None and &gt; current timestamp (now).</li>
<li><strong>ValueError</strong> – If end is not None and &gt; current timestamp (now).</li>
<li><strong>ValueError</strong> – If start and end are not None and start is &gt;= end.</li>
<li><strong>TypeError</strong> – If callback is not None and not of type Callable.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="request_trade_ticksself-instrumentid-instrument_id-datetime-startnone-datetime-endnone-int-limit0-clientid-client_idnone-callback-callableuuid4-none--none--none-update_catalog-bool--false-dict-paramsnone--uuid4-1">request_trade_ticks(self, InstrumentId instrument_id, datetime start=None, datetime end=None, int limit=0, ClientId client_id=None, callback: Callable[[UUID4], None] | None = None, update_catalog: bool = False, dict params=None) → <a href="../core/index.htm#posei_trader.core.UUID4">UUID4</a><a href="#request_trade_ticksself-instrumentid-instrument_id-datetime-startnone-datetime-endnone-int-limit0-clientid-client_idnone-callback-callableuuid4-none--none--none-update_catalog-bool--false-dict-paramsnone--uuid4-1" class="hash-link" aria-label="Direct link to request_trade_ticksself-instrumentid-instrument_id-datetime-startnone-datetime-endnone-int-limit0-clientid-client_idnone-callback-callableuuid4-none--none--none-update_catalog-bool--false-dict-paramsnone--uuid4-1" title="Direct link to request_trade_ticksself-instrumentid-instrument_id-datetime-startnone-datetime-endnone-int-limit0-clientid-client_idnone-callback-callableuuid4-none--none--none-update_catalog-bool--false-dict-paramsnone--uuid4-1">​</a></h4>
<p>Request historical TradeTick data.</p>
<p>If end is <code>None</code> then will request up to the most recent data.</p>
<p>Once the response is received, the trade tick data is forwarded from the message bus
to the on_historical_data handler.</p>
<p>If the request fails, then an error is logged.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>instrument_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.InstrumentId"><em>InstrumentId</em></a>) – The tick instrument ID for the request.</li>
<li><strong>start</strong> (<em>datetime</em> <em>,</em> <em>optional</em>) – The start datetime (UTC) of request time range.
The inclusiveness depends on individual data client implementation.</li>
<li><strong>end</strong> (<em>datetime</em> <em>,</em> <em>optional</em>) – The end datetime (UTC) of request time range.
The inclusiveness depends on individual data client implementation.</li>
<li><strong>limit</strong> (<em>int</em> <em>,</em> <em>optional</em>) – The limit on the amount of trade ticks received.</li>
<li><strong>client_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.ClientId"><em>ClientId</em></a> <em>,</em> <em>optional</em>) – The specific client ID for the command.
If <code>None</code> then will be inferred from the venue in the instrument ID.</li>
<li><strong>callback</strong> (<em>Callable</em> <em>[</em> <em>[</em><a href="../core/index.htm#posei_trader.core.UUID4"><em>UUID4</em></a> <em>]</em> <em>,</em> <em>None</em> <em>]</em> <em>,</em> <em>optional</em>) – The registered callback, to be called with the request ID when the response has
completed processing.</li>
<li><strong>update_catalog</strong> (<em>bool</em> <em>,</em> <em>optional</em>) – Whether to update a catalog with the received data.</li>
<li><strong>params</strong> (<em>dict</em> *[*<em>str</em> <em>,</em> <em>Any</em> <em>]</em> <em>,</em> <em>optional</em>) – Additional parameters potentially used by a specific client.</li>
</ul>
</li>
<li><strong>Returns:</strong>
The request_id for the request.</li>
<li><strong>Return type:</strong>
<a href="../core/index.htm#posei_trader.core.UUID4">UUID4</a></li>
<li><strong>Raises:</strong>
<ul>
<li><strong>ValueError</strong> – If start is not None and &gt; current timestamp (now).</li>
<li><strong>ValueError</strong> – If end is not None and &gt; current timestamp (now).</li>
<li><strong>ValueError</strong> – If start and end are not None and start is &gt;= end.</li>
<li><strong>TypeError</strong> – If callback is not None and not of type Callable.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="resetself--void-2">reset(self) → void<a href="#resetself--void-2" class="hash-link" aria-label="Direct link to reset(self) → void" title="Direct link to reset(self) → void">​</a></h4>
<p>Reset the component.</p>
<p>All stateful fields are reset to their initial value.</p>
<p>While executing on_reset() any exception will be logged and reraised, then the component
will remain in a <code>RESETTING</code> state.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-130">WARNING<a href="#warning-130" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>Do not override.</p>
<p>If the component is not in a valid state from which to execute this method,
then the component state will not change, and an error will be logged.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="resumeself--void-2">resume(self) → void<a href="#resumeself--void-2" class="hash-link" aria-label="Direct link to resume(self) → void" title="Direct link to resume(self) → void">​</a></h4>
<p>Resume the component.</p>
<p>While executing on_resume() any exception will be logged and reraised, then the component
will remain in a <code>RESUMING</code> state.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-131">WARNING<a href="#warning-131" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>Do not override.</p>
<p>If the component is not in a valid state from which to execute this method,
then the component state will not change, and an error will be logged.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="run_in_executorself-func-callable-any-tuple-argsnone-dict-kwargsnone-1">run_in_executor(self, func: Callable[..., Any], tuple args=None, dict kwargs=None)<a href="#run_in_executorself-func-callable-any-tuple-argsnone-dict-kwargsnone-1" class="hash-link" aria-label="Direct link to run_in_executor(self, func: Callable[..., Any], tuple args=None, dict kwargs=None)" title="Direct link to run_in_executor(self, func: Callable[..., Any], tuple args=None, dict kwargs=None)">​</a></h4>
<p>Schedules the callable func to be executed as fn(*args, **kwargs).</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>func</strong> (<em>Callable</em>) – The function to be executed.</li>
<li><strong>args</strong> (<em>positional arguments</em>) – The positional arguments for the call to func.</li>
<li><strong>kwargs</strong> (<em>arbitrary keyword arguments</em>) – The keyword arguments for the call to func.</li>
</ul>
</li>
<li><strong>Returns:</strong>
The unique task identifier for the execution.
This also corresponds to any future objects memory address.</li>
<li><strong>Return type:</strong>
<a href="../common/index.htm#posei_trader.common.executor.TaskId">TaskId</a></li>
<li><strong>Raises:</strong>
<strong>TypeError</strong> – If func is not of type Callable.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="saveself--dict-1">save(self) → dict<a href="#saveself--dict-1" class="hash-link" aria-label="Direct link to save(self) → dict" title="Direct link to save(self) → dict">​</a></h4>
<p>Return the actor/strategy state dictionary to be saved.</p>
<p>Calls on_save.</p>
<ul>
<li><strong>Returns:</strong>
The strategy state to save.</li>
<li><strong>Return type:</strong>
dict[str, bytes]</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-132">WARNING<a href="#warning-132" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>Exceptions raised will be caught, logged, and reraised.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="shutdown_systemself-str-reasonnone--void-2">shutdown_system(self, str reason=None) → void<a href="#shutdown_systemself-str-reasonnone--void-2" class="hash-link" aria-label="Direct link to shutdown_system(self, str reason=None) → void" title="Direct link to shutdown_system(self, str reason=None) → void">​</a></h4>
<p>Initiate a system-wide shutdown by generating and publishing a ShutdownSystem command.</p>
<p>The command is handled by the system’s PoseiKernel, which will invoke either stop (synchronously)
or stop_async (asynchronously) depending on the execution context and the presence of an active event loop.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>reason</strong> (<em>str</em> <em>,</em> <em>optional</em>) – The reason for issuing the shutdown command.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="startself--void-2">start(self) → void<a href="#startself--void-2" class="hash-link" aria-label="Direct link to start(self) → void" title="Direct link to start(self) → void">​</a></h4>
<p>Start the component.</p>
<p>While executing on_start() any exception will be logged and reraised, then the component
will remain in a <code>STARTING</code> state.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-133">WARNING<a href="#warning-133" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>Do not override.</p>
<p>If the component is not in a valid state from which to execute this method,
then the component state will not change, and an error will be logged.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="state-2">state<a href="#state-2" class="hash-link" aria-label="Direct link to state" title="Direct link to state">​</a></h4>
<p>ComponentState</p>
<p>Return the components current state.</p>
<ul>
<li><strong>Return type:</strong>
ComponentState</li>
<li><strong>Type:</strong>
Component.state</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="stopself--void-2">stop(self) → void<a href="#stopself--void-2" class="hash-link" aria-label="Direct link to stop(self) → void" title="Direct link to stop(self) → void">​</a></h4>
<p>Stop the component.</p>
<p>While executing on_stop() any exception will be logged and reraised, then the component
will remain in a <code>STOPPING</code> state.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-134">WARNING<a href="#warning-134" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>Do not override.</p>
<p>If the component is not in a valid state from which to execute this method,
then the component state will not change, and an error will be logged.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="subscribe_barsself-bartype-bar_type-clientid-client_idnone-bool-await_partialfalse-bool-update_catalogfalse-dict-paramsnone--void-1">subscribe_bars(self, BarType bar_type, ClientId client_id=None, bool await_partial=False, bool update_catalog=False, dict params=None) → void<a href="#subscribe_barsself-bartype-bar_type-clientid-client_idnone-bool-await_partialfalse-bool-update_catalogfalse-dict-paramsnone--void-1" class="hash-link" aria-label="Direct link to subscribe_bars(self, BarType bar_type, ClientId client_id=None, bool await_partial=False, bool update_catalog=False, dict params=None) → void" title="Direct link to subscribe_bars(self, BarType bar_type, ClientId client_id=None, bool await_partial=False, bool update_catalog=False, dict params=None) → void">​</a></h4>
<p>Subscribe to streaming Bar data for the given bar type.</p>
<p>Once subscribed, any matching bar data published on the message bus is forwarded
to the on_bar handler.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>bar_type</strong> (<a href="../model/data/index.htm#posei_trader.model.data.BarType"><em>BarType</em></a>) – The bar type to subscribe to.</li>
<li><strong>client_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.ClientId"><em>ClientId</em></a> <em>,</em> <em>optional</em>) – The specific client ID for the command.
If <code>None</code> then will be inferred from the venue in the instrument ID.</li>
<li><strong>await_partial</strong> (<em>bool</em> <em>,</em> <em>default False</em>) – If the bar aggregator should await the arrival of a historical partial bar prior
to actively aggregating new bars.</li>
<li><strong>update_catalog</strong> (<em>bool</em> <em>,</em> <em>optional</em>) – Whether to update a catalog with the received data.
Only useful when downloading data during a backtest.</li>
<li><strong>params</strong> (<em>dict</em> *[*<em>str</em> <em>,</em> <em>Any</em> <em>]</em> <em>,</em> <em>optional</em>) – Additional parameters potentially used by a specific client.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="subscribe_dataself-datatype-data_type-clientid-client_idnone-instrumentid-instrument_idnone-bool-update_catalogfalse-dict-paramsnone--void-1">subscribe_data(self, DataType data_type, ClientId client_id=None, InstrumentId instrument_id=None, bool update_catalog=False, dict params=None) → void<a href="#subscribe_dataself-datatype-data_type-clientid-client_idnone-instrumentid-instrument_idnone-bool-update_catalogfalse-dict-paramsnone--void-1" class="hash-link" aria-label="Direct link to subscribe_data(self, DataType data_type, ClientId client_id=None, InstrumentId instrument_id=None, bool update_catalog=False, dict params=None) → void" title="Direct link to subscribe_data(self, DataType data_type, ClientId client_id=None, InstrumentId instrument_id=None, bool update_catalog=False, dict params=None) → void">​</a></h4>
<p>Subscribe to data of the given data type.</p>
<p>Once subscribed, any matching data published on the message bus is forwarded
to the on_data handler.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>data_type</strong> (<a href="../model/data/index.htm#posei_trader.model.data.DataType"><em>DataType</em></a>) – The data type to subscribe to.</li>
<li><strong>client_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.ClientId"><em>ClientId</em></a> <em>,</em> <em>optional</em>) – The data client ID. If supplied then a Subscribe command will be
sent to the corresponding data client.</li>
<li><strong>update_catalog</strong> (<em>bool</em> <em>,</em> <em>optional</em>) – Whether to update a catalog with the received data.
Only useful when downloading data during a backtest.</li>
<li><strong>params</strong> (<em>dict</em> *[*<em>str</em> <em>,</em> <em>Any</em> <em>]</em> <em>,</em> <em>optional</em>) – Additional parameters potentially used by a specific client.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="subscribe_index_pricesself-instrumentid-instrument_id-clientid-client_idnone-dict-paramsnone--void-1">subscribe_index_prices(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) → void<a href="#subscribe_index_pricesself-instrumentid-instrument_id-clientid-client_idnone-dict-paramsnone--void-1" class="hash-link" aria-label="Direct link to subscribe_index_prices(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) → void" title="Direct link to subscribe_index_prices(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) → void">​</a></h4>
<p>Subscribe to streaming IndexPriceUpdate data for the given instrument ID.</p>
<p>Once subscribed, any matching index price updates published on the message bus are forwarded
to the on_index_price handler.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>instrument_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.InstrumentId"><em>InstrumentId</em></a>) – The instrument to subscribe to.</li>
<li><strong>client_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.ClientId"><em>ClientId</em></a> <em>,</em> <em>optional</em>) – The specific client ID for the command.
If <code>None</code> then will be inferred from the venue in the instrument ID.</li>
<li><strong>params</strong> (<em>dict</em> *[*<em>str</em> <em>,</em> <em>Any</em> <em>]</em> <em>,</em> <em>optional</em>) – Additional parameters potentially used by a specific client.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="subscribe_instrumentself-instrumentid-instrument_id-clientid-client_idnone-dict-paramsnone--void-1">subscribe_instrument(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) → void<a href="#subscribe_instrumentself-instrumentid-instrument_id-clientid-client_idnone-dict-paramsnone--void-1" class="hash-link" aria-label="Direct link to subscribe_instrument(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) → void" title="Direct link to subscribe_instrument(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) → void">​</a></h4>
<p>Subscribe to update Instrument data for the given instrument ID.</p>
<p>Once subscribed, any matching instrument data published on the message bus is forwarded
to the on_instrument handler.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>instrument_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.InstrumentId"><em>InstrumentId</em></a>) – The instrument ID for the subscription.</li>
<li><strong>client_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.ClientId"><em>ClientId</em></a> <em>,</em> <em>optional</em>) – The specific client ID for the command.
If <code>None</code> then will be inferred from the venue in the instrument ID.</li>
<li><strong>params</strong> (<em>dict</em> *[*<em>str</em> <em>,</em> <em>Any</em> <em>]</em> <em>,</em> <em>optional</em>) – Additional parameters potentially used by a specific client.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="subscribe_instrument_closeself-instrumentid-instrument_id-clientid-client_idnone-dict-paramsnone--void-1">subscribe_instrument_close(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) → void<a href="#subscribe_instrument_closeself-instrumentid-instrument_id-clientid-client_idnone-dict-paramsnone--void-1" class="hash-link" aria-label="Direct link to subscribe_instrument_close(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) → void" title="Direct link to subscribe_instrument_close(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) → void">​</a></h4>
<p>Subscribe to close updates for the given instrument ID.</p>
<p>Once subscribed, any matching instrument close data published on the message bus is forwarded
to the on_instrument_close handler.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>instrument_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.InstrumentId"><em>InstrumentId</em></a>) – The instrument to subscribe to status updates for.</li>
<li><strong>client_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.ClientId"><em>ClientId</em></a> <em>,</em> <em>optional</em>) – The specific client ID for the command.
If <code>None</code> then will be inferred from the venue in the instrument ID.</li>
<li><strong>params</strong> (<em>dict</em> *[*<em>str</em> <em>,</em> <em>Any</em> <em>]</em> <em>,</em> <em>optional</em>) – Additional parameters potentially used by a specific client.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="subscribe_instrument_statusself-instrumentid-instrument_id-clientid-client_idnone-dict-paramsnone--void-1">subscribe_instrument_status(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) → void<a href="#subscribe_instrument_statusself-instrumentid-instrument_id-clientid-client_idnone-dict-paramsnone--void-1" class="hash-link" aria-label="Direct link to subscribe_instrument_status(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) → void" title="Direct link to subscribe_instrument_status(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) → void">​</a></h4>
<p>Subscribe to status updates for the given instrument ID.</p>
<p>Once subscribed, any matching instrument status data published on the message bus is forwarded
to the on_instrument_status handler.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>instrument_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.InstrumentId"><em>InstrumentId</em></a>) – The instrument to subscribe to status updates for.</li>
<li><strong>client_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.ClientId"><em>ClientId</em></a> <em>,</em> <em>optional</em>) – The specific client ID for the command.
If <code>None</code> then will be inferred from the venue in the instrument ID.</li>
<li><strong>params</strong> (<em>dict</em> *[*<em>str</em> <em>,</em> <em>Any</em> <em>]</em> <em>,</em> <em>optional</em>) – Additional parameters potentially used by a specific client.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="subscribe_instrumentsself-venue-venue-clientid-client_idnone-dict-paramsnone--void-1">subscribe_instruments(self, Venue venue, ClientId client_id=None, dict params=None) → void<a href="#subscribe_instrumentsself-venue-venue-clientid-client_idnone-dict-paramsnone--void-1" class="hash-link" aria-label="Direct link to subscribe_instruments(self, Venue venue, ClientId client_id=None, dict params=None) → void" title="Direct link to subscribe_instruments(self, Venue venue, ClientId client_id=None, dict params=None) → void">​</a></h4>
<p>Subscribe to update Instrument data for the given venue.</p>
<p>Once subscribed, any matching instrument data published on the message bus is forwarded
the on_instrument handler.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>venue</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.Venue"><em>Venue</em></a>) – The venue for the subscription.</li>
<li><strong>client_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.ClientId"><em>ClientId</em></a> <em>,</em> <em>optional</em>) – The specific client ID for the command.
If <code>None</code> then will be inferred from the venue.</li>
<li><strong>params</strong> (<em>dict</em> *[*<em>str</em> <em>,</em> <em>Any</em> <em>]</em> <em>,</em> <em>optional</em>) – Additional parameters potentially used by a specific client.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="subscribe_mark_pricesself-instrumentid-instrument_id-clientid-client_idnone-dict-paramsnone--void-1">subscribe_mark_prices(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) → void<a href="#subscribe_mark_pricesself-instrumentid-instrument_id-clientid-client_idnone-dict-paramsnone--void-1" class="hash-link" aria-label="Direct link to subscribe_mark_prices(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) → void" title="Direct link to subscribe_mark_prices(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) → void">​</a></h4>
<p>Subscribe to streaming MarkPriceUpdate data for the given instrument ID.</p>
<p>Once subscribed, any matching mark price updates published on the message bus are forwarded
to the on_mark_price handler.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>instrument_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.InstrumentId"><em>InstrumentId</em></a>) – The instrument to subscribe to.</li>
<li><strong>client_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.ClientId"><em>ClientId</em></a> <em>,</em> <em>optional</em>) – The specific client ID for the command.
If <code>None</code> then will be inferred from the venue in the instrument ID.</li>
<li><strong>params</strong> (<em>dict</em> *[*<em>str</em> <em>,</em> <em>Any</em> <em>]</em> <em>,</em> <em>optional</em>) – Additional parameters potentially used by a specific client.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="subscribe_order_book_at_intervalself-instrumentid-instrument_id-booktype-book_typebooktypel2_mbp-int-depth0-int-interval_ms1000-clientid-client_idnone-bool-managedtrue-dict-paramsnone--void-1">subscribe_order_book_at_interval(self, InstrumentId instrument_id, BookType book_type=BookType.L2_MBP, int depth=0, int interval_ms=1000, ClientId client_id=None, bool managed=True, dict params=None) → void<a href="#subscribe_order_book_at_intervalself-instrumentid-instrument_id-booktype-book_typebooktypel2_mbp-int-depth0-int-interval_ms1000-clientid-client_idnone-bool-managedtrue-dict-paramsnone--void-1" class="hash-link" aria-label="Direct link to subscribe_order_book_at_interval(self, InstrumentId instrument_id, BookType book_type=BookType.L2_MBP, int depth=0, int interval_ms=1000, ClientId client_id=None, bool managed=True, dict params=None) → void" title="Direct link to subscribe_order_book_at_interval(self, InstrumentId instrument_id, BookType book_type=BookType.L2_MBP, int depth=0, int interval_ms=1000, ClientId client_id=None, bool managed=True, dict params=None) → void">​</a></h4>
<p>Subscribe to an OrderBook at a specified interval for the given instrument ID.</p>
<p>Once subscribed, any matching order book updates published on the message bus are forwarded
to the on_order_book handler.</p>
<p>The DataEngine will only maintain one order book for each instrument.
Because of this - the level, depth and params for the stream will be set
as per the last subscription request (this will also affect all subscribers).</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>instrument_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.InstrumentId"><em>InstrumentId</em></a>) – The order book instrument ID to subscribe to.</li>
<li><strong>book_type</strong> (BookType {<code>L1_MBP</code>, <code>L2_MBP</code>, <code>L3_MBO</code>}) – The order book type.</li>
<li><strong>depth</strong> (<em>int</em> <em>,</em> <em>optional</em>) – The maximum depth for the order book. A depth of 0 is maximum depth.</li>
<li><strong>interval_ms</strong> (<em>int</em> <em>,</em> <em>default 1000</em>) – The order book snapshot interval (milliseconds).</li>
<li><strong>client_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.ClientId"><em>ClientId</em></a> <em>,</em> <em>optional</em>) – The specific client ID for the command.
If <code>None</code> then will be inferred from the venue in the instrument ID.</li>
<li><strong>managed</strong> (<em>bool</em> <em>,</em> <em>default True</em>) – If an order book should be managed by the data engine based on the subscribed feed.</li>
<li><strong>params</strong> (<em>dict</em> *[*<em>str</em> <em>,</em> <em>Any</em> <em>]</em> <em>,</em> <em>optional</em>) – Additional parameters potentially used by a specific client.</li>
</ul>
</li>
<li><strong>Raises:</strong>
<ul>
<li><strong>ValueError</strong> – If depth is negative (&lt; 0).</li>
<li><strong>ValueError</strong> – If interval_ms is not positive (&gt; 0).</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-135">WARNING<a href="#warning-135" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>Consider subscribing to order book deltas if you need intervals less than 100 milliseconds.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="subscribe_order_book_deltasself-instrumentid-instrument_id-booktype-book_typebooktypel2_mbp-int-depth0-clientid-client_idnone-bool-managedtrue-bool-pyo3_conversionfalse-dict-paramsnone--void-1">subscribe_order_book_deltas(self, InstrumentId instrument_id, BookType book_type=BookType.L2_MBP, int depth=0, ClientId client_id=None, bool managed=True, bool pyo3_conversion=False, dict params=None) → void<a href="#subscribe_order_book_deltasself-instrumentid-instrument_id-booktype-book_typebooktypel2_mbp-int-depth0-clientid-client_idnone-bool-managedtrue-bool-pyo3_conversionfalse-dict-paramsnone--void-1" class="hash-link" aria-label="Direct link to subscribe_order_book_deltas(self, InstrumentId instrument_id, BookType book_type=BookType.L2_MBP, int depth=0, ClientId client_id=None, bool managed=True, bool pyo3_conversion=False, dict params=None) → void" title="Direct link to subscribe_order_book_deltas(self, InstrumentId instrument_id, BookType book_type=BookType.L2_MBP, int depth=0, ClientId client_id=None, bool managed=True, bool pyo3_conversion=False, dict params=None) → void">​</a></h4>
<p>Subscribe to the order book data stream, being a snapshot then deltas
for the given instrument ID.</p>
<p>Once subscribed, any matching order book data published on the message bus is forwarded
to the on_order_book_deltas handler.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>instrument_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.InstrumentId"><em>InstrumentId</em></a>) – The order book instrument ID to subscribe to.</li>
<li><strong>book_type</strong> (BookType {<code>L1_MBP</code>, <code>L2_MBP</code>, <code>L3_MBO</code>}) – The order book type.</li>
<li><strong>depth</strong> (<em>int</em> <em>,</em> <em>optional</em>) – The maximum depth for the order book. A depth of 0 is maximum depth.</li>
<li><strong>client_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.ClientId"><em>ClientId</em></a> <em>,</em> <em>optional</em>) – The specific client ID for the command.
If <code>None</code> then will be inferred from the venue in the instrument ID.</li>
<li><strong>managed</strong> (<em>bool</em> <em>,</em> <em>default True</em>) – If an order book should be managed by the data engine based on the subscribed feed.</li>
<li><strong>pyo3_conversion</strong> (<em>bool</em> <em>,</em> <em>default False</em>) – If received deltas should be converted to nautilus_pyo3.OrderBookDeltas
prior to being passed to the on_order_book_deltas handler.</li>
<li><strong>params</strong> (<em>dict</em> *[*<em>str</em> <em>,</em> <em>Any</em> <em>]</em> <em>,</em> <em>optional</em>) – Additional parameters potentially used by a specific client.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="subscribe_order_book_depthself-instrumentid-instrument_id-booktype-book_typebooktypel2_mbp-int-depth0-clientid-client_idnone-bool-managedtrue-bool-pyo3_conversionfalse-dict-paramsnone--void-1">subscribe_order_book_depth(self, InstrumentId instrument_id, BookType book_type=BookType.L2_MBP, int depth=0, ClientId client_id=None, bool managed=True, bool pyo3_conversion=False, dict params=None) → void<a href="#subscribe_order_book_depthself-instrumentid-instrument_id-booktype-book_typebooktypel2_mbp-int-depth0-clientid-client_idnone-bool-managedtrue-bool-pyo3_conversionfalse-dict-paramsnone--void-1" class="hash-link" aria-label="Direct link to subscribe_order_book_depth(self, InstrumentId instrument_id, BookType book_type=BookType.L2_MBP, int depth=0, ClientId client_id=None, bool managed=True, bool pyo3_conversion=False, dict params=None) → void" title="Direct link to subscribe_order_book_depth(self, InstrumentId instrument_id, BookType book_type=BookType.L2_MBP, int depth=0, ClientId client_id=None, bool managed=True, bool pyo3_conversion=False, dict params=None) → void">​</a></h4>
<p>Subscribe to the order book depth stream for the given instrument ID.</p>
<p>Once subscribed, any matching order book data published on the message bus is forwarded
to the on_order_book_depth handler.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>instrument_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.InstrumentId"><em>InstrumentId</em></a>) – The order book instrument ID to subscribe to.</li>
<li><strong>book_type</strong> (BookType {<code>L1_MBP</code>, <code>L2_MBP</code>, <code>L3_MBO</code>}) – The order book type.</li>
<li><strong>client_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.ClientId"><em>ClientId</em></a> <em>,</em> <em>optional</em>) – The specific client ID for the command.
If <code>None</code> then will be inferred from the venue in the instrument ID.</li>
<li><strong>managed</strong> (<em>bool</em> <em>,</em> <em>default True</em>) – If an order book should be managed by the data engine based on the subscribed feed.</li>
<li><strong>pyo3_conversion</strong> (<em>bool</em> <em>,</em> <em>default False</em>) – If received deltas should be converted to nautilus_pyo3.OrderBookDepth
prior to being passed to the on_order_book_depth handler.</li>
<li><strong>params</strong> (<em>dict</em> *[*<em>str</em> <em>,</em> <em>Any</em> <em>]</em> <em>,</em> <em>optional</em>) – Additional parameters potentially used by a specific client.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="subscribe_quote_ticksself-instrumentid-instrument_id-clientid-client_idnone-bool-update_catalogfalse-dict-paramsnone--void-1">subscribe_quote_ticks(self, InstrumentId instrument_id, ClientId client_id=None, bool update_catalog=False, dict params=None) → void<a href="#subscribe_quote_ticksself-instrumentid-instrument_id-clientid-client_idnone-bool-update_catalogfalse-dict-paramsnone--void-1" class="hash-link" aria-label="Direct link to subscribe_quote_ticks(self, InstrumentId instrument_id, ClientId client_id=None, bool update_catalog=False, dict params=None) → void" title="Direct link to subscribe_quote_ticks(self, InstrumentId instrument_id, ClientId client_id=None, bool update_catalog=False, dict params=None) → void">​</a></h4>
<p>Subscribe to streaming QuoteTick data for the given instrument ID.</p>
<p>Once subscribed, any matching quote tick data published on the message bus is forwarded
to the on_quote_tick handler.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>instrument_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.InstrumentId"><em>InstrumentId</em></a>) – The tick instrument to subscribe to.</li>
<li><strong>client_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.ClientId"><em>ClientId</em></a> <em>,</em> <em>optional</em>) – The specific client ID for the command.
If <code>None</code> then will be inferred from the venue in the instrument ID.</li>
<li><strong>update_catalog</strong> (<em>bool</em> <em>,</em> <em>optional</em>) – Whether to update a catalog with the received data.
Only useful when downloading data during a backtest.</li>
<li><strong>params</strong> (<em>dict</em> *[*<em>str</em> <em>,</em> <em>Any</em> <em>]</em> <em>,</em> <em>optional</em>) – Additional parameters potentially used by a specific client.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="subscribe_signalself-str-name--void-1">subscribe_signal(self, str name=&#x27;&#x27;) → void<a href="#subscribe_signalself-str-name--void-1" class="hash-link" aria-label="Direct link to subscribe_signal(self, str name=&#x27;&#x27;) → void" title="Direct link to subscribe_signal(self, str name=&#x27;&#x27;) → void">​</a></h4>
<p>Subscribe to a specific signal by name, or to all signals if no name is provided.</p>
<p>Once subscribed, any matching signal data published on the message bus is forwarded
to the on_signal handler.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>name</strong> (<em>str</em> <em>,</em> <em>optional</em>) – The name of the signal to subscribe to. If not provided or an empty
string is passed, the subscription will include all signals.
The signal name is case-insensitive and will be capitalized
(e.g., ‘example’ becomes ‘SignalExample*’).</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="subscribe_trade_ticksself-instrumentid-instrument_id-clientid-client_idnone-bool-update_catalogfalse-dict-paramsnone--void-1">subscribe_trade_ticks(self, InstrumentId instrument_id, ClientId client_id=None, bool update_catalog=False, dict params=None) → void<a href="#subscribe_trade_ticksself-instrumentid-instrument_id-clientid-client_idnone-bool-update_catalogfalse-dict-paramsnone--void-1" class="hash-link" aria-label="Direct link to subscribe_trade_ticks(self, InstrumentId instrument_id, ClientId client_id=None, bool update_catalog=False, dict params=None) → void" title="Direct link to subscribe_trade_ticks(self, InstrumentId instrument_id, ClientId client_id=None, bool update_catalog=False, dict params=None) → void">​</a></h4>
<p>Subscribe to streaming TradeTick data for the given instrument ID.</p>
<p>Once subscribed, any matching trade tick data published on the message bus is forwarded
to the on_trade_tick handler.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>instrument_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.InstrumentId"><em>InstrumentId</em></a>) – The tick instrument to subscribe to.</li>
<li><strong>client_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.ClientId"><em>ClientId</em></a> <em>,</em> <em>optional</em>) – The specific client ID for the command.
If <code>None</code> then will be inferred from the venue in the instrument ID.</li>
<li><strong>update_catalog</strong> (<em>bool</em> <em>,</em> <em>optional</em>) – Whether to update a catalog with the received data.
Only useful when downloading data during a backtest.</li>
<li><strong>params</strong> (<em>dict</em> *[*<em>str</em> <em>,</em> <em>Any</em> <em>]</em> <em>,</em> <em>optional</em>) – Additional parameters potentially used by a specific client.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="subscribed_quotes">subscribed_quotes<a href="#subscribed_quotes" class="hash-link" aria-label="Direct link to subscribed_quotes" title="Direct link to subscribed_quotes">​</a></h4>
<p>list[InstrumentId]</p>
<p>Return the subscribed quote feeds for the emulator.</p>
<ul>
<li><strong>Return type:</strong>
list[<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.InstrumentId">InstrumentId</a>]</li>
<li><strong>Type:</strong>
OrderEmulator.subscribed_quotes</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="subscribed_trades">subscribed_trades<a href="#subscribed_trades" class="hash-link" aria-label="Direct link to subscribed_trades" title="Direct link to subscribed_trades">​</a></h4>
<p>list[InstrumentId]</p>
<p>Return the subscribed trade feeds for the emulator.</p>
<ul>
<li><strong>Return type:</strong>
list[<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.InstrumentId">InstrumentId</a>]</li>
<li><strong>Type:</strong>
OrderEmulator.subscribed_trades</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="to_importable_configself--importableactorconfig">to_importable_config(self) → <a href="../config/index.htm#posei_trader.common.config.ImportableActorConfig">ImportableActorConfig</a><a href="#to_importable_configself--importableactorconfig" class="hash-link" aria-label="Direct link to to_importable_configself--importableactorconfig" title="Direct link to to_importable_configself--importableactorconfig">​</a></h4>
<p>Returns an importable configuration for this actor.</p>
<ul>
<li><strong>Return type:</strong>
<a href="../config/index.htm#posei_trader.common.config.ImportableActorConfig">ImportableActorConfig</a></li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="trader_id-2">trader_id<a href="#trader_id-2" class="hash-link" aria-label="Direct link to trader_id" title="Direct link to trader_id">​</a></h4>
<p>The trader ID associated with the component.</p>
<ul>
<li><strong>Returns:</strong>
TraderId</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="type-2">type<a href="#type-2" class="hash-link" aria-label="Direct link to type" title="Direct link to type">​</a></h4>
<p>The components type.</p>
<ul>
<li><strong>Returns:</strong>
type</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="unsubscribe_barsself-bartype-bar_type-clientid-client_idnone-dict-paramsnone--void-1">unsubscribe_bars(self, BarType bar_type, ClientId client_id=None, dict params=None) → void<a href="#unsubscribe_barsself-bartype-bar_type-clientid-client_idnone-dict-paramsnone--void-1" class="hash-link" aria-label="Direct link to unsubscribe_bars(self, BarType bar_type, ClientId client_id=None, dict params=None) → void" title="Direct link to unsubscribe_bars(self, BarType bar_type, ClientId client_id=None, dict params=None) → void">​</a></h4>
<p>Unsubscribe from streaming Bar data for the given bar type.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>bar_type</strong> (<a href="../model/data/index.htm#posei_trader.model.data.BarType"><em>BarType</em></a>) – The bar type to unsubscribe from.</li>
<li><strong>client_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.ClientId"><em>ClientId</em></a> <em>,</em> <em>optional</em>) – The specific client ID for the command.
If <code>None</code> then will be inferred from the venue in the instrument ID.</li>
<li><strong>params</strong> (<em>dict</em> *[*<em>str</em> <em>,</em> <em>Any</em> <em>]</em> <em>,</em> <em>optional</em>) – Additional parameters potentially used by a specific client.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="unsubscribe_dataself-datatype-data_type-clientid-client_idnone-instrumentid-instrument_idnone-dict-paramsnone--void-1">unsubscribe_data(self, DataType data_type, ClientId client_id=None, InstrumentId instrument_id=None, dict params=None) → void<a href="#unsubscribe_dataself-datatype-data_type-clientid-client_idnone-instrumentid-instrument_idnone-dict-paramsnone--void-1" class="hash-link" aria-label="Direct link to unsubscribe_data(self, DataType data_type, ClientId client_id=None, InstrumentId instrument_id=None, dict params=None) → void" title="Direct link to unsubscribe_data(self, DataType data_type, ClientId client_id=None, InstrumentId instrument_id=None, dict params=None) → void">​</a></h4>
<p>Unsubscribe from data of the given data type.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>data_type</strong> (<a href="../model/data/index.htm#posei_trader.model.data.DataType"><em>DataType</em></a>) – The data type to unsubscribe from.</li>
<li><strong>client_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.ClientId"><em>ClientId</em></a> <em>,</em> <em>optional</em>) – The data client ID. If supplied then an Unsubscribe command will
be sent to the data client.</li>
<li><strong>params</strong> (<em>dict</em> *[*<em>str</em> <em>,</em> <em>Any</em> <em>]</em> <em>,</em> <em>optional</em>) – Additional parameters potentially used by a specific client.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="unsubscribe_index_pricesself-instrumentid-instrument_id-clientid-client_idnone-dict-paramsnone--void-1">unsubscribe_index_prices(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) → void<a href="#unsubscribe_index_pricesself-instrumentid-instrument_id-clientid-client_idnone-dict-paramsnone--void-1" class="hash-link" aria-label="Direct link to unsubscribe_index_prices(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) → void" title="Direct link to unsubscribe_index_prices(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) → void">​</a></h4>
<p>Unsubscribe from streaming IndexPriceUpdate data for the given instrument ID.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>instrument_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.InstrumentId"><em>InstrumentId</em></a>) – The instrument to subscribe to.</li>
<li><strong>client_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.ClientId"><em>ClientId</em></a> <em>,</em> <em>optional</em>) – The specific client ID for the command.
If <code>None</code> then will be inferred from the venue in the instrument ID.</li>
<li><strong>params</strong> (<em>dict</em> *[*<em>str</em> <em>,</em> <em>Any</em> <em>]</em> <em>,</em> <em>optional</em>) – Additional parameters potentially used by a specific client.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="unsubscribe_instrumentself-instrumentid-instrument_id-clientid-client_idnone-dict-paramsnone--void-1">unsubscribe_instrument(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) → void<a href="#unsubscribe_instrumentself-instrumentid-instrument_id-clientid-client_idnone-dict-paramsnone--void-1" class="hash-link" aria-label="Direct link to unsubscribe_instrument(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) → void" title="Direct link to unsubscribe_instrument(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) → void">​</a></h4>
<p>Unsubscribe from update Instrument data for the given instrument ID.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>instrument_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.InstrumentId"><em>InstrumentId</em></a>) – The instrument to unsubscribe from.</li>
<li><strong>client_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.ClientId"><em>ClientId</em></a> <em>,</em> <em>optional</em>) – The specific client ID for the command.
If <code>None</code> then will be inferred from the venue in the instrument ID.</li>
<li><strong>params</strong> (<em>dict</em> *[*<em>str</em> <em>,</em> <em>Any</em> <em>]</em> <em>,</em> <em>optional</em>) – Additional parameters potentially used by a specific client.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="unsubscribe_instrument_statusself-instrumentid-instrument_id-clientid-client_idnone-dict-paramsnone--void-1">unsubscribe_instrument_status(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) → void<a href="#unsubscribe_instrument_statusself-instrumentid-instrument_id-clientid-client_idnone-dict-paramsnone--void-1" class="hash-link" aria-label="Direct link to unsubscribe_instrument_status(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) → void" title="Direct link to unsubscribe_instrument_status(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) → void">​</a></h4>
<p>Unsubscribe to status updates of the given venue.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>instrument_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.InstrumentId"><em>InstrumentId</em></a>) – The instrument to unsubscribe to status updates for.</li>
<li><strong>client_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.ClientId"><em>ClientId</em></a> <em>,</em> <em>optional</em>) – The specific client ID for the command.
If <code>None</code> then will be inferred from the venue.</li>
<li><strong>params</strong> (<em>dict</em> *[*<em>str</em> <em>,</em> <em>Any</em> <em>]</em> <em>,</em> <em>optional</em>) – Additional parameters potentially used by a specific client.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="unsubscribe_instrumentsself-venue-venue-clientid-client_idnone-dict-paramsnone--void-1">unsubscribe_instruments(self, Venue venue, ClientId client_id=None, dict params=None) → void<a href="#unsubscribe_instrumentsself-venue-venue-clientid-client_idnone-dict-paramsnone--void-1" class="hash-link" aria-label="Direct link to unsubscribe_instruments(self, Venue venue, ClientId client_id=None, dict params=None) → void" title="Direct link to unsubscribe_instruments(self, Venue venue, ClientId client_id=None, dict params=None) → void">​</a></h4>
<p>Unsubscribe from update Instrument data for the given venue.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>venue</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.Venue"><em>Venue</em></a>) – The venue for the subscription.</li>
<li><strong>client_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.ClientId"><em>ClientId</em></a> <em>,</em> <em>optional</em>) – The specific client ID for the command.
If <code>None</code> then will be inferred from the venue.</li>
<li><strong>params</strong> (<em>dict</em> *[*<em>str</em> <em>,</em> <em>Any</em> <em>]</em> <em>,</em> <em>optional</em>) – Additional parameters potentially used by a specific client.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="unsubscribe_mark_pricesself-instrumentid-instrument_id-clientid-client_idnone-dict-paramsnone--void-1">unsubscribe_mark_prices(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) → void<a href="#unsubscribe_mark_pricesself-instrumentid-instrument_id-clientid-client_idnone-dict-paramsnone--void-1" class="hash-link" aria-label="Direct link to unsubscribe_mark_prices(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) → void" title="Direct link to unsubscribe_mark_prices(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) → void">​</a></h4>
<p>Unsubscribe from streaming MarkPriceUpdate data for the given instrument ID.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>instrument_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.InstrumentId"><em>InstrumentId</em></a>) – The instrument to subscribe to.</li>
<li><strong>client_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.ClientId"><em>ClientId</em></a> <em>,</em> <em>optional</em>) – The specific client ID for the command.
If <code>None</code> then will be inferred from the venue in the instrument ID.</li>
<li><strong>params</strong> (<em>dict</em> *[*<em>str</em> <em>,</em> <em>Any</em> <em>]</em> <em>,</em> <em>optional</em>) – Additional parameters potentially used by a specific client.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="unsubscribe_order_book_at_intervalself-instrumentid-instrument_id-int-interval_ms1000-clientid-client_idnone-dict-paramsnone--void-1">unsubscribe_order_book_at_interval(self, InstrumentId instrument_id, int interval_ms=1000, ClientId client_id=None, dict params=None) → void<a href="#unsubscribe_order_book_at_intervalself-instrumentid-instrument_id-int-interval_ms1000-clientid-client_idnone-dict-paramsnone--void-1" class="hash-link" aria-label="Direct link to unsubscribe_order_book_at_interval(self, InstrumentId instrument_id, int interval_ms=1000, ClientId client_id=None, dict params=None) → void" title="Direct link to unsubscribe_order_book_at_interval(self, InstrumentId instrument_id, int interval_ms=1000, ClientId client_id=None, dict params=None) → void">​</a></h4>
<p>Unsubscribe from an OrderBook at a specified interval for the given instrument ID.</p>
<p>The interval must match the previously subscribed interval.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>instrument_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.InstrumentId"><em>InstrumentId</em></a>) – The order book instrument to subscribe to.</li>
<li><strong>interval_ms</strong> (<em>int</em> <em>,</em> <em>default 1000</em>) – The order book snapshot interval (milliseconds).</li>
<li><strong>client_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.ClientId"><em>ClientId</em></a> <em>,</em> <em>optional</em>) – The specific client ID for the command.
If <code>None</code> then will be inferred from the venue in the instrument ID.</li>
<li><strong>params</strong> (<em>dict</em> *[*<em>str</em> <em>,</em> <em>Any</em> <em>]</em> <em>,</em> <em>optional</em>) – Additional parameters potentially used by a specific client.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="unsubscribe_order_book_deltasself-instrumentid-instrument_id-clientid-client_idnone-dict-paramsnone--void-1">unsubscribe_order_book_deltas(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) → void<a href="#unsubscribe_order_book_deltasself-instrumentid-instrument_id-clientid-client_idnone-dict-paramsnone--void-1" class="hash-link" aria-label="Direct link to unsubscribe_order_book_deltas(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) → void" title="Direct link to unsubscribe_order_book_deltas(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) → void">​</a></h4>
<p>Unsubscribe the order book deltas stream for the given instrument ID.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>instrument_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.InstrumentId"><em>InstrumentId</em></a>) – The order book instrument to subscribe to.</li>
<li><strong>client_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.ClientId"><em>ClientId</em></a> <em>,</em> <em>optional</em>) – The specific client ID for the command.
If <code>None</code> then will be inferred from the venue in the instrument ID.</li>
<li><strong>params</strong> (<em>dict</em> *[*<em>str</em> <em>,</em> <em>Any</em> <em>]</em> <em>,</em> <em>optional</em>) – Additional parameters potentially used by a specific client.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="unsubscribe_order_book_depthself-instrumentid-instrument_id-clientid-client_idnone-dict-paramsnone--void-1">unsubscribe_order_book_depth(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) → void<a href="#unsubscribe_order_book_depthself-instrumentid-instrument_id-clientid-client_idnone-dict-paramsnone--void-1" class="hash-link" aria-label="Direct link to unsubscribe_order_book_depth(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) → void" title="Direct link to unsubscribe_order_book_depth(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) → void">​</a></h4>
<p>Unsubscribe the order book depth stream for the given instrument ID.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>instrument_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.InstrumentId"><em>InstrumentId</em></a>) – The order book instrument to subscribe to.</li>
<li><strong>client_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.ClientId"><em>ClientId</em></a> <em>,</em> <em>optional</em>) – The specific client ID for the command.
If <code>None</code> then will be inferred from the venue in the instrument ID.</li>
<li><strong>params</strong> (<em>dict</em> *[*<em>str</em> <em>,</em> <em>Any</em> <em>]</em> <em>,</em> <em>optional</em>) – Additional parameters potentially used by a specific client.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="unsubscribe_quote_ticksself-instrumentid-instrument_id-clientid-client_idnone-dict-paramsnone--void-1">unsubscribe_quote_ticks(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) → void<a href="#unsubscribe_quote_ticksself-instrumentid-instrument_id-clientid-client_idnone-dict-paramsnone--void-1" class="hash-link" aria-label="Direct link to unsubscribe_quote_ticks(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) → void" title="Direct link to unsubscribe_quote_ticks(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) → void">​</a></h4>
<p>Unsubscribe from streaming QuoteTick data for the given instrument ID.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>instrument_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.InstrumentId"><em>InstrumentId</em></a>) – The tick instrument to unsubscribe from.</li>
<li><strong>client_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.ClientId"><em>ClientId</em></a> <em>,</em> <em>optional</em>) – The specific client ID for the command.
If <code>None</code> then will be inferred from the venue in the instrument ID.</li>
<li><strong>params</strong> (<em>dict</em> *[*<em>str</em> <em>,</em> <em>Any</em> <em>]</em> <em>,</em> <em>optional</em>) – Additional parameters potentially used by a specific client.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="unsubscribe_trade_ticksself-instrumentid-instrument_id-clientid-client_idnone-dict-paramsnone--void-1">unsubscribe_trade_ticks(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) → void<a href="#unsubscribe_trade_ticksself-instrumentid-instrument_id-clientid-client_idnone-dict-paramsnone--void-1" class="hash-link" aria-label="Direct link to unsubscribe_trade_ticks(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) → void" title="Direct link to unsubscribe_trade_ticks(self, InstrumentId instrument_id, ClientId client_id=None, dict params=None) → void">​</a></h4>
<p>Unsubscribe from streaming TradeTick data for the given instrument ID.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>instrument_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.InstrumentId"><em>InstrumentId</em></a>) – The tick instrument ID to unsubscribe from.</li>
<li><strong>client_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.ClientId"><em>ClientId</em></a> <em>,</em> <em>optional</em>) – The specific client ID for the command.
If <code>None</code> then will be inferred from the venue in the instrument ID.</li>
<li><strong>params</strong> (<em>dict</em> *[*<em>str</em> <em>,</em> <em>Any</em> <em>]</em> <em>,</em> <em>optional</em>) – Additional parameters potentially used by a specific client.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="update_syntheticself-syntheticinstrument-synthetic--void-1">update_synthetic(self, SyntheticInstrument synthetic) → void<a href="#update_syntheticself-syntheticinstrument-synthetic--void-1" class="hash-link" aria-label="Direct link to update_synthetic(self, SyntheticInstrument synthetic) → void" title="Direct link to update_synthetic(self, SyntheticInstrument synthetic) → void">​</a></h4>
<p>Update the synthetic instrument in the cache.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>synthetic</strong> (<a href="../model/instruments/index.htm#posei_trader.model.instruments.SyntheticInstrument"><em>SyntheticInstrument</em></a>) – The synthetic instrument to update in the cache.</li>
<li><strong>Raises:</strong>
<strong>KeyError</strong> – If synthetic does not already exist in the cache.</li>
</ul>
<p><a id="module-posei_trader.execution.engine"></a></p>
<p>The ExecutionEngine is the central component of the entire execution stack.</p>
<p>The execution engines primary responsibility is to orchestrate interactions
between the ExecutionClient instances, and the rest of the platform. This
includes sending commands to, and receiving events from, the trading venue
endpoints via its registered execution clients.</p>
<p>The engine employs a simple fan-in fan-out messaging pattern to execute
TradingCommand messages and OrderEvent messages.</p>
<p>Alternative implementations can be written on top of the generic engine - which
just need to override the execute and process methods.</p>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="class-executionengine"><em>class</em> ExecutionEngine<a href="#class-executionengine" class="hash-link" aria-label="Direct link to class-executionengine" title="Direct link to class-executionengine">​</a></h3>
<p>Bases: <a href="../common/index.htm#posei_trader.common.component.Component"><code>Component</code></a></p>
<p>ExecutionEngine(MessageBus msgbus, Cache cache, Clock clock, config: ExecEngineConfig | None = None) -&gt; None</p>
<p>Provides a high-performance execution engine for the management of many
ExecutionClient instances, and the asynchronous ingest and distribution of
trading commands and events.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>msgbus</strong> (<a href="../common/index.htm#posei_trader.common.component.MessageBus"><em>MessageBus</em></a>) – The message bus for the engine.</li>
<li><strong>cache</strong> (<a href="../cache/index.htm#posei_trader.cache.Cache"><em>Cache</em></a>) – The cache for the engine.</li>
<li><strong>clock</strong> (<a href="../common/index.htm#posei_trader.common.component.Clock"><em>Clock</em></a>) – The clock for the engine.</li>
<li><strong>config</strong> (<a href="../config/index.htm#posei_trader.execution.config.ExecEngineConfig"><em>ExecEngineConfig</em></a> <em>,</em> <em>optional</em>) – The configuration for the instance.</li>
</ul>
</li>
<li><strong>Raises:</strong>
<strong>TypeError</strong> – If config is not of type ExecEngineConfig.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="check_connectedself--bool">check_connected(self) → bool<a href="#check_connectedself--bool" class="hash-link" aria-label="Direct link to check_connected(self) → bool" title="Direct link to check_connected(self) → bool">​</a></h4>
<p>Check all of the engines clients are connected.</p>
<ul>
<li><strong>Returns:</strong>
True if all clients connected, else False.</li>
<li><strong>Return type:</strong>
bool</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="check_disconnectedself--bool">check_disconnected(self) → bool<a href="#check_disconnectedself--bool" class="hash-link" aria-label="Direct link to check_disconnected(self) → bool" title="Direct link to check_disconnected(self) → bool">​</a></h4>
<p>Check all of the engines clients are disconnected.</p>
<ul>
<li><strong>Returns:</strong>
True if all clients disconnected, else False.</li>
<li><strong>Return type:</strong>
bool</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="check_integrityself--bool">check_integrity(self) → bool<a href="#check_integrityself--bool" class="hash-link" aria-label="Direct link to check_integrity(self) → bool" title="Direct link to check_integrity(self) → bool">​</a></h4>
<p>Check integrity of data within the cache and clients.</p>
<ul>
<li><strong>Returns:</strong>
True if checks pass, else False.</li>
<li><strong>Return type:</strong>
bool</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="check_residualsself--bool">check_residuals(self) → bool<a href="#check_residualsself--bool" class="hash-link" aria-label="Direct link to check_residuals(self) → bool" title="Direct link to check_residuals(self) → bool">​</a></h4>
<p>Check for any residual open state and log warnings if found.</p>
<p>‘Open state’ is considered to be open orders and open positions.</p>
<ul>
<li><strong>Returns:</strong>
True if residuals exist, else False.</li>
<li><strong>Return type:</strong>
bool</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="command_count-1">command_count<a href="#command_count-1" class="hash-link" aria-label="Direct link to command_count" title="Direct link to command_count">​</a></h4>
<p>The total count of commands received by the engine.</p>
<ul>
<li><strong>Returns:</strong>
int</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="connectself--none">connect(self) → None<a href="#connectself--none" class="hash-link" aria-label="Direct link to connect(self) → None" title="Direct link to connect(self) → None">​</a></h4>
<p>Connect the engine by calling connect on all registered clients.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="debug-1">debug<a href="#debug-1" class="hash-link" aria-label="Direct link to debug" title="Direct link to debug">​</a></h4>
<p>If debug mode is active (will provide extra debug logging).</p>
<ul>
<li><strong>Returns:</strong>
bool</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="default_client">default_client<a href="#default_client" class="hash-link" aria-label="Direct link to default_client" title="Direct link to default_client">​</a></h4>
<p>ClientId | None</p>
<p>Return the default execution client registered with the engine.</p>
<ul>
<li><strong>Return type:</strong>
ClientId or <code>None</code></li>
<li><strong>Type:</strong>
ExecutionEngine.default_client</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="degradeself--void-3">degrade(self) → void<a href="#degradeself--void-3" class="hash-link" aria-label="Direct link to degrade(self) → void" title="Direct link to degrade(self) → void">​</a></h4>
<p>Degrade the component.</p>
<p>While executing on_degrade() any exception will be logged and reraised, then the component
will remain in a <code>DEGRADING</code> state.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-136">WARNING<a href="#warning-136" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>Do not override.</p>
<p>If the component is not in a valid state from which to execute this method,
then the component state will not change, and an error will be logged.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="deregister_clientself-executionclient-client--void">deregister_client(self, ExecutionClient client) → void<a href="#deregister_clientself-executionclient-client--void" class="hash-link" aria-label="Direct link to deregister_client(self, ExecutionClient client) → void" title="Direct link to deregister_client(self, ExecutionClient client) → void">​</a></h4>
<p>Deregister the given execution client from the execution engine.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>client</strong> (<a href="#posei_trader.execution.client.ExecutionClient"><em>ExecutionClient</em></a>) – The execution client to deregister.</li>
<li><strong>Raises:</strong>
<strong>ValueError</strong> – If client is not registered with the execution engine.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="disconnectself--none">disconnect(self) → None<a href="#disconnectself--none" class="hash-link" aria-label="Direct link to disconnect(self) → None" title="Direct link to disconnect(self) → None">​</a></h4>
<p>Disconnect the engine by calling disconnect on all registered clients.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="disposeself--void-3">dispose(self) → void<a href="#disposeself--void-3" class="hash-link" aria-label="Direct link to dispose(self) → void" title="Direct link to dispose(self) → void">​</a></h4>
<p>Dispose of the component.</p>
<p>While executing on_dispose() any exception will be logged and reraised, then the component
will remain in a <code>DISPOSING</code> state.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-137">WARNING<a href="#warning-137" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>Do not override.</p>
<p>If the component is not in a valid state from which to execute this method,
then the component state will not change, and an error will be logged.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="event_count-1">event_count<a href="#event_count-1" class="hash-link" aria-label="Direct link to event_count" title="Direct link to event_count">​</a></h4>
<p>The total count of events received by the engine.</p>
<ul>
<li><strong>Returns:</strong>
int</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="executeself-tradingcommand-command--void-2">execute(self, TradingCommand command) → void<a href="#executeself-tradingcommand-command--void-2" class="hash-link" aria-label="Direct link to execute(self, TradingCommand command) → void" title="Direct link to execute(self, TradingCommand command) → void">​</a></h4>
<p>Execute the given command.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>command</strong> (<a href="#posei_trader.execution.messages.TradingCommand"><em>TradingCommand</em></a>) – The command to execute.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="faultself--void-3">fault(self) → void<a href="#faultself--void-3" class="hash-link" aria-label="Direct link to fault(self) → void" title="Direct link to fault(self) → void">​</a></h4>
<p>Fault the component.</p>
<p>Calling this method multiple times has the same effect as calling it once (it is idempotent).
Once called, it cannot be reversed, and no other methods should be called on this instance.</p>
<p>While executing on_fault() any exception will be logged and reraised, then the component
will remain in a <code>FAULTING</code> state.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-138">WARNING<a href="#warning-138" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>Do not override.</p>
<p>If the component is not in a valid state from which to execute this method,
then the component state will not change, and an error will be logged.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="flush_dbself--void">flush_db(self) → void<a href="#flush_dbself--void" class="hash-link" aria-label="Direct link to flush_db(self) → void" title="Direct link to flush_db(self) → void">​</a></h4>
<p>Flush the execution database which permanently removes all persisted data.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-139">WARNING<a href="#warning-139" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>Permanent data loss.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="classmethod-fully_qualified_namecls--str-3"><em>classmethod</em> fully_qualified_name(cls) → str<a href="#classmethod-fully_qualified_namecls--str-3" class="hash-link" aria-label="Direct link to classmethod-fully_qualified_namecls--str-3" title="Direct link to classmethod-fully_qualified_namecls--str-3">​</a></h4>
<p>Return the fully qualified name for the components class.</p>
<ul>
<li><strong>Return type:</strong>
str</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="get_clients_for_ordersself-list-orders--set">get_clients_for_orders(self, list orders) → set<a href="#get_clients_for_ordersself-list-orders--set" class="hash-link" aria-label="Direct link to get_clients_for_orders(self, list orders) → set" title="Direct link to get_clients_for_orders(self, list orders) → set">​</a></h4>
<p>Get all execution clients corresponding to the given orders.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>orders</strong> (<em>list</em> <em>[</em><a href="../model/orders/index.htm#posei_trader.model.orders.Order"><em>Order</em></a> <em>]</em>) – The orders to locate associated execution clients for.</li>
<li><strong>Return type:</strong>
set[<a href="#posei_trader.execution.client.ExecutionClient">ExecutionClient</a>]</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="get_external_order_claimself-instrumentid-instrument_id--strategyid">get_external_order_claim(self, InstrumentId instrument_id) → <a href="../model/identifiers/index.htm#posei_trader.model.identifiers.StrategyId">StrategyId</a><a href="#get_external_order_claimself-instrumentid-instrument_id--strategyid" class="hash-link" aria-label="Direct link to get_external_order_claimself-instrumentid-instrument_id--strategyid" title="Direct link to get_external_order_claimself-instrumentid-instrument_id--strategyid">​</a></h4>
<p>Get any external order claim for the given instrument ID.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>instrument_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.InstrumentId"><em>InstrumentId</em></a>) – The instrument ID for the claim.</li>
<li><strong>Return type:</strong>
StrategyId or <code>None</code></li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="get_external_order_claims_instrumentsself--set">get_external_order_claims_instruments(self) → set<a href="#get_external_order_claims_instrumentsself--set" class="hash-link" aria-label="Direct link to get_external_order_claims_instruments(self) → set" title="Direct link to get_external_order_claims_instruments(self) → set">​</a></h4>
<p>Get all instrument IDs registered for external order claims.</p>
<ul>
<li><strong>Return type:</strong>
set[<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.InstrumentId">InstrumentId</a>]</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="id-3">id<a href="#id-3" class="hash-link" aria-label="Direct link to id" title="Direct link to id">​</a></h4>
<p>The components ID.</p>
<ul>
<li><strong>Returns:</strong>
ComponentId</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="is_degraded-3">is_degraded<a href="#is_degraded-3" class="hash-link" aria-label="Direct link to is_degraded" title="Direct link to is_degraded">​</a></h4>
<p>bool</p>
<p>Return whether the current component state is <code>DEGRADED</code>.</p>
<ul>
<li><strong>Return type:</strong>
bool</li>
<li><strong>Type:</strong>
Component.is_degraded</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="is_disposed-3">is_disposed<a href="#is_disposed-3" class="hash-link" aria-label="Direct link to is_disposed" title="Direct link to is_disposed">​</a></h4>
<p>bool</p>
<p>Return whether the current component state is <code>DISPOSED</code>.</p>
<ul>
<li><strong>Return type:</strong>
bool</li>
<li><strong>Type:</strong>
Component.is_disposed</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="is_faulted-3">is_faulted<a href="#is_faulted-3" class="hash-link" aria-label="Direct link to is_faulted" title="Direct link to is_faulted">​</a></h4>
<p>bool</p>
<p>Return whether the current component state is <code>FAULTED</code>.</p>
<ul>
<li><strong>Return type:</strong>
bool</li>
<li><strong>Type:</strong>
Component.is_faulted</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="is_initialized-3">is_initialized<a href="#is_initialized-3" class="hash-link" aria-label="Direct link to is_initialized" title="Direct link to is_initialized">​</a></h4>
<p>bool</p>
<p>Return whether the component has been initialized (component.state &gt;= <code>INITIALIZED</code>).</p>
<ul>
<li><strong>Return type:</strong>
bool</li>
<li><strong>Type:</strong>
Component.is_initialized</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="is_running-3">is_running<a href="#is_running-3" class="hash-link" aria-label="Direct link to is_running" title="Direct link to is_running">​</a></h4>
<p>bool</p>
<p>Return whether the current component state is <code>RUNNING</code>.</p>
<ul>
<li><strong>Return type:</strong>
bool</li>
<li><strong>Type:</strong>
Component.is_running</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="is_stopped-3">is_stopped<a href="#is_stopped-3" class="hash-link" aria-label="Direct link to is_stopped" title="Direct link to is_stopped">​</a></h4>
<p>bool</p>
<p>Return whether the current component state is <code>STOPPED</code>.</p>
<ul>
<li><strong>Return type:</strong>
bool</li>
<li><strong>Type:</strong>
Component.is_stopped</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="load_cacheself--void">load_cache(self) → void<a href="#load_cacheself--void" class="hash-link" aria-label="Direct link to load_cache(self) → void" title="Direct link to load_cache(self) → void">​</a></h4>
<p>Load the cache up from the execution database.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="manage_own_order_books">manage_own_order_books<a href="#manage_own_order_books" class="hash-link" aria-label="Direct link to manage_own_order_books" title="Direct link to manage_own_order_books">​</a></h4>
<p>If the execution engine should maintain own order books based on commands and events.</p>
<ul>
<li><strong>Returns:</strong>
bool</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="position_id_countself-strategyid-strategy_id--int">position_id_count(self, StrategyId strategy_id) → int<a href="#position_id_countself-strategyid-strategy_id--int" class="hash-link" aria-label="Direct link to position_id_count(self, StrategyId strategy_id) → int" title="Direct link to position_id_count(self, StrategyId strategy_id) → int">​</a></h4>
<p>The position ID count for the given strategy ID.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>strategy_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.StrategyId"><em>StrategyId</em></a>) – The strategy ID for the position count.</li>
<li><strong>Return type:</strong>
int</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="processself-orderevent-event--void">process(self, OrderEvent event) → void<a href="#processself-orderevent-event--void" class="hash-link" aria-label="Direct link to process(self, OrderEvent event) → void" title="Direct link to process(self, OrderEvent event) → void">​</a></h4>
<p>Process the given order event.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>event</strong> (<a href="../model/events/index.htm#posei_trader.model.events.OrderEvent"><em>OrderEvent</em></a>) – The order event to process.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="reconcile_mass_statusself-report-executionmassstatus--none">reconcile_mass_status(self, report: <a href="#posei_trader.execution.reports.ExecutionMassStatus">ExecutionMassStatus</a>) → None<a href="#reconcile_mass_statusself-report-executionmassstatus--none" class="hash-link" aria-label="Direct link to reconcile_mass_statusself-report-executionmassstatus--none" title="Direct link to reconcile_mass_statusself-report-executionmassstatus--none">​</a></h4>
<p>Reconcile the given execution mass status report.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>report</strong> (<a href="#posei_trader.execution.reports.ExecutionMassStatus"><em>ExecutionMassStatus</em></a>) – The execution mass status report to reconcile.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="reconcile_reportself-report-executionreport--bool">reconcile_report(self, report: <a href="#posei_trader.execution.reports.ExecutionReport">ExecutionReport</a>) → bool<a href="#reconcile_reportself-report-executionreport--bool" class="hash-link" aria-label="Direct link to reconcile_reportself-report-executionreport--bool" title="Direct link to reconcile_reportself-report-executionreport--bool">​</a></h4>
<p>Check the given execution report.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>report</strong> (<a href="#posei_trader.execution.reports.ExecutionReport"><em>ExecutionReport</em></a>) – The execution report to check.</li>
<li><strong>Returns:</strong>
True if reconciliation successful, else False.</li>
<li><strong>Return type:</strong>
bool</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="async-reconcile_stateself-double-timeout_secs-float--100--bool"><em>async</em> reconcile_state(self, double timeout_secs: float = 10.0) → bool<a href="#async-reconcile_stateself-double-timeout_secs-float--100--bool" class="hash-link" aria-label="Direct link to async-reconcile_stateself-double-timeout_secs-float--100--bool" title="Direct link to async-reconcile_stateself-double-timeout_secs-float--100--bool">​</a></h4>
<p>Reconcile the internal execution state with all execution clients (external state).</p>
<ul>
<li><strong>Parameters:</strong>
<strong>timeout_secs</strong> (<em>double</em> <em>,</em> <em>default 10.0</em>) – The timeout (seconds) for reconciliation to complete.</li>
<li><strong>Returns:</strong>
True if states reconcile within timeout, else False.</li>
<li><strong>Return type:</strong>
bool</li>
<li><strong>Raises:</strong>
<strong>ValueError</strong> – If timeout_secs is not positive (&gt; 0).</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="reconciliation">reconciliation<a href="#reconciliation" class="hash-link" aria-label="Direct link to reconciliation" title="Direct link to reconciliation">​</a></h4>
<p>bool</p>
<p>Return whether the reconciliation process will be run on start.</p>
<ul>
<li><strong>Return type:</strong>
bool</li>
<li><strong>Type:</strong>
ExecutionEngine.reconciliation</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="register_clientself-executionclient-client--void">register_client(self, ExecutionClient client) → void<a href="#register_clientself-executionclient-client--void" class="hash-link" aria-label="Direct link to register_client(self, ExecutionClient client) → void" title="Direct link to register_client(self, ExecutionClient client) → void">​</a></h4>
<p>Register the given execution client with the execution engine.</p>
<p>If the client.venue is <code>None</code> and a default routing client has not
been previously registered then will be registered as such.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>client</strong> (<a href="#posei_trader.execution.client.ExecutionClient"><em>ExecutionClient</em></a>) – The execution client to register.</li>
<li><strong>Raises:</strong>
<strong>ValueError</strong> – If client is already registered with the execution engine.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="register_default_clientself-executionclient-client--void">register_default_client(self, ExecutionClient client) → void<a href="#register_default_clientself-executionclient-client--void" class="hash-link" aria-label="Direct link to register_default_client(self, ExecutionClient client) → void" title="Direct link to register_default_client(self, ExecutionClient client) → void">​</a></h4>
<p>Register the given client as the default routing client (when a specific
venue routing cannot be found).</p>
<p>Any existing default routing client will be overwritten.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>client</strong> (<a href="#posei_trader.execution.client.ExecutionClient"><em>ExecutionClient</em></a>) – The client to register.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="register_external_order_claimsself-strategy-strategy--void">register_external_order_claims(self, Strategy strategy) → void<a href="#register_external_order_claimsself-strategy-strategy--void" class="hash-link" aria-label="Direct link to register_external_order_claims(self, Strategy strategy) → void" title="Direct link to register_external_order_claims(self, Strategy strategy) → void">​</a></h4>
<p>Register the given strategies external order claim instrument IDs (if any)</p>
<ul>
<li><strong>Parameters:</strong>
<strong>strategy</strong> (<a href="../trading/index.htm#posei_trader.trading.Strategy"><em>Strategy</em></a>) – The strategy for the registration.</li>
<li><strong>Raises:</strong>
<a href="../config/index.htm#posei_trader.common.config.InvalidConfiguration"><strong>InvalidConfiguration</strong></a> – If a strategy is already registered to claim external orders for an instrument ID.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="register_oms_typeself-strategy-strategy--void">register_oms_type(self, Strategy strategy) → void<a href="#register_oms_typeself-strategy-strategy--void" class="hash-link" aria-label="Direct link to register_oms_type(self, Strategy strategy) → void" title="Direct link to register_oms_type(self, Strategy strategy) → void">​</a></h4>
<p>Register the given trading strategies OMS (Order Management System) type.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>strategy</strong> (<a href="../trading/index.htm#posei_trader.trading.Strategy"><em>Strategy</em></a>) – The strategy for the registration.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="register_venue_routingself-executionclient-client-venue-venue--void">register_venue_routing(self, ExecutionClient client, Venue venue) → void<a href="#register_venue_routingself-executionclient-client-venue-venue--void" class="hash-link" aria-label="Direct link to register_venue_routing(self, ExecutionClient client, Venue venue) → void" title="Direct link to register_venue_routing(self, ExecutionClient client, Venue venue) → void">​</a></h4>
<p>Register the given client to route orders to the given venue.</p>
<p>Any existing client in the routing map for the given venue will be
overwritten.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>venue</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.Venue"><em>Venue</em></a>) – The venue to route orders to.</li>
<li><strong>client</strong> (<a href="#posei_trader.execution.client.ExecutionClient"><em>ExecutionClient</em></a>) – The client for the venue routing.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="registered_clients">registered_clients<a href="#registered_clients" class="hash-link" aria-label="Direct link to registered_clients" title="Direct link to registered_clients">​</a></h4>
<p>list[ClientId]</p>
<p>Return the execution clients registered with the engine.</p>
<ul>
<li><strong>Return type:</strong>
list[<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.ClientId">ClientId</a>]</li>
<li><strong>Type:</strong>
ExecutionEngine.registered_clients</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="report_count">report_count<a href="#report_count" class="hash-link" aria-label="Direct link to report_count" title="Direct link to report_count">​</a></h4>
<p>‘int’</p>
<p>The total count of reports received by the engine.</p>
<ul>
<li><strong>Returns:</strong>
int</li>
<li><strong>Type:</strong>
report_count</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="resetself--void-3">reset(self) → void<a href="#resetself--void-3" class="hash-link" aria-label="Direct link to reset(self) → void" title="Direct link to reset(self) → void">​</a></h4>
<p>Reset the component.</p>
<p>All stateful fields are reset to their initial value.</p>
<p>While executing on_reset() any exception will be logged and reraised, then the component
will remain in a <code>RESETTING</code> state.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-140">WARNING<a href="#warning-140" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>Do not override.</p>
<p>If the component is not in a valid state from which to execute this method,
then the component state will not change, and an error will be logged.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="resumeself--void-3">resume(self) → void<a href="#resumeself--void-3" class="hash-link" aria-label="Direct link to resume(self) → void" title="Direct link to resume(self) → void">​</a></h4>
<p>Resume the component.</p>
<p>While executing on_resume() any exception will be logged and reraised, then the component
will remain in a <code>RESUMING</code> state.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-141">WARNING<a href="#warning-141" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>Do not override.</p>
<p>If the component is not in a valid state from which to execute this method,
then the component state will not change, and an error will be logged.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="set_manage_own_order_booksself-bool-value--void">set_manage_own_order_books(self, bool value) → void<a href="#set_manage_own_order_booksself-bool-value--void" class="hash-link" aria-label="Direct link to set_manage_own_order_books(self, bool value) → void" title="Direct link to set_manage_own_order_books(self, bool value) → void">​</a></h4>
<p>Set the manage_own_order_books setting with the given value.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>value</strong> (<em>bool</em>) – The value to set.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="shutdown_systemself-str-reasonnone--void-3">shutdown_system(self, str reason=None) → void<a href="#shutdown_systemself-str-reasonnone--void-3" class="hash-link" aria-label="Direct link to shutdown_system(self, str reason=None) → void" title="Direct link to shutdown_system(self, str reason=None) → void">​</a></h4>
<p>Initiate a system-wide shutdown by generating and publishing a ShutdownSystem command.</p>
<p>The command is handled by the system’s PoseiKernel, which will invoke either stop (synchronously)
or stop_async (asynchronously) depending on the execution context and the presence of an active event loop.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>reason</strong> (<em>str</em> <em>,</em> <em>optional</em>) – The reason for issuing the shutdown command.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="snapshot_orders">snapshot_orders<a href="#snapshot_orders" class="hash-link" aria-label="Direct link to snapshot_orders" title="Direct link to snapshot_orders">​</a></h4>
<p>If order state snapshots should be persisted.</p>
<ul>
<li><strong>Returns:</strong>
bool</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="snapshot_positions">snapshot_positions<a href="#snapshot_positions" class="hash-link" aria-label="Direct link to snapshot_positions" title="Direct link to snapshot_positions">​</a></h4>
<p>If position state snapshots should be persisted.</p>
<ul>
<li><strong>Returns:</strong>
bool</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="snapshot_positions_interval_secs">snapshot_positions_interval_secs<a href="#snapshot_positions_interval_secs" class="hash-link" aria-label="Direct link to snapshot_positions_interval_secs" title="Direct link to snapshot_positions_interval_secs">​</a></h4>
<p>The interval (seconds) at which additional position state snapshots are persisted.</p>
<ul>
<li><strong>Returns:</strong>
double</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="snapshot_positions_timer_name">snapshot_positions_timer_name<a href="#snapshot_positions_timer_name" class="hash-link" aria-label="Direct link to snapshot_positions_timer_name" title="Direct link to snapshot_positions_timer_name">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="startself--void-3">start(self) → void<a href="#startself--void-3" class="hash-link" aria-label="Direct link to start(self) → void" title="Direct link to start(self) → void">​</a></h4>
<p>Start the component.</p>
<p>While executing on_start() any exception will be logged and reraised, then the component
will remain in a <code>STARTING</code> state.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-142">WARNING<a href="#warning-142" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>Do not override.</p>
<p>If the component is not in a valid state from which to execute this method,
then the component state will not change, and an error will be logged.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="state-3">state<a href="#state-3" class="hash-link" aria-label="Direct link to state" title="Direct link to state">​</a></h4>
<p>ComponentState</p>
<p>Return the components current state.</p>
<ul>
<li><strong>Return type:</strong>
ComponentState</li>
<li><strong>Type:</strong>
Component.state</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="stopself--void-3">stop(self) → void<a href="#stopself--void-3" class="hash-link" aria-label="Direct link to stop(self) → void" title="Direct link to stop(self) → void">​</a></h4>
<p>Stop the component.</p>
<p>While executing on_stop() any exception will be logged and reraised, then the component
will remain in a <code>STOPPING</code> state.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-143">WARNING<a href="#warning-143" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>Do not override.</p>
<p>If the component is not in a valid state from which to execute this method,
then the component state will not change, and an error will be logged.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="stop_clientsself--void">stop_clients(self) → void<a href="#stop_clientsself--void" class="hash-link" aria-label="Direct link to stop_clients(self) → void" title="Direct link to stop_clients(self) → void">​</a></h4>
<p>Stop the registered clients.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="trader_id-3">trader_id<a href="#trader_id-3" class="hash-link" aria-label="Direct link to trader_id" title="Direct link to trader_id">​</a></h4>
<p>The trader ID associated with the component.</p>
<ul>
<li><strong>Returns:</strong>
TraderId</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="type-3">type<a href="#type-3" class="hash-link" aria-label="Direct link to type" title="Direct link to type">​</a></h4>
<p>The components type.</p>
<ul>
<li><strong>Returns:</strong>
type</li>
</ul>
<p><a id="module-posei_trader.execution.manager"></a></p>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="class-ordermanager"><em>class</em> OrderManager<a href="#class-ordermanager" class="hash-link" aria-label="Direct link to class-ordermanager" title="Direct link to class-ordermanager">​</a></h3>
<p>Bases: <code>object</code></p>
<p>OrderManager(Clock clock, MessageBus msgbus, Cache cache, str component_name, bool active_local, submit_order_handler: Callable[[SubmitOrder], None] = None, cancel_order_handler: Callable[[Order], None] = None, modify_order_handler: Callable[[Order, Quantity], None] = None, bool debug=False, bool log_events=True, bool log_commands=True)</p>
<p>Provides a generic order execution manager.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>clock</strong> (<a href="../common/index.htm#posei_trader.common.component.Clock"><em>Clock</em></a>) – The clock for the order manager.</li>
<li><strong>msgbus</strong> (<a href="../common/index.htm#posei_trader.common.component.MessageBus"><em>MessageBus</em></a>) – The message bus for the order manager.</li>
<li><strong>cache</strong> (<a href="../cache/index.htm#posei_trader.cache.Cache"><em>Cache</em></a>) – The cache for the order manager.</li>
<li><strong>component_name</strong> (<em>str</em>) – The component name for the order manager.</li>
<li><strong>active_local</strong> (<em>str</em>) – If the manager is for active local orders.</li>
<li><strong>submit_order_handler</strong> (<em>Callable</em> <em>[</em> <em>[</em><a href="#posei_trader.execution.messages.SubmitOrder"><em>SubmitOrder</em></a> <em>]</em> <em>,</em> <em>None</em> <em>]</em> <em>,</em> <em>optional</em>) – The handler to call when submitting orders.</li>
<li><strong>cancel_order_handler</strong> (<em>Callable</em> <em>[</em> <em>[</em><a href="../model/orders/index.htm#posei_trader.model.orders.Order"><em>Order</em></a> <em>]</em> <em>,</em> <em>None</em> <em>]</em> <em>,</em> <em>optional</em>) – The handler to call when canceling orders.</li>
<li><strong>modify_order_handler</strong> (<em>Callable</em> <em>[</em> <em>[</em><a href="../model/orders/index.htm#posei_trader.model.orders.Order"><em>Order</em></a> <em>,</em> <a href="../model/index.htm#posei_trader.model.Quantity"><em>Quantity</em></a> <em>]</em> <em>,</em> <em>None</em> <em>]</em> <em>,</em> <em>optional</em>) – The handler to call when modifying orders (limited to modifying quantity).</li>
<li><strong>debug</strong> (<em>bool</em> <em>,</em> <em>default False</em>) – If debug mode is active (will provide extra debug logging).</li>
</ul>
</li>
<li><strong>Raises:</strong>
<ul>
<li><strong>TypeError</strong> – If submit_order_handler is not <code>None</code> and not of type Callable.</li>
<li><strong>TypeError</strong> – If cancel_order_handler is not <code>None</code> and not of type Callable.</li>
<li><strong>TypeError</strong> – If modify_order_handler is not <code>None</code> and not of type Callable.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="active_local">active_local<a href="#active_local" class="hash-link" aria-label="Direct link to active_local" title="Direct link to active_local">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="cache_submit_order_commandself-submitorder-command--void">cache_submit_order_command(self, SubmitOrder command) → void<a href="#cache_submit_order_commandself-submitorder-command--void" class="hash-link" aria-label="Direct link to cache_submit_order_command(self, SubmitOrder command) → void" title="Direct link to cache_submit_order_command(self, SubmitOrder command) → void">​</a></h4>
<p>Cache the given submit order command with the manager.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>command</strong> (<a href="#posei_trader.execution.messages.SubmitOrder"><em>SubmitOrder</em></a>) – The submit order command to cache.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="cancel_orderself-order-order--void">cancel_order(self, Order order) → void<a href="#cancel_orderself-order-order--void" class="hash-link" aria-label="Direct link to cancel_order(self, Order order) → void" title="Direct link to cancel_order(self, Order order) → void">​</a></h4>
<p>Cancel the given order with the manager.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>order</strong> (<a href="../model/orders/index.htm#posei_trader.model.orders.Order"><em>Order</em></a>) – The order to cancel.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="create_new_submit_orderself-order-order-positionid-position_idnone-clientid-client_idnone--void">create_new_submit_order(self, Order order, PositionId position_id=None, ClientId client_id=None) → void<a href="#create_new_submit_orderself-order-order-positionid-position_idnone-clientid-client_idnone--void" class="hash-link" aria-label="Direct link to create_new_submit_order(self, Order order, PositionId position_id=None, ClientId client_id=None) → void" title="Direct link to create_new_submit_order(self, Order order, PositionId position_id=None, ClientId client_id=None) → void">​</a></h4>
<p>Create a new submit order command for the given order.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>order</strong> (<a href="../model/orders/index.htm#posei_trader.model.orders.Order"><em>Order</em></a>) – The order for the command.</li>
<li><strong>position_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.PositionId"><em>PositionId</em></a> <em>,</em> <em>optional</em>) – The position ID for the command.</li>
<li><strong>client_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.ClientId"><em>ClientId</em></a> <em>,</em> <em>optional</em>) – The client ID for the command.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="debug-2">debug<a href="#debug-2" class="hash-link" aria-label="Direct link to debug" title="Direct link to debug">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="get_submit_order_commandsself--dict">get_submit_order_commands(self) → dict<a href="#get_submit_order_commandsself--dict" class="hash-link" aria-label="Direct link to get_submit_order_commands(self) → dict" title="Direct link to get_submit_order_commands(self) → dict">​</a></h4>
<p>Return the managers cached submit order commands.</p>
<ul>
<li><strong>Return type:</strong>
dict[<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.ClientOrderId">ClientOrderId</a>, <a href="#posei_trader.execution.messages.SubmitOrder">SubmitOrder</a>]</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="handle_contingenciesself-order-order--void">handle_contingencies(self, Order order) → void<a href="#handle_contingenciesself-order-order--void" class="hash-link" aria-label="Direct link to handle_contingencies(self, Order order) → void" title="Direct link to handle_contingencies(self, Order order) → void">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="handle_contingencies_updateself-order-order--void">handle_contingencies_update(self, Order order) → void<a href="#handle_contingencies_updateself-order-order--void" class="hash-link" aria-label="Direct link to handle_contingencies_update(self, Order order) → void" title="Direct link to handle_contingencies_update(self, Order order) → void">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="handle_eventself-event-event--void-2">handle_event(self, Event event) → void<a href="#handle_eventself-event-event--void-2" class="hash-link" aria-label="Direct link to handle_event(self, Event event) → void" title="Direct link to handle_event(self, Event event) → void">​</a></h4>
<p>Handle the given event.</p>
<p>If a handler for the given event is not implemented then this will simply be a no-op.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>event</strong> (<a href="../core/index.htm#posei_trader.core.Event"><em>Event</em></a>) – The event to handle</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="handle_order_canceledself-ordercanceled-canceled--void">handle_order_canceled(self, OrderCanceled canceled) → void<a href="#handle_order_canceledself-ordercanceled-canceled--void" class="hash-link" aria-label="Direct link to handle_order_canceled(self, OrderCanceled canceled) → void" title="Direct link to handle_order_canceled(self, OrderCanceled canceled) → void">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="handle_order_expiredself-orderexpired-expired--void">handle_order_expired(self, OrderExpired expired) → void<a href="#handle_order_expiredself-orderexpired-expired--void" class="hash-link" aria-label="Direct link to handle_order_expired(self, OrderExpired expired) → void" title="Direct link to handle_order_expired(self, OrderExpired expired) → void">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="handle_order_filledself-orderfilled-filled--void">handle_order_filled(self, OrderFilled filled) → void<a href="#handle_order_filledself-orderfilled-filled--void" class="hash-link" aria-label="Direct link to handle_order_filled(self, OrderFilled filled) → void" title="Direct link to handle_order_filled(self, OrderFilled filled) → void">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="handle_order_rejectedself-orderrejected-rejected--void">handle_order_rejected(self, OrderRejected rejected) → void<a href="#handle_order_rejectedself-orderrejected-rejected--void" class="hash-link" aria-label="Direct link to handle_order_rejected(self, OrderRejected rejected) → void" title="Direct link to handle_order_rejected(self, OrderRejected rejected) → void">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="handle_order_updatedself-orderupdated-updated--void">handle_order_updated(self, OrderUpdated updated) → void<a href="#handle_order_updatedself-orderupdated-updated--void" class="hash-link" aria-label="Direct link to handle_order_updated(self, OrderUpdated updated) → void" title="Direct link to handle_order_updated(self, OrderUpdated updated) → void">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="handle_position_eventself-positionevent-event--void">handle_position_event(self, PositionEvent event) → void<a href="#handle_position_eventself-positionevent-event--void" class="hash-link" aria-label="Direct link to handle_position_event(self, PositionEvent event) → void" title="Direct link to handle_position_event(self, PositionEvent event) → void">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="log_commands">log_commands<a href="#log_commands" class="hash-link" aria-label="Direct link to log_commands" title="Direct link to log_commands">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="log_events">log_events<a href="#log_events" class="hash-link" aria-label="Direct link to log_events" title="Direct link to log_events">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="modify_order_quantityself-order-order-quantity-new_quantity--void">modify_order_quantity(self, Order order, Quantity new_quantity) → void<a href="#modify_order_quantityself-order-order-quantity-new_quantity--void" class="hash-link" aria-label="Direct link to modify_order_quantity(self, Order order, Quantity new_quantity) → void" title="Direct link to modify_order_quantity(self, Order order, Quantity new_quantity) → void">​</a></h4>
<p>Modify the given order with the manager.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>order</strong> (<a href="../model/orders/index.htm#posei_trader.model.orders.Order"><em>Order</em></a>) – The order to modify.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="pop_submit_order_commandself-clientorderid-client_order_id--submitorder">pop_submit_order_command(self, ClientOrderId client_order_id) → <a href="#posei_trader.execution.messages.SubmitOrder">SubmitOrder</a><a href="#pop_submit_order_commandself-clientorderid-client_order_id--submitorder" class="hash-link" aria-label="Direct link to pop_submit_order_commandself-clientorderid-client_order_id--submitorder" title="Direct link to pop_submit_order_commandself-clientorderid-client_order_id--submitorder">​</a></h4>
<p>Pop the submit order command for the given client_order_id out of the managers
cache (if found).</p>
<ul>
<li><strong>Parameters:</strong>
<strong>client_order_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.ClientOrderId"><em>ClientOrderId</em></a>) – The client order ID for the command to pop.</li>
<li><strong>Return type:</strong>
SubmitOrder or <code>None</code></li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="resetself--void-4">reset(self) → void<a href="#resetself--void-4" class="hash-link" aria-label="Direct link to reset(self) → void" title="Direct link to reset(self) → void">​</a></h4>
<p>Reset the manager, clearing all stateful values.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="send_algo_commandself-tradingcommand-command-execalgorithmid-exec_algorithm_id--void">send_algo_command(self, TradingCommand command, ExecAlgorithmId exec_algorithm_id) → void<a href="#send_algo_commandself-tradingcommand-command-execalgorithmid-exec_algorithm_id--void" class="hash-link" aria-label="Direct link to send_algo_command(self, TradingCommand command, ExecAlgorithmId exec_algorithm_id) → void" title="Direct link to send_algo_command(self, TradingCommand command, ExecAlgorithmId exec_algorithm_id) → void">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="send_emulator_commandself-tradingcommand-command--void">send_emulator_command(self, TradingCommand command) → void<a href="#send_emulator_commandself-tradingcommand-command--void" class="hash-link" aria-label="Direct link to send_emulator_command(self, TradingCommand command) → void" title="Direct link to send_emulator_command(self, TradingCommand command) → void">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="send_exec_commandself-tradingcommand-command--void">send_exec_command(self, TradingCommand command) → void<a href="#send_exec_commandself-tradingcommand-command--void" class="hash-link" aria-label="Direct link to send_exec_command(self, TradingCommand command) → void" title="Direct link to send_exec_command(self, TradingCommand command) → void">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="send_exec_eventself-orderevent-event--void">send_exec_event(self, OrderEvent event) → void<a href="#send_exec_eventself-orderevent-event--void" class="hash-link" aria-label="Direct link to send_exec_event(self, OrderEvent event) → void" title="Direct link to send_exec_event(self, OrderEvent event) → void">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="send_risk_commandself-tradingcommand-command--void">send_risk_command(self, TradingCommand command) → void<a href="#send_risk_commandself-tradingcommand-command--void" class="hash-link" aria-label="Direct link to send_risk_command(self, TradingCommand command) → void" title="Direct link to send_risk_command(self, TradingCommand command) → void">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="send_risk_eventself-orderevent-event--void">send_risk_event(self, OrderEvent event) → void<a href="#send_risk_eventself-orderevent-event--void" class="hash-link" aria-label="Direct link to send_risk_event(self, OrderEvent event) → void" title="Direct link to send_risk_event(self, OrderEvent event) → void">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="should_manage_orderself-order-order--bool">should_manage_order(self, Order order) → bool<a href="#should_manage_orderself-order-order--bool" class="hash-link" aria-label="Direct link to should_manage_order(self, Order order) → bool" title="Direct link to should_manage_order(self, Order order) → bool">​</a></h4>
<p>Check if the given order should be managed.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>order</strong> (<a href="../model/orders/index.htm#posei_trader.model.orders.Order"><em>Order</em></a>) – The order to check.</li>
<li><strong>Returns:</strong>
True if the order should be managed, else False.</li>
<li><strong>Return type:</strong>
bool</li>
</ul>
<p><a id="module-posei_trader.execution.matching_core"></a></p>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="class-matchingcore"><em>class</em> MatchingCore<a href="#class-matchingcore" class="hash-link" aria-label="Direct link to class-matchingcore" title="Direct link to class-matchingcore">​</a></h3>
<p>Bases: <code>object</code></p>
<p>MatchingCore(InstrumentId instrument_id, Price price_increment, trigger_stop_order: Callable, fill_market_order: Callable, fill_limit_order: Callable)</p>
<p>Provides a generic order matching core.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>instrument_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.InstrumentId"><em>InstrumentId</em></a>) – The instrument ID for the matching core.</li>
<li><strong>price_increment</strong> (<a href="../model/index.htm#posei_trader.model.Price"><em>Price</em></a>) – The minimum price increment (tick size) for the matching core.</li>
<li><strong>trigger_stop_order</strong> (<em>Callable</em> <em>[</em> <em>[</em><a href="../model/orders/index.htm#posei_trader.model.orders.Order"><em>Order</em></a> <em>]</em> <em>,</em> <em>None</em> <em>]</em>) – The callable when a stop order is triggered.</li>
<li><strong>fill_market_order</strong> (<em>Callable</em> <em>[</em> <em>[</em><a href="../model/orders/index.htm#posei_trader.model.orders.Order"><em>Order</em></a> <em>]</em> <em>,</em> <em>None</em> <em>]</em>) – The callable when a market order is filled.</li>
<li><strong>fill_limit_order</strong> (<em>Callable</em> <em>[</em> <em>[</em><a href="../model/orders/index.htm#posei_trader.model.orders.Order"><em>Order</em></a> <em>]</em> <em>,</em> <em>None</em> <em>]</em>) – The callable when a limit order is filled.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="add_orderself-order-order--void">add_order(self, Order order) → void<a href="#add_orderself-order-order--void" class="hash-link" aria-label="Direct link to add_order(self, Order order) → void" title="Direct link to add_order(self, Order order) → void">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="ask">ask<a href="#ask" class="hash-link" aria-label="Direct link to ask" title="Direct link to ask">​</a></h4>
<p>Price | None</p>
<p>Return the current ask price for the matching core.</p>
<ul>
<li><strong>Return type:</strong>
Price or <code>None</code></li>
<li><strong>Type:</strong>
MatchingCore.ask</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="ask_raw">ask_raw<a href="#ask_raw" class="hash-link" aria-label="Direct link to ask_raw" title="Direct link to ask_raw">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="bid">bid<a href="#bid" class="hash-link" aria-label="Direct link to bid" title="Direct link to bid">​</a></h4>
<p>Price | None</p>
<p>Return the current bid price for the matching core.</p>
<ul>
<li><strong>Return type:</strong>
Price or <code>None</code></li>
<li><strong>Type:</strong>
MatchingCore.bid</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="bid_raw">bid_raw<a href="#bid_raw" class="hash-link" aria-label="Direct link to bid_raw" title="Direct link to bid_raw">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="delete_orderself-order-order--void">delete_order(self, Order order) → void<a href="#delete_orderself-order-order--void" class="hash-link" aria-label="Direct link to delete_order(self, Order order) → void" title="Direct link to delete_order(self, Order order) → void">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="get_orderself-clientorderid-client_order_id--order">get_order(self, ClientOrderId client_order_id) → <a href="../model/orders/index.htm#posei_trader.model.orders.Order">Order</a><a href="#get_orderself-clientorderid-client_order_id--order" class="hash-link" aria-label="Direct link to get_orderself-clientorderid-client_order_id--order" title="Direct link to get_orderself-clientorderid-client_order_id--order">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="get_ordersself--list">get_orders(self) → list<a href="#get_ordersself--list" class="hash-link" aria-label="Direct link to get_orders(self) → list" title="Direct link to get_orders(self) → list">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="get_orders_askself--list">get_orders_ask(self) → list<a href="#get_orders_askself--list" class="hash-link" aria-label="Direct link to get_orders_ask(self) → list" title="Direct link to get_orders_ask(self) → list">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="get_orders_bidself--list">get_orders_bid(self) → list<a href="#get_orders_bidself--list" class="hash-link" aria-label="Direct link to get_orders_bid(self) → list" title="Direct link to get_orders_bid(self) → list">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="instrument_id">instrument_id<a href="#instrument_id" class="hash-link" aria-label="Direct link to instrument_id" title="Direct link to instrument_id">​</a></h4>
<p>InstrumentId</p>
<p>Return the instrument ID for the matching core.</p>
<ul>
<li><strong>Return type:</strong>
<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.InstrumentId">InstrumentId</a></li>
<li><strong>Type:</strong>
MatchingCore.instrument_id</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="is_ask_initialized">is_ask_initialized<a href="#is_ask_initialized" class="hash-link" aria-label="Direct link to is_ask_initialized" title="Direct link to is_ask_initialized">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="is_bid_initialized">is_bid_initialized<a href="#is_bid_initialized" class="hash-link" aria-label="Direct link to is_bid_initialized" title="Direct link to is_bid_initialized">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="is_last_initialized">is_last_initialized<a href="#is_last_initialized" class="hash-link" aria-label="Direct link to is_last_initialized" title="Direct link to is_last_initialized">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="is_limit_matchedself-orderside-side-price-price--bool">is_limit_matched(self, OrderSide side, Price price) → bool<a href="#is_limit_matchedself-orderside-side-price-price--bool" class="hash-link" aria-label="Direct link to is_limit_matched(self, OrderSide side, Price price) → bool" title="Direct link to is_limit_matched(self, OrderSide side, Price price) → bool">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="is_stop_triggeredself-orderside-side-price-trigger_price--bool">is_stop_triggered(self, OrderSide side, Price trigger_price) → bool<a href="#is_stop_triggeredself-orderside-side-price-trigger_price--bool" class="hash-link" aria-label="Direct link to is_stop_triggered(self, OrderSide side, Price trigger_price) → bool" title="Direct link to is_stop_triggered(self, OrderSide side, Price trigger_price) → bool">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="is_touch_triggeredself-orderside-side-price-trigger_price--bool">is_touch_triggered(self, OrderSide side, Price trigger_price) → bool<a href="#is_touch_triggeredself-orderside-side-price-trigger_price--bool" class="hash-link" aria-label="Direct link to is_touch_triggered(self, OrderSide side, Price trigger_price) → bool" title="Direct link to is_touch_triggered(self, OrderSide side, Price trigger_price) → bool">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="iterateself-uint64_t-timestamp_ns--void">iterate(self, uint64_t timestamp_ns) → void<a href="#iterateself-uint64_t-timestamp_ns--void" class="hash-link" aria-label="Direct link to iterate(self, uint64_t timestamp_ns) → void" title="Direct link to iterate(self, uint64_t timestamp_ns) → void">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="last">last<a href="#last" class="hash-link" aria-label="Direct link to last" title="Direct link to last">​</a></h4>
<p>Price | None</p>
<p>Return the current last price for the matching core.</p>
<ul>
<li><strong>Return type:</strong>
Price or <code>None</code></li>
<li><strong>Type:</strong>
MatchingCore.last</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="last_raw">last_raw<a href="#last_raw" class="hash-link" aria-label="Direct link to last_raw" title="Direct link to last_raw">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="match_limit_if_touched_orderself-order-order-bool-initial--void">match_limit_if_touched_order(self, Order order, bool initial) → void<a href="#match_limit_if_touched_orderself-order-order-bool-initial--void" class="hash-link" aria-label="Direct link to match_limit_if_touched_order(self, Order order, bool initial) → void" title="Direct link to match_limit_if_touched_order(self, Order order, bool initial) → void">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="match_limit_orderself-order-order--void">match_limit_order(self, Order order) → void<a href="#match_limit_orderself-order-order--void" class="hash-link" aria-label="Direct link to match_limit_order(self, Order order) → void" title="Direct link to match_limit_order(self, Order order) → void">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="match_market_if_touched_orderself-order-order--void">match_market_if_touched_order(self, Order order) → void<a href="#match_market_if_touched_orderself-order-order--void" class="hash-link" aria-label="Direct link to match_market_if_touched_order(self, Order order) → void" title="Direct link to match_market_if_touched_order(self, Order order) → void">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="match_orderself-order-order-bool-initialfalse--void">match_order(self, Order order, bool initial=False) → void<a href="#match_orderself-order-order-bool-initialfalse--void" class="hash-link" aria-label="Direct link to match_order(self, Order order, bool initial=False) → void" title="Direct link to match_order(self, Order order, bool initial=False) → void">​</a></h4>
<p>Match the given order.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>order</strong> (<a href="../model/orders/index.htm#posei_trader.model.orders.Order"><em>Order</em></a>) – The order to match.</li>
<li><strong>initial</strong> (<em>bool</em> <em>,</em> <em>default False</em>) – If this is an initial match.</li>
</ul>
</li>
<li><strong>Raises:</strong>
<strong>TypeError</strong> – If the order.order_type is an invalid type for the core (e.g. MARKET).</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="match_stop_limit_orderself-order-order-bool-initial--void">match_stop_limit_order(self, Order order, bool initial) → void<a href="#match_stop_limit_orderself-order-order-bool-initial--void" class="hash-link" aria-label="Direct link to match_stop_limit_order(self, Order order, bool initial) → void" title="Direct link to match_stop_limit_order(self, Order order, bool initial) → void">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="match_stop_market_orderself-order-order--void">match_stop_market_order(self, Order order) → void<a href="#match_stop_market_orderself-order-order--void" class="hash-link" aria-label="Direct link to match_stop_market_order(self, Order order) → void" title="Direct link to match_stop_market_order(self, Order order) → void">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="match_trailing_stop_limit_orderself-order-order-bool-initial--void">match_trailing_stop_limit_order(self, Order order, bool initial) → void<a href="#match_trailing_stop_limit_orderself-order-order-bool-initial--void" class="hash-link" aria-label="Direct link to match_trailing_stop_limit_order(self, Order order, bool initial) → void" title="Direct link to match_trailing_stop_limit_order(self, Order order, bool initial) → void">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="match_trailing_stop_market_orderself-order-order--void">match_trailing_stop_market_order(self, Order order) → void<a href="#match_trailing_stop_market_orderself-order-order--void" class="hash-link" aria-label="Direct link to match_trailing_stop_market_order(self, Order order) → void" title="Direct link to match_trailing_stop_market_order(self, Order order) → void">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="order_existsself-clientorderid-client_order_id--bool">order_exists(self, ClientOrderId client_order_id) → bool<a href="#order_existsself-clientorderid-client_order_id--bool" class="hash-link" aria-label="Direct link to order_exists(self, ClientOrderId client_order_id) → bool" title="Direct link to order_exists(self, ClientOrderId client_order_id) → bool">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="price_increment">price_increment<a href="#price_increment" class="hash-link" aria-label="Direct link to price_increment" title="Direct link to price_increment">​</a></h4>
<p>Price</p>
<p>Return the instruments minimum price increment (tick size) for the matching core.</p>
<ul>
<li><strong>Return type:</strong>
<a href="../model/index.htm#posei_trader.model.Price">Price</a></li>
<li><strong>Type:</strong>
MatchingCore.price_increment</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="price_precision">price_precision<a href="#price_precision" class="hash-link" aria-label="Direct link to price_precision" title="Direct link to price_precision">​</a></h4>
<p>int</p>
<p>Return the instruments price precision for the matching core.</p>
<ul>
<li><strong>Return type:</strong>
int</li>
<li><strong>Type:</strong>
MatchingCore.price_precision</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="resetself--void-5">reset(self) → void<a href="#resetself--void-5" class="hash-link" aria-label="Direct link to reset(self) → void" title="Direct link to reset(self) → void">​</a></h4>
<h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="messages">Messages<a href="#messages" class="hash-link" aria-label="Direct link to Messages" title="Direct link to Messages">​</a></h2>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="class-batchcancelorders"><em>class</em> BatchCancelOrders<a href="#class-batchcancelorders" class="hash-link" aria-label="Direct link to class-batchcancelorders" title="Direct link to class-batchcancelorders">​</a></h3>
<p>Bases: <a href="#posei_trader.execution.messages.TradingCommand"><code>TradingCommand</code></a></p>
<p>BatchCancelOrders(TraderId trader_id, StrategyId strategy_id, InstrumentId instrument_id, list cancels, UUID4 command_id, uint64_t ts_init, ClientId client_id=None, dict params: dict | None = None) -&gt; None</p>
<p>Represents a command to batch cancel orders working on a venue for an instrument.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>trader_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.TraderId"><em>TraderId</em></a>) – The trader ID for the command.</li>
<li><strong>strategy_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.StrategyId"><em>StrategyId</em></a>) – The strategy ID for the command.</li>
<li><strong>instrument_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.InstrumentId"><em>InstrumentId</em></a>) – The instrument ID for the command.</li>
<li><strong>cancels</strong> (<em>list</em> <em>[</em><a href="#posei_trader.execution.messages.CancelOrder"><em>CancelOrder</em></a> <em>]</em>) – The inner list of cancel order commands.</li>
<li><strong>command_id</strong> (<a href="../core/index.htm#posei_trader.core.UUID4"><em>UUID4</em></a>) – The command ID.</li>
<li><strong>ts_init</strong> (<em>uint64_t</em>) – UNIX timestamp (nanoseconds) when the object was initialized.</li>
<li><strong>client_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.ClientId"><em>ClientId</em></a> <em>,</em> <em>optional</em>) – The execution client ID for the command.</li>
<li><strong>params</strong> (<em>dict</em> *[*<em>str</em> <em>,</em> <em>object</em> <em>]</em> <em>,</em> <em>optional</em>) – Additional parameters for the command.</li>
</ul>
</li>
<li><strong>Raises:</strong>
<ul>
<li><strong>ValueError</strong> – If cancels is empty.</li>
<li><strong>ValueError</strong> – If cancels contains a type other than CancelOrder.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="cancels">cancels<a href="#cancels" class="hash-link" aria-label="Direct link to cancels" title="Direct link to cancels">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="client_id">client_id<a href="#client_id" class="hash-link" aria-label="Direct link to client_id" title="Direct link to client_id">​</a></h4>
<p>The execution client ID for the command.</p>
<ul>
<li><strong>Returns:</strong>
ClientId or <code>None</code></li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="static-from_dictdict-values--batchcancelorders"><em>static</em> from_dict(dict values) → <a href="#posei_trader.execution.messages.BatchCancelOrders">BatchCancelOrders</a><a href="#static-from_dictdict-values--batchcancelorders" class="hash-link" aria-label="Direct link to static-from_dictdict-values--batchcancelorders" title="Direct link to static-from_dictdict-values--batchcancelorders">​</a></h4>
<p>Return a batch cancel order command from the given dict values.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>values</strong> (<em>dict</em> *[*<em>str</em> <em>,</em> <em>object</em> <em>]</em>) – The values for initialization.</li>
<li><strong>Return type:</strong>
<a href="#posei_trader.execution.messages.BatchCancelOrders">BatchCancelOrders</a></li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="id-4">id<a href="#id-4" class="hash-link" aria-label="Direct link to id" title="Direct link to id">​</a></h4>
<p>The command message ID.</p>
<ul>
<li><strong>Returns:</strong>
UUID4</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="instrument_id-1">instrument_id<a href="#instrument_id-1" class="hash-link" aria-label="Direct link to instrument_id" title="Direct link to instrument_id">​</a></h4>
<p>The instrument ID associated with the command.</p>
<ul>
<li><strong>Returns:</strong>
InstrumentId</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="params">params<a href="#params" class="hash-link" aria-label="Direct link to params" title="Direct link to params">​</a></h4>
<p>Additional specific parameters for the command.</p>
<ul>
<li><strong>Returns:</strong>
dict[str, object] or <code>None</code></li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="strategy_id">strategy_id<a href="#strategy_id" class="hash-link" aria-label="Direct link to strategy_id" title="Direct link to strategy_id">​</a></h4>
<p>The strategy ID associated with the command.</p>
<ul>
<li><strong>Returns:</strong>
StrategyId</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="static-to_dictbatchcancelorders-obj"><em>static</em> to_dict(BatchCancelOrders obj)<a href="#static-to_dictbatchcancelorders-obj" class="hash-link" aria-label="Direct link to static-to_dictbatchcancelorders-obj" title="Direct link to static-to_dictbatchcancelorders-obj">​</a></h4>
<p>Return a dictionary representation of this object.</p>
<ul>
<li><strong>Return type:</strong>
dict[str, object]</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="trader_id-4">trader_id<a href="#trader_id-4" class="hash-link" aria-label="Direct link to trader_id" title="Direct link to trader_id">​</a></h4>
<p>The trader ID associated with the command.</p>
<ul>
<li><strong>Returns:</strong>
TraderId</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="ts_init">ts_init<a href="#ts_init" class="hash-link" aria-label="Direct link to ts_init" title="Direct link to ts_init">​</a></h4>
<p>UNIX timestamp (nanoseconds) when the object was initialized.</p>
<ul>
<li><strong>Returns:</strong>
uint64_t</li>
</ul>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="class-cancelallorders"><em>class</em> CancelAllOrders<a href="#class-cancelallorders" class="hash-link" aria-label="Direct link to class-cancelallorders" title="Direct link to class-cancelallorders">​</a></h3>
<p>Bases: <a href="#posei_trader.execution.messages.TradingCommand"><code>TradingCommand</code></a></p>
<p>CancelAllOrders(TraderId trader_id, StrategyId strategy_id, InstrumentId instrument_id, OrderSide order_side, UUID4 command_id, uint64_t ts_init, ClientId client_id=None, dict params: dict | None = None) -&gt; None</p>
<p>Represents a command to cancel all orders for an instrument.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>trader_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.TraderId"><em>TraderId</em></a>) – The trader ID for the command.</li>
<li><strong>strategy_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.StrategyId"><em>StrategyId</em></a>) – The strategy ID for the command.</li>
<li><strong>instrument_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.InstrumentId"><em>InstrumentId</em></a>) – The instrument ID for the command.</li>
<li><strong>order_side</strong> (<em>OrderSide</em>) – The order side for the command.</li>
<li><strong>command_id</strong> (<a href="../core/index.htm#posei_trader.core.UUID4"><em>UUID4</em></a>) – The command ID.</li>
<li><strong>ts_init</strong> (<em>uint64_t</em>) – UNIX timestamp (nanoseconds) when the object was initialized.</li>
<li><strong>client_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.ClientId"><em>ClientId</em></a> <em>,</em> <em>optional</em>) – The execution client ID for the command.</li>
<li><strong>params</strong> (<em>dict</em> *[*<em>str</em> <em>,</em> <em>object</em> <em>]</em> <em>,</em> <em>optional</em>) – Additional parameters for the command.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="client_id-1">client_id<a href="#client_id-1" class="hash-link" aria-label="Direct link to client_id" title="Direct link to client_id">​</a></h4>
<p>The execution client ID for the command.</p>
<ul>
<li><strong>Returns:</strong>
ClientId or <code>None</code></li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="static-from_dictdict-values--cancelallorders"><em>static</em> from_dict(dict values) → <a href="#posei_trader.execution.messages.CancelAllOrders">CancelAllOrders</a><a href="#static-from_dictdict-values--cancelallorders" class="hash-link" aria-label="Direct link to static-from_dictdict-values--cancelallorders" title="Direct link to static-from_dictdict-values--cancelallorders">​</a></h4>
<p>Return a cancel order command from the given dict values.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>values</strong> (<em>dict</em> *[*<em>str</em> <em>,</em> <em>object</em> <em>]</em>) – The values for initialization.</li>
<li><strong>Return type:</strong>
<a href="#posei_trader.execution.messages.CancelAllOrders">CancelAllOrders</a></li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="id-5">id<a href="#id-5" class="hash-link" aria-label="Direct link to id" title="Direct link to id">​</a></h4>
<p>The command message ID.</p>
<ul>
<li><strong>Returns:</strong>
UUID4</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="instrument_id-2">instrument_id<a href="#instrument_id-2" class="hash-link" aria-label="Direct link to instrument_id" title="Direct link to instrument_id">​</a></h4>
<p>The instrument ID associated with the command.</p>
<ul>
<li><strong>Returns:</strong>
InstrumentId</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="order_side">order_side<a href="#order_side" class="hash-link" aria-label="Direct link to order_side" title="Direct link to order_side">​</a></h4>
<p>The order side for the command.</p>
<ul>
<li><strong>Returns:</strong>
OrderSide</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="params-1">params<a href="#params-1" class="hash-link" aria-label="Direct link to params" title="Direct link to params">​</a></h4>
<p>Additional specific parameters for the command.</p>
<ul>
<li><strong>Returns:</strong>
dict[str, object] or <code>None</code></li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="strategy_id-1">strategy_id<a href="#strategy_id-1" class="hash-link" aria-label="Direct link to strategy_id" title="Direct link to strategy_id">​</a></h4>
<p>The strategy ID associated with the command.</p>
<ul>
<li><strong>Returns:</strong>
StrategyId</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="static-to_dictcancelallorders-obj"><em>static</em> to_dict(CancelAllOrders obj)<a href="#static-to_dictcancelallorders-obj" class="hash-link" aria-label="Direct link to static-to_dictcancelallorders-obj" title="Direct link to static-to_dictcancelallorders-obj">​</a></h4>
<p>Return a dictionary representation of this object.</p>
<ul>
<li><strong>Return type:</strong>
dict[str, object]</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="trader_id-5">trader_id<a href="#trader_id-5" class="hash-link" aria-label="Direct link to trader_id" title="Direct link to trader_id">​</a></h4>
<p>The trader ID associated with the command.</p>
<ul>
<li><strong>Returns:</strong>
TraderId</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="ts_init-1">ts_init<a href="#ts_init-1" class="hash-link" aria-label="Direct link to ts_init" title="Direct link to ts_init">​</a></h4>
<p>UNIX timestamp (nanoseconds) when the object was initialized.</p>
<ul>
<li><strong>Returns:</strong>
uint64_t</li>
</ul>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="class-cancelorder"><em>class</em> CancelOrder<a href="#class-cancelorder" class="hash-link" aria-label="Direct link to class-cancelorder" title="Direct link to class-cancelorder">​</a></h3>
<p>Bases: <a href="#posei_trader.execution.messages.TradingCommand"><code>TradingCommand</code></a></p>
<p>CancelOrder(TraderId trader_id, StrategyId strategy_id, InstrumentId instrument_id, ClientOrderId client_order_id, VenueOrderId venue_order_id: VenueOrderId | None, UUID4 command_id, uint64_t ts_init, ClientId client_id=None, dict params: dict | None = None) -&gt; None</p>
<p>Represents a command to cancel an order.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>trader_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.TraderId"><em>TraderId</em></a>) – The trader ID for the command.</li>
<li><strong>strategy_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.StrategyId"><em>StrategyId</em></a>) – The strategy ID for the command.</li>
<li><strong>instrument_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.InstrumentId"><em>InstrumentId</em></a>) – The instrument ID for the command.</li>
<li><strong>client_order_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.ClientOrderId"><em>ClientOrderId</em></a>) – The client order ID to cancel.</li>
<li><strong>venue_order_id</strong> (VenueOrderId or <code>None</code>) – The venue order ID (assigned by the venue) to cancel.</li>
<li><strong>command_id</strong> (<a href="../core/index.htm#posei_trader.core.UUID4"><em>UUID4</em></a>) – The command ID.</li>
<li><strong>ts_init</strong> (<em>uint64_t</em>) – UNIX timestamp (nanoseconds) when the object was initialized.</li>
<li><strong>client_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.ClientId"><em>ClientId</em></a> <em>,</em> <em>optional</em>) – The execution client ID for the command.</li>
<li><strong>params</strong> (<em>dict</em> *[*<em>str</em> <em>,</em> <em>object</em> <em>]</em> <em>,</em> <em>optional</em>) – Additional parameters for the command.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="client_id-2">client_id<a href="#client_id-2" class="hash-link" aria-label="Direct link to client_id" title="Direct link to client_id">​</a></h4>
<p>The execution client ID for the command.</p>
<ul>
<li><strong>Returns:</strong>
ClientId or <code>None</code></li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="client_order_id">client_order_id<a href="#client_order_id" class="hash-link" aria-label="Direct link to client_order_id" title="Direct link to client_order_id">​</a></h4>
<p>The client order ID associated with the command.</p>
<ul>
<li><strong>Returns:</strong>
ClientOrderId</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="static-from_dictdict-values--cancelorder"><em>static</em> from_dict(dict values) → <a href="#posei_trader.execution.messages.CancelOrder">CancelOrder</a><a href="#static-from_dictdict-values--cancelorder" class="hash-link" aria-label="Direct link to static-from_dictdict-values--cancelorder" title="Direct link to static-from_dictdict-values--cancelorder">​</a></h4>
<p>Return a cancel order command from the given dict values.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>values</strong> (<em>dict</em> *[*<em>str</em> <em>,</em> <em>object</em> <em>]</em>) – The values for initialization.</li>
<li><strong>Return type:</strong>
<a href="#posei_trader.execution.messages.CancelOrder">CancelOrder</a></li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="id-6">id<a href="#id-6" class="hash-link" aria-label="Direct link to id" title="Direct link to id">​</a></h4>
<p>The command message ID.</p>
<ul>
<li><strong>Returns:</strong>
UUID4</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="instrument_id-3">instrument_id<a href="#instrument_id-3" class="hash-link" aria-label="Direct link to instrument_id" title="Direct link to instrument_id">​</a></h4>
<p>The instrument ID associated with the command.</p>
<ul>
<li><strong>Returns:</strong>
InstrumentId</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="params-2">params<a href="#params-2" class="hash-link" aria-label="Direct link to params" title="Direct link to params">​</a></h4>
<p>Additional specific parameters for the command.</p>
<ul>
<li><strong>Returns:</strong>
dict[str, object] or <code>None</code></li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="strategy_id-2">strategy_id<a href="#strategy_id-2" class="hash-link" aria-label="Direct link to strategy_id" title="Direct link to strategy_id">​</a></h4>
<p>The strategy ID associated with the command.</p>
<ul>
<li><strong>Returns:</strong>
StrategyId</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="static-to_dictcancelorder-obj"><em>static</em> to_dict(CancelOrder obj)<a href="#static-to_dictcancelorder-obj" class="hash-link" aria-label="Direct link to static-to_dictcancelorder-obj" title="Direct link to static-to_dictcancelorder-obj">​</a></h4>
<p>Return a dictionary representation of this object.</p>
<ul>
<li><strong>Return type:</strong>
dict[str, object]</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="trader_id-6">trader_id<a href="#trader_id-6" class="hash-link" aria-label="Direct link to trader_id" title="Direct link to trader_id">​</a></h4>
<p>The trader ID associated with the command.</p>
<ul>
<li><strong>Returns:</strong>
TraderId</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="ts_init-2">ts_init<a href="#ts_init-2" class="hash-link" aria-label="Direct link to ts_init" title="Direct link to ts_init">​</a></h4>
<p>UNIX timestamp (nanoseconds) when the object was initialized.</p>
<ul>
<li><strong>Returns:</strong>
uint64_t</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="venue_order_id">venue_order_id<a href="#venue_order_id" class="hash-link" aria-label="Direct link to venue_order_id" title="Direct link to venue_order_id">​</a></h4>
<p>The venue order ID associated with the command.</p>
<ul>
<li><strong>Returns:</strong>
VenueOrderId or <code>None</code></li>
</ul>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="class-executionreportcommand"><em>class</em> ExecutionReportCommand<a href="#class-executionreportcommand" class="hash-link" aria-label="Direct link to class-executionreportcommand" title="Direct link to class-executionreportcommand">​</a></h3>
<p>Bases: <a href="../core/index.htm#posei_trader.core.message.Command"><code>Command</code></a></p>
<p>ExecutionReportCommand(InstrumentId instrument_id: InstrumentId | None, datetime start: datetime | None, datetime end: datetime | None, UUID4 command_id, uint64_t ts_init, dict params: dict | None = None) -&gt; None</p>
<p>The base class for all execution report commands.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>instrument_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.InstrumentId"><em>InstrumentId</em></a>) – The instrument ID for the command.</li>
<li><strong>start</strong> (<em>datetime</em> <em>,</em> <em>optional</em>) – The start datetime (UTC) of request time range (inclusive).</li>
<li><strong>end</strong> (<em>datetime</em> <em>,</em> <em>optional</em>) – The end datetime (UTC) of request time range.
The inclusiveness depends on individual data client implementation.</li>
<li><strong>command_id</strong> (<a href="../core/index.htm#posei_trader.core.UUID4"><em>UUID4</em></a>) – The commands ID.</li>
<li><strong>ts_init</strong> (<em>uint64_t</em>) – UNIX timestamp (nanoseconds) when the object was initialized.</li>
<li><strong>params</strong> (<em>dict</em> *[*<em>str</em> <em>,</em> <em>object</em> <em>]</em> <em>,</em> <em>optional</em>) – Additional parameters for the command.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-144">WARNING<a href="#warning-144" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>This class should not be used directly, but through a concrete subclass.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="end">end<a href="#end" class="hash-link" aria-label="Direct link to end" title="Direct link to end">​</a></h4>
<p>The end datetime (UTC) of request time range.</p>
<p>:returns datetime or <code>None</code></p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="id-7">id<a href="#id-7" class="hash-link" aria-label="Direct link to id" title="Direct link to id">​</a></h4>
<p>The command message ID.</p>
<ul>
<li><strong>Returns:</strong>
UUID4</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="instrument_id-4">instrument_id<a href="#instrument_id-4" class="hash-link" aria-label="Direct link to instrument_id" title="Direct link to instrument_id">​</a></h4>
<p>The instrument ID associated with the command.</p>
<ul>
<li><strong>Returns:</strong>
InstrumentId</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="params-3">params<a href="#params-3" class="hash-link" aria-label="Direct link to params" title="Direct link to params">​</a></h4>
<p>Additional specific parameters for the command.</p>
<ul>
<li><strong>Returns:</strong>
dict[str, object] or <code>None</code></li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="start">start<a href="#start" class="hash-link" aria-label="Direct link to start" title="Direct link to start">​</a></h4>
<p>The start datetime (UTC) of request time range (inclusive).</p>
<p>:returns datetime or <code>None</code></p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="ts_init-3">ts_init<a href="#ts_init-3" class="hash-link" aria-label="Direct link to ts_init" title="Direct link to ts_init">​</a></h4>
<p>UNIX timestamp (nanoseconds) when the object was initialized.</p>
<ul>
<li><strong>Returns:</strong>
uint64_t</li>
</ul>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="class-generatefillreports"><em>class</em> GenerateFillReports<a href="#class-generatefillreports" class="hash-link" aria-label="Direct link to class-generatefillreports" title="Direct link to class-generatefillreports">​</a></h3>
<p>Bases: <a href="#posei_trader.execution.messages.ExecutionReportCommand"><code>ExecutionReportCommand</code></a></p>
<p>GenerateFillReports(InstrumentId instrument_id: InstrumentId | None, VenueOrderId venue_order_id: VenueOrderId | None, datetime start: datetime | None, datetime end: datetime | None, UUID4 command_id, uint64_t ts_init, dict params: dict | None = None) -&gt; None</p>
<p>Command to generate fill reports.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>instrument_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.InstrumentId"><em>InstrumentId</em></a>) – The instrument ID for the command.</li>
<li><strong>venue_order_id</strong> (VenueOrderId or <code>None</code>) – The venue order ID (assigned by the venue) to query.</li>
<li><strong>start</strong> (<em>datetime</em>) – The start datetime (UTC) of request time range (inclusive).</li>
<li><strong>end</strong> (<em>datetime</em>) – The end datetime (UTC) of request time range.
The inclusiveness depends on individual data client implementation.</li>
<li><strong>command_id</strong> (<a href="../core/index.htm#posei_trader.core.UUID4"><em>UUID4</em></a>) – The commands ID.</li>
<li><strong>ts_init</strong> (<em>uint64_t</em>) – UNIX timestamp (nanoseconds) when the object was initialized.</li>
<li><strong>params</strong> (<em>dict</em> *[*<em>str</em> <em>,</em> <em>object</em> <em>]</em> <em>,</em> <em>optional</em>) – Additional parameters for the command.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="end-1">end<a href="#end-1" class="hash-link" aria-label="Direct link to end" title="Direct link to end">​</a></h4>
<p>The end datetime (UTC) of request time range.</p>
<p>:returns datetime or <code>None</code></p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="id-8">id<a href="#id-8" class="hash-link" aria-label="Direct link to id" title="Direct link to id">​</a></h4>
<p>The command message ID.</p>
<ul>
<li><strong>Returns:</strong>
UUID4</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="instrument_id-5">instrument_id<a href="#instrument_id-5" class="hash-link" aria-label="Direct link to instrument_id" title="Direct link to instrument_id">​</a></h4>
<p>The instrument ID associated with the command.</p>
<ul>
<li><strong>Returns:</strong>
InstrumentId</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="params-4">params<a href="#params-4" class="hash-link" aria-label="Direct link to params" title="Direct link to params">​</a></h4>
<p>Additional specific parameters for the command.</p>
<ul>
<li><strong>Returns:</strong>
dict[str, object] or <code>None</code></li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="start-1">start<a href="#start-1" class="hash-link" aria-label="Direct link to start" title="Direct link to start">​</a></h4>
<p>The start datetime (UTC) of request time range (inclusive).</p>
<p>:returns datetime or <code>None</code></p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="ts_init-4">ts_init<a href="#ts_init-4" class="hash-link" aria-label="Direct link to ts_init" title="Direct link to ts_init">​</a></h4>
<p>UNIX timestamp (nanoseconds) when the object was initialized.</p>
<ul>
<li><strong>Returns:</strong>
uint64_t</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="venue_order_id-1">venue_order_id<a href="#venue_order_id-1" class="hash-link" aria-label="Direct link to venue_order_id" title="Direct link to venue_order_id">​</a></h4>
<p>The venue order ID associated with the command.</p>
<ul>
<li><strong>Returns:</strong>
VenueOrderId or <code>None</code></li>
</ul>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="class-generateorderstatusreport"><em>class</em> GenerateOrderStatusReport<a href="#class-generateorderstatusreport" class="hash-link" aria-label="Direct link to class-generateorderstatusreport" title="Direct link to class-generateorderstatusreport">​</a></h3>
<p>Bases: <a href="#posei_trader.execution.messages.ExecutionReportCommand"><code>ExecutionReportCommand</code></a></p>
<p>GenerateOrderStatusReport(InstrumentId instrument_id: InstrumentId | None, ClientOrderId client_order_id: ClientOrderId | None, VenueOrderId venue_order_id: VenueOrderId | None, UUID4 command_id, uint64_t ts_init, dict params: dict | None = None) -&gt; None</p>
<p>Command to generate an order status report.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>instrument_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.InstrumentId"><em>InstrumentId</em></a>) – The instrument ID for the command.</li>
<li><strong>client_order_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.ClientOrderId"><em>ClientOrderId</em></a>) – The client order ID to update.</li>
<li><strong>venue_order_id</strong> (VenueOrderId or <code>None</code>) – The venue order ID (assigned by the venue) to query.</li>
<li><strong>command_id</strong> (<a href="../core/index.htm#posei_trader.core.UUID4"><em>UUID4</em></a>) – The commands ID.</li>
<li><strong>ts_init</strong> (<em>uint64_t</em>) – UNIX timestamp (nanoseconds) when the object was initialized.</li>
<li><strong>params</strong> (<em>dict</em> *[*<em>str</em> <em>,</em> <em>object</em> <em>]</em> <em>,</em> <em>optional</em>) – Additional parameters for the command.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="client_order_id-1">client_order_id<a href="#client_order_id-1" class="hash-link" aria-label="Direct link to client_order_id" title="Direct link to client_order_id">​</a></h4>
<p>The client order ID associated with the command.</p>
<ul>
<li><strong>Returns:</strong>
ClientOrderId</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="end-2">end<a href="#end-2" class="hash-link" aria-label="Direct link to end" title="Direct link to end">​</a></h4>
<p>The end datetime (UTC) of request time range.</p>
<p>:returns datetime or <code>None</code></p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="id-9">id<a href="#id-9" class="hash-link" aria-label="Direct link to id" title="Direct link to id">​</a></h4>
<p>The command message ID.</p>
<ul>
<li><strong>Returns:</strong>
UUID4</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="instrument_id-6">instrument_id<a href="#instrument_id-6" class="hash-link" aria-label="Direct link to instrument_id" title="Direct link to instrument_id">​</a></h4>
<p>The instrument ID associated with the command.</p>
<ul>
<li><strong>Returns:</strong>
InstrumentId</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="params-5">params<a href="#params-5" class="hash-link" aria-label="Direct link to params" title="Direct link to params">​</a></h4>
<p>Additional specific parameters for the command.</p>
<ul>
<li><strong>Returns:</strong>
dict[str, object] or <code>None</code></li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="start-2">start<a href="#start-2" class="hash-link" aria-label="Direct link to start" title="Direct link to start">​</a></h4>
<p>The start datetime (UTC) of request time range (inclusive).</p>
<p>:returns datetime or <code>None</code></p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="ts_init-5">ts_init<a href="#ts_init-5" class="hash-link" aria-label="Direct link to ts_init" title="Direct link to ts_init">​</a></h4>
<p>UNIX timestamp (nanoseconds) when the object was initialized.</p>
<ul>
<li><strong>Returns:</strong>
uint64_t</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="venue_order_id-2">venue_order_id<a href="#venue_order_id-2" class="hash-link" aria-label="Direct link to venue_order_id" title="Direct link to venue_order_id">​</a></h4>
<p>The venue order ID associated with the command.</p>
<ul>
<li><strong>Returns:</strong>
VenueOrderId or <code>None</code></li>
</ul>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="class-generateorderstatusreports"><em>class</em> GenerateOrderStatusReports<a href="#class-generateorderstatusreports" class="hash-link" aria-label="Direct link to class-generateorderstatusreports" title="Direct link to class-generateorderstatusreports">​</a></h3>
<p>Bases: <a href="#posei_trader.execution.messages.ExecutionReportCommand"><code>ExecutionReportCommand</code></a></p>
<p>GenerateOrderStatusReports(InstrumentId instrument_id: InstrumentId | None, datetime start: datetime | None, datetime end: datetime | None, bool open_only, UUID4 command_id, uint64_t ts_init, dict params: dict | None = None, LogLevel log_receipt_level=LogLevel.INFO) -&gt; None</p>
<p>Command to generate order status reports.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>instrument_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.InstrumentId"><em>InstrumentId</em></a>) – The instrument ID for the command.</li>
<li><strong>start</strong> (<em>datetime</em>) – The start datetime (UTC) of request time range (inclusive).</li>
<li><strong>end</strong> (<em>datetime</em>) – The end datetime (UTC) of request time range.
The inclusiveness depends on individual data client implementation.</li>
<li><strong>open_only</strong> (<em>bool</em>) – If True then only open orders will be requested.</li>
<li><strong>command_id</strong> (<a href="../core/index.htm#posei_trader.core.UUID4"><em>UUID4</em></a>) – The commands ID.</li>
<li><strong>ts_init</strong> (<em>uint64_t</em>) – UNIX timestamp (nanoseconds) when the object was initialized.</li>
<li><strong>params</strong> (<em>dict</em> *[*<em>str</em> <em>,</em> <em>object</em> <em>]</em> <em>,</em> <em>optional</em>) – Additional parameters for the command.</li>
<li><strong>log_receipt_level</strong> (<em>LogLevel</em> <em>,</em> <em>default &#x27;INFO&#x27;</em>) – The log level for logging received reports. Must be either LogLevel.DEBUG or LogLevel.INFO.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="end-3">end<a href="#end-3" class="hash-link" aria-label="Direct link to end" title="Direct link to end">​</a></h4>
<p>The end datetime (UTC) of request time range.</p>
<p>:returns datetime or <code>None</code></p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="id-10">id<a href="#id-10" class="hash-link" aria-label="Direct link to id" title="Direct link to id">​</a></h4>
<p>The command message ID.</p>
<ul>
<li><strong>Returns:</strong>
UUID4</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="instrument_id-7">instrument_id<a href="#instrument_id-7" class="hash-link" aria-label="Direct link to instrument_id" title="Direct link to instrument_id">​</a></h4>
<p>The instrument ID associated with the command.</p>
<ul>
<li><strong>Returns:</strong>
InstrumentId</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="log_receipt_level">log_receipt_level<a href="#log_receipt_level" class="hash-link" aria-label="Direct link to log_receipt_level" title="Direct link to log_receipt_level">​</a></h4>
<p>The log level for logging received reports.</p>
<ul>
<li><strong>Returns:</strong>
LogLevel</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="open_only">open_only<a href="#open_only" class="hash-link" aria-label="Direct link to open_only" title="Direct link to open_only">​</a></h4>
<p>If the request is only for open orders.</p>
<ul>
<li><strong>Returns:</strong>
bool</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="params-6">params<a href="#params-6" class="hash-link" aria-label="Direct link to params" title="Direct link to params">​</a></h4>
<p>Additional specific parameters for the command.</p>
<ul>
<li><strong>Returns:</strong>
dict[str, object] or <code>None</code></li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="start-3">start<a href="#start-3" class="hash-link" aria-label="Direct link to start" title="Direct link to start">​</a></h4>
<p>The start datetime (UTC) of request time range (inclusive).</p>
<p>:returns datetime or <code>None</code></p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="ts_init-6">ts_init<a href="#ts_init-6" class="hash-link" aria-label="Direct link to ts_init" title="Direct link to ts_init">​</a></h4>
<p>UNIX timestamp (nanoseconds) when the object was initialized.</p>
<ul>
<li><strong>Returns:</strong>
uint64_t</li>
</ul>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="class-generatepositionstatusreports"><em>class</em> GeneratePositionStatusReports<a href="#class-generatepositionstatusreports" class="hash-link" aria-label="Direct link to class-generatepositionstatusreports" title="Direct link to class-generatepositionstatusreports">​</a></h3>
<p>Bases: <a href="#posei_trader.execution.messages.ExecutionReportCommand"><code>ExecutionReportCommand</code></a></p>
<p>GeneratePositionStatusReports(InstrumentId instrument_id: InstrumentId | None, datetime start: datetime | None, datetime end: datetime | None, UUID4 command_id, uint64_t ts_init, dict params: dict | None = None) -&gt; None</p>
<p>Command to generate position status reports.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>instrument_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.InstrumentId"><em>InstrumentId</em></a>) – The instrument ID for the command.</li>
<li><strong>start</strong> (<em>datetime</em>) – The start datetime (UTC) of request time range (inclusive).</li>
<li><strong>end</strong> (<em>datetime</em>) – The end datetime (UTC) of request time range.
The inclusiveness depends on individual data client implementation.</li>
<li><strong>command_id</strong> (<a href="../core/index.htm#posei_trader.core.UUID4"><em>UUID4</em></a>) – The commands ID.</li>
<li><strong>ts_init</strong> (<em>uint64_t</em>) – UNIX timestamp (nanoseconds) when the object was initialized.</li>
<li><strong>params</strong> (<em>dict</em> *[*<em>str</em> <em>,</em> <em>object</em> <em>]</em> <em>,</em> <em>optional</em>) – Additional parameters for the command.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="end-4">end<a href="#end-4" class="hash-link" aria-label="Direct link to end" title="Direct link to end">​</a></h4>
<p>The end datetime (UTC) of request time range.</p>
<p>:returns datetime or <code>None</code></p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="id-11">id<a href="#id-11" class="hash-link" aria-label="Direct link to id" title="Direct link to id">​</a></h4>
<p>The command message ID.</p>
<ul>
<li><strong>Returns:</strong>
UUID4</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="instrument_id-8">instrument_id<a href="#instrument_id-8" class="hash-link" aria-label="Direct link to instrument_id" title="Direct link to instrument_id">​</a></h4>
<p>The instrument ID associated with the command.</p>
<ul>
<li><strong>Returns:</strong>
InstrumentId</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="params-7">params<a href="#params-7" class="hash-link" aria-label="Direct link to params" title="Direct link to params">​</a></h4>
<p>Additional specific parameters for the command.</p>
<ul>
<li><strong>Returns:</strong>
dict[str, object] or <code>None</code></li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="start-4">start<a href="#start-4" class="hash-link" aria-label="Direct link to start" title="Direct link to start">​</a></h4>
<p>The start datetime (UTC) of request time range (inclusive).</p>
<p>:returns datetime or <code>None</code></p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="ts_init-7">ts_init<a href="#ts_init-7" class="hash-link" aria-label="Direct link to ts_init" title="Direct link to ts_init">​</a></h4>
<p>UNIX timestamp (nanoseconds) when the object was initialized.</p>
<ul>
<li><strong>Returns:</strong>
uint64_t</li>
</ul>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="class-modifyorder"><em>class</em> ModifyOrder<a href="#class-modifyorder" class="hash-link" aria-label="Direct link to class-modifyorder" title="Direct link to class-modifyorder">​</a></h3>
<p>Bases: <a href="#posei_trader.execution.messages.TradingCommand"><code>TradingCommand</code></a></p>
<p>ModifyOrder(TraderId trader_id, StrategyId strategy_id, InstrumentId instrument_id, ClientOrderId client_order_id, VenueOrderId venue_order_id: VenueOrderId | None, Quantity quantity: Quantity | None, Price price: Price | None, Price trigger_price: Price | None, UUID4 command_id, uint64_t ts_init, ClientId client_id=None, dict params: dict | None = None) -&gt; None</p>
<p>Represents a command to modify the properties of an existing order.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>trader_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.TraderId"><em>TraderId</em></a>) – The trader ID for the command.</li>
<li><strong>strategy_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.StrategyId"><em>StrategyId</em></a>) – The strategy ID for the command.</li>
<li><strong>instrument_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.InstrumentId"><em>InstrumentId</em></a>) – The instrument ID for the command.</li>
<li><strong>client_order_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.ClientOrderId"><em>ClientOrderId</em></a>) – The client order ID to update.</li>
<li><strong>venue_order_id</strong> (VenueOrderId or <code>None</code>) – The venue order ID (assigned by the venue) to update.</li>
<li><strong>quantity</strong> (Quantity or <code>None</code>) – The quantity for the order update.</li>
<li><strong>price</strong> (Price or <code>None</code>) – The price for the order update.</li>
<li><strong>trigger_price</strong> (Price or <code>None</code>) – The trigger price for the order update.</li>
<li><strong>command_id</strong> (<a href="../core/index.htm#posei_trader.core.UUID4"><em>UUID4</em></a>) – The command ID.</li>
<li><strong>ts_init</strong> (<em>uint64_t</em>) – UNIX timestamp (nanoseconds) when the object was initialized.</li>
<li><strong>client_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.ClientId"><em>ClientId</em></a> <em>,</em> <em>optional</em>) – The execution client ID for the command.</li>
<li><strong>params</strong> (<em>dict</em> *[*<em>str</em> <em>,</em> <em>object</em> <em>]</em> <em>,</em> <em>optional</em>) – Additional parameters for the command.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="client_id-3">client_id<a href="#client_id-3" class="hash-link" aria-label="Direct link to client_id" title="Direct link to client_id">​</a></h4>
<p>The execution client ID for the command.</p>
<ul>
<li><strong>Returns:</strong>
ClientId or <code>None</code></li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="client_order_id-2">client_order_id<a href="#client_order_id-2" class="hash-link" aria-label="Direct link to client_order_id" title="Direct link to client_order_id">​</a></h4>
<p>The client order ID associated with the command.</p>
<ul>
<li><strong>Returns:</strong>
ClientOrderId</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="static-from_dictdict-values--modifyorder"><em>static</em> from_dict(dict values) → <a href="#posei_trader.execution.messages.ModifyOrder">ModifyOrder</a><a href="#static-from_dictdict-values--modifyorder" class="hash-link" aria-label="Direct link to static-from_dictdict-values--modifyorder" title="Direct link to static-from_dictdict-values--modifyorder">​</a></h4>
<p>Return a modify order command from the given dict values.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>values</strong> (<em>dict</em> *[*<em>str</em> <em>,</em> <em>object</em> <em>]</em>) – The values for initialization.</li>
<li><strong>Return type:</strong>
<a href="#posei_trader.execution.messages.ModifyOrder">ModifyOrder</a></li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="id-12">id<a href="#id-12" class="hash-link" aria-label="Direct link to id" title="Direct link to id">​</a></h4>
<p>The command message ID.</p>
<ul>
<li><strong>Returns:</strong>
UUID4</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="instrument_id-9">instrument_id<a href="#instrument_id-9" class="hash-link" aria-label="Direct link to instrument_id" title="Direct link to instrument_id">​</a></h4>
<p>The instrument ID associated with the command.</p>
<ul>
<li><strong>Returns:</strong>
InstrumentId</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="params-8">params<a href="#params-8" class="hash-link" aria-label="Direct link to params" title="Direct link to params">​</a></h4>
<p>Additional specific parameters for the command.</p>
<ul>
<li><strong>Returns:</strong>
dict[str, object] or <code>None</code></li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="price">price<a href="#price" class="hash-link" aria-label="Direct link to price" title="Direct link to price">​</a></h4>
<p>The updated price for the command.</p>
<ul>
<li><strong>Returns:</strong>
Price or <code>None</code></li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="quantity">quantity<a href="#quantity" class="hash-link" aria-label="Direct link to quantity" title="Direct link to quantity">​</a></h4>
<p>The updated quantity for the command.</p>
<ul>
<li><strong>Returns:</strong>
Quantity or <code>None</code></li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="strategy_id-3">strategy_id<a href="#strategy_id-3" class="hash-link" aria-label="Direct link to strategy_id" title="Direct link to strategy_id">​</a></h4>
<p>The strategy ID associated with the command.</p>
<ul>
<li><strong>Returns:</strong>
StrategyId</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="static-to_dictmodifyorder-obj"><em>static</em> to_dict(ModifyOrder obj)<a href="#static-to_dictmodifyorder-obj" class="hash-link" aria-label="Direct link to static-to_dictmodifyorder-obj" title="Direct link to static-to_dictmodifyorder-obj">​</a></h4>
<p>Return a dictionary representation of this object.</p>
<ul>
<li><strong>Return type:</strong>
dict[str, object]</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="trader_id-7">trader_id<a href="#trader_id-7" class="hash-link" aria-label="Direct link to trader_id" title="Direct link to trader_id">​</a></h4>
<p>The trader ID associated with the command.</p>
<ul>
<li><strong>Returns:</strong>
TraderId</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="trigger_price">trigger_price<a href="#trigger_price" class="hash-link" aria-label="Direct link to trigger_price" title="Direct link to trigger_price">​</a></h4>
<p>The updated trigger price for the command.</p>
<ul>
<li><strong>Returns:</strong>
Price or <code>None</code></li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="ts_init-8">ts_init<a href="#ts_init-8" class="hash-link" aria-label="Direct link to ts_init" title="Direct link to ts_init">​</a></h4>
<p>UNIX timestamp (nanoseconds) when the object was initialized.</p>
<ul>
<li><strong>Returns:</strong>
uint64_t</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="venue_order_id-3">venue_order_id<a href="#venue_order_id-3" class="hash-link" aria-label="Direct link to venue_order_id" title="Direct link to venue_order_id">​</a></h4>
<p>The venue order ID associated with the command.</p>
<ul>
<li><strong>Returns:</strong>
VenueOrderId or <code>None</code></li>
</ul>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="class-queryorder"><em>class</em> QueryOrder<a href="#class-queryorder" class="hash-link" aria-label="Direct link to class-queryorder" title="Direct link to class-queryorder">​</a></h3>
<p>Bases: <a href="#posei_trader.execution.messages.TradingCommand"><code>TradingCommand</code></a></p>
<p>QueryOrder(TraderId trader_id, StrategyId strategy_id, InstrumentId instrument_id, ClientOrderId client_order_id, VenueOrderId venue_order_id: VenueOrderId | None, UUID4 command_id, uint64_t ts_init, ClientId client_id=None, dict params: dict | None = None) -&gt; None</p>
<p>Represents a command to query an order.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>trader_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.TraderId"><em>TraderId</em></a>) – The trader ID for the command.</li>
<li><strong>strategy_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.StrategyId"><em>StrategyId</em></a>) – The strategy ID for the command.</li>
<li><strong>instrument_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.InstrumentId"><em>InstrumentId</em></a>) – The instrument ID for the command.</li>
<li><strong>client_order_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.ClientOrderId"><em>ClientOrderId</em></a>) – The client order ID for the order to query.</li>
<li><strong>venue_order_id</strong> (VenueOrderId or <code>None</code>) – The venue order ID (assigned by the venue) to query.</li>
<li><strong>command_id</strong> (<a href="../core/index.htm#posei_trader.core.UUID4"><em>UUID4</em></a>) – The command ID.</li>
<li><strong>ts_init</strong> (<em>uint64_t</em>) – UNIX timestamp (nanoseconds) when the object was initialized.</li>
<li><strong>client_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.ClientId"><em>ClientId</em></a> <em>,</em> <em>optional</em>) – The execution client ID for the command.</li>
<li><strong>params</strong> (<em>dict</em> *[*<em>str</em> <em>,</em> <em>object</em> <em>]</em> <em>,</em> <em>optional</em>) – Additional parameters for the command.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="client_id-4">client_id<a href="#client_id-4" class="hash-link" aria-label="Direct link to client_id" title="Direct link to client_id">​</a></h4>
<p>The execution client ID for the command.</p>
<ul>
<li><strong>Returns:</strong>
ClientId or <code>None</code></li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="client_order_id-3">client_order_id<a href="#client_order_id-3" class="hash-link" aria-label="Direct link to client_order_id" title="Direct link to client_order_id">​</a></h4>
<p>The client order ID for the order to query.</p>
<ul>
<li><strong>Returns:</strong>
ClientOrderId</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="static-from_dictdict-values--queryorder"><em>static</em> from_dict(dict values) → <a href="#posei_trader.execution.messages.QueryOrder">QueryOrder</a><a href="#static-from_dictdict-values--queryorder" class="hash-link" aria-label="Direct link to static-from_dictdict-values--queryorder" title="Direct link to static-from_dictdict-values--queryorder">​</a></h4>
<p>Return a query order command from the given dict values.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>values</strong> (<em>dict</em> *[*<em>str</em> <em>,</em> <em>object</em> <em>]</em>) – The values for initialization.</li>
<li><strong>Return type:</strong>
<a href="#posei_trader.execution.messages.QueryOrder">QueryOrder</a></li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="id-13">id<a href="#id-13" class="hash-link" aria-label="Direct link to id" title="Direct link to id">​</a></h4>
<p>The command message ID.</p>
<ul>
<li><strong>Returns:</strong>
UUID4</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="instrument_id-10">instrument_id<a href="#instrument_id-10" class="hash-link" aria-label="Direct link to instrument_id" title="Direct link to instrument_id">​</a></h4>
<p>The instrument ID associated with the command.</p>
<ul>
<li><strong>Returns:</strong>
InstrumentId</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="params-9">params<a href="#params-9" class="hash-link" aria-label="Direct link to params" title="Direct link to params">​</a></h4>
<p>Additional specific parameters for the command.</p>
<ul>
<li><strong>Returns:</strong>
dict[str, object] or <code>None</code></li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="strategy_id-4">strategy_id<a href="#strategy_id-4" class="hash-link" aria-label="Direct link to strategy_id" title="Direct link to strategy_id">​</a></h4>
<p>The strategy ID associated with the command.</p>
<ul>
<li><strong>Returns:</strong>
StrategyId</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="static-to_dictqueryorder-obj"><em>static</em> to_dict(QueryOrder obj)<a href="#static-to_dictqueryorder-obj" class="hash-link" aria-label="Direct link to static-to_dictqueryorder-obj" title="Direct link to static-to_dictqueryorder-obj">​</a></h4>
<p>Return a dictionary representation of this object.</p>
<ul>
<li><strong>Return type:</strong>
dict[str, object]</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="trader_id-8">trader_id<a href="#trader_id-8" class="hash-link" aria-label="Direct link to trader_id" title="Direct link to trader_id">​</a></h4>
<p>The trader ID associated with the command.</p>
<ul>
<li><strong>Returns:</strong>
TraderId</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="ts_init-9">ts_init<a href="#ts_init-9" class="hash-link" aria-label="Direct link to ts_init" title="Direct link to ts_init">​</a></h4>
<p>UNIX timestamp (nanoseconds) when the object was initialized.</p>
<ul>
<li><strong>Returns:</strong>
uint64_t</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="venue_order_id-4">venue_order_id<a href="#venue_order_id-4" class="hash-link" aria-label="Direct link to venue_order_id" title="Direct link to venue_order_id">​</a></h4>
<p>The venue order ID for the order to query.</p>
<ul>
<li><strong>Returns:</strong>
VenueOrderId or <code>None</code></li>
</ul>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="class-submitorder"><em>class</em> SubmitOrder<a href="#class-submitorder" class="hash-link" aria-label="Direct link to class-submitorder" title="Direct link to class-submitorder">​</a></h3>
<p>Bases: <a href="#posei_trader.execution.messages.TradingCommand"><code>TradingCommand</code></a></p>
<p>SubmitOrder(TraderId trader_id, StrategyId strategy_id, Order order, UUID4 command_id, uint64_t ts_init, PositionId position_id: PositionId | None = None, ClientId client_id=None, dict params: dict | None = None) -&gt; None</p>
<p>Represents a command to submit the given order.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>trader_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.TraderId"><em>TraderId</em></a>) – The trader ID for the command.</li>
<li><strong>strategy_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.StrategyId"><em>StrategyId</em></a>) – The strategy ID for the command.</li>
<li><strong>order</strong> (<a href="../model/orders/index.htm#posei_trader.model.orders.Order"><em>Order</em></a>) – The order to submit.</li>
<li><strong>command_id</strong> (<a href="../core/index.htm#posei_trader.core.UUID4"><em>UUID4</em></a>) – The commands ID.</li>
<li><strong>ts_init</strong> (<em>uint64_t</em>) – UNIX timestamp (nanoseconds) when the object was initialized.</li>
<li><strong>position_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.PositionId"><em>PositionId</em></a> <em>,</em> <em>optional</em>) – The position ID for the command.</li>
<li><strong>client_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.ClientId"><em>ClientId</em></a> <em>,</em> <em>optional</em>) – The execution client ID for the command.</li>
<li><strong>params</strong> (<em>dict</em> *[*<em>str</em> <em>,</em> <em>object</em> <em>]</em> <em>,</em> <em>optional</em>) – Additional parameters for the command.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="client_id-5">client_id<a href="#client_id-5" class="hash-link" aria-label="Direct link to client_id" title="Direct link to client_id">​</a></h4>
<p>The execution client ID for the command.</p>
<ul>
<li><strong>Returns:</strong>
ClientId or <code>None</code></li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="exec_algorithm_id">exec_algorithm_id<a href="#exec_algorithm_id" class="hash-link" aria-label="Direct link to exec_algorithm_id" title="Direct link to exec_algorithm_id">​</a></h4>
<p>The execution algorithm ID for the order.</p>
<ul>
<li><strong>Returns:</strong>
ExecAlgorithmId or <code>None</code></li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="static-from_dictdict-values--submitorder"><em>static</em> from_dict(dict values) → <a href="#posei_trader.execution.messages.SubmitOrder">SubmitOrder</a><a href="#static-from_dictdict-values--submitorder" class="hash-link" aria-label="Direct link to static-from_dictdict-values--submitorder" title="Direct link to static-from_dictdict-values--submitorder">​</a></h4>
<p>Return a submit order command from the given dict values.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>values</strong> (<em>dict</em> *[*<em>str</em> <em>,</em> <em>object</em> <em>]</em>) – The values for initialization.</li>
<li><strong>Return type:</strong>
<a href="#posei_trader.execution.messages.SubmitOrder">SubmitOrder</a></li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="id-14">id<a href="#id-14" class="hash-link" aria-label="Direct link to id" title="Direct link to id">​</a></h4>
<p>The command message ID.</p>
<ul>
<li><strong>Returns:</strong>
UUID4</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="instrument_id-11">instrument_id<a href="#instrument_id-11" class="hash-link" aria-label="Direct link to instrument_id" title="Direct link to instrument_id">​</a></h4>
<p>The instrument ID associated with the command.</p>
<ul>
<li><strong>Returns:</strong>
InstrumentId</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="order">order<a href="#order" class="hash-link" aria-label="Direct link to order" title="Direct link to order">​</a></h4>
<p>The order to submit.</p>
<ul>
<li><strong>Returns:</strong>
Order</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="params-10">params<a href="#params-10" class="hash-link" aria-label="Direct link to params" title="Direct link to params">​</a></h4>
<p>Additional specific parameters for the command.</p>
<ul>
<li><strong>Returns:</strong>
dict[str, object] or <code>None</code></li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="position_id">position_id<a href="#position_id" class="hash-link" aria-label="Direct link to position_id" title="Direct link to position_id">​</a></h4>
<p>The position ID to associate with the order.</p>
<ul>
<li><strong>Returns:</strong>
PositionId or <code>None</code></li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="strategy_id-5">strategy_id<a href="#strategy_id-5" class="hash-link" aria-label="Direct link to strategy_id" title="Direct link to strategy_id">​</a></h4>
<p>The strategy ID associated with the command.</p>
<ul>
<li><strong>Returns:</strong>
StrategyId</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="static-to_dictsubmitorder-obj"><em>static</em> to_dict(SubmitOrder obj)<a href="#static-to_dictsubmitorder-obj" class="hash-link" aria-label="Direct link to static-to_dictsubmitorder-obj" title="Direct link to static-to_dictsubmitorder-obj">​</a></h4>
<p>Return a dictionary representation of this object.</p>
<ul>
<li><strong>Return type:</strong>
dict[str, object]</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="trader_id-9">trader_id<a href="#trader_id-9" class="hash-link" aria-label="Direct link to trader_id" title="Direct link to trader_id">​</a></h4>
<p>The trader ID associated with the command.</p>
<ul>
<li><strong>Returns:</strong>
TraderId</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="ts_init-10">ts_init<a href="#ts_init-10" class="hash-link" aria-label="Direct link to ts_init" title="Direct link to ts_init">​</a></h4>
<p>UNIX timestamp (nanoseconds) when the object was initialized.</p>
<ul>
<li><strong>Returns:</strong>
uint64_t</li>
</ul>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="class-submitorderlist"><em>class</em> SubmitOrderList<a href="#class-submitorderlist" class="hash-link" aria-label="Direct link to class-submitorderlist" title="Direct link to class-submitorderlist">​</a></h3>
<p>Bases: <a href="#posei_trader.execution.messages.TradingCommand"><code>TradingCommand</code></a></p>
<p>SubmitOrderList(TraderId trader_id, StrategyId strategy_id, OrderList order_list, UUID4 command_id, uint64_t ts_init, PositionId position_id: PositionId | None = None, ClientId client_id=None, dict params: dict | None = None) -&gt; None</p>
<p>Represents a command to submit an order list consisting of an order batch/bulk
of related parent-child contingent orders.</p>
<p>This command can correspond to a NewOrderList <e> message for the FIX
protocol.</e></p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>trader_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.TraderId"><em>TraderId</em></a>) – The trader ID for the command.</li>
<li><strong>strategy_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.StrategyId"><em>StrategyId</em></a>) – The strategy ID for the command.</li>
<li><strong>order_list</strong> (<a href="../model/orders/index.htm#posei_trader.model.orders.OrderList"><em>OrderList</em></a>) – The order list to submit.</li>
<li><strong>command_id</strong> (<a href="../core/index.htm#posei_trader.core.UUID4"><em>UUID4</em></a>) – The command ID.</li>
<li><strong>ts_init</strong> (<em>uint64_t</em>) – UNIX timestamp (nanoseconds) when the object was initialized.</li>
<li><strong>position_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.PositionId"><em>PositionId</em></a> <em>,</em> <em>optional</em>) – The position ID for the command.</li>
<li><strong>client_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.ClientId"><em>ClientId</em></a> <em>,</em> <em>optional</em>) – The execution client ID for the command.</li>
<li><strong>params</strong> (<em>dict</em> *[*<em>str</em> <em>,</em> <em>object</em> <em>]</em> <em>,</em> <em>optional</em>) – Additional parameters for the command.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="client_id-6">client_id<a href="#client_id-6" class="hash-link" aria-label="Direct link to client_id" title="Direct link to client_id">​</a></h4>
<p>The execution client ID for the command.</p>
<ul>
<li><strong>Returns:</strong>
ClientId or <code>None</code></li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="exec_algorithm_id-1">exec_algorithm_id<a href="#exec_algorithm_id-1" class="hash-link" aria-label="Direct link to exec_algorithm_id" title="Direct link to exec_algorithm_id">​</a></h4>
<p>The execution algorithm ID for the order list.</p>
<ul>
<li><strong>Returns:</strong>
ExecAlgorithmId or <code>None</code></li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="static-from_dictdict-values--submitorderlist"><em>static</em> from_dict(dict values) → <a href="#posei_trader.execution.messages.SubmitOrderList">SubmitOrderList</a><a href="#static-from_dictdict-values--submitorderlist" class="hash-link" aria-label="Direct link to static-from_dictdict-values--submitorderlist" title="Direct link to static-from_dictdict-values--submitorderlist">​</a></h4>
<p>Return a submit order list command from the given dict values.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>values</strong> (<em>dict</em> *[*<em>str</em> <em>,</em> <em>object</em> <em>]</em>) – The values for initialization.</li>
<li><strong>Return type:</strong>
<a href="#posei_trader.execution.messages.SubmitOrderList">SubmitOrderList</a></li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="has_emulated_order">has_emulated_order<a href="#has_emulated_order" class="hash-link" aria-label="Direct link to has_emulated_order" title="Direct link to has_emulated_order">​</a></h4>
<p>If the contained order_list holds at least one emulated order.</p>
<ul>
<li><strong>Returns:</strong>
bool</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="id-15">id<a href="#id-15" class="hash-link" aria-label="Direct link to id" title="Direct link to id">​</a></h4>
<p>The command message ID.</p>
<ul>
<li><strong>Returns:</strong>
UUID4</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="instrument_id-12">instrument_id<a href="#instrument_id-12" class="hash-link" aria-label="Direct link to instrument_id" title="Direct link to instrument_id">​</a></h4>
<p>The instrument ID associated with the command.</p>
<ul>
<li><strong>Returns:</strong>
InstrumentId</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="order_list">order_list<a href="#order_list" class="hash-link" aria-label="Direct link to order_list" title="Direct link to order_list">​</a></h4>
<p>The order list to submit.</p>
<ul>
<li><strong>Returns:</strong>
OrderList</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="params-11">params<a href="#params-11" class="hash-link" aria-label="Direct link to params" title="Direct link to params">​</a></h4>
<p>Additional specific parameters for the command.</p>
<ul>
<li><strong>Returns:</strong>
dict[str, object] or <code>None</code></li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="position_id-1">position_id<a href="#position_id-1" class="hash-link" aria-label="Direct link to position_id" title="Direct link to position_id">​</a></h4>
<p>The position ID to associate with the orders.</p>
<ul>
<li><strong>Returns:</strong>
PositionId or <code>None</code></li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="strategy_id-6">strategy_id<a href="#strategy_id-6" class="hash-link" aria-label="Direct link to strategy_id" title="Direct link to strategy_id">​</a></h4>
<p>The strategy ID associated with the command.</p>
<ul>
<li><strong>Returns:</strong>
StrategyId</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="static-to_dictsubmitorderlist-obj"><em>static</em> to_dict(SubmitOrderList obj)<a href="#static-to_dictsubmitorderlist-obj" class="hash-link" aria-label="Direct link to static-to_dictsubmitorderlist-obj" title="Direct link to static-to_dictsubmitorderlist-obj">​</a></h4>
<p>Return a dictionary representation of this object.</p>
<ul>
<li><strong>Return type:</strong>
dict[str, object]</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="trader_id-10">trader_id<a href="#trader_id-10" class="hash-link" aria-label="Direct link to trader_id" title="Direct link to trader_id">​</a></h4>
<p>The trader ID associated with the command.</p>
<ul>
<li><strong>Returns:</strong>
TraderId</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="ts_init-11">ts_init<a href="#ts_init-11" class="hash-link" aria-label="Direct link to ts_init" title="Direct link to ts_init">​</a></h4>
<p>UNIX timestamp (nanoseconds) when the object was initialized.</p>
<ul>
<li><strong>Returns:</strong>
uint64_t</li>
</ul>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="class-tradingcommand"><em>class</em> TradingCommand<a href="#class-tradingcommand" class="hash-link" aria-label="Direct link to class-tradingcommand" title="Direct link to class-tradingcommand">​</a></h3>
<p>Bases: <a href="../core/index.htm#posei_trader.core.message.Command"><code>Command</code></a></p>
<p>TradingCommand(ClientId client_id: ClientId | None, TraderId trader_id, StrategyId strategy_id, InstrumentId instrument_id, UUID4 command_id, uint64_t ts_init, dict params: dict | None = None) -&gt; None</p>
<p>The base class for all trading related commands.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>client_id</strong> (ClientId or <code>None</code>) – The execution client ID for the command.</li>
<li><strong>trader_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.TraderId"><em>TraderId</em></a>) – The trader ID for the command.</li>
<li><strong>strategy_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.StrategyId"><em>StrategyId</em></a>) – The strategy ID for the command.</li>
<li><strong>instrument_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.InstrumentId"><em>InstrumentId</em></a>) – The instrument ID for the command.</li>
<li><strong>command_id</strong> (<a href="../core/index.htm#posei_trader.core.UUID4"><em>UUID4</em></a>) – The commands ID.</li>
<li><strong>ts_init</strong> (<em>uint64_t</em>) – UNIX timestamp (nanoseconds) when the object was initialized.</li>
<li><strong>params</strong> (<em>dict</em> *[*<em>str</em> <em>,</em> <em>object</em> <em>]</em> <em>,</em> <em>optional</em>) – Additional parameters for the command.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-145">WARNING<a href="#warning-145" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>This class should not be used directly, but through a concrete subclass.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="client_id-7">client_id<a href="#client_id-7" class="hash-link" aria-label="Direct link to client_id" title="Direct link to client_id">​</a></h4>
<p>The execution client ID for the command.</p>
<ul>
<li><strong>Returns:</strong>
ClientId or <code>None</code></li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="id-16">id<a href="#id-16" class="hash-link" aria-label="Direct link to id" title="Direct link to id">​</a></h4>
<p>The command message ID.</p>
<ul>
<li><strong>Returns:</strong>
UUID4</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="instrument_id-13">instrument_id<a href="#instrument_id-13" class="hash-link" aria-label="Direct link to instrument_id" title="Direct link to instrument_id">​</a></h4>
<p>The instrument ID associated with the command.</p>
<ul>
<li><strong>Returns:</strong>
InstrumentId</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="params-12">params<a href="#params-12" class="hash-link" aria-label="Direct link to params" title="Direct link to params">​</a></h4>
<p>Additional specific parameters for the command.</p>
<ul>
<li><strong>Returns:</strong>
dict[str, object] or <code>None</code></li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="strategy_id-7">strategy_id<a href="#strategy_id-7" class="hash-link" aria-label="Direct link to strategy_id" title="Direct link to strategy_id">​</a></h4>
<p>The strategy ID associated with the command.</p>
<ul>
<li><strong>Returns:</strong>
StrategyId</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="trader_id-11">trader_id<a href="#trader_id-11" class="hash-link" aria-label="Direct link to trader_id" title="Direct link to trader_id">​</a></h4>
<p>The trader ID associated with the command.</p>
<ul>
<li><strong>Returns:</strong>
TraderId</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="ts_init-12">ts_init<a href="#ts_init-12" class="hash-link" aria-label="Direct link to ts_init" title="Direct link to ts_init">​</a></h4>
<p>UNIX timestamp (nanoseconds) when the object was initialized.</p>
<ul>
<li><strong>Returns:</strong>
uint64_t</li>
</ul>
<h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="reports">Reports<a href="#reports" class="hash-link" aria-label="Direct link to Reports" title="Direct link to Reports">​</a></h2>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="class-executionreport"><em>class</em> ExecutionReport<a href="#class-executionreport" class="hash-link" aria-label="Direct link to class-executionreport" title="Direct link to class-executionreport">​</a></h3>
<p>Bases: <a href="../core/index.htm#posei_trader.core.message.Document"><code>Document</code></a></p>
<p>The base class for all execution reports.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="id-17">id<a href="#id-17" class="hash-link" aria-label="Direct link to id" title="Direct link to id">​</a></h4>
<p>The document message ID.</p>
<ul>
<li><strong>Returns:</strong>
UUID4</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="ts_init-13">ts_init<a href="#ts_init-13" class="hash-link" aria-label="Direct link to ts_init" title="Direct link to ts_init">​</a></h4>
<p>UNIX timestamp (nanoseconds) when the object was initialized.</p>
<ul>
<li><strong>Returns:</strong>
uint64_t</li>
</ul>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="class-orderstatusreport"><em>class</em> OrderStatusReport<a href="#class-orderstatusreport" class="hash-link" aria-label="Direct link to class-orderstatusreport" title="Direct link to class-orderstatusreport">​</a></h3>
<p>Bases: <a href="#posei_trader.execution.reports.ExecutionReport"><code>ExecutionReport</code></a></p>
<p>Represents an order status at a point in time.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>account_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.AccountId"><em>AccountId</em></a>) – The account ID for the report.</li>
<li><strong>instrument_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.InstrumentId"><em>InstrumentId</em></a>) – The instrument ID for the report.</li>
<li><strong>venue_order_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.VenueOrderId"><em>VenueOrderId</em></a>) – The reported order ID (assigned by the venue).</li>
<li><strong>order_side</strong> (OrderSide {<code>BUY</code>, <code>SELL</code>}) – The reported order side.</li>
<li><strong>order_type</strong> (<em>OrderType</em>) – The reported order type.</li>
<li><strong>time_in_force</strong> (TimeInForce {<code>GTC</code>, <code>IOC</code>, <code>FOK</code>, <code>GTD</code>, <code>DAY</code>, <code>AT_THE_OPEN</code>, <code>AT_THE_CLOSE</code>}) – The reported order time in force.</li>
<li><strong>order_status</strong> (<em>OrderStatus</em>) – The reported order status at the exchange.</li>
<li><strong>quantity</strong> (<a href="../model/index.htm#posei_trader.model.Quantity"><em>Quantity</em></a>) – The reported order original quantity.</li>
<li><strong>filled_qty</strong> (<a href="../model/index.htm#posei_trader.model.Quantity"><em>Quantity</em></a>) – The reported filled quantity at the exchange.</li>
<li><strong>report_id</strong> (<a href="../core/index.htm#posei_trader.core.UUID4"><em>UUID4</em></a>) – The report ID.</li>
<li><strong>ts_accepted</strong> (<em>int</em>) – UNIX timestamp (nanoseconds) when the reported order was accepted.</li>
<li><strong>ts_last</strong> (<em>int</em>) – UNIX timestamp (nanoseconds) of the last order status change.</li>
<li><strong>ts_init</strong> (<em>int</em>) – UNIX timestamp (nanoseconds) when the object was initialized.</li>
<li><strong>client_order_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.ClientOrderId"><em>ClientOrderId</em></a> <em>,</em> <em>optional</em>) – The reported client order ID.</li>
<li><strong>order_list_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.OrderListId"><em>OrderListId</em></a> <em>,</em> <em>optional</em>) – The reported order list ID associated with the order.</li>
<li><strong>venue_position_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.PositionId"><em>PositionId</em></a> <em>,</em> <em>optional</em>) – The reported venue position ID for the order. If the trading venue has
associated a position ID / ticket with the order then pass that here,
otherwise pass <code>None</code> and the execution engine OMS will handle
position ID resolution.</li>
<li><strong>contingency_type</strong> (ContingencyType, default <code>NO_CONTINGENCY</code>) – The reported order contingency type.</li>
<li><strong>expire_time</strong> (<em>datetime</em> <em>,</em> <em>optional</em>) – The order expiration.</li>
<li><strong>price</strong> (<a href="../model/index.htm#posei_trader.model.Price"><em>Price</em></a> <em>,</em> <em>optional</em>) – The reported order price (LIMIT).</li>
<li><strong>trigger_price</strong> (<a href="../model/index.htm#posei_trader.model.Price"><em>Price</em></a> <em>,</em> <em>optional</em>) – The reported order trigger price (STOP).</li>
<li><strong>trigger_type</strong> (TriggerType, default <code>NO_TRIGGER</code>) – The reported order trigger type.</li>
<li><strong>limit_offset</strong> (<em>Decimal</em> <em>,</em> <em>optional</em>) – The trailing offset for the order price (LIMIT).</li>
<li><strong>trailing_offset</strong> (<em>Decimal</em> <em>,</em> <em>optional</em>) – The trailing offset for the trigger price (STOP).</li>
<li><strong>trailing_offset_type</strong> (TrailingOffsetType, default <code>NO_TRAILING_OFFSET</code>) – The order trailing offset type.</li>
<li><strong>avg_px</strong> (<em>Decimal</em> <em>,</em> <em>optional</em>) – The reported order average fill price.</li>
<li><strong>display_qty</strong> (<a href="../model/index.htm#posei_trader.model.Quantity"><em>Quantity</em></a> <em>,</em> <em>optional</em>) – The reported order quantity displayed on the public book (iceberg).</li>
<li><strong>post_only</strong> (<em>bool</em> <em>,</em> <em>default False</em>) – If the reported order will only provide liquidity (make a market).</li>
<li><strong>reduce_only</strong> (<em>bool</em> <em>,</em> <em>default False</em>) – If the reported order carries the ‘reduce-only’ execution instruction.</li>
<li><strong>cancel_reason</strong> (<em>str</em> <em>,</em> <em>optional</em>) – The reported reason for order cancellation.</li>
<li><strong>ts_triggered</strong> (<em>int</em> <em>,</em> <em>optional</em>) – UNIX timestamp (nanoseconds) when the object was initialized.</li>
</ul>
</li>
<li><strong>Raises:</strong>
<ul>
<li><strong>ValueError</strong> – If quantity is not positive (&gt; 0).</li>
<li><strong>ValueError</strong> – If filled_qty is negative (&lt; 0).</li>
<li><strong>ValueError</strong> – If trigger_price is not <code>None</code> and trigger_price is equal to <code>NO_TRIGGER</code>.</li>
<li><strong>ValueError</strong> – If limit_offset or trailing_offset is not <code>None</code> and trailing_offset_type is equal to <code>NO_TRAILING_OFFSET</code>.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="property-is_open--bool"><em>property</em> is_open <em>: bool</em><a href="#property-is_open--bool" class="hash-link" aria-label="Direct link to property-is_open--bool" title="Direct link to property-is_open--bool">​</a></h4>
<p>Return whether the reported order status is ‘open’.</p>
<ul>
<li><strong>Return type:</strong>
bool</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="static-from_pyo3pyo3_report-orderstatusreport--orderstatusreport"><em>static</em> from_pyo3(pyo3_report: OrderStatusReport) → <a href="#posei_trader.execution.reports.OrderStatusReport">OrderStatusReport</a><a href="#static-from_pyo3pyo3_report-orderstatusreport--orderstatusreport" class="hash-link" aria-label="Direct link to static-from_pyo3pyo3_report-orderstatusreport--orderstatusreport" title="Direct link to static-from_pyo3pyo3_report-orderstatusreport--orderstatusreport">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="id-18">id<a href="#id-18" class="hash-link" aria-label="Direct link to id" title="Direct link to id">​</a></h4>
<p>The document message ID.</p>
<ul>
<li><strong>Returns:</strong>
UUID4</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="ts_init-14">ts_init<a href="#ts_init-14" class="hash-link" aria-label="Direct link to ts_init" title="Direct link to ts_init">​</a></h4>
<p>UNIX timestamp (nanoseconds) when the object was initialized.</p>
<ul>
<li><strong>Returns:</strong>
uint64_t</li>
</ul>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="class-fillreport"><em>class</em> FillReport<a href="#class-fillreport" class="hash-link" aria-label="Direct link to class-fillreport" title="Direct link to class-fillreport">​</a></h3>
<p>Bases: <a href="#posei_trader.execution.reports.ExecutionReport"><code>ExecutionReport</code></a></p>
<p>Represents a report of a single order fill.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>account_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.AccountId"><em>AccountId</em></a>) – The account ID for the report.</li>
<li><strong>instrument_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.InstrumentId"><em>InstrumentId</em></a>) – The reported instrument ID for the trade.</li>
<li><strong>venue_order_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.VenueOrderId"><em>VenueOrderId</em></a>) – The reported venue order ID (assigned by the venue) for the trade.</li>
<li><strong>trade_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.TradeId"><em>TradeId</em></a>) – The reported trade match ID (assigned by the venue).</li>
<li><strong>order_side</strong> (OrderSide {<code>BUY</code>, <code>SELL</code>}) – The reported order side for the trade.</li>
<li><strong>last_qty</strong> (<a href="../model/index.htm#posei_trader.model.Quantity"><em>Quantity</em></a>) – The reported quantity of the trade.</li>
<li><strong>last_px</strong> (<a href="../model/index.htm#posei_trader.model.Price"><em>Price</em></a>) – The reported price of the trade.</li>
<li><strong>commission</strong> (<a href="../model/index.htm#posei_trader.model.Money"><em>Money</em></a>) – The reported commission for the trade.
If no commission then use a zero Money amount of the commission currency.</li>
<li><strong>liquidity_side</strong> (LiquiditySide {<code>NO_LIQUIDITY_SIDE</code>, <code>MAKER</code>, <code>TAKER</code>}) – The reported liquidity side for the trade.</li>
<li><strong>report_id</strong> (<a href="../core/index.htm#posei_trader.core.UUID4"><em>UUID4</em></a>) – The report ID.</li>
<li><strong>ts_event</strong> (<em>int</em>) – UNIX timestamp (nanoseconds) when the trade occurred.</li>
<li><strong>ts_init</strong> (<em>int</em>) – UNIX timestamp (nanoseconds) when the object was initialized.</li>
<li><strong>client_order_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.ClientOrderId"><em>ClientOrderId</em></a> <em>,</em> <em>optional</em>) – The reported client order ID for the trade.</li>
<li><strong>venue_position_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.PositionId"><em>PositionId</em></a> <em>,</em> <em>optional</em>) – The reported venue position ID for the trade. If the trading venue has
assigned a position ID / ticket for the trade then pass that here,
otherwise pass <code>None</code> and the execution engine OMS will handle
position ID resolution.</li>
</ul>
</li>
<li><strong>Raises:</strong>
<strong>ValueError</strong> – If last_qty is not positive (&gt; 0).</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="static-from_pyo3pyo3_report-fillreport--fillreport"><em>static</em> from_pyo3(pyo3_report: FillReport) → <a href="#posei_trader.execution.reports.FillReport">FillReport</a><a href="#static-from_pyo3pyo3_report-fillreport--fillreport" class="hash-link" aria-label="Direct link to static-from_pyo3pyo3_report-fillreport--fillreport" title="Direct link to static-from_pyo3pyo3_report-fillreport--fillreport">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="id-19">id<a href="#id-19" class="hash-link" aria-label="Direct link to id" title="Direct link to id">​</a></h4>
<p>The document message ID.</p>
<ul>
<li><strong>Returns:</strong>
UUID4</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="ts_init-15">ts_init<a href="#ts_init-15" class="hash-link" aria-label="Direct link to ts_init" title="Direct link to ts_init">​</a></h4>
<p>UNIX timestamp (nanoseconds) when the object was initialized.</p>
<ul>
<li><strong>Returns:</strong>
uint64_t</li>
</ul>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="class-positionstatusreport"><em>class</em> PositionStatusReport<a href="#class-positionstatusreport" class="hash-link" aria-label="Direct link to class-positionstatusreport" title="Direct link to class-positionstatusreport">​</a></h3>
<p>Bases: <a href="#posei_trader.execution.reports.ExecutionReport"><code>ExecutionReport</code></a></p>
<p>Represents a position status at a point in time.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>account_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.AccountId"><em>AccountId</em></a>) – The account ID for the report.</li>
<li><strong>instrument_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.InstrumentId"><em>InstrumentId</em></a>) – The reported instrument ID for the position.</li>
<li><strong>position_side</strong> (PositionSide {<code>FLAT</code>, <code>LONG</code>, <code>SHORT</code>}) – The reported position side at the exchange.</li>
<li><strong>quantity</strong> (<a href="../model/index.htm#posei_trader.model.Quantity"><em>Quantity</em></a>) – The reported position quantity at the exchange.</li>
<li><strong>report_id</strong> (<a href="../core/index.htm#posei_trader.core.UUID4"><em>UUID4</em></a>) – The report ID.</li>
<li><strong>ts_last</strong> (<em>int</em>) – UNIX timestamp (nanoseconds) of the last position change.</li>
<li><strong>ts_init</strong> (<em>int</em>) – UNIX timestamp (nanoseconds) when the object was initialized.</li>
<li><strong>venue_position_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.PositionId"><em>PositionId</em></a> <em>,</em> <em>optional</em>) – The reported venue position ID (assigned by the venue). If the trading
venue has assigned a position ID / ticket for the trade then pass that
here, otherwise pass <code>None</code> and the execution engine OMS will handle
position ID resolution.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="static-from_pyo3pyo3_report-positionstatusreport--positionstatusreport"><em>static</em> from_pyo3(pyo3_report: PositionStatusReport) → <a href="#posei_trader.execution.reports.PositionStatusReport">PositionStatusReport</a><a href="#static-from_pyo3pyo3_report-positionstatusreport--positionstatusreport" class="hash-link" aria-label="Direct link to static-from_pyo3pyo3_report-positionstatusreport--positionstatusreport" title="Direct link to static-from_pyo3pyo3_report-positionstatusreport--positionstatusreport">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="id-20">id<a href="#id-20" class="hash-link" aria-label="Direct link to id" title="Direct link to id">​</a></h4>
<p>The document message ID.</p>
<ul>
<li><strong>Returns:</strong>
UUID4</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="ts_init-16">ts_init<a href="#ts_init-16" class="hash-link" aria-label="Direct link to ts_init" title="Direct link to ts_init">​</a></h4>
<p>UNIX timestamp (nanoseconds) when the object was initialized.</p>
<ul>
<li><strong>Returns:</strong>
uint64_t</li>
</ul>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="class-executionmassstatus"><em>class</em> ExecutionMassStatus<a href="#class-executionmassstatus" class="hash-link" aria-label="Direct link to class-executionmassstatus" title="Direct link to class-executionmassstatus">​</a></h3>
<p>Bases: <a href="../core/index.htm#posei_trader.core.message.Document"><code>Document</code></a></p>
<p>Represents an execution mass status report for an execution client - including
status of all orders, trades for those orders and open positions.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>venue</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.Venue"><em>Venue</em></a>) – The venue for the report.</li>
<li><strong>client_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.ClientId"><em>ClientId</em></a>) – The client ID for the report.</li>
<li><strong>account_id</strong> (<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.AccountId"><em>AccountId</em></a>) – The account ID for the report.</li>
<li><strong>report_id</strong> (<a href="../core/index.htm#posei_trader.core.UUID4"><em>UUID4</em></a>) – The report ID.</li>
<li><strong>ts_init</strong> (<em>int</em>) – UNIX timestamp (nanoseconds) when the object was initialized.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="property-order_reports--dictvenueorderid-orderstatusreport"><em>property</em> order_reports <em>: dict[<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.VenueOrderId">VenueOrderId</a>, <a href="#posei_trader.execution.reports.OrderStatusReport">OrderStatusReport</a>]</em><a href="#property-order_reports--dictvenueorderid-orderstatusreport" class="hash-link" aria-label="Direct link to property-order_reports--dictvenueorderid-orderstatusreport" title="Direct link to property-order_reports--dictvenueorderid-orderstatusreport">​</a></h4>
<p>The order status reports.</p>
<ul>
<li><strong>Return type:</strong>
dict[<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.VenueOrderId">VenueOrderId</a>, <a href="#posei_trader.execution.reports.OrderStatusReport">OrderStatusReport</a>]</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="property-fill_reports--dictvenueorderid-listfillreport"><em>property</em> fill_reports <em>: dict[<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.VenueOrderId">VenueOrderId</a>, list[<a href="#posei_trader.execution.reports.FillReport">FillReport</a>]]</em><a href="#property-fill_reports--dictvenueorderid-listfillreport" class="hash-link" aria-label="Direct link to property-fill_reports--dictvenueorderid-listfillreport" title="Direct link to property-fill_reports--dictvenueorderid-listfillreport">​</a></h4>
<p>The fill reports.</p>
<ul>
<li><strong>Return type:</strong>
dict[<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.VenueOrderId">VenueOrderId</a>, list[<a href="#posei_trader.execution.reports.FillReport">FillReport</a>]</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="property-position_reports--dictinstrumentid-listpositionstatusreport"><em>property</em> position_reports <em>: dict[<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.InstrumentId">InstrumentId</a>, list[<a href="#posei_trader.execution.reports.PositionStatusReport">PositionStatusReport</a>]]</em><a href="#property-position_reports--dictinstrumentid-listpositionstatusreport" class="hash-link" aria-label="Direct link to property-position_reports--dictinstrumentid-listpositionstatusreport" title="Direct link to property-position_reports--dictinstrumentid-listpositionstatusreport">​</a></h4>
<p>The position status reports.</p>
<ul>
<li><strong>Return type:</strong>
dict[<a href="../model/identifiers/index.htm#posei_trader.model.identifiers.InstrumentId">InstrumentId</a>, list[<a href="#posei_trader.execution.reports.PositionStatusReport">PositionStatusReport</a>]]</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="add_order_reportsreports-listorderstatusreport--none">add_order_reports(reports: list[<a href="#posei_trader.execution.reports.OrderStatusReport">OrderStatusReport</a>]) → None<a href="#add_order_reportsreports-listorderstatusreport--none" class="hash-link" aria-label="Direct link to add_order_reportsreports-listorderstatusreport--none" title="Direct link to add_order_reportsreports-listorderstatusreport--none">​</a></h4>
<p>Add the order reports to the mass status.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>reports</strong> (<em>list</em> <em>[</em><a href="#posei_trader.execution.reports.OrderStatusReport"><em>OrderStatusReport</em></a> <em>]</em>) – The list of reports to add.</li>
<li><strong>Raises:</strong>
<strong>TypeError</strong> – If reports contains a type other than FillReport.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="add_fill_reportsreports-listfillreport--none">add_fill_reports(reports: list[<a href="#posei_trader.execution.reports.FillReport">FillReport</a>]) → None<a href="#add_fill_reportsreports-listfillreport--none" class="hash-link" aria-label="Direct link to add_fill_reportsreports-listfillreport--none" title="Direct link to add_fill_reportsreports-listfillreport--none">​</a></h4>
<p>Add the fill reports to the mass status.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>reports</strong> (<em>list</em> <em>[</em><a href="#posei_trader.execution.reports.FillReport"><em>FillReport</em></a> <em>]</em>) – The list of reports to add.</li>
<li><strong>Raises:</strong>
<strong>TypeError</strong> – If reports contains a type other than FillReport.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="add_position_reportsreports-listpositionstatusreport--none">add_position_reports(reports: list[<a href="#posei_trader.execution.reports.PositionStatusReport">PositionStatusReport</a>]) → None<a href="#add_position_reportsreports-listpositionstatusreport--none" class="hash-link" aria-label="Direct link to add_position_reportsreports-listpositionstatusreport--none" title="Direct link to add_position_reportsreports-listpositionstatusreport--none">​</a></h4>
<p>Add the position status reports to the mass status.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>reports</strong> (<em>list</em> <em>[</em><a href="#posei_trader.execution.reports.PositionStatusReport"><em>PositionStatusReport</em></a> <em>]</em>) – The reports to add.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="id-21">id<a href="#id-21" class="hash-link" aria-label="Direct link to id" title="Direct link to id">​</a></h4>
<p>The document message ID.</p>
<ul>
<li><strong>Returns:</strong>
UUID4</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="ts_init-17">ts_init<a href="#ts_init-17" class="hash-link" aria-label="Direct link to ts_init" title="Direct link to ts_init">​</a></h4>
<p>UNIX timestamp (nanoseconds) when the object was initialized.</p>
<ul>
<li><strong>Returns:</strong>
uint64_t</li>
</ul></div></article><nav class="docusaurus-mt-lg pagination-nav" aria-label="Docs pages"><a class="pagination-nav__link pagination-nav__link--prev" href="../data/index.htm"><div class="pagination-nav__sublabel">Previous</div><div class="pagination-nav__label">Data</div></a><a class="pagination-nav__link pagination-nav__link--next" href="../indicators/index.htm"><div class="pagination-nav__sublabel">Next</div><div class="pagination-nav__label">Indicators</div></a></nav></div></div><div class="col col--3"><div class="tableOfContents_bqdL thin-scrollbar theme-doc-toc-desktop"><ul class="table-of-contents table-of-contents__left-border"><li><a href="#components" class="table-of-contents__link toc-highlight">Components</a><ul><li><a href="#class-execalgorithm" class="table-of-contents__link toc-highlight"><em>class</em> ExecAlgorithm</a></li><li><a href="#class-executionclient" class="table-of-contents__link toc-highlight"><em>class</em> ExecutionClient</a></li><li><a href="#class-orderemulator" class="table-of-contents__link toc-highlight"><em>class</em> OrderEmulator</a></li><li><a href="#class-executionengine" class="table-of-contents__link toc-highlight"><em>class</em> ExecutionEngine</a></li><li><a href="#class-ordermanager" class="table-of-contents__link toc-highlight"><em>class</em> OrderManager</a></li><li><a href="#class-matchingcore" class="table-of-contents__link toc-highlight"><em>class</em> MatchingCore</a></li></ul></li><li><a href="#messages" class="table-of-contents__link toc-highlight">Messages</a><ul><li><a href="#class-batchcancelorders" class="table-of-contents__link toc-highlight"><em>class</em> BatchCancelOrders</a></li><li><a href="#class-cancelallorders" class="table-of-contents__link toc-highlight"><em>class</em> CancelAllOrders</a></li><li><a href="#class-cancelorder" class="table-of-contents__link toc-highlight"><em>class</em> CancelOrder</a></li><li><a href="#class-executionreportcommand" class="table-of-contents__link toc-highlight"><em>class</em> ExecutionReportCommand</a></li><li><a href="#class-generatefillreports" class="table-of-contents__link toc-highlight"><em>class</em> GenerateFillReports</a></li><li><a href="#class-generateorderstatusreport" class="table-of-contents__link toc-highlight"><em>class</em> GenerateOrderStatusReport</a></li><li><a href="#class-generateorderstatusreports" class="table-of-contents__link toc-highlight"><em>class</em> GenerateOrderStatusReports</a></li><li><a href="#class-generatepositionstatusreports" class="table-of-contents__link toc-highlight"><em>class</em> GeneratePositionStatusReports</a></li><li><a href="#class-modifyorder" class="table-of-contents__link toc-highlight"><em>class</em> ModifyOrder</a></li><li><a href="#class-queryorder" class="table-of-contents__link toc-highlight"><em>class</em> QueryOrder</a></li><li><a href="#class-submitorder" class="table-of-contents__link toc-highlight"><em>class</em> SubmitOrder</a></li><li><a href="#class-submitorderlist" class="table-of-contents__link toc-highlight"><em>class</em> SubmitOrderList</a></li><li><a href="#class-tradingcommand" class="table-of-contents__link toc-highlight"><em>class</em> TradingCommand</a></li></ul></li><li><a href="#reports" class="table-of-contents__link toc-highlight">Reports</a><ul><li><a href="#class-executionreport" class="table-of-contents__link toc-highlight"><em>class</em> ExecutionReport</a></li><li><a href="#class-orderstatusreport" class="table-of-contents__link toc-highlight"><em>class</em> OrderStatusReport</a></li><li><a href="#class-fillreport" class="table-of-contents__link toc-highlight"><em>class</em> FillReport</a></li><li><a href="#class-positionstatusreport" class="table-of-contents__link toc-highlight"><em>class</em> PositionStatusReport</a></li><li><a href="#class-executionmassstatus" class="table-of-contents__link toc-highlight"><em>class</em> ExecutionMassStatus</a></li></ul></li></ul></div></div></div><div class="footer-wrapper MuiBox-root css-0"><div class="social-footer-box MuiBox-root css-0"><style data-emotion="css 17rjyz3">.css-17rjyz3{-webkit-text-decoration:underline;text-decoration:underline;text-decoration-color:rgba(25, 118, 210, 0.4);padding:12px;margin-right:10px;}.css-17rjyz3:hover{text-decoration-color:inherit;}</style><style data-emotion="css jl1bw5">.css-jl1bw5{margin:0;font:inherit;color:#1976d2;-webkit-text-decoration:underline;text-decoration:underline;text-decoration-color:rgba(25, 118, 210, 0.4);padding:12px;margin-right:10px;}.css-jl1bw5:hover{text-decoration-color:inherit;}</style><a class="MuiTypography-root MuiTypography-inherit MuiLink-root MuiLink-underlineAlways github-footer css-jl1bw5" href="https://github.com/poseisysstems" target="_blank"></a><a class="MuiTypography-root MuiTypography-inherit MuiLink-root MuiLink-underlineAlways discord-footer css-jl1bw5" href="" target="_blank"></a><a class="MuiTypography-root MuiTypography-inherit MuiLink-root MuiLink-underlineAlways linkedin-footer css-jl1bw5" href="https://www.linkedin.com/company/poseitrader/" target="_blank"></a><a class="MuiTypography-root MuiTypography-inherit MuiLink-root MuiLink-underlineAlways x-footer css-jl1bw5" href="https://twitter.com/PoseiTrader" target="_blank"></a></div><div class="footer-copyright">© 2025 Posei Systems Pty Ltd. All rights reserved.</div></div></div></div></main></div></div></div></div>
</body>
</html>