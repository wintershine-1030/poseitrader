<!doctype html>
<html lang="en" dir="ltr" class="docs-wrapper plugin-docs plugin-id-default docs-version-nightly docs-doc-page docs-doc-id-api_reference/adapters/polymarket" data-has-hydrated="false">
<head>
<meta charset="UTF-8">
<meta name="generator" content="Docusaurus v3.8.1">
<title data-rh="true">Polymarket | poseitrader Documentation</title><meta data-rh="true" name="viewport" content="width=device-width,initial-scale=1"><meta data-rh="true" name="twitter:card" content="summary_large_image"><meta data-rh="true" property="og:image" content="https://poseitrader.io/docs/img/docusaurus-social-card.jpg"><meta data-rh="true" name="twitter:image" content="https://poseitrader.io/docs/img/docusaurus-social-card.jpg"><meta data-rh="true" property="og:url" content="https://poseitrader.io/docs/nightly/api_reference/adapters/polymarket"><meta data-rh="true" property="og:locale" content="en"><meta data-rh="true" name="docusaurus_locale" content="en"><meta data-rh="true" name="docsearch:language" content="en"><meta data-rh="true" name="keywords" content="Open-source trading platform, Algorithmic trading software, Event-driven backtesting, Live trading with no code changes, Trade any asset class, Low-latency trading execution, Python API for trading strategies, Custom market data integration, Futures and options trading, Crypto spot and derivatives trading, Equities trading simulation, FX spot trading, Sports betting markets trading, Fast backtesting strategies, Advanced trading orders, Rust-based trading platform, High-performance trading system, Nanosecond resolution market simulation, Trading across multiple venues, Trading platform for hedge funds, Seamless data integration, Customizable trading strategies, AI and ML trading strategies, Nautilus trading platform, Multi-venue trading, Unlimited backtesting strategies, Fast trading execution solutions, Realistic market simulations, Seamless trading API integration, poseitrader Documentation, Docs, poseitrader Docs"><meta data-rh="true" name="title" content="poseitrader Documentation"><meta data-rh="true" name="og:title" content="poseitrader Documentation"><meta data-rh="true" name="og:description" content="poseitrader is a high-performance platform for automating trading strategies, built on the powerful Nautilus framework for backtesting and real-time trading."><meta data-rh="true" name="og:image" content="img/preview.png"><meta data-rh="true" name="og:url" content="https://poseitrader.io/docs"><meta data-rh="true" name="docusaurus_version" content="nightly"><meta data-rh="true" name="docusaurus_tag" content="docs-default-nightly"><meta data-rh="true" name="docsearch:version" content="nightly"><meta data-rh="true" name="docsearch:docusaurus_tag" content="docs-default-nightly"><meta data-rh="true" property="og:title" content="Polymarket | poseitrader Documentation"><meta data-rh="true" name="description" content="Polymarket decentralized prediction market integration adapter."><meta data-rh="true" property="og:description" content="Polymarket decentralized prediction market integration adapter."><link data-rh="true" rel="icon" href="../../../../img/shell.ico"><link data-rh="true" rel="canonical" href="index.htm"><link data-rh="true" rel="alternate" href="index.htm" hreflang="en"><link data-rh="true" rel="alternate" href="index.htm" hreflang="x-default"><link data-rh="true" rel="preconnect" href="https://CWRKEEL01M-dsn.algolia.net" crossorigin="anonymous"><script data-rh="true" type="application/ld+json">{"@context":"https://schema.org","@type":"BreadcrumbList","itemListElement":[{"@type":"ListItem","position":1,"name":"Python API","item":"https://poseitrader.io/docs/nightly/api_reference/"},{"@type":"ListItem","position":2,"name":"Adapters","item":"https://poseitrader.io/docs/nightly/api_reference/adapters/"},{"@type":"ListItem","position":3,"name":"Polymarket","item":"https://poseitrader.io/docs/nightly/api_reference/adapters/polymarket"}]}</script><link rel="search" type="application/opensearchdescription+xml" title="poseitrader Documentation" href="../../../../opensearch.xml">
<script>!function(){var t=window.location.pathname;if(t.startsWith("/docs")&&!t.startsWith("/docs/latest")&&!t.startsWith("/docs/nightly")){var s=t.replace("/docs","/docs/latest");window.location.href=s}}()</script>
<link rel="preconnect" href="https://www.google-analytics.com">
<link rel="preconnect" href="https://www.googletagmanager.com">
<script async src="https://www.googletagmanager.com/gtag/js?id=G-TR4XK597XK"></script>
<script>function gtag(){dataLayer.push(arguments)}window.dataLayer=window.dataLayer||[],gtag("js",new Date),gtag("config","G-TR4XK597XK",{anonymize_ip:!0})</script><link rel="stylesheet" href="../../../../assets/css/styles.0f0f692e.css">
<script src="../../../../assets/js/runtime~main.92b727d5.js" defer="defer"></script>
<script src="../../../../assets/js/main.1cd42d85.js" defer="defer"></script>
</head>
<body class="navigation-with-keyboard">
<svg xmlns="http://www.w3.org/2000/svg" style="display: none;"><defs>
<symbol id="theme-svg-external-link" viewbox="0 0 24 24"><path fill="currentColor" d="M21 13v10h-21v-19h12v2h-10v15h17v-8h2zm3-12h-10.988l4.035 4-6.977 7.07 2.828 2.828 6.977-7.07 4.125 4.172v-11z"></path></symbol>
</defs></svg>
<script>!function(){var t="dark";var e=function(){try{return new URLSearchParams(window.location.search).get("docusaurus-theme")}catch(t){}}()||function(){try{return window.localStorage.getItem("theme")}catch(t){}}();document.documentElement.setAttribute("data-theme",e||t),document.documentElement.setAttribute("data-theme-choice",e||t)}(),function(){try{const c=new URLSearchParams(window.location.search).entries();for(var[t,e]of c)if(t.startsWith("docusaurus-data-")){var a=t.replace("docusaurus-data-","data-");document.documentElement.setAttribute(a,e)}}catch(t){}}()</script><div id="__docusaurus"><div role="region" aria-label="Skip to main content"><a class="skipToContent_fXgn" href="#__docusaurus_skipToContent_fallback">Skip to main content</a></div><nav aria-label="Main" class="theme-layout-navbar navbar navbar--fixed-top navbarHideable_m1mJ"><div class="navbar__inner"><div class="theme-layout-navbar-left navbar__items"><button aria-label="Toggle navigation bar" aria-expanded="false" class="navbar__toggle clean-btn" type="button"><svg width="30" height="30" viewbox="0 0 30 30" aria-hidden="true"><path stroke="currentColor" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" d="M4 7h22M4 15h22M4 23h22"></path></svg></button><a href="../../../../../index.htm" target="_blank" rel="noopener noreferrer" class="navbar__brand"><div class="navbar__logo"><img src="../../../../img/nt-black-large.webp" alt="poseitrader Logo" class="themedComponent_mlkZ themedComponent--light_NVdE"><img src="../../../../img/nt-white-large.webp" alt="poseitrader Logo" class="themedComponent_mlkZ themedComponent--dark_xIcU"></div><b class="navbar__title text--truncate"></b></a><div class="navbar__item dropdown dropdown--hoverable"><a href="#" aria-haspopup="true" aria-expanded="false" role="button" class="navbar__link">Version</a><ul class="dropdown__menu"><li><a class="dropdown__link" href="../../../../latest/index.htm">latest</a></li><li><a aria-current="page" class="dropdown__link dropdown__link--active" href="../../../index.htm">nightly</a></li></ul></div><div class="navbarSearchContainer_Bca1"><button type="button" class="DocSearch DocSearch-Button" aria-label="Search (Command+K)"><span class="DocSearch-Button-Container"><svg width="20" height="20" class="DocSearch-Search-Icon" viewbox="0 0 20 20" aria-hidden="true"><path d="M14.386 14.386l4.0877 4.0877-4.0877-4.0877c-2.9418 2.9419-7.7115 2.9419-10.6533 0-2.9419-2.9418-2.9419-7.7115 0-10.6533 2.9418-2.9419 7.7115-2.9419 10.6533 0 2.9419 2.9418 2.9419 7.7115 0 10.6533z" stroke="currentColor" fill="none" fill-rule="evenodd" stroke-linecap="round" stroke-linejoin="round"></path></svg><span class="DocSearch-Button-Placeholder">Search</span></span><span class="DocSearch-Button-Keys"></span></button></div></div><div class="theme-layout-navbar-right navbar__items navbar__items--right"><a href="https://github.com/poseisysstems" target="_blank" rel="noopener noreferrer" class="navbar__item navbar__link header-github-link common-social" aria-label="GitHub repository"></a> <a href="https://twitter.com/poseitrader" target="_blank" rel="noopener noreferrer" class="navbar__item navbar__link header-x-link common-social" aria-label="X"></a><div class="toggleContainer_T22x colorModeToggle_DEke"><button class="clean-btn toggleButton_yw5v toggleButtonDisabled_BJd7" type="button" disabled="" title="Switch between dark and light mode (currently light mode)" aria-label="Switch between dark and light mode (currently light mode)" aria-live="polite"><div class="switch_Ms1n"><span class="iconWrapper_FHql"><style data-emotion="css lp52so">.css-lp52so{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;width:1em;height:1em;display:inline-block;fill:currentColor;-webkit-flex-shrink:0;-ms-flex-negative:0;flex-shrink:0;-webkit-transition:fill 200ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;transition:fill 200ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;font-size:1.5rem;color:black;font-size:14px;}</style><svg class="MuiSvgIcon-root MuiSvgIcon-fontSizeMedium lightToggleIcon_SFTY css-lp52so" focusable="false" aria-hidden="true" viewbox="0 0 24 24" data-testid="LightModeIcon"><path d="M12 7c-2.76 0-5 2.24-5 5s2.24 5 5 5 5-2.24 5-5-2.24-5-5-5M2 13h2c.55 0 1-.45 1-1s-.45-1-1-1H2c-.55 0-1 .45-1 1s.45 1 1 1m18 0h2c.55 0 1-.45 1-1s-.45-1-1-1h-2c-.55 0-1 .45-1 1s.45 1 1 1M11 2v2c0 .55.45 1 1 1s1-.45 1-1V2c0-.55-.45-1-1-1s-1 .45-1 1m0 18v2c0 .55.45 1 1 1s1-.45 1-1v-2c0-.55-.45-1-1-1s-1 .45-1 1M5.99 4.58c-.39-.39-1.03-.39-1.41 0-.39.39-.39 1.03 0 1.41l1.06 1.06c.39.39 1.03.39 1.41 0s.39-1.03 0-1.41zm12.37 12.37c-.39-.39-1.03-.39-1.41 0-.39.39-.39 1.03 0 1.41l1.06 1.06c.39.39 1.03.39 1.41 0 .39-.39.39-1.03 0-1.41zm1.06-10.96c.39-.39.39-1.03 0-1.41-.39-.39-1.03-.39-1.41 0l-1.06 1.06c-.39.39-.39 1.03 0 1.41s1.03.39 1.41 0zM7.05 18.36c.39-.39.39-1.03 0-1.41-.39-.39-1.03-.39-1.41 0l-1.06 1.06c-.39.39-.39 1.03 0 1.41s1.03.39 1.41 0z"></path></svg><style data-emotion="css 13m6tje">.css-13m6tje{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;width:1em;height:1em;display:inline-block;fill:currentColor;-webkit-flex-shrink:0;-ms-flex-negative:0;flex-shrink:0;-webkit-transition:fill 200ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;transition:fill 200ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;font-size:1.5rem;color:white;font-size:14px;}</style><svg class="MuiSvgIcon-root MuiSvgIcon-fontSizeMedium darkToggleIcon_ekgs css-13m6tje" focusable="false" aria-hidden="true" viewbox="0 0 24 24" data-testid="DarkModeIcon"><path d="M12 3c-4.97 0-9 4.03-9 9s4.03 9 9 9 9-4.03 9-9c0-.46-.04-.92-.1-1.36-.98 1.37-2.58 2.26-4.4 2.26-2.98 0-5.4-2.42-5.4-5.4 0-1.81.89-3.42 2.26-4.4-.44-.06-.9-.1-1.36-.1"></path></svg></span></div></button></div></div></div><div role="presentation" class="navbar-sidebar__backdrop"></div></nav><div id="__docusaurus_skipToContent_fallback" class="theme-layout-main main-wrapper mainWrapper_z2l0"><div class="docsWrapper_hBAB"><button aria-label="Scroll back to top" class="clean-btn theme-back-to-top-button backToTopButton_sjWU" type="button"></button><div class="docRoot_UBD9"><aside class="theme-doc-sidebar-container docSidebarContainer_YfHR"><div class="sidebarViewport_aRkj"><div class="sidebar_njMd sidebarWithHideableNavbar_wUlq"><a href="../../../../../index.htm" target="_blank" rel="noopener noreferrer" tabindex="-1" class="sidebarLogo_isFc"><img src="../../../../img/nt-black-large.webp" alt="poseitrader Logo" class="themedComponent_mlkZ themedComponent--light_NVdE"><img src="../../../../img/nt-white-large.webp" alt="poseitrader Logo" class="themedComponent_mlkZ themedComponent--dark_xIcU"><b></b></a><nav aria-label="Docs sidebar" class="menu thin-scrollbar menu_SIkG"><ul class="theme-doc-sidebar-menu menu__list"><li class="theme-doc-sidebar-item-link theme-doc-sidebar-item-link-level-1 menu__list-item"><a class="menu__link" href="../../../index.htm">poseitrader Documentation</a></li><li class="theme-doc-sidebar-item-category theme-doc-sidebar-item-category-level-1 menu__list-item menu__list-item--collapsed"><div class="menu__list-item-collapsible"><a class="menu__link menu__link--sublist" href="../../../getting_started/index.htm">Getting Started</a><button aria-label="Expand sidebar category &#x27;Getting Started&#x27;" aria-expanded="false" type="button" class="clean-btn menu__caret"></button></div></li><li class="theme-doc-sidebar-item-category theme-doc-sidebar-item-category-level-1 menu__list-item menu__list-item--collapsed"><div class="menu__list-item-collapsible"><a class="menu__link menu__link--sublist" href="../../../concepts/index.htm">Concepts</a><button aria-label="Expand sidebar category &#x27;Concepts&#x27;" aria-expanded="false" type="button" class="clean-btn menu__caret"></button></div></li><li class="theme-doc-sidebar-item-category theme-doc-sidebar-item-category-level-1 menu__list-item menu__list-item--collapsed"><div class="menu__list-item-collapsible"><a class="menu__link menu__link--sublist" href="../../../tutorials/index.htm">Tutorials</a><button aria-label="Expand sidebar category &#x27;Tutorials&#x27;" aria-expanded="false" type="button" class="clean-btn menu__caret"></button></div></li><li class="theme-doc-sidebar-item-category theme-doc-sidebar-item-category-level-1 menu__list-item menu__list-item--collapsed"><div class="menu__list-item-collapsible"><a class="menu__link menu__link--sublist" href="../../../integrations/index.htm">Integrations</a><button aria-label="Expand sidebar category &#x27;Integrations&#x27;" aria-expanded="false" type="button" class="clean-btn menu__caret"></button></div></li><li class="theme-doc-sidebar-item-category theme-doc-sidebar-item-category-level-1 menu__list-item"><div class="menu__list-item-collapsible"><a class="menu__link menu__link--sublist menu__link--active" href="../../index.htm">Python API</a><button aria-label="Collapse sidebar category &#x27;Python API&#x27;" aria-expanded="true" type="button" class="clean-btn menu__caret"></button></div><ul class="menu__list"><li class="theme-doc-sidebar-item-link theme-doc-sidebar-item-link-level-2 menu__list-item"><a class="menu__link" tabindex="0" href="../../accounting/index.htm">Accounting</a></li><li class="theme-doc-sidebar-item-category theme-doc-sidebar-item-category-level-2 menu__list-item"><div class="menu__list-item-collapsible"><a class="menu__link menu__link--sublist menu__link--active" tabindex="0" href="../index.htm">Adapters</a><button aria-label="Collapse sidebar category &#x27;Adapters&#x27;" aria-expanded="true" type="button" class="clean-btn menu__caret"></button></div><ul class="menu__list"><li class="theme-doc-sidebar-item-link theme-doc-sidebar-item-link-level-3 menu__list-item"><a class="menu__link" tabindex="0" href="../betfair/index.htm">Betfair</a></li><li class="theme-doc-sidebar-item-link theme-doc-sidebar-item-link-level-3 menu__list-item"><a class="menu__link" tabindex="0" href="../binance/index.htm">Binance</a></li><li class="theme-doc-sidebar-item-link theme-doc-sidebar-item-link-level-3 menu__list-item"><a class="menu__link" tabindex="0" href="../bybit/index.htm">Bybit</a></li><li class="theme-doc-sidebar-item-link theme-doc-sidebar-item-link-level-3 menu__list-item"><a class="menu__link" tabindex="0" href="../coinbase_intx/index.htm">Coinbase International</a></li><li class="theme-doc-sidebar-item-link theme-doc-sidebar-item-link-level-3 menu__list-item"><a class="menu__link" tabindex="0" href="../databento/index.htm">Databento</a></li><li class="theme-doc-sidebar-item-link theme-doc-sidebar-item-link-level-3 menu__list-item"><a class="menu__link" tabindex="0" href="../dydx/index.htm">dYdX</a></li><li class="theme-doc-sidebar-item-link theme-doc-sidebar-item-link-level-3 menu__list-item"><a class="menu__link" tabindex="0" href="../interactive_brokers/index.htm">Interactive Brokers</a></li><li class="theme-doc-sidebar-item-link theme-doc-sidebar-item-link-level-3 menu__list-item"><a class="menu__link menu__link--active" aria-current="page" tabindex="0" href="index.htm">Polymarket</a></li><li class="theme-doc-sidebar-item-link theme-doc-sidebar-item-link-level-3 menu__list-item"><a class="menu__link" tabindex="0" href="../tardis/index.htm">Tardis</a></li></ul></li><li class="theme-doc-sidebar-item-link theme-doc-sidebar-item-link-level-2 menu__list-item"><a class="menu__link" tabindex="0" href="../../analysis/index.htm">Analysis</a></li><li class="theme-doc-sidebar-item-link theme-doc-sidebar-item-link-level-2 menu__list-item"><a class="menu__link" tabindex="0" href="../../backtest/index.htm">Backtest</a></li><li class="theme-doc-sidebar-item-link theme-doc-sidebar-item-link-level-2 menu__list-item"><a class="menu__link" tabindex="0" href="../../cache/index.htm">Cache</a></li><li class="theme-doc-sidebar-item-link theme-doc-sidebar-item-link-level-2 menu__list-item"><a class="menu__link" tabindex="0" href="../../common/index.htm">Common</a></li><li class="theme-doc-sidebar-item-link theme-doc-sidebar-item-link-level-2 menu__list-item"><a class="menu__link" tabindex="0" href="../../config/index.htm">Config</a></li><li class="theme-doc-sidebar-item-link theme-doc-sidebar-item-link-level-2 menu__list-item"><a class="menu__link" tabindex="0" href="../../core/index.htm">Core</a></li><li class="theme-doc-sidebar-item-link theme-doc-sidebar-item-link-level-2 menu__list-item"><a class="menu__link" tabindex="0" href="../../data/index.htm">Data</a></li><li class="theme-doc-sidebar-item-link theme-doc-sidebar-item-link-level-2 menu__list-item"><a class="menu__link" tabindex="0" href="../../execution/index.htm">Execution</a></li><li class="theme-doc-sidebar-item-link theme-doc-sidebar-item-link-level-2 menu__list-item"><a class="menu__link" tabindex="0" href="../../indicators/index.htm">Indicators</a></li><li class="theme-doc-sidebar-item-link theme-doc-sidebar-item-link-level-2 menu__list-item"><a class="menu__link" tabindex="0" href="../../live/index.htm">Live</a></li><li class="theme-doc-sidebar-item-category theme-doc-sidebar-item-category-level-2 menu__list-item menu__list-item--collapsed"><div class="menu__list-item-collapsible"><a class="menu__link menu__link--sublist" tabindex="0" href="../../model/index.htm">Model</a><button aria-label="Expand sidebar category &#x27;Model&#x27;" aria-expanded="false" type="button" class="clean-btn menu__caret"></button></div></li><li class="theme-doc-sidebar-item-link theme-doc-sidebar-item-link-level-2 menu__list-item"><a class="menu__link" tabindex="0" href="../../persistence/index.htm">Persistence</a></li><li class="theme-doc-sidebar-item-link theme-doc-sidebar-item-link-level-2 menu__list-item"><a class="menu__link" tabindex="0" href="../../portfolio/index.htm">Portfolio</a></li><li class="theme-doc-sidebar-item-link theme-doc-sidebar-item-link-level-2 menu__list-item"><a class="menu__link" tabindex="0" href="../../risk/index.htm">Risk</a></li><li class="theme-doc-sidebar-item-link theme-doc-sidebar-item-link-level-2 menu__list-item"><a class="menu__link" tabindex="0" href="../../serialization/index.htm">Serialization</a></li><li class="theme-doc-sidebar-item-link theme-doc-sidebar-item-link-level-2 menu__list-item"><a class="menu__link" tabindex="0" href="../../system/index.htm">System</a></li><li class="theme-doc-sidebar-item-link theme-doc-sidebar-item-link-level-2 menu__list-item"><a class="menu__link" tabindex="0" href="../../trading/index.htm">Trading</a></li></ul></li><li class="theme-doc-sidebar-item-link theme-doc-sidebar-item-link-level-1 menu__list-item"><a href="../../../../core-nightly/index.htm" target="_blank" rel="noopener noreferrer" class="menu__link menuExternalLink_NmtK">Rust API<svg width="13.5" height="13.5" aria-hidden="true" class="iconExternalLink_nPIU"><use href="#theme-svg-external-link"></use></svg></a></li><li class="theme-doc-sidebar-item-category theme-doc-sidebar-item-category-level-1 menu__list-item menu__list-item--collapsed"><div class="menu__list-item-collapsible"><a class="menu__link menu__link--sublist" href="../../../developer_guide/index.htm">Developer Guide</a><button aria-label="Expand sidebar category &#x27;Developer Guide&#x27;" aria-expanded="false" type="button" class="clean-btn menu__caret"></button></div></li></ul></nav></div></div></aside><main class="docMainContainer_TBSr"><div class="container padding-top--md padding-bottom--lg"><div><div class="row"><div class="col docItemCol_VOVn"><div class="docItemContainer_Djhp"><article><nav class="theme-doc-breadcrumbs breadcrumbsContainer_Z_bl" aria-label="Breadcrumbs"><ul class="breadcrumbs"><li class="breadcrumbs__item"><a class="breadcrumbs__link" href="../../index.htm"><span>Python API</span></a></li><li class="breadcrumbs__item"><a class="breadcrumbs__link" href="../index.htm"><span>Adapters</span></a></li><li class="breadcrumbs__item breadcrumbs__item--active"><span class="breadcrumbs__link">Polymarket</span></li></ul></nav><span class="theme-doc-version-badge badge badge--secondary">Version: nightly</span><div class="tocCollapsible_ETCw theme-doc-toc-mobile tocMobile_ITEo"><button type="button" class="clean-btn tocCollapsibleButton_TO0P">On this page</button></div><div class="theme-doc-markdown markdown"><header><h1>Polymarket</h1></header>
<p>Polymarket decentralized prediction market integration adapter.</p>
<p>This subpackage provides instrument providers, data and execution client configurations,
factories, constants, and credential helpers for connecting to and interacting with
the Polymarket Central Limit Order Book (CLOB) API.</p>
<p>For convenience, the most commonly used symbols are re-exported at the subpackage’s
top level, so downstream code can simply import from <code>posei_trader.adapters.polymarket</code>.</p>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="class-polymarketdataclientconfig"><em>class</em> PolymarketDataClientConfig<a href="#class-polymarketdataclientconfig" class="hash-link" aria-label="Direct link to class-polymarketdataclientconfig" title="Direct link to class-polymarketdataclientconfig">​</a></h3>
<p>Bases: <a href="../../config/index.htm#posei_trader.live.config.LiveDataClientConfig"><code>LiveDataClientConfig</code></a></p>
<p>Configuration for <code>PolymarketDataClient</code> instances.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>venue</strong> (<a href="../../model/identifiers/index.htm#posei_trader.model.identifiers.Venue"><em>Venue</em></a> <em>,</em> <em>default POLYMARKET_VENUE</em>) – The venue for the client.</li>
<li><strong>private_key</strong> (<em>str</em> <em>,</em> <em>optional</em>) – The private key for the wallet on the <strong>Polygon</strong> network.
If <code>None</code> then will source the POLYMARKET_PK environment variable.</li>
<li><strong>signature_type</strong> (<em>int</em> <em>,</em> <em>default 0</em> *(*<em>EOA</em> <em>)</em>) – The Polymarket signature type.</li>
<li><strong>funder</strong> (<em>str</em> <em>,</em> <em>optional</em>) – The wallet address (public key) on the <strong>Polygon</strong> network used for funding USDC.
If <code>None</code> then will source the POLYMARKET_FUNDER environment variable.</li>
<li><strong>api_key</strong> (<em>str</em> <em>,</em> <em>optional</em>) – The Polymarket API public key.
If <code>None</code> then will source the POLYMARKET_API_KEY environment variable.</li>
<li><strong>api_secret</strong> (<em>str</em> <em>,</em> <em>optional</em>) – The Polymarket API public key.
If <code>None</code> then will source the POLYMARKET_API_SECRET environment variable.</li>
<li><strong>passphrase</strong> (<em>str</em> <em>,</em> <em>optional</em>) – The Polymarket API passphrase.
If <code>None</code> then will source the POLYMARKET_PASSPHRASE environment variable.</li>
<li><strong>base_url_http</strong> (<em>str</em> <em>,</em> <em>optional</em>) – The HTTP client custom endpoint override.</li>
<li><strong>base_url_ws</strong> (<em>str</em> <em>,</em> <em>optional</em>) – The WebSocket client custom endpoint override.</li>
<li><strong>ws_connection_initial_delay_secs</strong> (<em>PositiveFloat</em> <em>,</em> <em>default 5</em>) – The delay (seconds) prior to the first websocket connection to allow initial subscriptions to arrive.</li>
<li><strong>ws_connection_delay_secs</strong> (<em>PositiveFloat</em> <em>,</em> <em>default 0.1</em>) – The delay (seconds) prior to making a new websocket connection to allow non-initial subscriptions to arrive.</li>
<li><strong>update_instruments_interval_mins</strong> (<em>PositiveInt</em> <em>or</em> <em>None</em> <em>,</em> <em>default 60</em>) – The interval (minutes) between updating Polymarket instruments.</li>
<li><strong>compute_effective_deltas</strong> (<em>bool</em> <em>,</em> <em>default False</em>) – If True, computes effective deltas by comparing old and new order book states,
reducing snapshot size. This takes ~1 millisecond, so is not recommended for latency-sensitive strategies.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="api_key--str--none">api_key <em>: str | None</em><a href="#api_key--str--none" class="hash-link" aria-label="Direct link to api_key--str--none" title="Direct link to api_key--str--none">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="api_secret--str--none">api_secret <em>: str | None</em><a href="#api_secret--str--none" class="hash-link" aria-label="Direct link to api_secret--str--none" title="Direct link to api_secret--str--none">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="base_url_http--str--none">base_url_http <em>: str | None</em><a href="#base_url_http--str--none" class="hash-link" aria-label="Direct link to base_url_http--str--none" title="Direct link to base_url_http--str--none">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="base_url_ws--str--none">base_url_ws <em>: str | None</em><a href="#base_url_ws--str--none" class="hash-link" aria-label="Direct link to base_url_ws--str--none" title="Direct link to base_url_ws--str--none">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="compute_effective_deltas--bool">compute_effective_deltas <em>: bool</em><a href="#compute_effective_deltas--bool" class="hash-link" aria-label="Direct link to compute_effective_deltas--bool" title="Direct link to compute_effective_deltas--bool">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="funder--str--none">funder <em>: str | None</em><a href="#funder--str--none" class="hash-link" aria-label="Direct link to funder--str--none" title="Direct link to funder--str--none">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="passphrase--str--none">passphrase <em>: str | None</em><a href="#passphrase--str--none" class="hash-link" aria-label="Direct link to passphrase--str--none" title="Direct link to passphrase--str--none">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="private_key--str--none">private_key <em>: str | None</em><a href="#private_key--str--none" class="hash-link" aria-label="Direct link to private_key--str--none" title="Direct link to private_key--str--none">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="signature_type--int">signature_type <em>: int</em><a href="#signature_type--int" class="hash-link" aria-label="Direct link to signature_type--int" title="Direct link to signature_type--int">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="update_instruments_interval_mins--annotatedint-msgspecmetagt0--none">update_instruments_interval_mins <em>: Annotated[int, msgspec.Meta(gt=0)] | None</em><a href="#update_instruments_interval_mins--annotatedint-msgspecmetagt0--none" class="hash-link" aria-label="Direct link to update_instruments_interval_mins--annotatedint-msgspecmetagt0--none" title="Direct link to update_instruments_interval_mins--annotatedint-msgspecmetagt0--none">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="venue--venue">venue <em>: <a href="../../model/identifiers/index.htm#posei_trader.model.identifiers.Venue">Venue</a></em><a href="#venue--venue" class="hash-link" aria-label="Direct link to venue--venue" title="Direct link to venue--venue">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="ws_connection_delay_secs--annotatedfloat-msgspecmetagt00">ws_connection_delay_secs <em>: Annotated[float, msgspec.Meta(gt=0.0)]</em><a href="#ws_connection_delay_secs--annotatedfloat-msgspecmetagt00" class="hash-link" aria-label="Direct link to ws_connection_delay_secs--annotatedfloat-msgspecmetagt00" title="Direct link to ws_connection_delay_secs--annotatedfloat-msgspecmetagt00">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="ws_connection_initial_delay_secs--annotatedfloat-msgspecmetagt00">ws_connection_initial_delay_secs <em>: Annotated[float, msgspec.Meta(gt=0.0)]</em><a href="#ws_connection_initial_delay_secs--annotatedfloat-msgspecmetagt00" class="hash-link" aria-label="Direct link to ws_connection_initial_delay_secs--annotatedfloat-msgspecmetagt00" title="Direct link to ws_connection_initial_delay_secs--annotatedfloat-msgspecmetagt00">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="dict--dictstr-any">dict() → dict[str, Any]<a href="#dict--dictstr-any" class="hash-link" aria-label="Direct link to dict() → dict[str, Any]" title="Direct link to dict() → dict[str, Any]">​</a></h4>
<p>Return a dictionary representation of the configuration.</p>
<ul>
<li><strong>Return type:</strong>
dict[str, Any]</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="classmethod-fully_qualified_name--str"><em>classmethod</em> fully_qualified_name() → str<a href="#classmethod-fully_qualified_name--str" class="hash-link" aria-label="Direct link to classmethod-fully_qualified_name--str" title="Direct link to classmethod-fully_qualified_name--str">​</a></h4>
<p>Return the fully qualified name for the NautilusConfig class.</p>
<ul>
<li><strong>Return type:</strong>
str</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="handle_revised_bars--bool">handle_revised_bars <em>: bool</em><a href="#handle_revised_bars--bool" class="hash-link" aria-label="Direct link to handle_revised_bars--bool" title="Direct link to handle_revised_bars--bool">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="property-id--str"><em>property</em> id <em>: str</em><a href="#property-id--str" class="hash-link" aria-label="Direct link to property-id--str" title="Direct link to property-id--str">​</a></h4>
<p>Return the hashed identifier for the configuration.</p>
<ul>
<li><strong>Return type:</strong>
str</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="instrument_provider--instrumentproviderconfig">instrument_provider <em>: <a href="../../config/index.htm#posei_trader.common.config.InstrumentProviderConfig">InstrumentProviderConfig</a></em><a href="#instrument_provider--instrumentproviderconfig" class="hash-link" aria-label="Direct link to instrument_provider--instrumentproviderconfig" title="Direct link to instrument_provider--instrumentproviderconfig">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="json--bytes">json() → bytes<a href="#json--bytes" class="hash-link" aria-label="Direct link to json() → bytes" title="Direct link to json() → bytes">​</a></h4>
<p>Return serialized JSON encoded bytes.</p>
<ul>
<li><strong>Return type:</strong>
bytes</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="json_primitives--dictstr-any">json_primitives() → dict[str, Any]<a href="#json_primitives--dictstr-any" class="hash-link" aria-label="Direct link to json_primitives() → dict[str, Any]" title="Direct link to json_primitives() → dict[str, Any]">​</a></h4>
<p>Return a dictionary representation of the configuration with JSON primitive
types as values.</p>
<ul>
<li><strong>Return type:</strong>
dict[str, Any]</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="classmethod-json_schema--dictstr-any"><em>classmethod</em> json_schema() → dict[str, Any]<a href="#classmethod-json_schema--dictstr-any" class="hash-link" aria-label="Direct link to classmethod-json_schema--dictstr-any" title="Direct link to classmethod-json_schema--dictstr-any">​</a></h4>
<p>Generate a JSON schema for this configuration class.</p>
<ul>
<li><strong>Return type:</strong>
dict[str, Any]</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="classmethod-parseraw-bytes--str--any"><em>classmethod</em> parse(raw: bytes | str) → Any<a href="#classmethod-parseraw-bytes--str--any" class="hash-link" aria-label="Direct link to classmethod-parseraw-bytes--str--any" title="Direct link to classmethod-parseraw-bytes--str--any">​</a></h4>
<p>Return a decoded object of the given cls.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>cls</strong> (<em>type</em>) – The type to decode to.</li>
<li><strong>raw</strong> (<em>bytes</em> <em>or</em> <em>str</em>) – The raw bytes or JSON string to decode.</li>
</ul>
</li>
<li><strong>Return type:</strong>
Any</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="routing--routingconfig">routing <em>: <a href="../../config/index.htm#posei_trader.live.config.RoutingConfig">RoutingConfig</a></em><a href="#routing--routingconfig" class="hash-link" aria-label="Direct link to routing--routingconfig" title="Direct link to routing--routingconfig">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="validate--bool">validate() → bool<a href="#validate--bool" class="hash-link" aria-label="Direct link to validate() → bool" title="Direct link to validate() → bool">​</a></h4>
<p>Return whether the configuration can be represented as valid JSON.</p>
<ul>
<li><strong>Return type:</strong>
bool</li>
</ul>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="class-polymarketexecclientconfig"><em>class</em> PolymarketExecClientConfig<a href="#class-polymarketexecclientconfig" class="hash-link" aria-label="Direct link to class-polymarketexecclientconfig" title="Direct link to class-polymarketexecclientconfig">​</a></h3>
<p>Bases: <a href="../../config/index.htm#posei_trader.live.config.LiveExecClientConfig"><code>LiveExecClientConfig</code></a></p>
<p>Configuration for <code>PolymarketExecutionClient</code> instances.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>venue</strong> (<a href="../../model/identifiers/index.htm#posei_trader.model.identifiers.Venue"><em>Venue</em></a> <em>,</em> <em>default POLYMARKET_VENUE</em>) – The venue for the client.</li>
<li><strong>private_key</strong> (<em>str</em> <em>,</em> <em>optional</em>) – The private key for the wallet on the <strong>Polygon</strong> network.
If <code>None</code> then will source the POLYMARKET_PK environment variable.</li>
<li><strong>signature_type</strong> (<em>int</em> <em>,</em> <em>default 0</em> *(*<em>EOA</em> <em>)</em>) – The Polymarket signature type.</li>
<li><strong>funder</strong> (<em>str</em> <em>,</em> <em>optional</em>) – The wallet address (public key) on the <strong>Polygon</strong> network used for funding USDC.
If <code>None</code> then will source the POLYMARKET_FUNDER environment variable.</li>
<li><strong>api_key</strong> (<em>str</em> <em>,</em> <em>optional</em>) – The Polymarket API public key.
If <code>None</code> then will source the POLYMARKET_API_KEY environment variable.</li>
<li><strong>api_secret</strong> (<em>str</em> <em>,</em> <em>optional</em>) – The Polymarket API public key.
If <code>None</code> then will source the POLYMARKET_API_SECRET environment variables.</li>
<li><strong>passphrase</strong> (<em>str</em> <em>,</em> <em>optional</em>) – The Polymarket API passphrase.
If <code>None</code> then will source the POLYMARKET_PASSPHRASE environment variable.</li>
<li><strong>base_url_http</strong> (<em>str</em> <em>,</em> <em>optional</em>) – The HTTP client custom endpoint override.</li>
<li><strong>base_url_ws</strong> (<em>str</em> <em>,</em> <em>optional</em>) – The WebSocket client custom endpoint override.</li>
<li><strong>max_retries</strong> (<em>PositiveInt</em> <em>,</em> <em>optional</em>) – The maximum number of times a submit or cancel order request will be retried.</li>
<li><strong>retry_delay_initial_ms</strong> (<em>PositiveInt</em> <em>,</em> <em>optional</em>) – The initial delay (milliseconds) between retries. Short delays with frequent retries may result in account bans.</li>
<li><strong>retry_delay_max_ms</strong> (<em>PositiveInt</em> <em>,</em> <em>optional</em>) – The maximum delay (milliseconds) between retries.</li>
<li><strong>generate_order_history_from_trades</strong> (<em>bool</em> <em>,</em> <em>default False</em>) – If True, uses trades history to generate reports for orders which are no longer active.
The Polymarket API only returns active orders and trades.
This feature is experimental and is not currently recommended (leave set to False).</li>
<li><strong>log_raw_ws_messages</strong> (<em>bool</em> <em>,</em> <em>default False</em>) – If raw websocket messages should be logged with INFO level.
Note: there will be a performance penalty parsing the JSON without an efficient msgspec decoder.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="api_key--str--none-1">api_key <em>: str | None</em><a href="#api_key--str--none-1" class="hash-link" aria-label="Direct link to api_key--str--none-1" title="Direct link to api_key--str--none-1">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="api_secret--str--none-1">api_secret <em>: str | None</em><a href="#api_secret--str--none-1" class="hash-link" aria-label="Direct link to api_secret--str--none-1" title="Direct link to api_secret--str--none-1">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="base_url_http--str--none-1">base_url_http <em>: str | None</em><a href="#base_url_http--str--none-1" class="hash-link" aria-label="Direct link to base_url_http--str--none-1" title="Direct link to base_url_http--str--none-1">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="base_url_ws--str--none-1">base_url_ws <em>: str | None</em><a href="#base_url_ws--str--none-1" class="hash-link" aria-label="Direct link to base_url_ws--str--none-1" title="Direct link to base_url_ws--str--none-1">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="funder--str--none-1">funder <em>: str | None</em><a href="#funder--str--none-1" class="hash-link" aria-label="Direct link to funder--str--none-1" title="Direct link to funder--str--none-1">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="generate_order_history_from_trades--bool">generate_order_history_from_trades <em>: bool</em><a href="#generate_order_history_from_trades--bool" class="hash-link" aria-label="Direct link to generate_order_history_from_trades--bool" title="Direct link to generate_order_history_from_trades--bool">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="log_raw_ws_messages--bool">log_raw_ws_messages <em>: bool</em><a href="#log_raw_ws_messages--bool" class="hash-link" aria-label="Direct link to log_raw_ws_messages--bool" title="Direct link to log_raw_ws_messages--bool">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="max_retries--annotatedint-msgspecmetagt0--none">max_retries <em>: Annotated[int, msgspec.Meta(gt=0)] | None</em><a href="#max_retries--annotatedint-msgspecmetagt0--none" class="hash-link" aria-label="Direct link to max_retries--annotatedint-msgspecmetagt0--none" title="Direct link to max_retries--annotatedint-msgspecmetagt0--none">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="passphrase--str--none-1">passphrase <em>: str | None</em><a href="#passphrase--str--none-1" class="hash-link" aria-label="Direct link to passphrase--str--none-1" title="Direct link to passphrase--str--none-1">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="private_key--str--none-1">private_key <em>: str | None</em><a href="#private_key--str--none-1" class="hash-link" aria-label="Direct link to private_key--str--none-1" title="Direct link to private_key--str--none-1">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="retry_delay_initial_ms--annotatedint-msgspecmetagt0--none">retry_delay_initial_ms <em>: Annotated[int, msgspec.Meta(gt=0)] | None</em><a href="#retry_delay_initial_ms--annotatedint-msgspecmetagt0--none" class="hash-link" aria-label="Direct link to retry_delay_initial_ms--annotatedint-msgspecmetagt0--none" title="Direct link to retry_delay_initial_ms--annotatedint-msgspecmetagt0--none">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="retry_delay_max_ms--annotatedint-msgspecmetagt0--none">retry_delay_max_ms <em>: Annotated[int, msgspec.Meta(gt=0)] | None</em><a href="#retry_delay_max_ms--annotatedint-msgspecmetagt0--none" class="hash-link" aria-label="Direct link to retry_delay_max_ms--annotatedint-msgspecmetagt0--none" title="Direct link to retry_delay_max_ms--annotatedint-msgspecmetagt0--none">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="signature_type--int-1">signature_type <em>: int</em><a href="#signature_type--int-1" class="hash-link" aria-label="Direct link to signature_type--int-1" title="Direct link to signature_type--int-1">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="venue--venue-1">venue <em>: <a href="../../model/identifiers/index.htm#posei_trader.model.identifiers.Venue">Venue</a></em><a href="#venue--venue-1" class="hash-link" aria-label="Direct link to venue--venue-1" title="Direct link to venue--venue-1">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="dict--dictstr-any-1">dict() → dict[str, Any]<a href="#dict--dictstr-any-1" class="hash-link" aria-label="Direct link to dict() → dict[str, Any]" title="Direct link to dict() → dict[str, Any]">​</a></h4>
<p>Return a dictionary representation of the configuration.</p>
<ul>
<li><strong>Return type:</strong>
dict[str, Any]</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="classmethod-fully_qualified_name--str-1"><em>classmethod</em> fully_qualified_name() → str<a href="#classmethod-fully_qualified_name--str-1" class="hash-link" aria-label="Direct link to classmethod-fully_qualified_name--str-1" title="Direct link to classmethod-fully_qualified_name--str-1">​</a></h4>
<p>Return the fully qualified name for the NautilusConfig class.</p>
<ul>
<li><strong>Return type:</strong>
str</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="property-id--str-1"><em>property</em> id <em>: str</em><a href="#property-id--str-1" class="hash-link" aria-label="Direct link to property-id--str-1" title="Direct link to property-id--str-1">​</a></h4>
<p>Return the hashed identifier for the configuration.</p>
<ul>
<li><strong>Return type:</strong>
str</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="instrument_provider--instrumentproviderconfig-1">instrument_provider <em>: <a href="../../config/index.htm#posei_trader.common.config.InstrumentProviderConfig">InstrumentProviderConfig</a></em><a href="#instrument_provider--instrumentproviderconfig-1" class="hash-link" aria-label="Direct link to instrument_provider--instrumentproviderconfig-1" title="Direct link to instrument_provider--instrumentproviderconfig-1">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="json--bytes-1">json() → bytes<a href="#json--bytes-1" class="hash-link" aria-label="Direct link to json() → bytes" title="Direct link to json() → bytes">​</a></h4>
<p>Return serialized JSON encoded bytes.</p>
<ul>
<li><strong>Return type:</strong>
bytes</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="json_primitives--dictstr-any-1">json_primitives() → dict[str, Any]<a href="#json_primitives--dictstr-any-1" class="hash-link" aria-label="Direct link to json_primitives() → dict[str, Any]" title="Direct link to json_primitives() → dict[str, Any]">​</a></h4>
<p>Return a dictionary representation of the configuration with JSON primitive
types as values.</p>
<ul>
<li><strong>Return type:</strong>
dict[str, Any]</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="classmethod-json_schema--dictstr-any-1"><em>classmethod</em> json_schema() → dict[str, Any]<a href="#classmethod-json_schema--dictstr-any-1" class="hash-link" aria-label="Direct link to classmethod-json_schema--dictstr-any-1" title="Direct link to classmethod-json_schema--dictstr-any-1">​</a></h4>
<p>Generate a JSON schema for this configuration class.</p>
<ul>
<li><strong>Return type:</strong>
dict[str, Any]</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="classmethod-parseraw-bytes--str--any-1"><em>classmethod</em> parse(raw: bytes | str) → Any<a href="#classmethod-parseraw-bytes--str--any-1" class="hash-link" aria-label="Direct link to classmethod-parseraw-bytes--str--any-1" title="Direct link to classmethod-parseraw-bytes--str--any-1">​</a></h4>
<p>Return a decoded object of the given cls.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>cls</strong> (<em>type</em>) – The type to decode to.</li>
<li><strong>raw</strong> (<em>bytes</em> <em>or</em> <em>str</em>) – The raw bytes or JSON string to decode.</li>
</ul>
</li>
<li><strong>Return type:</strong>
Any</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="routing--routingconfig-1">routing <em>: <a href="../../config/index.htm#posei_trader.live.config.RoutingConfig">RoutingConfig</a></em><a href="#routing--routingconfig-1" class="hash-link" aria-label="Direct link to routing--routingconfig-1" title="Direct link to routing--routingconfig-1">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="validate--bool-1">validate() → bool<a href="#validate--bool-1" class="hash-link" aria-label="Direct link to validate() → bool" title="Direct link to validate() → bool">​</a></h4>
<p>Return whether the configuration can be represented as valid JSON.</p>
<ul>
<li><strong>Return type:</strong>
bool</li>
</ul>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="class-polymarketinstrumentprovider"><em>class</em> PolymarketInstrumentProvider<a href="#class-polymarketinstrumentprovider" class="hash-link" aria-label="Direct link to class-polymarketinstrumentprovider" title="Direct link to class-polymarketinstrumentprovider">​</a></h3>
<p>Bases: <a href="../../common/index.htm#posei_trader.common.providers.InstrumentProvider"><code>InstrumentProvider</code></a></p>
<p>Provides Nautilus instrument definitions from Polymarket.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>client</strong> (<em>ClobClient</em>) – The Polymarket CLOB HTTP client.</li>
<li><strong>clock</strong> (<a href="../../common/index.htm#posei_trader.common.component.LiveClock"><em>LiveClock</em></a>) – The clock instance.</li>
<li><strong>config</strong> (<a href="../../config/index.htm#posei_trader.common.config.InstrumentProviderConfig"><em>InstrumentProviderConfig</em></a> <em>,</em> <em>optional</em>) – The instrument provider configuration, by default None.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="addinstrument-instrument--none">add(instrument: <a href="../../model/instruments/index.htm#posei_trader.model.instruments.base.Instrument">Instrument</a>) → None<a href="#addinstrument-instrument--none" class="hash-link" aria-label="Direct link to addinstrument-instrument--none" title="Direct link to addinstrument-instrument--none">​</a></h4>
<p>Add the given instrument to the provider.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>instrument</strong> (<a href="../../model/instruments/index.htm#posei_trader.model.instruments.Instrument"><em>Instrument</em></a>) – The instrument to add.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="add_bulkinstruments-listinstrument--none">add_bulk(instruments: list[<a href="../../model/instruments/index.htm#posei_trader.model.instruments.base.Instrument">Instrument</a>]) → None<a href="#add_bulkinstruments-listinstrument--none" class="hash-link" aria-label="Direct link to add_bulkinstruments-listinstrument--none" title="Direct link to add_bulkinstruments-listinstrument--none">​</a></h4>
<p>Add the given instruments bulk to the provider.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>instruments</strong> (<em>list</em> <em>[</em><a href="../../model/instruments/index.htm#posei_trader.model.instruments.Instrument"><em>Instrument</em></a> <em>]</em>) – The instruments to add.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="add_currencycurrency-currency--none">add_currency(currency: <a href="../../model/objects/index.htm#posei_trader.model.objects.Currency">Currency</a>) → None<a href="#add_currencycurrency-currency--none" class="hash-link" aria-label="Direct link to add_currencycurrency-currency--none" title="Direct link to add_currencycurrency-currency--none">​</a></h4>
<p>Add the given currency to the provider.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>currency</strong> (<a href="../../model/index.htm#posei_trader.model.Currency"><em>Currency</em></a>) – The currency to add.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="property-count--int"><em>property</em> count <em>: int</em><a href="#property-count--int" class="hash-link" aria-label="Direct link to property-count--int" title="Direct link to property-count--int">​</a></h4>
<p>Return the count of instruments held by the provider.</p>
<ul>
<li><strong>Return type:</strong>
int</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="currencies--dictstr-currency">currencies() → dict[str, <a href="../../model/objects/index.htm#posei_trader.model.objects.Currency">Currency</a>]<a href="#currencies--dictstr-currency" class="hash-link" aria-label="Direct link to currencies--dictstr-currency" title="Direct link to currencies--dictstr-currency">​</a></h4>
<p>Return all currencies held by the instrument provider.</p>
<ul>
<li><strong>Return type:</strong>
dict[str, <a href="../../model/index.htm#posei_trader.model.Currency">Currency</a>]</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="currencycode-str--currency--none">currency(code: str) → <a href="../../model/objects/index.htm#posei_trader.model.objects.Currency">Currency</a> | None<a href="#currencycode-str--currency--none" class="hash-link" aria-label="Direct link to currencycode-str--currency--none" title="Direct link to currencycode-str--currency--none">​</a></h4>
<p>Return the currency with the given code (if found).</p>
<ul>
<li><strong>Parameters:</strong>
<strong>code</strong> (<em>str</em>) – The currency code.</li>
<li><strong>Return type:</strong>
Currency or <code>None</code></li>
<li><strong>Raises:</strong>
<strong>ValueError</strong> – If code is not a valid string.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="findinstrument_id-instrumentid--instrument--none">find(instrument_id: <a href="../../model/identifiers/index.htm#posei_trader.model.identifiers.InstrumentId">InstrumentId</a>) → <a href="../../model/instruments/index.htm#posei_trader.model.instruments.base.Instrument">Instrument</a> | None<a href="#findinstrument_id-instrumentid--instrument--none" class="hash-link" aria-label="Direct link to findinstrument_id-instrumentid--instrument--none" title="Direct link to findinstrument_id-instrumentid--instrument--none">​</a></h4>
<p>Return the instrument for the given instrument ID (if found).</p>
<ul>
<li><strong>Parameters:</strong>
<strong>instrument_id</strong> (<a href="../../model/identifiers/index.htm#posei_trader.model.identifiers.InstrumentId"><em>InstrumentId</em></a>) – The ID for the instrument</li>
<li><strong>Return type:</strong>
Instrument or <code>None</code></li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="get_all--dictinstrumentid-instrument">get_all() → dict[<a href="../../model/identifiers/index.htm#posei_trader.model.identifiers.InstrumentId">InstrumentId</a>, <a href="../../model/instruments/index.htm#posei_trader.model.instruments.base.Instrument">Instrument</a>]<a href="#get_all--dictinstrumentid-instrument" class="hash-link" aria-label="Direct link to get_all--dictinstrumentid-instrument" title="Direct link to get_all--dictinstrumentid-instrument">​</a></h4>
<p>Return all loaded instruments as a map keyed by instrument ID.</p>
<p>If no instruments loaded, will return an empty dict.</p>
<ul>
<li><strong>Return type:</strong>
dict[<a href="../../model/identifiers/index.htm#posei_trader.model.identifiers.InstrumentId">InstrumentId</a>, <a href="../../model/instruments/index.htm#posei_trader.model.instruments.Instrument">Instrument</a>]</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="async-initializereload-bool--false--none"><em>async</em> initialize(reload: bool = False) → None<a href="#async-initializereload-bool--false--none" class="hash-link" aria-label="Direct link to async-initializereload-bool--false--none" title="Direct link to async-initializereload-bool--false--none">​</a></h4>
<p>Initialize the instrument provider.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>reload</strong> (<em>bool</em> <em>,</em> <em>default False</em>) – If True, then will always reload instruments.
If False, then will immediately return if already loaded.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="list_all--listinstrument">list_all() → list[<a href="../../model/instruments/index.htm#posei_trader.model.instruments.base.Instrument">Instrument</a>]<a href="#list_all--listinstrument" class="hash-link" aria-label="Direct link to list_all--listinstrument" title="Direct link to list_all--listinstrument">​</a></h4>
<p>Return all loaded instruments.</p>
<ul>
<li><strong>Return type:</strong>
list[<a href="../../model/instruments/index.htm#posei_trader.model.instruments.Instrument">Instrument</a>]</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="loadinstrument_id-instrumentid-filters-dict--none--none--none">load(instrument_id: <a href="../../model/identifiers/index.htm#posei_trader.model.identifiers.InstrumentId">InstrumentId</a>, filters: dict | None = None) → None<a href="#loadinstrument_id-instrumentid-filters-dict--none--none--none" class="hash-link" aria-label="Direct link to loadinstrument_id-instrumentid-filters-dict--none--none--none" title="Direct link to loadinstrument_id-instrumentid-filters-dict--none--none--none">​</a></h4>
<p>Load the instrument for the given ID into the provider, optionally applying the
given filters.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>instrument_id</strong> (<a href="../../model/identifiers/index.htm#posei_trader.model.identifiers.InstrumentId"><em>InstrumentId</em></a>) – The instrument ID to load.</li>
<li><strong>filters</strong> (<em>frozendict</em> *[*<em>str</em> <em>,</em> <em>Any</em> <em>] or</em> <em>dict</em> *[*<em>str</em> <em>,</em> <em>Any</em> <em>]</em> <em>,</em> <em>optional</em>) – The venue specific instrument loading filters to apply.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="load_allfilters-dict--none--none--none">load_all(filters: dict | None = None) → None<a href="#load_allfilters-dict--none--none--none" class="hash-link" aria-label="Direct link to load_all(filters: dict | None = None) → None" title="Direct link to load_all(filters: dict | None = None) → None">​</a></h4>
<p>Load the latest instruments into the provider, optionally applying the given
filters.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>filters</strong> (<em>frozendict</em> *[*<em>str</em> <em>,</em> <em>Any</em> <em>] or</em> <em>dict</em> *[*<em>str</em> <em>,</em> <em>Any</em> <em>]</em> <em>,</em> <em>optional</em>) – The venue specific instrument loading filters to apply.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="async-load_all_asyncfilters-dict--none--none--none"><em>async</em> load_all_async(filters: dict | None = None) → None<a href="#async-load_all_asyncfilters-dict--none--none--none" class="hash-link" aria-label="Direct link to async-load_all_asyncfilters-dict--none--none--none" title="Direct link to async-load_all_asyncfilters-dict--none--none--none">​</a></h4>
<p>Load the latest instruments into the provider asynchronously, optionally
applying the given filters.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="async-load_asyncinstrument_id-instrumentid-filters-dict--none--none--none"><em>async</em> load_async(instrument_id: <a href="../../model/identifiers/index.htm#posei_trader.model.identifiers.InstrumentId">InstrumentId</a>, filters: dict | None = None) → None<a href="#async-load_asyncinstrument_id-instrumentid-filters-dict--none--none--none" class="hash-link" aria-label="Direct link to async-load_asyncinstrument_id-instrumentid-filters-dict--none--none--none" title="Direct link to async-load_asyncinstrument_id-instrumentid-filters-dict--none--none--none">​</a></h4>
<p>Load the instrument for the given ID into the provider asynchronously,
optionally applying the given filters.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>instrument_id</strong> (<a href="../../model/identifiers/index.htm#posei_trader.model.identifiers.InstrumentId"><em>InstrumentId</em></a>) – The instrument ID to load.</li>
<li><strong>filters</strong> (<em>frozendict</em> *[*<em>str</em> <em>,</em> <em>Any</em> <em>] or</em> <em>dict</em> *[*<em>str</em> <em>,</em> <em>Any</em> <em>]</em> <em>,</em> <em>optional</em>) – The venue specific instrument loading filters to apply.</li>
</ul>
</li>
<li><strong>Raises:</strong>
<strong>ValueError</strong> – If instrument_id.venue is not equal to self.venue.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="load_idsinstrument_ids-listinstrumentid-filters-dict--none--none--none">load_ids(instrument_ids: list[<a href="../../model/identifiers/index.htm#posei_trader.model.identifiers.InstrumentId">InstrumentId</a>], filters: dict | None = None) → None<a href="#load_idsinstrument_ids-listinstrumentid-filters-dict--none--none--none" class="hash-link" aria-label="Direct link to load_idsinstrument_ids-listinstrumentid-filters-dict--none--none--none" title="Direct link to load_idsinstrument_ids-listinstrumentid-filters-dict--none--none--none">​</a></h4>
<p>Load the instruments for the given IDs into the provider, optionally applying
the given filters.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>instrument_ids</strong> (<em>list</em> <em>[</em><a href="../../model/identifiers/index.htm#posei_trader.model.identifiers.InstrumentId"><em>InstrumentId</em></a> <em>]</em>) – The instrument IDs to load.</li>
<li><strong>filters</strong> (<em>frozendict</em> *[*<em>str</em> <em>,</em> <em>Any</em> <em>] or</em> <em>dict</em> *[*<em>str</em> <em>,</em> <em>Any</em> <em>]</em> <em>,</em> <em>optional</em>) – The venue specific instrument loading filters to apply.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="async-load_ids_asyncinstrument_ids-listinstrumentid-filters-dict--none--none--none"><em>async</em> load_ids_async(instrument_ids: list[<a href="../../model/identifiers/index.htm#posei_trader.model.identifiers.InstrumentId">InstrumentId</a>], filters: dict | None = None) → None<a href="#async-load_ids_asyncinstrument_ids-listinstrumentid-filters-dict--none--none--none" class="hash-link" aria-label="Direct link to async-load_ids_asyncinstrument_ids-listinstrumentid-filters-dict--none--none--none" title="Direct link to async-load_ids_asyncinstrument_ids-listinstrumentid-filters-dict--none--none--none">​</a></h4>
<p>Load the instruments for the given IDs into the provider, optionally applying
the given filters.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>instrument_ids</strong> (<em>list</em> <em>[</em><a href="../../model/identifiers/index.htm#posei_trader.model.identifiers.InstrumentId"><em>InstrumentId</em></a> <em>]</em>) – The instrument IDs to load.</li>
<li><strong>filters</strong> (<em>frozendict</em> *[*<em>str</em> <em>,</em> <em>Any</em> <em>] or</em> <em>dict</em> *[*<em>str</em> <em>,</em> <em>Any</em> <em>]</em> <em>,</em> <em>optional</em>) – The venue specific instrument loading filters to apply.</li>
</ul>
</li>
<li><strong>Raises:</strong>
<strong>ValueError</strong> – If any instrument_id.venue is not equal to self.venue.</li>
</ul>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="class-polymarketlivedataclientfactory"><em>class</em> PolymarketLiveDataClientFactory<a href="#class-polymarketlivedataclientfactory" class="hash-link" aria-label="Direct link to class-polymarketlivedataclientfactory" title="Direct link to class-polymarketlivedataclientfactory">​</a></h3>
<p>Bases: <code>LiveDataClientFactory</code></p>
<p>Provides a Polymarket live data client factory.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="static-createloop-abstracteventloop-name-str-config-polymarketdataclientconfig-msgbus-messagebus-cache-cache-clock-liveclock--polymarketdataclient"><em>static</em> create(loop: AbstractEventLoop, name: str, config: <a href="#posei_trader.adapters.polymarket.config.PolymarketDataClientConfig">PolymarketDataClientConfig</a>, msgbus: <a href="../../common/index.htm#posei_trader.common.component.MessageBus">MessageBus</a>, cache: <a href="../../cache/index.htm#posei_trader.cache.cache.Cache">Cache</a>, clock: <a href="../../common/index.htm#posei_trader.common.component.LiveClock">LiveClock</a>) → <a href="#posei_trader.adapters.polymarket.data.PolymarketDataClient">PolymarketDataClient</a><a href="#static-createloop-abstracteventloop-name-str-config-polymarketdataclientconfig-msgbus-messagebus-cache-cache-clock-liveclock--polymarketdataclient" class="hash-link" aria-label="Direct link to static-createloop-abstracteventloop-name-str-config-polymarketdataclientconfig-msgbus-messagebus-cache-cache-clock-liveclock--polymarketdataclient" title="Direct link to static-createloop-abstracteventloop-name-str-config-polymarketdataclientconfig-msgbus-messagebus-cache-cache-clock-liveclock--polymarketdataclient">​</a></h4>
<p>Create a new Polymarket data client.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>loop</strong> (<em>asyncio.AbstractEventLoop</em>) – The event loop for the client.</li>
<li><strong>name</strong> (<em>str</em>) – The custom client ID.</li>
<li><strong>config</strong> (<a href="#posei_trader.adapters.polymarket.PolymarketDataClientConfig"><em>PolymarketDataClientConfig</em></a>) – The client configuration.</li>
<li><strong>msgbus</strong> (<a href="../../common/index.htm#posei_trader.common.component.MessageBus"><em>MessageBus</em></a>) – The message bus for the client.</li>
<li><strong>cache</strong> (<a href="../../cache/index.htm#posei_trader.cache.Cache"><em>Cache</em></a>) – The cache for the client.</li>
<li><strong>clock</strong> (<a href="../../common/index.htm#posei_trader.common.component.LiveClock"><em>LiveClock</em></a>) – The clock for the instrument provider.</li>
</ul>
</li>
<li><strong>Return type:</strong>
<a href="#posei_trader.adapters.polymarket.data.PolymarketDataClient">PolymarketDataClient</a></li>
</ul>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="class-polymarketliveexecclientfactory"><em>class</em> PolymarketLiveExecClientFactory<a href="#class-polymarketliveexecclientfactory" class="hash-link" aria-label="Direct link to class-polymarketliveexecclientfactory" title="Direct link to class-polymarketliveexecclientfactory">​</a></h3>
<p>Bases: <code>LiveExecClientFactory</code></p>
<p>Provides a Polymarket live execution client factory.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="static-createloop-abstracteventloop-name-str-config-polymarketexecclientconfig-msgbus-messagebus-cache-cache-clock-liveclock--polymarketexecutionclient"><em>static</em> create(loop: AbstractEventLoop, name: str, config: <a href="#posei_trader.adapters.polymarket.config.PolymarketExecClientConfig">PolymarketExecClientConfig</a>, msgbus: <a href="../../common/index.htm#posei_trader.common.component.MessageBus">MessageBus</a>, cache: <a href="../../cache/index.htm#posei_trader.cache.cache.Cache">Cache</a>, clock: <a href="../../common/index.htm#posei_trader.common.component.LiveClock">LiveClock</a>) → <a href="#posei_trader.adapters.polymarket.execution.PolymarketExecutionClient">PolymarketExecutionClient</a><a href="#static-createloop-abstracteventloop-name-str-config-polymarketexecclientconfig-msgbus-messagebus-cache-cache-clock-liveclock--polymarketexecutionclient" class="hash-link" aria-label="Direct link to static-createloop-abstracteventloop-name-str-config-polymarketexecclientconfig-msgbus-messagebus-cache-cache-clock-liveclock--polymarketexecutionclient" title="Direct link to static-createloop-abstracteventloop-name-str-config-polymarketexecclientconfig-msgbus-messagebus-cache-cache-clock-liveclock--polymarketexecutionclient">​</a></h4>
<p>Create a new Polymarket execution client.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>loop</strong> (<em>asyncio.AbstractEventLoop</em>) – The event loop for the client.</li>
<li><strong>name</strong> (<em>str</em>) – The custom client ID.</li>
<li><strong>config</strong> (<a href="#posei_trader.adapters.polymarket.PolymarketExecClientConfig"><em>PolymarketExecClientConfig</em></a>) – The client configuration.</li>
<li><strong>msgbus</strong> (<a href="../../common/index.htm#posei_trader.common.component.MessageBus"><em>MessageBus</em></a>) – The message bus for the client.</li>
<li><strong>cache</strong> (<a href="../../cache/index.htm#posei_trader.cache.Cache"><em>Cache</em></a>) – The cache for the client.</li>
<li><strong>clock</strong> (<a href="../../common/index.htm#posei_trader.common.component.LiveClock"><em>LiveClock</em></a>) – The clock for the instrument provider.</li>
</ul>
</li>
<li><strong>Return type:</strong>
<a href="#posei_trader.adapters.polymarket.execution.PolymarketExecutionClient">PolymarketExecutionClient</a></li>
</ul>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="get_polymarket_http_clientapi_key-str--none--none-api_secret-str--none--none-passphrase-str--none--none-base_url-str--none--none-chain_id-int--137-signature_type-int--0-private_key-str--none--none-funder-str--none--none--clobclient">get_polymarket_http_client(api_key: str | None = None, api_secret: str | None = None, passphrase: str | None = None, base_url: str | None = None, chain_id: int = 137, signature_type: int = 0, private_key: str | None = None, funder: str | None = None) → ClobClient<a href="#get_polymarket_http_clientapi_key-str--none--none-api_secret-str--none--none-passphrase-str--none--none-base_url-str--none--none-chain_id-int--137-signature_type-int--0-private_key-str--none--none-funder-str--none--none--clobclient" class="hash-link" aria-label="Direct link to get_polymarket_http_client(api_key: str | None = None, api_secret: str | None = None, passphrase: str | None = None, base_url: str | None = None, chain_id: int = 137, signature_type: int = 0, private_key: str | None = None, funder: str | None = None) → ClobClient" title="Direct link to get_polymarket_http_client(api_key: str | None = None, api_secret: str | None = None, passphrase: str | None = None, base_url: str | None = None, chain_id: int = 137, signature_type: int = 0, private_key: str | None = None, funder: str | None = None) → ClobClient">​</a></h3>
<p>Cache and return a Polymarket CLOB client.</p>
<p>If a cached client with matching parameters already exists, the cached client will be returned.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>api_key</strong> (<em>str</em> <em>,</em> <em>optional</em>) – The API key for the client.</li>
<li><strong>api_secret</strong> (<em>str</em> <em>,</em> <em>optional</em>) – The API secret for the client.</li>
<li><strong>passphrase</strong> (<em>str</em> <em>,</em> <em>optional</em>) – The passphrase for the client.</li>
<li><strong>base_url</strong> (<em>str</em> <em>,</em> <em>optional</em>) – The base URL for the API endpoints.</li>
<li><strong>chain_id</strong> (<em>int</em> <em>,</em> <em>default POLYGON</em>) – The chain ID for the client.</li>
<li><strong>signature_type</strong> (<em>int</em> <em>,</em> <em>default 0</em> *(*<em>EOA</em> <em>)</em>) – The Polymarket signature type.</li>
<li><strong>private_key</strong> (<em>str</em> <em>,</em> <em>optional</em>) – The private key for the wallet on the <strong>Polygon</strong> network.</li>
<li><strong>funder</strong> (<em>str</em> <em>,</em> <em>optional</em>) – The wallet address (public key) on the <strong>Polygon</strong> network used for funding USDC.</li>
</ul>
</li>
<li><strong>Return type:</strong>
ClobClient</li>
</ul>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="get_polymarket_instrument_idcondition_id-str-token_id-str--int--instrumentid">get_polymarket_instrument_id(condition_id: str, token_id: str | int) → <a href="../../model/identifiers/index.htm#posei_trader.model.identifiers.InstrumentId">InstrumentId</a><a href="#get_polymarket_instrument_idcondition_id-str-token_id-str--int--instrumentid" class="hash-link" aria-label="Direct link to get_polymarket_instrument_idcondition_id-str-token_id-str--int--instrumentid" title="Direct link to get_polymarket_instrument_idcondition_id-str-token_id-str--int--instrumentid">​</a></h3>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="get_polymarket_instrument_providerclient-clobclient-clock-liveclock-config-instrumentproviderconfig--polymarketinstrumentprovider">get_polymarket_instrument_provider(client: ClobClient, clock: <a href="../../common/index.htm#posei_trader.common.component.LiveClock">LiveClock</a>, config: <a href="../../config/index.htm#posei_trader.common.config.InstrumentProviderConfig">InstrumentProviderConfig</a>) → <a href="#posei_trader.adapters.polymarket.providers.PolymarketInstrumentProvider">PolymarketInstrumentProvider</a><a href="#get_polymarket_instrument_providerclient-clobclient-clock-liveclock-config-instrumentproviderconfig--polymarketinstrumentprovider" class="hash-link" aria-label="Direct link to get_polymarket_instrument_providerclient-clobclient-clock-liveclock-config-instrumentproviderconfig--polymarketinstrumentprovider" title="Direct link to get_polymarket_instrument_providerclient-clobclient-clock-liveclock-config-instrumentproviderconfig--polymarketinstrumentprovider">​</a></h3>
<p>Cache and return a Polymarket instrument provider.</p>
<p>If a cached provider already exists, then that provider will be returned.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>client</strong> (<em>py_clob_client.client.ClobClient</em>) – The client for the instrument provider.</li>
<li><strong>clock</strong> (<a href="../../common/index.htm#posei_trader.common.component.LiveClock"><em>LiveClock</em></a>) – The clock for the instrument provider.</li>
<li><strong>config</strong> (<a href="../../config/index.htm#posei_trader.common.config.InstrumentProviderConfig"><em>InstrumentProviderConfig</em></a>) – The configuration for the instrument provider.</li>
</ul>
</li>
<li><strong>Return type:</strong>
<a href="#posei_trader.adapters.polymarket.PolymarketInstrumentProvider">PolymarketInstrumentProvider</a></li>
</ul>
<h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="config">Config<a href="#config" class="hash-link" aria-label="Direct link to Config" title="Direct link to Config">​</a></h2>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="class-polymarketdataclientconfig-1"><em>class</em> PolymarketDataClientConfig<a href="#class-polymarketdataclientconfig-1" class="hash-link" aria-label="Direct link to class-polymarketdataclientconfig-1" title="Direct link to class-polymarketdataclientconfig-1">​</a></h3>
<p>Bases: <a href="../../config/index.htm#posei_trader.live.config.LiveDataClientConfig"><code>LiveDataClientConfig</code></a></p>
<p>Configuration for <code>PolymarketDataClient</code> instances.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>venue</strong> (<a href="../../model/identifiers/index.htm#posei_trader.model.identifiers.Venue"><em>Venue</em></a> <em>,</em> <em>default POLYMARKET_VENUE</em>) – The venue for the client.</li>
<li><strong>private_key</strong> (<em>str</em> <em>,</em> <em>optional</em>) – The private key for the wallet on the <strong>Polygon</strong> network.
If <code>None</code> then will source the POLYMARKET_PK environment variable.</li>
<li><strong>signature_type</strong> (<em>int</em> <em>,</em> <em>default 0</em> *(*<em>EOA</em> <em>)</em>) – The Polymarket signature type.</li>
<li><strong>funder</strong> (<em>str</em> <em>,</em> <em>optional</em>) – The wallet address (public key) on the <strong>Polygon</strong> network used for funding USDC.
If <code>None</code> then will source the POLYMARKET_FUNDER environment variable.</li>
<li><strong>api_key</strong> (<em>str</em> <em>,</em> <em>optional</em>) – The Polymarket API public key.
If <code>None</code> then will source the POLYMARKET_API_KEY environment variable.</li>
<li><strong>api_secret</strong> (<em>str</em> <em>,</em> <em>optional</em>) – The Polymarket API public key.
If <code>None</code> then will source the POLYMARKET_API_SECRET environment variable.</li>
<li><strong>passphrase</strong> (<em>str</em> <em>,</em> <em>optional</em>) – The Polymarket API passphrase.
If <code>None</code> then will source the POLYMARKET_PASSPHRASE environment variable.</li>
<li><strong>base_url_http</strong> (<em>str</em> <em>,</em> <em>optional</em>) – The HTTP client custom endpoint override.</li>
<li><strong>base_url_ws</strong> (<em>str</em> <em>,</em> <em>optional</em>) – The WebSocket client custom endpoint override.</li>
<li><strong>ws_connection_initial_delay_secs</strong> (<em>PositiveFloat</em> <em>,</em> <em>default 5</em>) – The delay (seconds) prior to the first websocket connection to allow initial subscriptions to arrive.</li>
<li><strong>ws_connection_delay_secs</strong> (<em>PositiveFloat</em> <em>,</em> <em>default 0.1</em>) – The delay (seconds) prior to making a new websocket connection to allow non-initial subscriptions to arrive.</li>
<li><strong>update_instruments_interval_mins</strong> (<em>PositiveInt</em> <em>or</em> <em>None</em> <em>,</em> <em>default 60</em>) – The interval (minutes) between updating Polymarket instruments.</li>
<li><strong>compute_effective_deltas</strong> (<em>bool</em> <em>,</em> <em>default False</em>) – If True, computes effective deltas by comparing old and new order book states,
reducing snapshot size. This takes ~1 millisecond, so is not recommended for latency-sensitive strategies.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="venue--venue-2">venue <em>: <a href="../../model/identifiers/index.htm#posei_trader.model.identifiers.Venue">Venue</a></em><a href="#venue--venue-2" class="hash-link" aria-label="Direct link to venue--venue-2" title="Direct link to venue--venue-2">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="private_key--str--none-2">private_key <em>: str | None</em><a href="#private_key--str--none-2" class="hash-link" aria-label="Direct link to private_key--str--none-2" title="Direct link to private_key--str--none-2">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="signature_type--int-2">signature_type <em>: int</em><a href="#signature_type--int-2" class="hash-link" aria-label="Direct link to signature_type--int-2" title="Direct link to signature_type--int-2">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="funder--str--none-2">funder <em>: str | None</em><a href="#funder--str--none-2" class="hash-link" aria-label="Direct link to funder--str--none-2" title="Direct link to funder--str--none-2">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="api_key--str--none-2">api_key <em>: str | None</em><a href="#api_key--str--none-2" class="hash-link" aria-label="Direct link to api_key--str--none-2" title="Direct link to api_key--str--none-2">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="api_secret--str--none-2">api_secret <em>: str | None</em><a href="#api_secret--str--none-2" class="hash-link" aria-label="Direct link to api_secret--str--none-2" title="Direct link to api_secret--str--none-2">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="passphrase--str--none-2">passphrase <em>: str | None</em><a href="#passphrase--str--none-2" class="hash-link" aria-label="Direct link to passphrase--str--none-2" title="Direct link to passphrase--str--none-2">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="base_url_http--str--none-2">base_url_http <em>: str | None</em><a href="#base_url_http--str--none-2" class="hash-link" aria-label="Direct link to base_url_http--str--none-2" title="Direct link to base_url_http--str--none-2">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="base_url_ws--str--none-2">base_url_ws <em>: str | None</em><a href="#base_url_ws--str--none-2" class="hash-link" aria-label="Direct link to base_url_ws--str--none-2" title="Direct link to base_url_ws--str--none-2">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="ws_connection_initial_delay_secs--annotatedfloat-msgspecmetagt00-1">ws_connection_initial_delay_secs <em>: Annotated[float, msgspec.Meta(gt=0.0)]</em><a href="#ws_connection_initial_delay_secs--annotatedfloat-msgspecmetagt00-1" class="hash-link" aria-label="Direct link to ws_connection_initial_delay_secs--annotatedfloat-msgspecmetagt00-1" title="Direct link to ws_connection_initial_delay_secs--annotatedfloat-msgspecmetagt00-1">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="ws_connection_delay_secs--annotatedfloat-msgspecmetagt00-1">ws_connection_delay_secs <em>: Annotated[float, msgspec.Meta(gt=0.0)]</em><a href="#ws_connection_delay_secs--annotatedfloat-msgspecmetagt00-1" class="hash-link" aria-label="Direct link to ws_connection_delay_secs--annotatedfloat-msgspecmetagt00-1" title="Direct link to ws_connection_delay_secs--annotatedfloat-msgspecmetagt00-1">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="update_instruments_interval_mins--annotatedint-msgspecmetagt0--none-1">update_instruments_interval_mins <em>: Annotated[int, msgspec.Meta(gt=0)] | None</em><a href="#update_instruments_interval_mins--annotatedint-msgspecmetagt0--none-1" class="hash-link" aria-label="Direct link to update_instruments_interval_mins--annotatedint-msgspecmetagt0--none-1" title="Direct link to update_instruments_interval_mins--annotatedint-msgspecmetagt0--none-1">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="compute_effective_deltas--bool-1">compute_effective_deltas <em>: bool</em><a href="#compute_effective_deltas--bool-1" class="hash-link" aria-label="Direct link to compute_effective_deltas--bool-1" title="Direct link to compute_effective_deltas--bool-1">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="dict--dictstr-any-2">dict() → dict[str, Any]<a href="#dict--dictstr-any-2" class="hash-link" aria-label="Direct link to dict() → dict[str, Any]" title="Direct link to dict() → dict[str, Any]">​</a></h4>
<p>Return a dictionary representation of the configuration.</p>
<ul>
<li><strong>Return type:</strong>
dict[str, Any]</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="classmethod-fully_qualified_name--str-2"><em>classmethod</em> fully_qualified_name() → str<a href="#classmethod-fully_qualified_name--str-2" class="hash-link" aria-label="Direct link to classmethod-fully_qualified_name--str-2" title="Direct link to classmethod-fully_qualified_name--str-2">​</a></h4>
<p>Return the fully qualified name for the NautilusConfig class.</p>
<ul>
<li><strong>Return type:</strong>
str</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="handle_revised_bars--bool-1">handle_revised_bars <em>: bool</em><a href="#handle_revised_bars--bool-1" class="hash-link" aria-label="Direct link to handle_revised_bars--bool-1" title="Direct link to handle_revised_bars--bool-1">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="property-id--str-2"><em>property</em> id <em>: str</em><a href="#property-id--str-2" class="hash-link" aria-label="Direct link to property-id--str-2" title="Direct link to property-id--str-2">​</a></h4>
<p>Return the hashed identifier for the configuration.</p>
<ul>
<li><strong>Return type:</strong>
str</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="instrument_provider--instrumentproviderconfig-2">instrument_provider <em>: <a href="../../config/index.htm#posei_trader.common.config.InstrumentProviderConfig">InstrumentProviderConfig</a></em><a href="#instrument_provider--instrumentproviderconfig-2" class="hash-link" aria-label="Direct link to instrument_provider--instrumentproviderconfig-2" title="Direct link to instrument_provider--instrumentproviderconfig-2">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="json--bytes-2">json() → bytes<a href="#json--bytes-2" class="hash-link" aria-label="Direct link to json() → bytes" title="Direct link to json() → bytes">​</a></h4>
<p>Return serialized JSON encoded bytes.</p>
<ul>
<li><strong>Return type:</strong>
bytes</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="json_primitives--dictstr-any-2">json_primitives() → dict[str, Any]<a href="#json_primitives--dictstr-any-2" class="hash-link" aria-label="Direct link to json_primitives() → dict[str, Any]" title="Direct link to json_primitives() → dict[str, Any]">​</a></h4>
<p>Return a dictionary representation of the configuration with JSON primitive
types as values.</p>
<ul>
<li><strong>Return type:</strong>
dict[str, Any]</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="classmethod-json_schema--dictstr-any-2"><em>classmethod</em> json_schema() → dict[str, Any]<a href="#classmethod-json_schema--dictstr-any-2" class="hash-link" aria-label="Direct link to classmethod-json_schema--dictstr-any-2" title="Direct link to classmethod-json_schema--dictstr-any-2">​</a></h4>
<p>Generate a JSON schema for this configuration class.</p>
<ul>
<li><strong>Return type:</strong>
dict[str, Any]</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="classmethod-parseraw-bytes--str--any-2"><em>classmethod</em> parse(raw: bytes | str) → Any<a href="#classmethod-parseraw-bytes--str--any-2" class="hash-link" aria-label="Direct link to classmethod-parseraw-bytes--str--any-2" title="Direct link to classmethod-parseraw-bytes--str--any-2">​</a></h4>
<p>Return a decoded object of the given cls.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>cls</strong> (<em>type</em>) – The type to decode to.</li>
<li><strong>raw</strong> (<em>bytes</em> <em>or</em> <em>str</em>) – The raw bytes or JSON string to decode.</li>
</ul>
</li>
<li><strong>Return type:</strong>
Any</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="routing--routingconfig-2">routing <em>: <a href="../../config/index.htm#posei_trader.live.config.RoutingConfig">RoutingConfig</a></em><a href="#routing--routingconfig-2" class="hash-link" aria-label="Direct link to routing--routingconfig-2" title="Direct link to routing--routingconfig-2">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="validate--bool-2">validate() → bool<a href="#validate--bool-2" class="hash-link" aria-label="Direct link to validate() → bool" title="Direct link to validate() → bool">​</a></h4>
<p>Return whether the configuration can be represented as valid JSON.</p>
<ul>
<li><strong>Return type:</strong>
bool</li>
</ul>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="class-polymarketexecclientconfig-1"><em>class</em> PolymarketExecClientConfig<a href="#class-polymarketexecclientconfig-1" class="hash-link" aria-label="Direct link to class-polymarketexecclientconfig-1" title="Direct link to class-polymarketexecclientconfig-1">​</a></h3>
<p>Bases: <a href="../../config/index.htm#posei_trader.live.config.LiveExecClientConfig"><code>LiveExecClientConfig</code></a></p>
<p>Configuration for <code>PolymarketExecutionClient</code> instances.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>venue</strong> (<a href="../../model/identifiers/index.htm#posei_trader.model.identifiers.Venue"><em>Venue</em></a> <em>,</em> <em>default POLYMARKET_VENUE</em>) – The venue for the client.</li>
<li><strong>private_key</strong> (<em>str</em> <em>,</em> <em>optional</em>) – The private key for the wallet on the <strong>Polygon</strong> network.
If <code>None</code> then will source the POLYMARKET_PK environment variable.</li>
<li><strong>signature_type</strong> (<em>int</em> <em>,</em> <em>default 0</em> *(*<em>EOA</em> <em>)</em>) – The Polymarket signature type.</li>
<li><strong>funder</strong> (<em>str</em> <em>,</em> <em>optional</em>) – The wallet address (public key) on the <strong>Polygon</strong> network used for funding USDC.
If <code>None</code> then will source the POLYMARKET_FUNDER environment variable.</li>
<li><strong>api_key</strong> (<em>str</em> <em>,</em> <em>optional</em>) – The Polymarket API public key.
If <code>None</code> then will source the POLYMARKET_API_KEY environment variable.</li>
<li><strong>api_secret</strong> (<em>str</em> <em>,</em> <em>optional</em>) – The Polymarket API public key.
If <code>None</code> then will source the POLYMARKET_API_SECRET environment variables.</li>
<li><strong>passphrase</strong> (<em>str</em> <em>,</em> <em>optional</em>) – The Polymarket API passphrase.
If <code>None</code> then will source the POLYMARKET_PASSPHRASE environment variable.</li>
<li><strong>base_url_http</strong> (<em>str</em> <em>,</em> <em>optional</em>) – The HTTP client custom endpoint override.</li>
<li><strong>base_url_ws</strong> (<em>str</em> <em>,</em> <em>optional</em>) – The WebSocket client custom endpoint override.</li>
<li><strong>max_retries</strong> (<em>PositiveInt</em> <em>,</em> <em>optional</em>) – The maximum number of times a submit or cancel order request will be retried.</li>
<li><strong>retry_delay_initial_ms</strong> (<em>PositiveInt</em> <em>,</em> <em>optional</em>) – The initial delay (milliseconds) between retries. Short delays with frequent retries may result in account bans.</li>
<li><strong>retry_delay_max_ms</strong> (<em>PositiveInt</em> <em>,</em> <em>optional</em>) – The maximum delay (milliseconds) between retries.</li>
<li><strong>generate_order_history_from_trades</strong> (<em>bool</em> <em>,</em> <em>default False</em>) – If True, uses trades history to generate reports for orders which are no longer active.
The Polymarket API only returns active orders and trades.
This feature is experimental and is not currently recommended (leave set to False).</li>
<li><strong>log_raw_ws_messages</strong> (<em>bool</em> <em>,</em> <em>default False</em>) – If raw websocket messages should be logged with INFO level.
Note: there will be a performance penalty parsing the JSON without an efficient msgspec decoder.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="venue--venue-3">venue <em>: <a href="../../model/identifiers/index.htm#posei_trader.model.identifiers.Venue">Venue</a></em><a href="#venue--venue-3" class="hash-link" aria-label="Direct link to venue--venue-3" title="Direct link to venue--venue-3">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="private_key--str--none-3">private_key <em>: str | None</em><a href="#private_key--str--none-3" class="hash-link" aria-label="Direct link to private_key--str--none-3" title="Direct link to private_key--str--none-3">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="signature_type--int-3">signature_type <em>: int</em><a href="#signature_type--int-3" class="hash-link" aria-label="Direct link to signature_type--int-3" title="Direct link to signature_type--int-3">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="funder--str--none-3">funder <em>: str | None</em><a href="#funder--str--none-3" class="hash-link" aria-label="Direct link to funder--str--none-3" title="Direct link to funder--str--none-3">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="api_key--str--none-3">api_key <em>: str | None</em><a href="#api_key--str--none-3" class="hash-link" aria-label="Direct link to api_key--str--none-3" title="Direct link to api_key--str--none-3">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="api_secret--str--none-3">api_secret <em>: str | None</em><a href="#api_secret--str--none-3" class="hash-link" aria-label="Direct link to api_secret--str--none-3" title="Direct link to api_secret--str--none-3">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="passphrase--str--none-3">passphrase <em>: str | None</em><a href="#passphrase--str--none-3" class="hash-link" aria-label="Direct link to passphrase--str--none-3" title="Direct link to passphrase--str--none-3">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="base_url_http--str--none-3">base_url_http <em>: str | None</em><a href="#base_url_http--str--none-3" class="hash-link" aria-label="Direct link to base_url_http--str--none-3" title="Direct link to base_url_http--str--none-3">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="base_url_ws--str--none-3">base_url_ws <em>: str | None</em><a href="#base_url_ws--str--none-3" class="hash-link" aria-label="Direct link to base_url_ws--str--none-3" title="Direct link to base_url_ws--str--none-3">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="max_retries--annotatedint-msgspecmetagt0--none-1">max_retries <em>: Annotated[int, msgspec.Meta(gt=0)] | None</em><a href="#max_retries--annotatedint-msgspecmetagt0--none-1" class="hash-link" aria-label="Direct link to max_retries--annotatedint-msgspecmetagt0--none-1" title="Direct link to max_retries--annotatedint-msgspecmetagt0--none-1">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="retry_delay_initial_ms--annotatedint-msgspecmetagt0--none-1">retry_delay_initial_ms <em>: Annotated[int, msgspec.Meta(gt=0)] | None</em><a href="#retry_delay_initial_ms--annotatedint-msgspecmetagt0--none-1" class="hash-link" aria-label="Direct link to retry_delay_initial_ms--annotatedint-msgspecmetagt0--none-1" title="Direct link to retry_delay_initial_ms--annotatedint-msgspecmetagt0--none-1">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="retry_delay_max_ms--annotatedint-msgspecmetagt0--none-1">retry_delay_max_ms <em>: Annotated[int, msgspec.Meta(gt=0)] | None</em><a href="#retry_delay_max_ms--annotatedint-msgspecmetagt0--none-1" class="hash-link" aria-label="Direct link to retry_delay_max_ms--annotatedint-msgspecmetagt0--none-1" title="Direct link to retry_delay_max_ms--annotatedint-msgspecmetagt0--none-1">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="generate_order_history_from_trades--bool-1">generate_order_history_from_trades <em>: bool</em><a href="#generate_order_history_from_trades--bool-1" class="hash-link" aria-label="Direct link to generate_order_history_from_trades--bool-1" title="Direct link to generate_order_history_from_trades--bool-1">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="log_raw_ws_messages--bool-1">log_raw_ws_messages <em>: bool</em><a href="#log_raw_ws_messages--bool-1" class="hash-link" aria-label="Direct link to log_raw_ws_messages--bool-1" title="Direct link to log_raw_ws_messages--bool-1">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="dict--dictstr-any-3">dict() → dict[str, Any]<a href="#dict--dictstr-any-3" class="hash-link" aria-label="Direct link to dict() → dict[str, Any]" title="Direct link to dict() → dict[str, Any]">​</a></h4>
<p>Return a dictionary representation of the configuration.</p>
<ul>
<li><strong>Return type:</strong>
dict[str, Any]</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="classmethod-fully_qualified_name--str-3"><em>classmethod</em> fully_qualified_name() → str<a href="#classmethod-fully_qualified_name--str-3" class="hash-link" aria-label="Direct link to classmethod-fully_qualified_name--str-3" title="Direct link to classmethod-fully_qualified_name--str-3">​</a></h4>
<p>Return the fully qualified name for the NautilusConfig class.</p>
<ul>
<li><strong>Return type:</strong>
str</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="property-id--str-3"><em>property</em> id <em>: str</em><a href="#property-id--str-3" class="hash-link" aria-label="Direct link to property-id--str-3" title="Direct link to property-id--str-3">​</a></h4>
<p>Return the hashed identifier for the configuration.</p>
<ul>
<li><strong>Return type:</strong>
str</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="instrument_provider--instrumentproviderconfig-3">instrument_provider <em>: <a href="../../config/index.htm#posei_trader.common.config.InstrumentProviderConfig">InstrumentProviderConfig</a></em><a href="#instrument_provider--instrumentproviderconfig-3" class="hash-link" aria-label="Direct link to instrument_provider--instrumentproviderconfig-3" title="Direct link to instrument_provider--instrumentproviderconfig-3">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="json--bytes-3">json() → bytes<a href="#json--bytes-3" class="hash-link" aria-label="Direct link to json() → bytes" title="Direct link to json() → bytes">​</a></h4>
<p>Return serialized JSON encoded bytes.</p>
<ul>
<li><strong>Return type:</strong>
bytes</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="json_primitives--dictstr-any-3">json_primitives() → dict[str, Any]<a href="#json_primitives--dictstr-any-3" class="hash-link" aria-label="Direct link to json_primitives() → dict[str, Any]" title="Direct link to json_primitives() → dict[str, Any]">​</a></h4>
<p>Return a dictionary representation of the configuration with JSON primitive
types as values.</p>
<ul>
<li><strong>Return type:</strong>
dict[str, Any]</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="classmethod-json_schema--dictstr-any-3"><em>classmethod</em> json_schema() → dict[str, Any]<a href="#classmethod-json_schema--dictstr-any-3" class="hash-link" aria-label="Direct link to classmethod-json_schema--dictstr-any-3" title="Direct link to classmethod-json_schema--dictstr-any-3">​</a></h4>
<p>Generate a JSON schema for this configuration class.</p>
<ul>
<li><strong>Return type:</strong>
dict[str, Any]</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="classmethod-parseraw-bytes--str--any-3"><em>classmethod</em> parse(raw: bytes | str) → Any<a href="#classmethod-parseraw-bytes--str--any-3" class="hash-link" aria-label="Direct link to classmethod-parseraw-bytes--str--any-3" title="Direct link to classmethod-parseraw-bytes--str--any-3">​</a></h4>
<p>Return a decoded object of the given cls.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>cls</strong> (<em>type</em>) – The type to decode to.</li>
<li><strong>raw</strong> (<em>bytes</em> <em>or</em> <em>str</em>) – The raw bytes or JSON string to decode.</li>
</ul>
</li>
<li><strong>Return type:</strong>
Any</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="routing--routingconfig-3">routing <em>: <a href="../../config/index.htm#posei_trader.live.config.RoutingConfig">RoutingConfig</a></em><a href="#routing--routingconfig-3" class="hash-link" aria-label="Direct link to routing--routingconfig-3" title="Direct link to routing--routingconfig-3">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="validate--bool-3">validate() → bool<a href="#validate--bool-3" class="hash-link" aria-label="Direct link to validate() → bool" title="Direct link to validate() → bool">​</a></h4>
<p>Return whether the configuration can be represented as valid JSON.</p>
<ul>
<li><strong>Return type:</strong>
bool</li>
</ul>
<h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="factories">Factories<a href="#factories" class="hash-link" aria-label="Direct link to Factories" title="Direct link to Factories">​</a></h2>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="get_polymarket_http_clientapi_key-str--none--none-api_secret-str--none--none-passphrase-str--none--none-base_url-str--none--none-chain_id-int--137-signature_type-int--0-private_key-str--none--none-funder-str--none--none--clobclient-1">get_polymarket_http_client(api_key: str | None = None, api_secret: str | None = None, passphrase: str | None = None, base_url: str | None = None, chain_id: int = 137, signature_type: int = 0, private_key: str | None = None, funder: str | None = None) → ClobClient<a href="#get_polymarket_http_clientapi_key-str--none--none-api_secret-str--none--none-passphrase-str--none--none-base_url-str--none--none-chain_id-int--137-signature_type-int--0-private_key-str--none--none-funder-str--none--none--clobclient-1" class="hash-link" aria-label="Direct link to get_polymarket_http_client(api_key: str | None = None, api_secret: str | None = None, passphrase: str | None = None, base_url: str | None = None, chain_id: int = 137, signature_type: int = 0, private_key: str | None = None, funder: str | None = None) → ClobClient" title="Direct link to get_polymarket_http_client(api_key: str | None = None, api_secret: str | None = None, passphrase: str | None = None, base_url: str | None = None, chain_id: int = 137, signature_type: int = 0, private_key: str | None = None, funder: str | None = None) → ClobClient">​</a></h3>
<p>Cache and return a Polymarket CLOB client.</p>
<p>If a cached client with matching parameters already exists, the cached client will be returned.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>api_key</strong> (<em>str</em> <em>,</em> <em>optional</em>) – The API key for the client.</li>
<li><strong>api_secret</strong> (<em>str</em> <em>,</em> <em>optional</em>) – The API secret for the client.</li>
<li><strong>passphrase</strong> (<em>str</em> <em>,</em> <em>optional</em>) – The passphrase for the client.</li>
<li><strong>base_url</strong> (<em>str</em> <em>,</em> <em>optional</em>) – The base URL for the API endpoints.</li>
<li><strong>chain_id</strong> (<em>int</em> <em>,</em> <em>default POLYGON</em>) – The chain ID for the client.</li>
<li><strong>signature_type</strong> (<em>int</em> <em>,</em> <em>default 0</em> *(*<em>EOA</em> <em>)</em>) – The Polymarket signature type.</li>
<li><strong>private_key</strong> (<em>str</em> <em>,</em> <em>optional</em>) – The private key for the wallet on the <strong>Polygon</strong> network.</li>
<li><strong>funder</strong> (<em>str</em> <em>,</em> <em>optional</em>) – The wallet address (public key) on the <strong>Polygon</strong> network used for funding USDC.</li>
</ul>
</li>
<li><strong>Return type:</strong>
ClobClient</li>
</ul>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="get_polymarket_instrument_providerclient-clobclient-clock-liveclock-config-instrumentproviderconfig--polymarketinstrumentprovider-1">get_polymarket_instrument_provider(client: ClobClient, clock: <a href="../../common/index.htm#posei_trader.common.component.LiveClock">LiveClock</a>, config: <a href="../../config/index.htm#posei_trader.common.config.InstrumentProviderConfig">InstrumentProviderConfig</a>) → <a href="#posei_trader.adapters.polymarket.providers.PolymarketInstrumentProvider">PolymarketInstrumentProvider</a><a href="#get_polymarket_instrument_providerclient-clobclient-clock-liveclock-config-instrumentproviderconfig--polymarketinstrumentprovider-1" class="hash-link" aria-label="Direct link to get_polymarket_instrument_providerclient-clobclient-clock-liveclock-config-instrumentproviderconfig--polymarketinstrumentprovider-1" title="Direct link to get_polymarket_instrument_providerclient-clobclient-clock-liveclock-config-instrumentproviderconfig--polymarketinstrumentprovider-1">​</a></h3>
<p>Cache and return a Polymarket instrument provider.</p>
<p>If a cached provider already exists, then that provider will be returned.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>client</strong> (<em>py_clob_client.client.ClobClient</em>) – The client for the instrument provider.</li>
<li><strong>clock</strong> (<a href="../../common/index.htm#posei_trader.common.component.LiveClock"><em>LiveClock</em></a>) – The clock for the instrument provider.</li>
<li><strong>config</strong> (<a href="../../config/index.htm#posei_trader.common.config.InstrumentProviderConfig"><em>InstrumentProviderConfig</em></a>) – The configuration for the instrument provider.</li>
</ul>
</li>
<li><strong>Return type:</strong>
<a href="#posei_trader.adapters.polymarket.PolymarketInstrumentProvider">PolymarketInstrumentProvider</a></li>
</ul>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="class-polymarketlivedataclientfactory-1"><em>class</em> PolymarketLiveDataClientFactory<a href="#class-polymarketlivedataclientfactory-1" class="hash-link" aria-label="Direct link to class-polymarketlivedataclientfactory-1" title="Direct link to class-polymarketlivedataclientfactory-1">​</a></h3>
<p>Bases: <code>LiveDataClientFactory</code></p>
<p>Provides a Polymarket live data client factory.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="static-createloop-abstracteventloop-name-str-config-polymarketdataclientconfig-msgbus-messagebus-cache-cache-clock-liveclock--polymarketdataclient-1"><em>static</em> create(loop: AbstractEventLoop, name: str, config: <a href="#posei_trader.adapters.polymarket.config.PolymarketDataClientConfig">PolymarketDataClientConfig</a>, msgbus: <a href="../../common/index.htm#posei_trader.common.component.MessageBus">MessageBus</a>, cache: <a href="../../cache/index.htm#posei_trader.cache.cache.Cache">Cache</a>, clock: <a href="../../common/index.htm#posei_trader.common.component.LiveClock">LiveClock</a>) → <a href="#posei_trader.adapters.polymarket.data.PolymarketDataClient">PolymarketDataClient</a><a href="#static-createloop-abstracteventloop-name-str-config-polymarketdataclientconfig-msgbus-messagebus-cache-cache-clock-liveclock--polymarketdataclient-1" class="hash-link" aria-label="Direct link to static-createloop-abstracteventloop-name-str-config-polymarketdataclientconfig-msgbus-messagebus-cache-cache-clock-liveclock--polymarketdataclient-1" title="Direct link to static-createloop-abstracteventloop-name-str-config-polymarketdataclientconfig-msgbus-messagebus-cache-cache-clock-liveclock--polymarketdataclient-1">​</a></h4>
<p>Create a new Polymarket data client.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>loop</strong> (<em>asyncio.AbstractEventLoop</em>) – The event loop for the client.</li>
<li><strong>name</strong> (<em>str</em>) – The custom client ID.</li>
<li><strong>config</strong> (<a href="#posei_trader.adapters.polymarket.PolymarketDataClientConfig"><em>PolymarketDataClientConfig</em></a>) – The client configuration.</li>
<li><strong>msgbus</strong> (<a href="../../common/index.htm#posei_trader.common.component.MessageBus"><em>MessageBus</em></a>) – The message bus for the client.</li>
<li><strong>cache</strong> (<a href="../../cache/index.htm#posei_trader.cache.Cache"><em>Cache</em></a>) – The cache for the client.</li>
<li><strong>clock</strong> (<a href="../../common/index.htm#posei_trader.common.component.LiveClock"><em>LiveClock</em></a>) – The clock for the instrument provider.</li>
</ul>
</li>
<li><strong>Return type:</strong>
<a href="#posei_trader.adapters.polymarket.data.PolymarketDataClient">PolymarketDataClient</a></li>
</ul>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="class-polymarketliveexecclientfactory-1"><em>class</em> PolymarketLiveExecClientFactory<a href="#class-polymarketliveexecclientfactory-1" class="hash-link" aria-label="Direct link to class-polymarketliveexecclientfactory-1" title="Direct link to class-polymarketliveexecclientfactory-1">​</a></h3>
<p>Bases: <code>LiveExecClientFactory</code></p>
<p>Provides a Polymarket live execution client factory.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="static-createloop-abstracteventloop-name-str-config-polymarketexecclientconfig-msgbus-messagebus-cache-cache-clock-liveclock--polymarketexecutionclient-1"><em>static</em> create(loop: AbstractEventLoop, name: str, config: <a href="#posei_trader.adapters.polymarket.config.PolymarketExecClientConfig">PolymarketExecClientConfig</a>, msgbus: <a href="../../common/index.htm#posei_trader.common.component.MessageBus">MessageBus</a>, cache: <a href="../../cache/index.htm#posei_trader.cache.cache.Cache">Cache</a>, clock: <a href="../../common/index.htm#posei_trader.common.component.LiveClock">LiveClock</a>) → <a href="#posei_trader.adapters.polymarket.execution.PolymarketExecutionClient">PolymarketExecutionClient</a><a href="#static-createloop-abstracteventloop-name-str-config-polymarketexecclientconfig-msgbus-messagebus-cache-cache-clock-liveclock--polymarketexecutionclient-1" class="hash-link" aria-label="Direct link to static-createloop-abstracteventloop-name-str-config-polymarketexecclientconfig-msgbus-messagebus-cache-cache-clock-liveclock--polymarketexecutionclient-1" title="Direct link to static-createloop-abstracteventloop-name-str-config-polymarketexecclientconfig-msgbus-messagebus-cache-cache-clock-liveclock--polymarketexecutionclient-1">​</a></h4>
<p>Create a new Polymarket execution client.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>loop</strong> (<em>asyncio.AbstractEventLoop</em>) – The event loop for the client.</li>
<li><strong>name</strong> (<em>str</em>) – The custom client ID.</li>
<li><strong>config</strong> (<a href="#posei_trader.adapters.polymarket.PolymarketExecClientConfig"><em>PolymarketExecClientConfig</em></a>) – The client configuration.</li>
<li><strong>msgbus</strong> (<a href="../../common/index.htm#posei_trader.common.component.MessageBus"><em>MessageBus</em></a>) – The message bus for the client.</li>
<li><strong>cache</strong> (<a href="../../cache/index.htm#posei_trader.cache.Cache"><em>Cache</em></a>) – The cache for the client.</li>
<li><strong>clock</strong> (<a href="../../common/index.htm#posei_trader.common.component.LiveClock"><em>LiveClock</em></a>) – The clock for the instrument provider.</li>
</ul>
</li>
<li><strong>Return type:</strong>
<a href="#posei_trader.adapters.polymarket.execution.PolymarketExecutionClient">PolymarketExecutionClient</a></li>
</ul>
<h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="enums">Enums<a href="#enums" class="hash-link" aria-label="Direct link to Enums" title="Direct link to Enums">​</a></h2>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="class-polymarketsignaturetype"><em>class</em> PolymarketSignatureType<a href="#class-polymarketsignaturetype" class="hash-link" aria-label="Direct link to class-polymarketsignaturetype" title="Direct link to class-polymarketsignaturetype">​</a></h3>
<p>Bases: <code>Enum</code></p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="eoa--0">EOA <em>= 0</em><a href="#eoa--0" class="hash-link" aria-label="Direct link to eoa--0" title="Direct link to eoa--0">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="poly_proxy--1">POLY_PROXY <em>= 1</em><a href="#poly_proxy--1" class="hash-link" aria-label="Direct link to poly_proxy--1" title="Direct link to poly_proxy--1">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="poly_gnosis_safe--2">POLY_GNOSIS_SAFE <em>= 2</em><a href="#poly_gnosis_safe--2" class="hash-link" aria-label="Direct link to poly_gnosis_safe--2" title="Direct link to poly_gnosis_safe--2">​</a></h4>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="class-polymarketorderside"><em>class</em> PolymarketOrderSide<a href="#class-polymarketorderside" class="hash-link" aria-label="Direct link to class-polymarketorderside" title="Direct link to class-polymarketorderside">​</a></h3>
<p>Bases: <code>Enum</code></p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="buy--buy">BUY <em>= &#x27;BUY&#x27;</em><a href="#buy--buy" class="hash-link" aria-label="Direct link to buy--buy" title="Direct link to buy--buy">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="sell--sell">SELL <em>= &#x27;SELL&#x27;</em><a href="#sell--sell" class="hash-link" aria-label="Direct link to sell--sell" title="Direct link to sell--sell">​</a></h4>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="class-polymarketliquidityside"><em>class</em> PolymarketLiquiditySide<a href="#class-polymarketliquidityside" class="hash-link" aria-label="Direct link to class-polymarketliquidityside" title="Direct link to class-polymarketliquidityside">​</a></h3>
<p>Bases: <code>Enum</code></p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="maker--maker">MAKER <em>= &#x27;MAKER&#x27;</em><a href="#maker--maker" class="hash-link" aria-label="Direct link to maker--maker" title="Direct link to maker--maker">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="taker--taker">TAKER <em>= &#x27;TAKER&#x27;</em><a href="#taker--taker" class="hash-link" aria-label="Direct link to taker--taker" title="Direct link to taker--taker">​</a></h4>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="class-polymarketordertype"><em>class</em> PolymarketOrderType<a href="#class-polymarketordertype" class="hash-link" aria-label="Direct link to class-polymarketordertype" title="Direct link to class-polymarketordertype">​</a></h3>
<p>Bases: <code>Enum</code></p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="fok--fok">FOK <em>= &#x27;FOK&#x27;</em><a href="#fok--fok" class="hash-link" aria-label="Direct link to fok--fok" title="Direct link to fok--fok">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="fak--fak">FAK <em>= &#x27;FAK&#x27;</em><a href="#fak--fak" class="hash-link" aria-label="Direct link to fak--fak" title="Direct link to fak--fak">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="gtc--gtc">GTC <em>= &#x27;GTC&#x27;</em><a href="#gtc--gtc" class="hash-link" aria-label="Direct link to gtc--gtc" title="Direct link to gtc--gtc">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="gtd--gtd">GTD <em>= &#x27;GTD&#x27;</em><a href="#gtd--gtd" class="hash-link" aria-label="Direct link to gtd--gtd" title="Direct link to gtd--gtd">​</a></h4>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="class-polymarketeventtype"><em>class</em> PolymarketEventType<a href="#class-polymarketeventtype" class="hash-link" aria-label="Direct link to class-polymarketeventtype" title="Direct link to class-polymarketeventtype">​</a></h3>
<p>Bases: <code>Enum</code></p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="placement--placement">PLACEMENT <em>= &#x27;PLACEMENT&#x27;</em><a href="#placement--placement" class="hash-link" aria-label="Direct link to placement--placement" title="Direct link to placement--placement">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="update--update">UPDATE <em>= &#x27;UPDATE&#x27;</em><a href="#update--update" class="hash-link" aria-label="Direct link to update--update" title="Direct link to update--update">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="cancellation--cancellation">CANCELLATION <em>= &#x27;CANCELLATION&#x27;</em><a href="#cancellation--cancellation" class="hash-link" aria-label="Direct link to cancellation--cancellation" title="Direct link to cancellation--cancellation">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="trade--trade">TRADE <em>= &#x27;TRADE&#x27;</em><a href="#trade--trade" class="hash-link" aria-label="Direct link to trade--trade" title="Direct link to trade--trade">​</a></h4>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="class-polymarketorderstatus"><em>class</em> PolymarketOrderStatus<a href="#class-polymarketorderstatus" class="hash-link" aria-label="Direct link to class-polymarketorderstatus" title="Direct link to class-polymarketorderstatus">​</a></h3>
<p>Bases: <code>Enum</code></p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="invalid--invalid">INVALID <em>= &#x27;INVALID&#x27;</em><a href="#invalid--invalid" class="hash-link" aria-label="Direct link to invalid--invalid" title="Direct link to invalid--invalid">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="live--live">LIVE <em>= &#x27;LIVE&#x27;</em><a href="#live--live" class="hash-link" aria-label="Direct link to live--live" title="Direct link to live--live">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="delayed--delayed">DELAYED <em>= &#x27;DELAYED&#x27;</em><a href="#delayed--delayed" class="hash-link" aria-label="Direct link to delayed--delayed" title="Direct link to delayed--delayed">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="matched--matched">MATCHED <em>= &#x27;MATCHED&#x27;</em><a href="#matched--matched" class="hash-link" aria-label="Direct link to matched--matched" title="Direct link to matched--matched">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="unmatched--unmatched">UNMATCHED <em>= &#x27;UNMATCHED&#x27;</em><a href="#unmatched--unmatched" class="hash-link" aria-label="Direct link to unmatched--unmatched" title="Direct link to unmatched--unmatched">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="canceled--canceled">CANCELED <em>= &#x27;CANCELED&#x27;</em><a href="#canceled--canceled" class="hash-link" aria-label="Direct link to canceled--canceled" title="Direct link to canceled--canceled">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="canceled_market_resolved--canceled_market_resolved">CANCELED_MARKET_RESOLVED <em>= &#x27;CANCELED_MARKET_RESOLVED&#x27;</em><a href="#canceled_market_resolved--canceled_market_resolved" class="hash-link" aria-label="Direct link to canceled_market_resolved--canceled_market_resolved" title="Direct link to canceled_market_resolved--canceled_market_resolved">​</a></h4>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="class-polymarkettradestatus"><em>class</em> PolymarketTradeStatus<a href="#class-polymarkettradestatus" class="hash-link" aria-label="Direct link to class-polymarkettradestatus" title="Direct link to class-polymarkettradestatus">​</a></h3>
<p>Bases: <code>Enum</code></p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="matched--matched-1">MATCHED <em>= &#x27;MATCHED&#x27;</em><a href="#matched--matched-1" class="hash-link" aria-label="Direct link to matched--matched-1" title="Direct link to matched--matched-1">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="mined--mined">MINED <em>= &#x27;MINED&#x27;</em><a href="#mined--mined" class="hash-link" aria-label="Direct link to mined--mined" title="Direct link to mined--mined">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="confirmed--confirmed">CONFIRMED <em>= &#x27;CONFIRMED&#x27;</em><a href="#confirmed--confirmed" class="hash-link" aria-label="Direct link to confirmed--confirmed" title="Direct link to confirmed--confirmed">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="retrying--retrying">RETRYING <em>= &#x27;RETRYING&#x27;</em><a href="#retrying--retrying" class="hash-link" aria-label="Direct link to retrying--retrying" title="Direct link to retrying--retrying">​</a></h4>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="failed--failed">FAILED <em>= &#x27;FAILED&#x27;</em><a href="#failed--failed" class="hash-link" aria-label="Direct link to failed--failed" title="Direct link to failed--failed">​</a></h4>
<h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="providers">Providers<a href="#providers" class="hash-link" aria-label="Direct link to Providers" title="Direct link to Providers">​</a></h2>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="class-polymarketinstrumentprovider-1"><em>class</em> PolymarketInstrumentProvider<a href="#class-polymarketinstrumentprovider-1" class="hash-link" aria-label="Direct link to class-polymarketinstrumentprovider-1" title="Direct link to class-polymarketinstrumentprovider-1">​</a></h3>
<p>Bases: <a href="../../common/index.htm#posei_trader.common.providers.InstrumentProvider"><code>InstrumentProvider</code></a></p>
<p>Provides Nautilus instrument definitions from Polymarket.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>client</strong> (<em>ClobClient</em>) – The Polymarket CLOB HTTP client.</li>
<li><strong>clock</strong> (<a href="../../common/index.htm#posei_trader.common.component.LiveClock"><em>LiveClock</em></a>) – The clock instance.</li>
<li><strong>config</strong> (<a href="../../config/index.htm#posei_trader.common.config.InstrumentProviderConfig"><em>InstrumentProviderConfig</em></a> <em>,</em> <em>optional</em>) – The instrument provider configuration, by default None.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="async-load_all_asyncfilters-dict--none--none--none-1"><em>async</em> load_all_async(filters: dict | None = None) → None<a href="#async-load_all_asyncfilters-dict--none--none--none-1" class="hash-link" aria-label="Direct link to async-load_all_asyncfilters-dict--none--none--none-1" title="Direct link to async-load_all_asyncfilters-dict--none--none--none-1">​</a></h4>
<p>Load the latest instruments into the provider asynchronously, optionally
applying the given filters.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="async-load_ids_asyncinstrument_ids-listinstrumentid-filters-dict--none--none--none-1"><em>async</em> load_ids_async(instrument_ids: list[<a href="../../model/identifiers/index.htm#posei_trader.model.identifiers.InstrumentId">InstrumentId</a>], filters: dict | None = None) → None<a href="#async-load_ids_asyncinstrument_ids-listinstrumentid-filters-dict--none--none--none-1" class="hash-link" aria-label="Direct link to async-load_ids_asyncinstrument_ids-listinstrumentid-filters-dict--none--none--none-1" title="Direct link to async-load_ids_asyncinstrument_ids-listinstrumentid-filters-dict--none--none--none-1">​</a></h4>
<p>Load the instruments for the given IDs into the provider, optionally applying
the given filters.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>instrument_ids</strong> (<em>list</em> <em>[</em><a href="../../model/identifiers/index.htm#posei_trader.model.identifiers.InstrumentId"><em>InstrumentId</em></a> <em>]</em>) – The instrument IDs to load.</li>
<li><strong>filters</strong> (<em>frozendict</em> *[*<em>str</em> <em>,</em> <em>Any</em> <em>] or</em> <em>dict</em> *[*<em>str</em> <em>,</em> <em>Any</em> <em>]</em> <em>,</em> <em>optional</em>) – The venue specific instrument loading filters to apply.</li>
</ul>
</li>
<li><strong>Raises:</strong>
<strong>ValueError</strong> – If any instrument_id.venue is not equal to self.venue.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="async-load_asyncinstrument_id-instrumentid-filters-dict--none--none--none-1"><em>async</em> load_async(instrument_id: <a href="../../model/identifiers/index.htm#posei_trader.model.identifiers.InstrumentId">InstrumentId</a>, filters: dict | None = None) → None<a href="#async-load_asyncinstrument_id-instrumentid-filters-dict--none--none--none-1" class="hash-link" aria-label="Direct link to async-load_asyncinstrument_id-instrumentid-filters-dict--none--none--none-1" title="Direct link to async-load_asyncinstrument_id-instrumentid-filters-dict--none--none--none-1">​</a></h4>
<p>Load the instrument for the given ID into the provider asynchronously,
optionally applying the given filters.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>instrument_id</strong> (<a href="../../model/identifiers/index.htm#posei_trader.model.identifiers.InstrumentId"><em>InstrumentId</em></a>) – The instrument ID to load.</li>
<li><strong>filters</strong> (<em>frozendict</em> *[*<em>str</em> <em>,</em> <em>Any</em> <em>] or</em> <em>dict</em> *[*<em>str</em> <em>,</em> <em>Any</em> <em>]</em> <em>,</em> <em>optional</em>) – The venue specific instrument loading filters to apply.</li>
</ul>
</li>
<li><strong>Raises:</strong>
<strong>ValueError</strong> – If instrument_id.venue is not equal to self.venue.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="addinstrument-instrument--none-1">add(instrument: <a href="../../model/instruments/index.htm#posei_trader.model.instruments.base.Instrument">Instrument</a>) → None<a href="#addinstrument-instrument--none-1" class="hash-link" aria-label="Direct link to addinstrument-instrument--none-1" title="Direct link to addinstrument-instrument--none-1">​</a></h4>
<p>Add the given instrument to the provider.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>instrument</strong> (<a href="../../model/instruments/index.htm#posei_trader.model.instruments.Instrument"><em>Instrument</em></a>) – The instrument to add.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="add_bulkinstruments-listinstrument--none-1">add_bulk(instruments: list[<a href="../../model/instruments/index.htm#posei_trader.model.instruments.base.Instrument">Instrument</a>]) → None<a href="#add_bulkinstruments-listinstrument--none-1" class="hash-link" aria-label="Direct link to add_bulkinstruments-listinstrument--none-1" title="Direct link to add_bulkinstruments-listinstrument--none-1">​</a></h4>
<p>Add the given instruments bulk to the provider.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>instruments</strong> (<em>list</em> <em>[</em><a href="../../model/instruments/index.htm#posei_trader.model.instruments.Instrument"><em>Instrument</em></a> <em>]</em>) – The instruments to add.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="add_currencycurrency-currency--none-1">add_currency(currency: <a href="../../model/objects/index.htm#posei_trader.model.objects.Currency">Currency</a>) → None<a href="#add_currencycurrency-currency--none-1" class="hash-link" aria-label="Direct link to add_currencycurrency-currency--none-1" title="Direct link to add_currencycurrency-currency--none-1">​</a></h4>
<p>Add the given currency to the provider.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>currency</strong> (<a href="../../model/index.htm#posei_trader.model.Currency"><em>Currency</em></a>) – The currency to add.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="property-count--int-1"><em>property</em> count <em>: int</em><a href="#property-count--int-1" class="hash-link" aria-label="Direct link to property-count--int-1" title="Direct link to property-count--int-1">​</a></h4>
<p>Return the count of instruments held by the provider.</p>
<ul>
<li><strong>Return type:</strong>
int</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="currencies--dictstr-currency-1">currencies() → dict[str, <a href="../../model/objects/index.htm#posei_trader.model.objects.Currency">Currency</a>]<a href="#currencies--dictstr-currency-1" class="hash-link" aria-label="Direct link to currencies--dictstr-currency-1" title="Direct link to currencies--dictstr-currency-1">​</a></h4>
<p>Return all currencies held by the instrument provider.</p>
<ul>
<li><strong>Return type:</strong>
dict[str, <a href="../../model/index.htm#posei_trader.model.Currency">Currency</a>]</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="currencycode-str--currency--none-1">currency(code: str) → <a href="../../model/objects/index.htm#posei_trader.model.objects.Currency">Currency</a> | None<a href="#currencycode-str--currency--none-1" class="hash-link" aria-label="Direct link to currencycode-str--currency--none-1" title="Direct link to currencycode-str--currency--none-1">​</a></h4>
<p>Return the currency with the given code (if found).</p>
<ul>
<li><strong>Parameters:</strong>
<strong>code</strong> (<em>str</em>) – The currency code.</li>
<li><strong>Return type:</strong>
Currency or <code>None</code></li>
<li><strong>Raises:</strong>
<strong>ValueError</strong> – If code is not a valid string.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="findinstrument_id-instrumentid--instrument--none-1">find(instrument_id: <a href="../../model/identifiers/index.htm#posei_trader.model.identifiers.InstrumentId">InstrumentId</a>) → <a href="../../model/instruments/index.htm#posei_trader.model.instruments.base.Instrument">Instrument</a> | None<a href="#findinstrument_id-instrumentid--instrument--none-1" class="hash-link" aria-label="Direct link to findinstrument_id-instrumentid--instrument--none-1" title="Direct link to findinstrument_id-instrumentid--instrument--none-1">​</a></h4>
<p>Return the instrument for the given instrument ID (if found).</p>
<ul>
<li><strong>Parameters:</strong>
<strong>instrument_id</strong> (<a href="../../model/identifiers/index.htm#posei_trader.model.identifiers.InstrumentId"><em>InstrumentId</em></a>) – The ID for the instrument</li>
<li><strong>Return type:</strong>
Instrument or <code>None</code></li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="get_all--dictinstrumentid-instrument-1">get_all() → dict[<a href="../../model/identifiers/index.htm#posei_trader.model.identifiers.InstrumentId">InstrumentId</a>, <a href="../../model/instruments/index.htm#posei_trader.model.instruments.base.Instrument">Instrument</a>]<a href="#get_all--dictinstrumentid-instrument-1" class="hash-link" aria-label="Direct link to get_all--dictinstrumentid-instrument-1" title="Direct link to get_all--dictinstrumentid-instrument-1">​</a></h4>
<p>Return all loaded instruments as a map keyed by instrument ID.</p>
<p>If no instruments loaded, will return an empty dict.</p>
<ul>
<li><strong>Return type:</strong>
dict[<a href="../../model/identifiers/index.htm#posei_trader.model.identifiers.InstrumentId">InstrumentId</a>, <a href="../../model/instruments/index.htm#posei_trader.model.instruments.Instrument">Instrument</a>]</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="async-initializereload-bool--false--none-1"><em>async</em> initialize(reload: bool = False) → None<a href="#async-initializereload-bool--false--none-1" class="hash-link" aria-label="Direct link to async-initializereload-bool--false--none-1" title="Direct link to async-initializereload-bool--false--none-1">​</a></h4>
<p>Initialize the instrument provider.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>reload</strong> (<em>bool</em> <em>,</em> <em>default False</em>) – If True, then will always reload instruments.
If False, then will immediately return if already loaded.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="list_all--listinstrument-1">list_all() → list[<a href="../../model/instruments/index.htm#posei_trader.model.instruments.base.Instrument">Instrument</a>]<a href="#list_all--listinstrument-1" class="hash-link" aria-label="Direct link to list_all--listinstrument-1" title="Direct link to list_all--listinstrument-1">​</a></h4>
<p>Return all loaded instruments.</p>
<ul>
<li><strong>Return type:</strong>
list[<a href="../../model/instruments/index.htm#posei_trader.model.instruments.Instrument">Instrument</a>]</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="loadinstrument_id-instrumentid-filters-dict--none--none--none-1">load(instrument_id: <a href="../../model/identifiers/index.htm#posei_trader.model.identifiers.InstrumentId">InstrumentId</a>, filters: dict | None = None) → None<a href="#loadinstrument_id-instrumentid-filters-dict--none--none--none-1" class="hash-link" aria-label="Direct link to loadinstrument_id-instrumentid-filters-dict--none--none--none-1" title="Direct link to loadinstrument_id-instrumentid-filters-dict--none--none--none-1">​</a></h4>
<p>Load the instrument for the given ID into the provider, optionally applying the
given filters.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>instrument_id</strong> (<a href="../../model/identifiers/index.htm#posei_trader.model.identifiers.InstrumentId"><em>InstrumentId</em></a>) – The instrument ID to load.</li>
<li><strong>filters</strong> (<em>frozendict</em> *[*<em>str</em> <em>,</em> <em>Any</em> <em>] or</em> <em>dict</em> *[*<em>str</em> <em>,</em> <em>Any</em> <em>]</em> <em>,</em> <em>optional</em>) – The venue specific instrument loading filters to apply.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="load_allfilters-dict--none--none--none-1">load_all(filters: dict | None = None) → None<a href="#load_allfilters-dict--none--none--none-1" class="hash-link" aria-label="Direct link to load_all(filters: dict | None = None) → None" title="Direct link to load_all(filters: dict | None = None) → None">​</a></h4>
<p>Load the latest instruments into the provider, optionally applying the given
filters.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>filters</strong> (<em>frozendict</em> *[*<em>str</em> <em>,</em> <em>Any</em> <em>] or</em> <em>dict</em> *[*<em>str</em> <em>,</em> <em>Any</em> <em>]</em> <em>,</em> <em>optional</em>) – The venue specific instrument loading filters to apply.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="load_idsinstrument_ids-listinstrumentid-filters-dict--none--none--none-1">load_ids(instrument_ids: list[<a href="../../model/identifiers/index.htm#nautilus_trader.model.identifiers.InstrumentId">InstrumentId</a>], filters: dict | None = None)   → None<a href="#load_idsinstrument_ids-listinstrumentid-filters-dict--none--none--none-1" class="hash-link" aria-label="Direct link to load_idsinstrument_ids-listinstrumentid-filters-dict--none--none--none-1" title="Direct link to load_idsinstrument_ids-listinstrumentid-filters-dict--none--none--none-1">​</a></h4>
<p>Load the instruments for the given IDs into the provider, optionally applying
the given filters.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>instrument_ids</strong> (<em>list</em> <em>[</em><a href="../../model/identifiers/index.htm#nautilus_trader.model.identifiers.InstrumentId"><em>InstrumentId</em></a> <em>]</em>) – The instrument IDs to load.</li>
<li><strong>filters</strong> (<em>frozendict</em> *[*<em>str</em> <em>,</em> <em>Any</em> <em>] or</em> <em>dict</em> *[*<em>str</em> <em>,</em> <em>Any</em> <em>]</em> <em>,</em> <em>optional</em>) – The venue specific instrument loading filters to apply.</li>
</ul>
</li>
</ul>
<h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="data">Data<a href="#data" class="hash-link" aria-label="Direct link to Data" title="Direct link to Data">​</a></h2>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="class-polymarketdataclient"><em>class</em> PolymarketDataClient<a href="#class-polymarketdataclient" class="hash-link" aria-label="Direct link to class-polymarketdataclient" title="Direct link to class-polymarketdataclient">​</a></h3>
<p>Bases: <a href="../../live/index.htm#nautilus_trader.live.data_client.LiveMarketDataClient"><code>LiveMarketDataClient</code></a></p>
<p>Provides a data client for Polymarket, a decentralized predication market.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>loop</strong> (<em>asyncio.AbstractEventLoop</em>) – The event loop for the client.</li>
<li><strong>http_client</strong> (<em>py_clob_client.client.ClobClient</em>) – The Polymarket HTTP client.</li>
<li><strong>msgbus</strong> (<a href="../../common/index.htm#nautilus_trader.common.component.MessageBus"><em>MessageBus</em></a>) – The message bus for the client.</li>
<li><strong>cache</strong> (<a href="../../cache/index.htm#nautilus_trader.cache.Cache"><em>Cache</em></a>) – The cache for the client.</li>
<li><strong>clock</strong> (<a href="../../common/index.htm#nautilus_trader.common.component.LiveClock"><em>LiveClock</em></a>) – The clock for the client.</li>
<li><strong>instrument_provider</strong> (<a href="#nautilus_trader.adapters.polymarket.PolymarketInstrumentProvider"><em>PolymarketInstrumentProvider</em></a>) – The instrument provider.</li>
<li><strong>config</strong> (<a href="#nautilus_trader.adapters.polymarket.PolymarketDataClientConfig"><em>PolymarketDataClientConfig</em></a>) – The configuration for the client.</li>
<li><strong>name</strong> (<em>str</em> <em>,</em> <em>optional</em>) – The custom client ID.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="connect--none">connect() → None<a href="#connect--none" class="hash-link" aria-label="Direct link to connect() → None" title="Direct link to connect() → None">​</a></h4>
<p>Connect the client.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="create_taskcoro-collectionsabccoroutine-log_msg-str--none--none-actions-collectionsabccallable--none--none-success_msg-str--none--none-success_color-nautilus_tradercorerustcommonlogcolor--logcolornormal-0--task--none">create_task(coro: ~collections.abc.Coroutine, log_msg: str | None = None, actions: ~collections.abc.Callable | None = None, success_msg: str | None = None, success_color: ~nautilus_trader.core.rust.common.LogColor = &lt;LogColor.NORMAL: 0&gt;) → Task | None<a href="#create_taskcoro-collectionsabccoroutine-log_msg-str--none--none-actions-collectionsabccallable--none--none-success_msg-str--none--none-success_color-nautilus_tradercorerustcommonlogcolor--logcolornormal-0--task--none" class="hash-link" aria-label="Direct link to create_task(coro: ~collections.abc.Coroutine, log_msg: str | None = None, actions: ~collections.abc.Callable | None = None, success_msg: str | None = None, success_color: ~nautilus_trader.core.rust.common.LogColor = &lt;LogColor.NORMAL: 0&gt;) → Task | None" title="Direct link to create_task(coro: ~collections.abc.Coroutine, log_msg: str | None = None, actions: ~collections.abc.Callable | None = None, success_msg: str | None = None, success_color: ~nautilus_trader.core.rust.common.LogColor = &lt;LogColor.NORMAL: 0&gt;) → Task | None">​</a></h4>
<p>Run the given coroutine with error handling and optional callback actions when
done.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>coro</strong> (<em>Coroutine</em>) – The coroutine to run.</li>
<li><strong>log_msg</strong> (<em>str</em> <em>,</em> <em>optional</em>) – The log message for the task.</li>
<li><strong>actions</strong> (<em>Callable</em> <em>,</em> <em>optional</em>) – The actions callback to run when the coroutine is done.</li>
<li><strong>success_msg</strong> (<em>str</em> <em>,</em> <em>optional</em>) – The log message to write on actions success.</li>
<li><strong>success_color</strong> (LogColor, default <code>NORMAL</code>) – The log message color for actions success.</li>
</ul>
</li>
<li><strong>Return type:</strong>
asyncio.Task</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="degradeself--void">degrade(self) → void<a href="#degradeself--void" class="hash-link" aria-label="Direct link to degrade(self) → void" title="Direct link to degrade(self) → void">​</a></h4>
<p>Degrade the component.</p>
<p>While executing on_degrade() any exception will be logged and reraised, then the component
will remain in a <code>DEGRADING</code> state.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning">WARNING<a href="#warning" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>Do not override.</p>
<p>If the component is not in a valid state from which to execute this method,
then the component state will not change, and an error will be logged.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="disconnect--none">disconnect() → None<a href="#disconnect--none" class="hash-link" aria-label="Direct link to disconnect() → None" title="Direct link to disconnect() → None">​</a></h4>
<p>Disconnect the client.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="disposeself--void">dispose(self) → void<a href="#disposeself--void" class="hash-link" aria-label="Direct link to dispose(self) → void" title="Direct link to dispose(self) → void">​</a></h4>
<p>Dispose of the component.</p>
<p>While executing on_dispose() any exception will be logged and reraised, then the component
will remain in a <code>DISPOSING</code> state.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-1">WARNING<a href="#warning-1" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>Do not override.</p>
<p>If the component is not in a valid state from which to execute this method,
then the component state will not change, and an error will be logged.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="faultself--void">fault(self) → void<a href="#faultself--void" class="hash-link" aria-label="Direct link to fault(self) → void" title="Direct link to fault(self) → void">​</a></h4>
<p>Fault the component.</p>
<p>Calling this method multiple times has the same effect as calling it once (it is idempotent).
Once called, it cannot be reversed, and no other methods should be called on this instance.</p>
<p>While executing on_fault() any exception will be logged and reraised, then the component
will remain in a <code>FAULTING</code> state.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-2">WARNING<a href="#warning-2" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>Do not override.</p>
<p>If the component is not in a valid state from which to execute this method,
then the component state will not change, and an error will be logged.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="classmethod-fully_qualified_namecls--str"><em>classmethod</em> fully_qualified_name(cls) → str<a href="#classmethod-fully_qualified_namecls--str" class="hash-link" aria-label="Direct link to classmethod-fully_qualified_namecls--str" title="Direct link to classmethod-fully_qualified_namecls--str">​</a></h4>
<p>Return the fully qualified name for the components class.</p>
<ul>
<li><strong>Return type:</strong>
str</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="id">id<a href="#id" class="hash-link" aria-label="Direct link to id" title="Direct link to id">​</a></h4>
<p>The components ID.</p>
<ul>
<li><strong>Returns:</strong>
ComponentId</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="is_connected">is_connected<a href="#is_connected" class="hash-link" aria-label="Direct link to is_connected" title="Direct link to is_connected">​</a></h4>
<p>If the client is connected.</p>
<ul>
<li><strong>Returns:</strong>
bool</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="is_degraded">is_degraded<a href="#is_degraded" class="hash-link" aria-label="Direct link to is_degraded" title="Direct link to is_degraded">​</a></h4>
<p>bool</p>
<p>Return whether the current component state is <code>DEGRADED</code>.</p>
<ul>
<li><strong>Return type:</strong>
bool</li>
<li><strong>Type:</strong>
Component.is_degraded</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="is_disposed">is_disposed<a href="#is_disposed" class="hash-link" aria-label="Direct link to is_disposed" title="Direct link to is_disposed">​</a></h4>
<p>bool</p>
<p>Return whether the current component state is <code>DISPOSED</code>.</p>
<ul>
<li><strong>Return type:</strong>
bool</li>
<li><strong>Type:</strong>
Component.is_disposed</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="is_faulted">is_faulted<a href="#is_faulted" class="hash-link" aria-label="Direct link to is_faulted" title="Direct link to is_faulted">​</a></h4>
<p>bool</p>
<p>Return whether the current component state is <code>FAULTED</code>.</p>
<ul>
<li><strong>Return type:</strong>
bool</li>
<li><strong>Type:</strong>
Component.is_faulted</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="is_initialized">is_initialized<a href="#is_initialized" class="hash-link" aria-label="Direct link to is_initialized" title="Direct link to is_initialized">​</a></h4>
<p>bool</p>
<p>Return whether the component has been initialized (component.state &gt;= <code>INITIALIZED</code>).</p>
<ul>
<li><strong>Return type:</strong>
bool</li>
<li><strong>Type:</strong>
Component.is_initialized</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="is_running">is_running<a href="#is_running" class="hash-link" aria-label="Direct link to is_running" title="Direct link to is_running">​</a></h4>
<p>bool</p>
<p>Return whether the current component state is <code>RUNNING</code>.</p>
<ul>
<li><strong>Return type:</strong>
bool</li>
<li><strong>Type:</strong>
Component.is_running</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="is_stopped">is_stopped<a href="#is_stopped" class="hash-link" aria-label="Direct link to is_stopped" title="Direct link to is_stopped">​</a></h4>
<p>bool</p>
<p>Return whether the current component state is <code>STOPPED</code>.</p>
<ul>
<li><strong>Return type:</strong>
bool</li>
<li><strong>Type:</strong>
Component.is_stopped</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="requestself-requestdata-request--void">request(self, RequestData request) → void<a href="#requestself-requestdata-request--void" class="hash-link" aria-label="Direct link to request(self, RequestData request) → void" title="Direct link to request(self, RequestData request) → void">​</a></h4>
<p>Request data for the given data type.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>request</strong> (<a href="../../data/index.htm#nautilus_trader.data.messages.RequestData"><em>RequestData</em></a>) – The message for the data request.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="request_barsself-requestbars-request--void">request_bars(self, RequestBars request) → void<a href="#request_barsself-requestbars-request--void" class="hash-link" aria-label="Direct link to request_bars(self, RequestBars request) → void" title="Direct link to request_bars(self, RequestBars request) → void">​</a></h4>
<p>Request historical Bar data. To load historical data from a catalog, you can pass a list[DataCatalogConfig] to the TradingNodeConfig or the BacktestEngineConfig.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>request</strong> (<a href="../../data/index.htm#nautilus_trader.data.messages.RequestBars"><em>RequestBars</em></a>) – The message for the data request.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="request_instrumentself-requestinstrument-request--void">request_instrument(self, RequestInstrument request) → void<a href="#request_instrumentself-requestinstrument-request--void" class="hash-link" aria-label="Direct link to request_instrument(self, RequestInstrument request) → void" title="Direct link to request_instrument(self, RequestInstrument request) → void">​</a></h4>
<p>Request Instrument data for the given instrument ID.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>request</strong> (<a href="../../data/index.htm#nautilus_trader.data.messages.RequestInstrument"><em>RequestInstrument</em></a>) – The message for the data request.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="request_instrumentsself-requestinstruments-request--void">request_instruments(self, RequestInstruments request) → void<a href="#request_instrumentsself-requestinstruments-request--void" class="hash-link" aria-label="Direct link to request_instruments(self, RequestInstruments request) → void" title="Direct link to request_instruments(self, RequestInstruments request) → void">​</a></h4>
<p>Request all Instrument data for the given venue.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>request</strong> (<a href="../../data/index.htm#nautilus_trader.data.messages.RequestInstruments"><em>RequestInstruments</em></a>) – The message for the data request.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="request_order_book_snapshotself-requestorderbooksnapshot-request--void">request_order_book_snapshot(self, RequestOrderBookSnapshot request) → void<a href="#request_order_book_snapshotself-requestorderbooksnapshot-request--void" class="hash-link" aria-label="Direct link to request_order_book_snapshot(self, RequestOrderBookSnapshot request) → void" title="Direct link to request_order_book_snapshot(self, RequestOrderBookSnapshot request) → void">​</a></h4>
<p>Request order book snapshot data.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>request</strong> (<a href="../../data/index.htm#nautilus_trader.data.messages.RequestOrderBookSnapshot"><em>RequestOrderBookSnapshot</em></a>) – The message for the data request.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="request_quote_ticksself-requestquoteticks-request--void">request_quote_ticks(self, RequestQuoteTicks request) → void<a href="#request_quote_ticksself-requestquoteticks-request--void" class="hash-link" aria-label="Direct link to request_quote_ticks(self, RequestQuoteTicks request) → void" title="Direct link to request_quote_ticks(self, RequestQuoteTicks request) → void">​</a></h4>
<p>Request historical QuoteTick data.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>request</strong> (<a href="../../data/index.htm#nautilus_trader.data.messages.RequestQuoteTicks"><em>RequestQuoteTicks</em></a>) – The message for the data request.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="request_trade_ticksself-requesttradeticks-request--void">request_trade_ticks(self, RequestTradeTicks request) → void<a href="#request_trade_ticksself-requesttradeticks-request--void" class="hash-link" aria-label="Direct link to request_trade_ticks(self, RequestTradeTicks request) → void" title="Direct link to request_trade_ticks(self, RequestTradeTicks request) → void">​</a></h4>
<p>Request historical TradeTick data.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>request</strong> (<a href="../../data/index.htm#nautilus_trader.data.messages.RequestTradeTicks"><em>RequestTradeTicks</em></a>) – The message for the data request.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="resetself--void">reset(self) → void<a href="#resetself--void" class="hash-link" aria-label="Direct link to reset(self) → void" title="Direct link to reset(self) → void">​</a></h4>
<p>Reset the component.</p>
<p>All stateful fields are reset to their initial value.</p>
<p>While executing on_reset() any exception will be logged and reraised, then the component
will remain in a <code>RESETTING</code> state.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-3">WARNING<a href="#warning-3" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>Do not override.</p>
<p>If the component is not in a valid state from which to execute this method,
then the component state will not change, and an error will be logged.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="resumeself--void">resume(self) → void<a href="#resumeself--void" class="hash-link" aria-label="Direct link to resume(self) → void" title="Direct link to resume(self) → void">​</a></h4>
<p>Resume the component.</p>
<p>While executing on_resume() any exception will be logged and reraised, then the component
will remain in a <code>RESUMING</code> state.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-4">WARNING<a href="#warning-4" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>Do not override.</p>
<p>If the component is not in a valid state from which to execute this method,
then the component state will not change, and an error will be logged.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="async-run_after_delaydelay-float-coro-coroutine--none"><em>async</em> run_after_delay(delay: float, coro: Coroutine) → None<a href="#async-run_after_delaydelay-float-coro-coroutine--none" class="hash-link" aria-label="Direct link to async-run_after_delaydelay-float-coro-coroutine--none" title="Direct link to async-run_after_delaydelay-float-coro-coroutine--none">​</a></h4>
<p>Run the given coroutine after a delay.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>delay</strong> (<em>float</em>) – The delay (seconds) before running the coroutine.</li>
<li><strong>coro</strong> (<em>Coroutine</em>) – The coroutine to run after the initial delay.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="shutdown_systemself-str-reasonnone--void">shutdown_system(self, str reason=None) → void<a href="#shutdown_systemself-str-reasonnone--void" class="hash-link" aria-label="Direct link to shutdown_system(self, str reason=None) → void" title="Direct link to shutdown_system(self, str reason=None) → void">​</a></h4>
<p>Initiate a system-wide shutdown by generating and publishing a ShutdownSystem command.</p>
<p>The command is handled by the system’s NautilusKernel, which will invoke either stop (synchronously)
or stop_async (asynchronously) depending on the execution context and the presence of an active event loop.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>reason</strong> (<em>str</em> <em>,</em> <em>optional</em>) – The reason for issuing the shutdown command.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="startself--void">start(self) → void<a href="#startself--void" class="hash-link" aria-label="Direct link to start(self) → void" title="Direct link to start(self) → void">​</a></h4>
<p>Start the component.</p>
<p>While executing on_start() any exception will be logged and reraised, then the component
will remain in a <code>STARTING</code> state.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-5">WARNING<a href="#warning-5" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>Do not override.</p>
<p>If the component is not in a valid state from which to execute this method,
then the component state will not change, and an error will be logged.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="state">state<a href="#state" class="hash-link" aria-label="Direct link to state" title="Direct link to state">​</a></h4>
<p>ComponentState</p>
<p>Return the components current state.</p>
<ul>
<li><strong>Return type:</strong>
ComponentState</li>
<li><strong>Type:</strong>
Component.state</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="stopself--void">stop(self) → void<a href="#stopself--void" class="hash-link" aria-label="Direct link to stop(self) → void" title="Direct link to stop(self) → void">​</a></h4>
<p>Stop the component.</p>
<p>While executing on_stop() any exception will be logged and reraised, then the component
will remain in a <code>STOPPING</code> state.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-6">WARNING<a href="#warning-6" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>Do not override.</p>
<p>If the component is not in a valid state from which to execute this method,
then the component state will not change, and an error will be logged.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="subscribeself-subscribedata-command--void">subscribe(self, SubscribeData command) → void<a href="#subscribeself-subscribedata-command--void" class="hash-link" aria-label="Direct link to subscribe(self, SubscribeData command) → void" title="Direct link to subscribe(self, SubscribeData command) → void">​</a></h4>
<p>Subscribe to data for the given data type.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>data_type</strong> (<a href="../../model/data/index.htm#nautilus_trader.model.data.DataType"><em>DataType</em></a>) – The data type for the subscription.</li>
<li><strong>params</strong> (<em>dict</em> *[*<em>str</em> <em>,</em> <em>Any</em> <em>]</em> <em>,</em> <em>optional</em>) – Additional params for the subscription.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="subscribe_barsself-subscribebars-command--void">subscribe_bars(self, SubscribeBars command) → void<a href="#subscribe_barsself-subscribebars-command--void" class="hash-link" aria-label="Direct link to subscribe_bars(self, SubscribeBars command) → void" title="Direct link to subscribe_bars(self, SubscribeBars command) → void">​</a></h4>
<p>Subscribe to Bar data for the given bar type.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>bar_type</strong> (<a href="../../model/data/index.htm#nautilus_trader.model.data.BarType"><em>BarType</em></a>) – The bar type to subscribe to.</li>
<li><strong>params</strong> (<em>dict</em> *[*<em>str</em> <em>,</em> <em>Any</em> <em>]</em> <em>,</em> <em>optional</em>) – Additional params for the subscription.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="subscribe_index_pricesself-subscribeindexprices-command--void">subscribe_index_prices(self, SubscribeIndexPrices command) → void<a href="#subscribe_index_pricesself-subscribeindexprices-command--void" class="hash-link" aria-label="Direct link to subscribe_index_prices(self, SubscribeIndexPrices command) → void" title="Direct link to subscribe_index_prices(self, SubscribeIndexPrices command) → void">​</a></h4>
<p>Subscribe to IndexPriceUpdate data for the given instrument ID.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>instrument_id</strong> (<a href="../../model/identifiers/index.htm#nautilus_trader.model.identifiers.InstrumentId"><em>InstrumentId</em></a>) – The instrument to subscribe to.</li>
<li><strong>params</strong> (<em>dict</em> *[*<em>str</em> <em>,</em> <em>Any</em> <em>]</em> <em>,</em> <em>optional</em>) – Additional params for the subscription.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="subscribe_instrumentself-subscribeinstrument-command--void">subscribe_instrument(self, SubscribeInstrument command) → void<a href="#subscribe_instrumentself-subscribeinstrument-command--void" class="hash-link" aria-label="Direct link to subscribe_instrument(self, SubscribeInstrument command) → void" title="Direct link to subscribe_instrument(self, SubscribeInstrument command) → void">​</a></h4>
<p>Subscribe to the Instrument with the given instrument ID.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>params</strong> (<em>dict</em> *[*<em>str</em> <em>,</em> <em>Any</em> <em>]</em> <em>,</em> <em>optional</em>) – Additional params for the subscription.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="subscribe_instrument_closeself-subscribeinstrumentclose-command--void">subscribe_instrument_close(self, SubscribeInstrumentClose command) → void<a href="#subscribe_instrument_closeself-subscribeinstrumentclose-command--void" class="hash-link" aria-label="Direct link to subscribe_instrument_close(self, SubscribeInstrumentClose command) → void" title="Direct link to subscribe_instrument_close(self, SubscribeInstrumentClose command) → void">​</a></h4>
<p>Subscribe to InstrumentClose updates for the given instrument ID.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>instrument_id</strong> (<a href="../../model/identifiers/index.htm#nautilus_trader.model.identifiers.InstrumentId"><em>InstrumentId</em></a>) – The tick instrument to subscribe to.</li>
<li><strong>params</strong> (<em>dict</em> *[*<em>str</em> <em>,</em> <em>Any</em> <em>]</em> <em>,</em> <em>optional</em>) – Additional params for the subscription.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="subscribe_instrument_statusself-subscribeinstrumentstatus-command--void">subscribe_instrument_status(self, SubscribeInstrumentStatus command) → void<a href="#subscribe_instrument_statusself-subscribeinstrumentstatus-command--void" class="hash-link" aria-label="Direct link to subscribe_instrument_status(self, SubscribeInstrumentStatus command) → void" title="Direct link to subscribe_instrument_status(self, SubscribeInstrumentStatus command) → void">​</a></h4>
<p>Subscribe to InstrumentStatus data for the given instrument ID.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>instrument_id</strong> (<a href="../../model/identifiers/index.htm#nautilus_trader.model.identifiers.InstrumentId"><em>InstrumentId</em></a>) – The tick instrument to subscribe to.</li>
<li><strong>params</strong> (<em>dict</em> *[*<em>str</em> <em>,</em> <em>Any</em> <em>]</em> <em>,</em> <em>optional</em>) – Additional params for the subscription.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="subscribe_instrumentsself-subscribeinstruments-command--void">subscribe_instruments(self, SubscribeInstruments command) → void<a href="#subscribe_instrumentsself-subscribeinstruments-command--void" class="hash-link" aria-label="Direct link to subscribe_instruments(self, SubscribeInstruments command) → void" title="Direct link to subscribe_instruments(self, SubscribeInstruments command) → void">​</a></h4>
<p>Subscribe to all Instrument data.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>params</strong> (<em>dict</em> *[*<em>str</em> <em>,</em> <em>Any</em> <em>]</em> <em>,</em> <em>optional</em>) – Additional params for the subscription.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="subscribe_mark_pricesself-subscribemarkprices-command--void">subscribe_mark_prices(self, SubscribeMarkPrices command) → void<a href="#subscribe_mark_pricesself-subscribemarkprices-command--void" class="hash-link" aria-label="Direct link to subscribe_mark_prices(self, SubscribeMarkPrices command) → void" title="Direct link to subscribe_mark_prices(self, SubscribeMarkPrices command) → void">​</a></h4>
<p>Subscribe to MarkPriceUpdate data for the given instrument ID.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>instrument_id</strong> (<a href="../../model/identifiers/index.htm#nautilus_trader.model.identifiers.InstrumentId"><em>InstrumentId</em></a>) – The instrument to subscribe to.</li>
<li><strong>params</strong> (<em>dict</em> *[*<em>str</em> <em>,</em> <em>Any</em> <em>]</em> <em>,</em> <em>optional</em>) – Additional params for the subscription.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="subscribe_order_book_deltasself-subscribeorderbook-command--void">subscribe_order_book_deltas(self, SubscribeOrderBook command) → void<a href="#subscribe_order_book_deltasself-subscribeorderbook-command--void" class="hash-link" aria-label="Direct link to subscribe_order_book_deltas(self, SubscribeOrderBook command) → void" title="Direct link to subscribe_order_book_deltas(self, SubscribeOrderBook command) → void">​</a></h4>
<p>Subscribe to OrderBookDeltas data for the given instrument ID.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>instrument_id</strong> (<a href="../../model/identifiers/index.htm#nautilus_trader.model.identifiers.InstrumentId"><em>InstrumentId</em></a>) – The order book instrument to subscribe to.</li>
<li><strong>book_type</strong> (BookType {<code>L1_MBP</code>, <code>L2_MBP</code>, <code>L3_MBO</code>}) – The order book type.</li>
<li><strong>depth</strong> (<em>int</em> <em>,</em> <em>optional</em> <em>,</em> <em>default None</em>) – The maximum depth for the subscription.</li>
<li><strong>params</strong> (<em>dict</em> *[*<em>str</em> <em>,</em> <em>Any</em> <em>]</em> <em>,</em> <em>optional</em>) – Additional params for the subscription.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="subscribe_order_book_snapshotsself-subscribeorderbook-command--void">subscribe_order_book_snapshots(self, SubscribeOrderBook command) → void<a href="#subscribe_order_book_snapshotsself-subscribeorderbook-command--void" class="hash-link" aria-label="Direct link to subscribe_order_book_snapshots(self, SubscribeOrderBook command) → void" title="Direct link to subscribe_order_book_snapshots(self, SubscribeOrderBook command) → void">​</a></h4>
<p>Subscribe to OrderBook snapshots data for the given instrument ID.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>instrument_id</strong> (<a href="../../model/identifiers/index.htm#nautilus_trader.model.identifiers.InstrumentId"><em>InstrumentId</em></a>) – The order book instrument to subscribe to.</li>
<li><strong>book_type</strong> (BookType {<code>L1_MBP</code>, <code>L2_MBP</code>, <code>L3_MBO</code>}) – The order book level.</li>
<li><strong>depth</strong> (<em>int</em> <em>,</em> <em>optional</em>) – The maximum depth for the order book. A depth of 0 is maximum depth.</li>
<li><strong>params</strong> (<em>dict</em> *[*<em>str</em> <em>,</em> <em>Any</em> <em>]</em> <em>,</em> <em>optional</em>) – Additional params for the subscription.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="subscribe_quote_ticksself-subscribequoteticks-command--void">subscribe_quote_ticks(self, SubscribeQuoteTicks command) → void<a href="#subscribe_quote_ticksself-subscribequoteticks-command--void" class="hash-link" aria-label="Direct link to subscribe_quote_ticks(self, SubscribeQuoteTicks command) → void" title="Direct link to subscribe_quote_ticks(self, SubscribeQuoteTicks command) → void">​</a></h4>
<p>Subscribe to QuoteTick data for the given instrument ID.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>instrument_id</strong> (<a href="../../model/identifiers/index.htm#nautilus_trader.model.identifiers.InstrumentId"><em>InstrumentId</em></a>) – The tick instrument to subscribe to.</li>
<li><strong>params</strong> (<em>dict</em> *[*<em>str</em> <em>,</em> <em>Any</em> <em>]</em> <em>,</em> <em>optional</em>) – Additional params for the subscription.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="subscribe_trade_ticksself-subscribetradeticks-command--void">subscribe_trade_ticks(self, SubscribeTradeTicks command) → void<a href="#subscribe_trade_ticksself-subscribetradeticks-command--void" class="hash-link" aria-label="Direct link to subscribe_trade_ticks(self, SubscribeTradeTicks command) → void" title="Direct link to subscribe_trade_ticks(self, SubscribeTradeTicks command) → void">​</a></h4>
<p>Subscribe to TradeTick data for the given instrument ID.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>instrument_id</strong> (<a href="../../model/identifiers/index.htm#nautilus_trader.model.identifiers.InstrumentId"><em>InstrumentId</em></a>) – The tick instrument to subscribe to.</li>
<li><strong>params</strong> (<em>dict</em> *[*<em>str</em> <em>,</em> <em>Any</em> <em>]</em> <em>,</em> <em>optional</em>) – Additional params for the subscription.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="subscribed_barsself--list">subscribed_bars(self) → list<a href="#subscribed_barsself--list" class="hash-link" aria-label="Direct link to subscribed_bars(self) → list" title="Direct link to subscribed_bars(self) → list">​</a></h4>
<p>Return the bar types subscribed to.</p>
<ul>
<li><strong>Return type:</strong>
list[<a href="../../model/data/index.htm#nautilus_trader.model.data.BarType">BarType</a>]</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="subscribed_custom_dataself--list">subscribed_custom_data(self) → list<a href="#subscribed_custom_dataself--list" class="hash-link" aria-label="Direct link to subscribed_custom_data(self) → list" title="Direct link to subscribed_custom_data(self) → list">​</a></h4>
<p>Return the custom data types subscribed to.</p>
<ul>
<li><strong>Return type:</strong>
list[<a href="../../model/data/index.htm#nautilus_trader.model.data.DataType">DataType</a>]</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="subscribed_index_pricesself--list">subscribed_index_prices(self) → list<a href="#subscribed_index_pricesself--list" class="hash-link" aria-label="Direct link to subscribed_index_prices(self) → list" title="Direct link to subscribed_index_prices(self) → list">​</a></h4>
<p>Return the index price update instruments subscribed to.</p>
<ul>
<li><strong>Return type:</strong>
list[<a href="../../model/identifiers/index.htm#nautilus_trader.model.identifiers.InstrumentId">InstrumentId</a>]</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="subscribed_instrument_closeself--list">subscribed_instrument_close(self) → list<a href="#subscribed_instrument_closeself--list" class="hash-link" aria-label="Direct link to subscribed_instrument_close(self) → list" title="Direct link to subscribed_instrument_close(self) → list">​</a></h4>
<p>Return the instrument closes subscribed to.</p>
<ul>
<li><strong>Return type:</strong>
list[<a href="../../model/identifiers/index.htm#nautilus_trader.model.identifiers.InstrumentId">InstrumentId</a>]</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="subscribed_instrument_statusself--list">subscribed_instrument_status(self) → list<a href="#subscribed_instrument_statusself--list" class="hash-link" aria-label="Direct link to subscribed_instrument_status(self) → list" title="Direct link to subscribed_instrument_status(self) → list">​</a></h4>
<p>Return the status update instruments subscribed to.</p>
<ul>
<li><strong>Return type:</strong>
list[<a href="../../model/identifiers/index.htm#nautilus_trader.model.identifiers.InstrumentId">InstrumentId</a>]</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="subscribed_instrumentsself--list">subscribed_instruments(self) → list<a href="#subscribed_instrumentsself--list" class="hash-link" aria-label="Direct link to subscribed_instruments(self) → list" title="Direct link to subscribed_instruments(self) → list">​</a></h4>
<p>Return the instruments subscribed to.</p>
<ul>
<li><strong>Return type:</strong>
list[<a href="../../model/identifiers/index.htm#nautilus_trader.model.identifiers.InstrumentId">InstrumentId</a>]</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="subscribed_mark_pricesself--list">subscribed_mark_prices(self) → list<a href="#subscribed_mark_pricesself--list" class="hash-link" aria-label="Direct link to subscribed_mark_prices(self) → list" title="Direct link to subscribed_mark_prices(self) → list">​</a></h4>
<p>Return the mark price update instruments subscribed to.</p>
<ul>
<li><strong>Return type:</strong>
list[<a href="../../model/identifiers/index.htm#nautilus_trader.model.identifiers.InstrumentId">InstrumentId</a>]</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="subscribed_order_book_deltasself--list">subscribed_order_book_deltas(self) → list<a href="#subscribed_order_book_deltasself--list" class="hash-link" aria-label="Direct link to subscribed_order_book_deltas(self) → list" title="Direct link to subscribed_order_book_deltas(self) → list">​</a></h4>
<p>Return the order book delta instruments subscribed to.</p>
<ul>
<li><strong>Return type:</strong>
list[<a href="../../model/identifiers/index.htm#nautilus_trader.model.identifiers.InstrumentId">InstrumentId</a>]</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="subscribed_order_book_snapshotsself--list">subscribed_order_book_snapshots(self) → list<a href="#subscribed_order_book_snapshotsself--list" class="hash-link" aria-label="Direct link to subscribed_order_book_snapshots(self) → list" title="Direct link to subscribed_order_book_snapshots(self) → list">​</a></h4>
<p>Return the order book snapshot instruments subscribed to.</p>
<ul>
<li><strong>Return type:</strong>
list[<a href="../../model/identifiers/index.htm#nautilus_trader.model.identifiers.InstrumentId">InstrumentId</a>]</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="subscribed_quote_ticksself--list">subscribed_quote_ticks(self) → list<a href="#subscribed_quote_ticksself--list" class="hash-link" aria-label="Direct link to subscribed_quote_ticks(self) → list" title="Direct link to subscribed_quote_ticks(self) → list">​</a></h4>
<p>Return the quote tick instruments subscribed to.</p>
<ul>
<li><strong>Return type:</strong>
list[<a href="../../model/identifiers/index.htm#nautilus_trader.model.identifiers.InstrumentId">InstrumentId</a>]</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="subscribed_trade_ticksself--list">subscribed_trade_ticks(self) → list<a href="#subscribed_trade_ticksself--list" class="hash-link" aria-label="Direct link to subscribed_trade_ticks(self) → list" title="Direct link to subscribed_trade_ticks(self) → list">​</a></h4>
<p>Return the trade tick instruments subscribed to.</p>
<ul>
<li><strong>Return type:</strong>
list[<a href="../../model/identifiers/index.htm#nautilus_trader.model.identifiers.InstrumentId">InstrumentId</a>]</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="trader_id">trader_id<a href="#trader_id" class="hash-link" aria-label="Direct link to trader_id" title="Direct link to trader_id">​</a></h4>
<p>The trader ID associated with the component.</p>
<ul>
<li><strong>Returns:</strong>
TraderId</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="type">type<a href="#type" class="hash-link" aria-label="Direct link to type" title="Direct link to type">​</a></h4>
<p>The components type.</p>
<ul>
<li><strong>Returns:</strong>
type</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="unsubscribeself-unsubscribedata-command--void">unsubscribe(self, UnsubscribeData command) → void<a href="#unsubscribeself-unsubscribedata-command--void" class="hash-link" aria-label="Direct link to unsubscribe(self, UnsubscribeData command) → void" title="Direct link to unsubscribe(self, UnsubscribeData command) → void">​</a></h4>
<p>Unsubscribe from data for the given data type.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>data_type</strong> (<a href="../../model/data/index.htm#nautilus_trader.model.data.DataType"><em>DataType</em></a>) – The data type for the subscription.</li>
<li><strong>params</strong> (<em>dict</em> *[*<em>str</em> <em>,</em> <em>Any</em> <em>]</em> <em>,</em> <em>optional</em>) – Additional params for the subscription.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="unsubscribe_barsself-unsubscribebars-command--void">unsubscribe_bars(self, UnsubscribeBars command) → void<a href="#unsubscribe_barsself-unsubscribebars-command--void" class="hash-link" aria-label="Direct link to unsubscribe_bars(self, UnsubscribeBars command) → void" title="Direct link to unsubscribe_bars(self, UnsubscribeBars command) → void">​</a></h4>
<p>Unsubscribe from Bar data for the given bar type.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>bar_type</strong> (<a href="../../model/data/index.htm#nautilus_trader.model.data.BarType"><em>BarType</em></a>) – The bar type to unsubscribe from.</li>
<li><strong>params</strong> (<em>dict</em> *[*<em>str</em> <em>,</em> <em>Any</em> <em>]</em> <em>,</em> <em>optional</em>) – Additional params for the subscription.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="unsubscribe_index_pricesself-unsubscribeindexprices-command--void">unsubscribe_index_prices(self, UnsubscribeIndexPrices command) → void<a href="#unsubscribe_index_pricesself-unsubscribeindexprices-command--void" class="hash-link" aria-label="Direct link to unsubscribe_index_prices(self, UnsubscribeIndexPrices command) → void" title="Direct link to unsubscribe_index_prices(self, UnsubscribeIndexPrices command) → void">​</a></h4>
<p>Unsubscribe from IndexPriceUpdate data for the given instrument ID.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>instrument_id</strong> (<a href="../../model/identifiers/index.htm#nautilus_trader.model.identifiers.InstrumentId"><em>InstrumentId</em></a>) – The instrument to subscribe to.</li>
<li><strong>params</strong> (<em>dict</em> *[*<em>str</em> <em>,</em> <em>Any</em> <em>]</em> <em>,</em> <em>optional</em>) – Additional params for the subscription.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="unsubscribe_instrumentself-unsubscribeinstrument-command--void">unsubscribe_instrument(self, UnsubscribeInstrument command) → void<a href="#unsubscribe_instrumentself-unsubscribeinstrument-command--void" class="hash-link" aria-label="Direct link to unsubscribe_instrument(self, UnsubscribeInstrument command) → void" title="Direct link to unsubscribe_instrument(self, UnsubscribeInstrument command) → void">​</a></h4>
<p>Unsubscribe from Instrument data for the given instrument ID.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>instrument_id</strong> (<a href="../../model/identifiers/index.htm#nautilus_trader.model.identifiers.InstrumentId"><em>InstrumentId</em></a>) – The instrument to unsubscribe from.</li>
<li><strong>params</strong> (<em>dict</em> *[*<em>str</em> <em>,</em> <em>Any</em> <em>]</em> <em>,</em> <em>optional</em>) – Additional params for the subscription.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="unsubscribe_instrument_closeself-unsubscribeinstrumentclose-command--void">unsubscribe_instrument_close(self, UnsubscribeInstrumentClose command) → void<a href="#unsubscribe_instrument_closeself-unsubscribeinstrumentclose-command--void" class="hash-link" aria-label="Direct link to unsubscribe_instrument_close(self, UnsubscribeInstrumentClose command) → void" title="Direct link to unsubscribe_instrument_close(self, UnsubscribeInstrumentClose command) → void">​</a></h4>
<p>Unsubscribe from InstrumentClose data for the given instrument ID.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>instrument_id</strong> (<a href="../../model/identifiers/index.htm#nautilus_trader.model.identifiers.InstrumentId"><em>InstrumentId</em></a>) – The tick instrument to unsubscribe from.</li>
<li><strong>params</strong> (<em>dict</em> *[*<em>str</em> <em>,</em> <em>Any</em> <em>]</em> <em>,</em> <em>optional</em>) – Additional params for the subscription.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="unsubscribe_instrument_statusself-unsubscribeinstrumentstatus-command--void">unsubscribe_instrument_status(self, UnsubscribeInstrumentStatus command) → void<a href="#unsubscribe_instrument_statusself-unsubscribeinstrumentstatus-command--void" class="hash-link" aria-label="Direct link to unsubscribe_instrument_status(self, UnsubscribeInstrumentStatus command) → void" title="Direct link to unsubscribe_instrument_status(self, UnsubscribeInstrumentStatus command) → void">​</a></h4>
<p>Unsubscribe from InstrumentStatus data for the given instrument ID.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>instrument_id</strong> (<a href="../../model/identifiers/index.htm#nautilus_trader.model.identifiers.InstrumentId"><em>InstrumentId</em></a>) – The instrument status updates to unsubscribe from.</li>
<li><strong>params</strong> (<em>dict</em> *[*<em>str</em> <em>,</em> <em>Any</em> <em>]</em> <em>,</em> <em>optional</em>) – Additional params for the subscription.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="unsubscribe_instrumentsself-unsubscribeinstruments-command--void">unsubscribe_instruments(self, UnsubscribeInstruments command) → void<a href="#unsubscribe_instrumentsself-unsubscribeinstruments-command--void" class="hash-link" aria-label="Direct link to unsubscribe_instruments(self, UnsubscribeInstruments command) → void" title="Direct link to unsubscribe_instruments(self, UnsubscribeInstruments command) → void">​</a></h4>
<p>Unsubscribe from all Instrument data.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>params</strong> (<em>dict</em> *[*<em>str</em> <em>,</em> <em>Any</em> <em>]</em> <em>,</em> <em>optional</em>) – Additional params for the subscription.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="unsubscribe_mark_pricesself-unsubscribemarkprices-command--void">unsubscribe_mark_prices(self, UnsubscribeMarkPrices command) → void<a href="#unsubscribe_mark_pricesself-unsubscribemarkprices-command--void" class="hash-link" aria-label="Direct link to unsubscribe_mark_prices(self, UnsubscribeMarkPrices command) → void" title="Direct link to unsubscribe_mark_prices(self, UnsubscribeMarkPrices command) → void">​</a></h4>
<p>Unsubscribe from MarkPriceUpdate data for the given instrument ID.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>instrument_id</strong> (<a href="../../model/identifiers/index.htm#nautilus_trader.model.identifiers.InstrumentId"><em>InstrumentId</em></a>) – The instrument to subscribe to.</li>
<li><strong>params</strong> (<em>dict</em> *[*<em>str</em> <em>,</em> <em>Any</em> <em>]</em> <em>,</em> <em>optional</em>) – Additional params for the subscription.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="unsubscribe_order_book_deltasself-unsubscribeorderbook-command--void">unsubscribe_order_book_deltas(self, UnsubscribeOrderBook command) → void<a href="#unsubscribe_order_book_deltasself-unsubscribeorderbook-command--void" class="hash-link" aria-label="Direct link to unsubscribe_order_book_deltas(self, UnsubscribeOrderBook command) → void" title="Direct link to unsubscribe_order_book_deltas(self, UnsubscribeOrderBook command) → void">​</a></h4>
<p>Unsubscribe from OrderBookDeltas data for the given instrument ID.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>instrument_id</strong> (<a href="../../model/identifiers/index.htm#nautilus_trader.model.identifiers.InstrumentId"><em>InstrumentId</em></a>) – The order book instrument to unsubscribe from.</li>
<li><strong>params</strong> (<em>dict</em> *[*<em>str</em> <em>,</em> <em>Any</em> <em>]</em> <em>,</em> <em>optional</em>) – Additional params for the subscription.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="unsubscribe_order_book_snapshotsself-unsubscribeorderbook-command--void">unsubscribe_order_book_snapshots(self, UnsubscribeOrderBook command) → void<a href="#unsubscribe_order_book_snapshotsself-unsubscribeorderbook-command--void" class="hash-link" aria-label="Direct link to unsubscribe_order_book_snapshots(self, UnsubscribeOrderBook command) → void" title="Direct link to unsubscribe_order_book_snapshots(self, UnsubscribeOrderBook command) → void">​</a></h4>
<p>Unsubscribe from OrderBook snapshots data for the given instrument ID.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>instrument_id</strong> (<a href="../../model/identifiers/index.htm#nautilus_trader.model.identifiers.InstrumentId"><em>InstrumentId</em></a>) – The order book instrument to unsubscribe from.</li>
<li><strong>params</strong> (<em>dict</em> *[*<em>str</em> <em>,</em> <em>Any</em> <em>]</em> <em>,</em> <em>optional</em>) – Additional params for the subscription.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="unsubscribe_quote_ticksself-unsubscribequoteticks-command--void">unsubscribe_quote_ticks(self, UnsubscribeQuoteTicks command) → void<a href="#unsubscribe_quote_ticksself-unsubscribequoteticks-command--void" class="hash-link" aria-label="Direct link to unsubscribe_quote_ticks(self, UnsubscribeQuoteTicks command) → void" title="Direct link to unsubscribe_quote_ticks(self, UnsubscribeQuoteTicks command) → void">​</a></h4>
<p>Unsubscribe from QuoteTick data for the given instrument ID.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>instrument_id</strong> (<a href="../../model/identifiers/index.htm#nautilus_trader.model.identifiers.InstrumentId"><em>InstrumentId</em></a>) – The tick instrument to unsubscribe from.</li>
<li><strong>params</strong> (<em>dict</em> *[*<em>str</em> <em>,</em> <em>Any</em> <em>]</em> <em>,</em> <em>optional</em>) – Additional params for the subscription.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="unsubscribe_trade_ticksself-unsubscribetradeticks-command--void">unsubscribe_trade_ticks(self, UnsubscribeTradeTicks command) → void<a href="#unsubscribe_trade_ticksself-unsubscribetradeticks-command--void" class="hash-link" aria-label="Direct link to unsubscribe_trade_ticks(self, UnsubscribeTradeTicks command) → void" title="Direct link to unsubscribe_trade_ticks(self, UnsubscribeTradeTicks command) → void">​</a></h4>
<p>Unsubscribe from TradeTick data for the given instrument ID.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>instrument_id</strong> (<a href="../../model/identifiers/index.htm#nautilus_trader.model.identifiers.InstrumentId"><em>InstrumentId</em></a>) – The tick instrument to unsubscribe from.</li>
<li><strong>params</strong> (<em>dict</em> *[*<em>str</em> <em>,</em> <em>Any</em> <em>]</em> <em>,</em> <em>optional</em>) – Additional params for the subscription.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="venue">venue<a href="#venue" class="hash-link" aria-label="Direct link to venue" title="Direct link to venue">​</a></h4>
<p>The clients venue ID (if applicable).</p>
<ul>
<li><strong>Returns:</strong>
Venue or <code>None</code></li>
</ul>
<h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="execution">Execution<a href="#execution" class="hash-link" aria-label="Direct link to Execution" title="Direct link to Execution">​</a></h2>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="class-polymarketexecutionclient"><em>class</em> PolymarketExecutionClient<a href="#class-polymarketexecutionclient" class="hash-link" aria-label="Direct link to class-polymarketexecutionclient" title="Direct link to class-polymarketexecutionclient">​</a></h3>
<p>Bases: <a href="../../live/index.htm#nautilus_trader.live.execution_client.LiveExecutionClient"><code>LiveExecutionClient</code></a></p>
<p>Provides an execution client for Polymarket, a decentralized predication market.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>loop</strong> (<em>asyncio.AbstractEventLoop</em>) – The event loop for the client.</li>
<li><strong>http_client</strong> (<em>py_clob_client.client.ClobClient</em>) – The Polymarket HTTP client.</li>
<li><strong>msgbus</strong> (<a href="../../common/index.htm#nautilus_trader.common.component.MessageBus"><em>MessageBus</em></a>) – The message bus for the client.</li>
<li><strong>cache</strong> (<a href="../../cache/index.htm#nautilus_trader.cache.Cache"><em>Cache</em></a>) – The cache for the client.</li>
<li><strong>clock</strong> (<a href="../../common/index.htm#nautilus_trader.common.component.LiveClock"><em>LiveClock</em></a>) – The clock for the client.</li>
<li><strong>instrument_provider</strong> (<a href="#nautilus_trader.adapters.polymarket.PolymarketInstrumentProvider"><em>PolymarketInstrumentProvider</em></a>) – The instrument provider.</li>
<li><strong>config</strong> (<a href="#nautilus_trader.adapters.polymarket.PolymarketExecClientConfig"><em>PolymarketExecClientConfig</em></a>) – The configuration for the client.</li>
<li><strong>name</strong> (<em>str</em> <em>,</em> <em>optional</em>) – The custom client ID.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="async-generate_order_status_reportscommand-generateorderstatusreports--listorderstatusreport"><em>async</em> generate_order_status_reports(command: <a href="../../execution/index.htm#nautilus_trader.execution.messages.GenerateOrderStatusReports">GenerateOrderStatusReports</a>) → list[<a href="../../execution/index.htm#nautilus_trader.execution.reports.OrderStatusReport">OrderStatusReport</a>]<a href="#async-generate_order_status_reportscommand-generateorderstatusreports--listorderstatusreport" class="hash-link" aria-label="Direct link to async-generate_order_status_reportscommand-generateorderstatusreports--listorderstatusreport" title="Direct link to async-generate_order_status_reportscommand-generateorderstatusreports--listorderstatusreport">​</a></h4>
<p>Generate a list of</p>
<div class="language-text codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9CDCFE;--prism-background-color:#1E1E1E"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#9CDCFE;background-color:#1E1E1E"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9CDCFE"><span class="token plain">`</span><br></span></code></pre></div></div>
<p>OrderStatusReport`s with optional query filters.</p>
<p>The returned list may be empty if no orders match the given parameters.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>command</strong> (<a href="../../execution/index.htm#nautilus_trader.execution.messages.GenerateOrderStatusReports"><em>GenerateOrderStatusReports</em></a>) – The command for generating the reports.</li>
<li><strong>Return type:</strong>
list[<a href="../../execution/index.htm#nautilus_trader.execution.reports.OrderStatusReport">OrderStatusReport</a>]</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="async-generate_order_status_reportcommand-generateorderstatusreport--orderstatusreport--none"><em>async</em> generate_order_status_report(command: <a href="../../execution/index.htm#nautilus_trader.execution.messages.GenerateOrderStatusReport">GenerateOrderStatusReport</a>) → <a href="../../execution/index.htm#nautilus_trader.execution.reports.OrderStatusReport">OrderStatusReport</a> | None<a href="#async-generate_order_status_reportcommand-generateorderstatusreport--orderstatusreport--none" class="hash-link" aria-label="Direct link to async-generate_order_status_reportcommand-generateorderstatusreport--orderstatusreport--none" title="Direct link to async-generate_order_status_reportcommand-generateorderstatusreport--orderstatusreport--none">​</a></h4>
<p>Generate an OrderStatusReport for the given order identifier parameter(s).</p>
<p>If the order is not found, or an error occurs, then logs and returns <code>None</code>.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>command</strong> (<a href="../../execution/index.htm#nautilus_trader.execution.messages.GenerateOrderStatusReport"><em>GenerateOrderStatusReport</em></a>) – The command to generate the report.</li>
<li><strong>Return type:</strong>
OrderStatusReport or <code>None</code></li>
<li><strong>Raises:</strong>
<strong>ValueError</strong> – If both the client_order_id and venue_order_id are <code>None</code>.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="async-generate_fill_reportscommand-generatefillreports--listfillreport"><em>async</em> generate_fill_reports(command: <a href="../../execution/index.htm#nautilus_trader.execution.messages.GenerateFillReports">GenerateFillReports</a>) → list[<a href="../../execution/index.htm#nautilus_trader.execution.reports.FillReport">FillReport</a>]<a href="#async-generate_fill_reportscommand-generatefillreports--listfillreport" class="hash-link" aria-label="Direct link to async-generate_fill_reportscommand-generatefillreports--listfillreport" title="Direct link to async-generate_fill_reportscommand-generatefillreports--listfillreport">​</a></h4>
<p>Generate a list of</p>
<div class="language-text codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9CDCFE;--prism-background-color:#1E1E1E"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#9CDCFE;background-color:#1E1E1E"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9CDCFE"><span class="token plain">`</span><br></span></code></pre></div></div>
<p>FillReport`s with optional query filters.</p>
<p>The returned list may be empty if no trades match the given parameters.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>command</strong> (<a href="../../execution/index.htm#nautilus_trader.execution.messages.GenerateFillReports"><em>GenerateFillReports</em></a>) – The command for generating the reports.</li>
<li><strong>Return type:</strong>
list[<a href="../../execution/index.htm#nautilus_trader.execution.reports.FillReport">FillReport</a>]</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="async-generate_position_status_reportscommand-generatepositionstatusreports--listpositionstatusreport"><em>async</em> generate_position_status_reports(command: <a href="../../execution/index.htm#nautilus_trader.execution.messages.GeneratePositionStatusReports">GeneratePositionStatusReports</a>) → list[<a href="../../execution/index.htm#nautilus_trader.execution.reports.PositionStatusReport">PositionStatusReport</a>]<a href="#async-generate_position_status_reportscommand-generatepositionstatusreports--listpositionstatusreport" class="hash-link" aria-label="Direct link to async-generate_position_status_reportscommand-generatepositionstatusreports--listpositionstatusreport" title="Direct link to async-generate_position_status_reportscommand-generatepositionstatusreports--listpositionstatusreport">​</a></h4>
<p>Generate a list of</p>
<div class="language-text codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#9CDCFE;--prism-background-color:#1E1E1E"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#9CDCFE;background-color:#1E1E1E"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9CDCFE"><span class="token plain">`</span><br></span></code></pre></div></div>
<p>PositionStatusReport`s with optional query filters.</p>
<p>The returned list may be empty if no positions match the given parameters.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>command</strong> (<a href="../../execution/index.htm#nautilus_trader.execution.messages.GeneratePositionStatusReports"><em>GeneratePositionStatusReports</em></a>) – The command for generating the position status reports.</li>
<li><strong>Return type:</strong>
list[<a href="../../execution/index.htm#nautilus_trader.execution.reports.PositionStatusReport">PositionStatusReport</a>]</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="account_id">account_id<a href="#account_id" class="hash-link" aria-label="Direct link to account_id" title="Direct link to account_id">​</a></h4>
<p>The clients account ID.</p>
<ul>
<li><strong>Returns:</strong>
AccountId or <code>None</code></li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="account_type">account_type<a href="#account_type" class="hash-link" aria-label="Direct link to account_type" title="Direct link to account_type">​</a></h4>
<p>The clients account type.</p>
<ul>
<li><strong>Returns:</strong>
AccountType</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="base_currency">base_currency<a href="#base_currency" class="hash-link" aria-label="Direct link to base_currency" title="Direct link to base_currency">​</a></h4>
<p>The clients account base currency (None for multi-currency accounts).</p>
<ul>
<li><strong>Returns:</strong>
Currency or <code>None</code></li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="batch_cancel_ordersself-batchcancelorders-command--void">batch_cancel_orders(self, BatchCancelOrders command) → void<a href="#batch_cancel_ordersself-batchcancelorders-command--void" class="hash-link" aria-label="Direct link to batch_cancel_orders(self, BatchCancelOrders command) → void" title="Direct link to batch_cancel_orders(self, BatchCancelOrders command) → void">​</a></h4>
<p>Batch cancel orders for the instrument ID contained in the given command.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>command</strong> (<a href="../../execution/index.htm#nautilus_trader.execution.messages.BatchCancelOrders"><em>BatchCancelOrders</em></a>) – The command to execute.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="cancel_all_ordersself-cancelallorders-command--void">cancel_all_orders(self, CancelAllOrders command) → void<a href="#cancel_all_ordersself-cancelallorders-command--void" class="hash-link" aria-label="Direct link to cancel_all_orders(self, CancelAllOrders command) → void" title="Direct link to cancel_all_orders(self, CancelAllOrders command) → void">​</a></h4>
<p>Cancel all orders for the instrument ID contained in the given command.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>command</strong> (<a href="../../execution/index.htm#nautilus_trader.execution.messages.CancelAllOrders"><em>CancelAllOrders</em></a>) – The command to execute.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="cancel_orderself-cancelorder-command--void">cancel_order(self, CancelOrder command) → void<a href="#cancel_orderself-cancelorder-command--void" class="hash-link" aria-label="Direct link to cancel_order(self, CancelOrder command) → void" title="Direct link to cancel_order(self, CancelOrder command) → void">​</a></h4>
<p>Cancel the order with the client order ID contained in the given command.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>command</strong> (<a href="../../execution/index.htm#nautilus_trader.execution.messages.CancelOrder"><em>CancelOrder</em></a>) – The command to execute.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="connect--none-1">connect() → None<a href="#connect--none-1" class="hash-link" aria-label="Direct link to connect() → None" title="Direct link to connect() → None">​</a></h4>
<p>Connect the client.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="create_taskcoro-collectionsabccoroutine-log_msg-str--none--none-actions-collectionsabccallable--none--none-success_msg-str--none--none-success_color-nautilus_tradercorerustcommonlogcolor--logcolornormal-0--task">create_task(coro: ~collections.abc.Coroutine, log_msg: str | None = None, actions: ~collections.abc.Callable | None = None, success_msg: str | None = None, success_color: ~nautilus_trader.core.rust.common.LogColor = &lt;LogColor.NORMAL: 0&gt;) → Task<a href="#create_taskcoro-collectionsabccoroutine-log_msg-str--none--none-actions-collectionsabccallable--none--none-success_msg-str--none--none-success_color-nautilus_tradercorerustcommonlogcolor--logcolornormal-0--task" class="hash-link" aria-label="Direct link to create_task(coro: ~collections.abc.Coroutine, log_msg: str | None = None, actions: ~collections.abc.Callable | None = None, success_msg: str | None = None, success_color: ~nautilus_trader.core.rust.common.LogColor = &lt;LogColor.NORMAL: 0&gt;) → Task" title="Direct link to create_task(coro: ~collections.abc.Coroutine, log_msg: str | None = None, actions: ~collections.abc.Callable | None = None, success_msg: str | None = None, success_color: ~nautilus_trader.core.rust.common.LogColor = &lt;LogColor.NORMAL: 0&gt;) → Task">​</a></h4>
<p>Run the given coroutine with error handling and optional callback actions when
done.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>coro</strong> (<em>Coroutine</em>) – The coroutine to run.</li>
<li><strong>log_msg</strong> (<em>str</em> <em>,</em> <em>optional</em>) – The log message for the task.</li>
<li><strong>actions</strong> (<em>Callable</em> <em>,</em> <em>optional</em>) – The actions callback to run when the coroutine is done.</li>
<li><strong>success_msg</strong> (<em>str</em> <em>,</em> <em>optional</em>) – The log message to write on actions success.</li>
<li><strong>success_color</strong> (str, default <code>NORMAL</code>) – The log message color for actions success.</li>
</ul>
</li>
<li><strong>Return type:</strong>
asyncio.Task</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="degradeself--void-1">degrade(self) → void<a href="#degradeself--void-1" class="hash-link" aria-label="Direct link to degrade(self) → void" title="Direct link to degrade(self) → void">​</a></h4>
<p>Degrade the component.</p>
<p>While executing on_degrade() any exception will be logged and reraised, then the component
will remain in a <code>DEGRADING</code> state.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-7">WARNING<a href="#warning-7" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>Do not override.</p>
<p>If the component is not in a valid state from which to execute this method,
then the component state will not change, and an error will be logged.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="disconnect--none-1">disconnect() → None<a href="#disconnect--none-1" class="hash-link" aria-label="Direct link to disconnect() → None" title="Direct link to disconnect() → None">​</a></h4>
<p>Disconnect the client.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="disposeself--void-1">dispose(self) → void<a href="#disposeself--void-1" class="hash-link" aria-label="Direct link to dispose(self) → void" title="Direct link to dispose(self) → void">​</a></h4>
<p>Dispose of the component.</p>
<p>While executing on_dispose() any exception will be logged and reraised, then the component
will remain in a <code>DISPOSING</code> state.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-8">WARNING<a href="#warning-8" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>Do not override.</p>
<p>If the component is not in a valid state from which to execute this method,
then the component state will not change, and an error will be logged.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="faultself--void-1">fault(self) → void<a href="#faultself--void-1" class="hash-link" aria-label="Direct link to fault(self) → void" title="Direct link to fault(self) → void">​</a></h4>
<p>Fault the component.</p>
<p>Calling this method multiple times has the same effect as calling it once (it is idempotent).
Once called, it cannot be reversed, and no other methods should be called on this instance.</p>
<p>While executing on_fault() any exception will be logged and reraised, then the component
will remain in a <code>FAULTING</code> state.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-9">WARNING<a href="#warning-9" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>Do not override.</p>
<p>If the component is not in a valid state from which to execute this method,
then the component state will not change, and an error will be logged.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="classmethod-fully_qualified_namecls--str-1"><em>classmethod</em> fully_qualified_name(cls) → str<a href="#classmethod-fully_qualified_namecls--str-1" class="hash-link" aria-label="Direct link to classmethod-fully_qualified_namecls--str-1" title="Direct link to classmethod-fully_qualified_namecls--str-1">​</a></h4>
<p>Return the fully qualified name for the components class.</p>
<ul>
<li><strong>Return type:</strong>
str</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="generate_account_stateself-list-balances-list-margins-bool-reported-uint64_t-ts_event-dict-infonone--void">generate_account_state(self, list balances, list margins, bool reported, uint64_t ts_event, dict info=None) → void<a href="#generate_account_stateself-list-balances-list-margins-bool-reported-uint64_t-ts_event-dict-infonone--void" class="hash-link" aria-label="Direct link to generate_account_state(self, list balances, list margins, bool reported, uint64_t ts_event, dict info=None) → void" title="Direct link to generate_account_state(self, list balances, list margins, bool reported, uint64_t ts_event, dict info=None) → void">​</a></h4>
<p>Generate an AccountState event and publish on the message bus.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>balances</strong> (<em>list</em> <em>[</em><a href="../../model/index.htm#nautilus_trader.model.AccountBalance"><em>AccountBalance</em></a> <em>]</em>) – The account balances.</li>
<li><strong>margins</strong> (<em>list</em> <em>[</em><a href="../../model/index.htm#nautilus_trader.model.MarginBalance"><em>MarginBalance</em></a> <em>]</em>) – The margin balances.</li>
<li><strong>reported</strong> (<em>bool</em>) – If the balances are reported directly from the exchange.</li>
<li><strong>ts_event</strong> (<em>uint64_t</em>) – UNIX timestamp (nanoseconds) when the account state event occurred.</li>
<li><strong>info</strong> (<em>dict</em> *[*<em>str</em> <em>,</em> <em>object</em> <em>]</em>) – The additional implementation specific account information.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="async-generate_mass_statuslookback_mins-int--none--none--executionmassstatus--none"><em>async</em> generate_mass_status(lookback_mins: int | None = None) → <a href="../../execution/index.htm#nautilus_trader.execution.reports.ExecutionMassStatus">ExecutionMassStatus</a> | None<a href="#async-generate_mass_statuslookback_mins-int--none--none--executionmassstatus--none" class="hash-link" aria-label="Direct link to async-generate_mass_statuslookback_mins-int--none--none--executionmassstatus--none" title="Direct link to async-generate_mass_statuslookback_mins-int--none--none--executionmassstatus--none">​</a></h4>
<p>Generate an ExecutionMassStatus report.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>lookback_mins</strong> (<em>int</em> <em>,</em> <em>optional</em>) – The maximum lookback for querying closed orders, trades and positions.</li>
<li><strong>Return type:</strong>
ExecutionMassStatus or <code>None</code></li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="generate_order_acceptedself-strategyid-strategy_id-instrumentid-instrument_id-clientorderid-client_order_id-venueorderid-venue_order_id-uint64_t-ts_event--void">generate_order_accepted(self, StrategyId strategy_id, InstrumentId instrument_id, ClientOrderId client_order_id, VenueOrderId venue_order_id, uint64_t ts_event) → void<a href="#generate_order_acceptedself-strategyid-strategy_id-instrumentid-instrument_id-clientorderid-client_order_id-venueorderid-venue_order_id-uint64_t-ts_event--void" class="hash-link" aria-label="Direct link to generate_order_accepted(self, StrategyId strategy_id, InstrumentId instrument_id, ClientOrderId client_order_id, VenueOrderId venue_order_id, uint64_t ts_event) → void" title="Direct link to generate_order_accepted(self, StrategyId strategy_id, InstrumentId instrument_id, ClientOrderId client_order_id, VenueOrderId venue_order_id, uint64_t ts_event) → void">​</a></h4>
<p>Generate an OrderAccepted event and send it to the ExecutionEngine.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>strategy_id</strong> (<a href="../../model/identifiers/index.htm#nautilus_trader.model.identifiers.StrategyId"><em>StrategyId</em></a>) – The strategy ID associated with the event.</li>
<li><strong>instrument_id</strong> (<a href="../../model/identifiers/index.htm#nautilus_trader.model.identifiers.InstrumentId"><em>InstrumentId</em></a>) – The instrument ID.</li>
<li><strong>client_order_id</strong> (<a href="../../model/identifiers/index.htm#nautilus_trader.model.identifiers.ClientOrderId"><em>ClientOrderId</em></a>) – The client order ID.</li>
<li><strong>venue_order_id</strong> (<a href="../../model/identifiers/index.htm#nautilus_trader.model.identifiers.VenueOrderId"><em>VenueOrderId</em></a>) – The venue order ID (assigned by the venue).</li>
<li><strong>ts_event</strong> (<em>uint64_t</em>) – UNIX timestamp (nanoseconds) when the order accepted event occurred.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="generate_order_cancel_rejectedself-strategyid-strategy_id-instrumentid-instrument_id-clientorderid-client_order_id-venueorderid-venue_order_id-str-reason-uint64_t-ts_event--void">generate_order_cancel_rejected(self, StrategyId strategy_id, InstrumentId instrument_id, ClientOrderId client_order_id, VenueOrderId venue_order_id, str reason, uint64_t ts_event) → void<a href="#generate_order_cancel_rejectedself-strategyid-strategy_id-instrumentid-instrument_id-clientorderid-client_order_id-venueorderid-venue_order_id-str-reason-uint64_t-ts_event--void" class="hash-link" aria-label="Direct link to generate_order_cancel_rejected(self, StrategyId strategy_id, InstrumentId instrument_id, ClientOrderId client_order_id, VenueOrderId venue_order_id, str reason, uint64_t ts_event) → void" title="Direct link to generate_order_cancel_rejected(self, StrategyId strategy_id, InstrumentId instrument_id, ClientOrderId client_order_id, VenueOrderId venue_order_id, str reason, uint64_t ts_event) → void">​</a></h4>
<p>Generate an OrderCancelRejected event and send it to the ExecutionEngine.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>strategy_id</strong> (<a href="../../model/identifiers/index.htm#nautilus_trader.model.identifiers.StrategyId"><em>StrategyId</em></a>) – The strategy ID associated with the event.</li>
<li><strong>instrument_id</strong> (<a href="../../model/identifiers/index.htm#nautilus_trader.model.identifiers.InstrumentId"><em>InstrumentId</em></a>) – The instrument ID.</li>
<li><strong>client_order_id</strong> (<a href="../../model/identifiers/index.htm#nautilus_trader.model.identifiers.ClientOrderId"><em>ClientOrderId</em></a>) – The client order ID.</li>
<li><strong>venue_order_id</strong> (<a href="../../model/identifiers/index.htm#nautilus_trader.model.identifiers.VenueOrderId"><em>VenueOrderId</em></a>) – The venue order ID (assigned by the venue).</li>
<li><strong>reason</strong> (<em>str</em>) – The order cancel rejected reason.</li>
<li><strong>ts_event</strong> (<em>uint64_t</em>) – UNIX timestamp (nanoseconds) when the order cancel rejected event occurred.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="generate_order_canceledself-strategyid-strategy_id-instrumentid-instrument_id-clientorderid-client_order_id-venueorderid-venue_order_id-uint64_t-ts_event--void">generate_order_canceled(self, StrategyId strategy_id, InstrumentId instrument_id, ClientOrderId client_order_id, VenueOrderId venue_order_id, uint64_t ts_event) → void<a href="#generate_order_canceledself-strategyid-strategy_id-instrumentid-instrument_id-clientorderid-client_order_id-venueorderid-venue_order_id-uint64_t-ts_event--void" class="hash-link" aria-label="Direct link to generate_order_canceled(self, StrategyId strategy_id, InstrumentId instrument_id, ClientOrderId client_order_id, VenueOrderId venue_order_id, uint64_t ts_event) → void" title="Direct link to generate_order_canceled(self, StrategyId strategy_id, InstrumentId instrument_id, ClientOrderId client_order_id, VenueOrderId venue_order_id, uint64_t ts_event) → void">​</a></h4>
<p>Generate an OrderCanceled event and send it to the ExecutionEngine.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>strategy_id</strong> (<a href="../../model/identifiers/index.htm#nautilus_trader.model.identifiers.StrategyId"><em>StrategyId</em></a>) – The strategy ID associated with the event.</li>
<li><strong>instrument_id</strong> (<a href="../../model/identifiers/index.htm#nautilus_trader.model.identifiers.InstrumentId"><em>InstrumentId</em></a>) – The instrument ID.</li>
<li><strong>client_order_id</strong> (<a href="../../model/identifiers/index.htm#nautilus_trader.model.identifiers.ClientOrderId"><em>ClientOrderId</em></a>) – The client order ID.</li>
<li><strong>venue_order_id</strong> (<a href="../../model/identifiers/index.htm#nautilus_trader.model.identifiers.VenueOrderId"><em>VenueOrderId</em></a>) – The venue order ID (assigned by the venue).</li>
<li><strong>ts_event</strong> (<em>uint64_t</em>) – UNIX timestamp (nanoseconds) when order canceled event occurred.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="generate_order_expiredself-strategyid-strategy_id-instrumentid-instrument_id-clientorderid-client_order_id-venueorderid-venue_order_id-uint64_t-ts_event--void">generate_order_expired(self, StrategyId strategy_id, InstrumentId instrument_id, ClientOrderId client_order_id, VenueOrderId venue_order_id, uint64_t ts_event) → void<a href="#generate_order_expiredself-strategyid-strategy_id-instrumentid-instrument_id-clientorderid-client_order_id-venueorderid-venue_order_id-uint64_t-ts_event--void" class="hash-link" aria-label="Direct link to generate_order_expired(self, StrategyId strategy_id, InstrumentId instrument_id, ClientOrderId client_order_id, VenueOrderId venue_order_id, uint64_t ts_event) → void" title="Direct link to generate_order_expired(self, StrategyId strategy_id, InstrumentId instrument_id, ClientOrderId client_order_id, VenueOrderId venue_order_id, uint64_t ts_event) → void">​</a></h4>
<p>Generate an OrderExpired event and send it to the ExecutionEngine.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>strategy_id</strong> (<a href="../../model/identifiers/index.htm#nautilus_trader.model.identifiers.StrategyId"><em>StrategyId</em></a>) – The strategy ID associated with the event.</li>
<li><strong>instrument_id</strong> (<a href="../../model/identifiers/index.htm#nautilus_trader.model.identifiers.InstrumentId"><em>InstrumentId</em></a>) – The instrument ID.</li>
<li><strong>client_order_id</strong> (<a href="../../model/identifiers/index.htm#nautilus_trader.model.identifiers.ClientOrderId"><em>ClientOrderId</em></a>) – The client order ID.</li>
<li><strong>venue_order_id</strong> (<a href="../../model/identifiers/index.htm#nautilus_trader.model.identifiers.VenueOrderId"><em>VenueOrderId</em></a>) – The venue order ID (assigned by the venue).</li>
<li><strong>ts_event</strong> (<em>uint64_t</em>) – UNIX timestamp (nanoseconds) when the order expired event occurred.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="generate_order_filledself-strategyid-strategy_id-instrumentid-instrument_id-clientorderid-client_order_id-venueorderid-venue_order_id-positionid-venue_position_id-positionid--none-tradeid-trade_id-orderside-order_side-ordertype-order_type-quantity-last_qty-price-last_px-currency-quote_currency-money-commission-liquidityside-liquidity_side-uint64_t-ts_event-dict-infonone--void">generate_order_filled(self, StrategyId strategy_id, InstrumentId instrument_id, ClientOrderId client_order_id, VenueOrderId venue_order_id, PositionId venue_position_id: PositionId | None, TradeId trade_id, OrderSide order_side, OrderType order_type, Quantity last_qty, Price last_px, Currency quote_currency, Money commission, LiquiditySide liquidity_side, uint64_t ts_event, dict info=None) → void<a href="#generate_order_filledself-strategyid-strategy_id-instrumentid-instrument_id-clientorderid-client_order_id-venueorderid-venue_order_id-positionid-venue_position_id-positionid--none-tradeid-trade_id-orderside-order_side-ordertype-order_type-quantity-last_qty-price-last_px-currency-quote_currency-money-commission-liquidityside-liquidity_side-uint64_t-ts_event-dict-infonone--void" class="hash-link" aria-label="Direct link to generate_order_filled(self, StrategyId strategy_id, InstrumentId instrument_id, ClientOrderId client_order_id, VenueOrderId venue_order_id, PositionId venue_position_id: PositionId | None, TradeId trade_id, OrderSide order_side, OrderType order_type, Quantity last_qty, Price last_px, Currency quote_currency, Money commission, LiquiditySide liquidity_side, uint64_t ts_event, dict info=None) → void" title="Direct link to generate_order_filled(self, StrategyId strategy_id, InstrumentId instrument_id, ClientOrderId client_order_id, VenueOrderId venue_order_id, PositionId venue_position_id: PositionId | None, TradeId trade_id, OrderSide order_side, OrderType order_type, Quantity last_qty, Price last_px, Currency quote_currency, Money commission, LiquiditySide liquidity_side, uint64_t ts_event, dict info=None) → void">​</a></h4>
<p>Generate an OrderFilled event and send it to the ExecutionEngine.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>strategy_id</strong> (<a href="../../model/identifiers/index.htm#nautilus_trader.model.identifiers.StrategyId"><em>StrategyId</em></a>) – The strategy ID associated with the event.</li>
<li><strong>instrument_id</strong> (<a href="../../model/identifiers/index.htm#nautilus_trader.model.identifiers.InstrumentId"><em>InstrumentId</em></a>) – The instrument ID.</li>
<li><strong>client_order_id</strong> (<a href="../../model/identifiers/index.htm#nautilus_trader.model.identifiers.ClientOrderId"><em>ClientOrderId</em></a>) – The client order ID.</li>
<li><strong>venue_order_id</strong> (<a href="../../model/identifiers/index.htm#nautilus_trader.model.identifiers.VenueOrderId"><em>VenueOrderId</em></a>) – The venue order ID (assigned by the venue).</li>
<li><strong>trade_id</strong> (<a href="../../model/identifiers/index.htm#nautilus_trader.model.identifiers.TradeId"><em>TradeId</em></a>) – The trade ID.</li>
<li><strong>venue_position_id</strong> (PositionId or <code>None</code>) – The venue position ID associated with the order. If the trading
venue has assigned a position ID / ticket then pass that here,
otherwise pass <code>None</code> and the execution engine OMS will handle
position ID resolution.</li>
<li><strong>order_side</strong> (OrderSide {<code>BUY</code>, <code>SELL</code>}) – The execution order side.</li>
<li><strong>order_type</strong> (<em>OrderType</em>) – The execution order type.</li>
<li><strong>last_qty</strong> (<a href="../../model/index.htm#nautilus_trader.model.Quantity"><em>Quantity</em></a>) – The fill quantity for this execution.</li>
<li><strong>last_px</strong> (<a href="../../model/index.htm#nautilus_trader.model.Price"><em>Price</em></a>) – The fill price for this execution (not average price).</li>
<li><strong>quote_currency</strong> (<a href="../../model/index.htm#nautilus_trader.model.Currency"><em>Currency</em></a>) – The currency of the price.</li>
<li><strong>commission</strong> (<a href="../../model/index.htm#nautilus_trader.model.Money"><em>Money</em></a>) – The fill commission.</li>
<li><strong>liquidity_side</strong> (LiquiditySide {<code>NO_LIQUIDITY_SIDE</code>, <code>MAKER</code>, <code>TAKER</code>}) – The execution liquidity side.</li>
<li><strong>ts_event</strong> (<em>uint64_t</em>) – UNIX timestamp (nanoseconds) when the order filled event occurred.</li>
<li><strong>info</strong> (<em>dict</em> *[*<em>str</em> <em>,</em> <em>object</em> <em>]</em> <em>,</em> <em>optional</em>) – The additional fill information.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="generate_order_modify_rejectedself-strategyid-strategy_id-instrumentid-instrument_id-clientorderid-client_order_id-venueorderid-venue_order_id-str-reason-uint64_t-ts_event--void">generate_order_modify_rejected(self, StrategyId strategy_id, InstrumentId instrument_id, ClientOrderId client_order_id, VenueOrderId venue_order_id, str reason, uint64_t ts_event) → void<a href="#generate_order_modify_rejectedself-strategyid-strategy_id-instrumentid-instrument_id-clientorderid-client_order_id-venueorderid-venue_order_id-str-reason-uint64_t-ts_event--void" class="hash-link" aria-label="Direct link to generate_order_modify_rejected(self, StrategyId strategy_id, InstrumentId instrument_id, ClientOrderId client_order_id, VenueOrderId venue_order_id, str reason, uint64_t ts_event) → void" title="Direct link to generate_order_modify_rejected(self, StrategyId strategy_id, InstrumentId instrument_id, ClientOrderId client_order_id, VenueOrderId venue_order_id, str reason, uint64_t ts_event) → void">​</a></h4>
<p>Generate an OrderModifyRejected event and send it to the ExecutionEngine.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>strategy_id</strong> (<a href="../../model/identifiers/index.htm#nautilus_trader.model.identifiers.StrategyId"><em>StrategyId</em></a>) – The strategy ID associated with the event.</li>
<li><strong>instrument_id</strong> (<a href="../../model/identifiers/index.htm#nautilus_trader.model.identifiers.InstrumentId"><em>InstrumentId</em></a>) – The instrument ID.</li>
<li><strong>client_order_id</strong> (<a href="../../model/identifiers/index.htm#nautilus_trader.model.identifiers.ClientOrderId"><em>ClientOrderId</em></a>) – The client order ID.</li>
<li><strong>venue_order_id</strong> (<a href="../../model/identifiers/index.htm#nautilus_trader.model.identifiers.VenueOrderId"><em>VenueOrderId</em></a>) – The venue order ID (assigned by the venue).</li>
<li><strong>reason</strong> (<em>str</em>) – The order update rejected reason.</li>
<li><strong>ts_event</strong> (<em>uint64_t</em>) – UNIX timestamp (nanoseconds) when the order update rejection event occurred.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="generate_order_rejectedself-strategyid-strategy_id-instrumentid-instrument_id-clientorderid-client_order_id-str-reason-uint64_t-ts_event--void">generate_order_rejected(self, StrategyId strategy_id, InstrumentId instrument_id, ClientOrderId client_order_id, str reason, uint64_t ts_event) → void<a href="#generate_order_rejectedself-strategyid-strategy_id-instrumentid-instrument_id-clientorderid-client_order_id-str-reason-uint64_t-ts_event--void" class="hash-link" aria-label="Direct link to generate_order_rejected(self, StrategyId strategy_id, InstrumentId instrument_id, ClientOrderId client_order_id, str reason, uint64_t ts_event) → void" title="Direct link to generate_order_rejected(self, StrategyId strategy_id, InstrumentId instrument_id, ClientOrderId client_order_id, str reason, uint64_t ts_event) → void">​</a></h4>
<p>Generate an OrderRejected event and send it to the ExecutionEngine.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>strategy_id</strong> (<a href="../../model/identifiers/index.htm#nautilus_trader.model.identifiers.StrategyId"><em>StrategyId</em></a>) – The strategy ID associated with the event.</li>
<li><strong>instrument_id</strong> (<a href="../../model/identifiers/index.htm#nautilus_trader.model.identifiers.InstrumentId"><em>InstrumentId</em></a>) – The instrument ID.</li>
<li><strong>client_order_id</strong> (<a href="../../model/identifiers/index.htm#nautilus_trader.model.identifiers.ClientOrderId"><em>ClientOrderId</em></a>) – The client order ID.</li>
<li><strong>reason</strong> (<em>datetime</em>) – The order rejected reason.</li>
<li><strong>ts_event</strong> (<em>uint64_t</em>) – UNIX timestamp (nanoseconds) when the order rejected event occurred.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="generate_order_submittedself-strategyid-strategy_id-instrumentid-instrument_id-clientorderid-client_order_id-uint64_t-ts_event--void">generate_order_submitted(self, StrategyId strategy_id, InstrumentId instrument_id, ClientOrderId client_order_id, uint64_t ts_event) → void<a href="#generate_order_submittedself-strategyid-strategy_id-instrumentid-instrument_id-clientorderid-client_order_id-uint64_t-ts_event--void" class="hash-link" aria-label="Direct link to generate_order_submitted(self, StrategyId strategy_id, InstrumentId instrument_id, ClientOrderId client_order_id, uint64_t ts_event) → void" title="Direct link to generate_order_submitted(self, StrategyId strategy_id, InstrumentId instrument_id, ClientOrderId client_order_id, uint64_t ts_event) → void">​</a></h4>
<p>Generate an OrderSubmitted event and send it to the ExecutionEngine.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>strategy_id</strong> (<a href="../../model/identifiers/index.htm#nautilus_trader.model.identifiers.StrategyId"><em>StrategyId</em></a>)   – The strategy ID associated with the event.</li>
<li><strong>instrument_id</strong> (<a href="../../model/identifiers/index.htm#nautilus_trader.model.identifiers.InstrumentId"><em>InstrumentId</em></a>) – The instrument ID.</li>
<li><strong>client_order_id</strong> (<a href="../../model/identifiers/index.htm#nautilus_trader.model.identifiers.ClientOrderId"><em>ClientOrderId</em></a>) – The client order ID.</li>
<li><strong>ts_event</strong> (<em>uint64_t</em>) – UNIX timestamp (nanoseconds) when the order submitted event occurred.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="generate_order_triggeredself-strategyid-strategy_id-instrumentid-instrument_id-clientorderid-client_order_id-venueorderid-venue_order_id-uint64_t-ts_event--void">generate_order_triggered(self, StrategyId strategy_id, InstrumentId instrument_id, ClientOrderId client_order_id, VenueOrderId venue_order_id, uint64_t ts_event) → void<a href="#generate_order_triggeredself-strategyid-strategy_id-instrumentid-instrument_id-clientorderid-client_order_id-venueorderid-venue_order_id-uint64_t-ts_event--void" class="hash-link" aria-label="Direct link to generate_order_triggered(self, StrategyId strategy_id, InstrumentId instrument_id, ClientOrderId client_order_id, VenueOrderId venue_order_id, uint64_t ts_event) → void" title="Direct link to generate_order_triggered(self, StrategyId strategy_id, InstrumentId instrument_id, ClientOrderId client_order_id, VenueOrderId venue_order_id, uint64_t ts_event) → void">​</a></h4>
<p>Generate an OrderTriggered event and send it to the ExecutionEngine.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>strategy_id</strong> (<a href="../../model/identifiers/index.htm#nautilus_trader.model.identifiers.StrategyId"><em>StrategyId</em></a>) – The strategy ID associated with the event.</li>
<li><strong>instrument_id</strong> (<a href="../../model/identifiers/index.htm#nautilus_trader.model.identifiers.InstrumentId"><em>InstrumentId</em></a>) – The instrument ID.</li>
<li><strong>client_order_id</strong> (<a href="../../model/identifiers/index.htm#nautilus_trader.model.identifiers.ClientOrderId"><em>ClientOrderId</em></a>) – The client order ID.</li>
<li><strong>venue_order_id</strong> (<a href="../../model/identifiers/index.htm#nautilus_trader.model.identifiers.VenueOrderId"><em>VenueOrderId</em></a>) – The venue order ID (assigned by the venue).</li>
<li><strong>ts_event</strong> (<em>uint64_t</em>) – UNIX timestamp (nanoseconds) when the order triggered event occurred.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="generate_order_updatedself-strategyid-strategy_id-instrumentid-instrument_id-clientorderid-client_order_id-venueorderid-venue_order_id-quantity-quantity-price-price-price-trigger_price-uint64_t-ts_event-bool-venue_order_id_modifiedfalse--void">generate_order_updated(self, StrategyId strategy_id, InstrumentId instrument_id, ClientOrderId client_order_id, VenueOrderId venue_order_id, Quantity quantity, Price price, Price trigger_price, uint64_t ts_event, bool venue_order_id_modified=False) → void<a href="#generate_order_updatedself-strategyid-strategy_id-instrumentid-instrument_id-clientorderid-client_order_id-venueorderid-venue_order_id-quantity-quantity-price-price-price-trigger_price-uint64_t-ts_event-bool-venue_order_id_modifiedfalse--void" class="hash-link" aria-label="Direct link to generate_order_updated(self, StrategyId strategy_id, InstrumentId instrument_id, ClientOrderId client_order_id, VenueOrderId venue_order_id, Quantity quantity, Price price, Price trigger_price, uint64_t ts_event, bool venue_order_id_modified=False) → void" title="Direct link to generate_order_updated(self, StrategyId strategy_id, InstrumentId instrument_id, ClientOrderId client_order_id, VenueOrderId venue_order_id, Quantity quantity, Price price, Price trigger_price, uint64_t ts_event, bool venue_order_id_modified=False) → void">​</a></h4>
<p>Generate an OrderUpdated event and send it to the ExecutionEngine.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>strategy_id</strong> (<a href="../../model/identifiers/index.htm#nautilus_trader.model.identifiers.StrategyId"><em>StrategyId</em></a>) – The strategy ID associated with the event.</li>
<li><strong>instrument_id</strong> (<a href="../../model/identifiers/index.htm#nautilus_trader.model.identifiers.InstrumentId"><em>InstrumentId</em></a>) – The instrument ID.</li>
<li><strong>client_order_id</strong> (<a href="../../model/identifiers/index.htm#nautilus_trader.model.identifiers.ClientOrderId"><em>ClientOrderId</em></a>) – The client order ID.</li>
<li><strong>venue_order_id</strong> (<a href="../../model/identifiers/index.htm#nautilus_trader.model.identifiers.VenueOrderId"><em>VenueOrderId</em></a>) – The venue order ID (assigned by the venue).</li>
<li><strong>quantity</strong> (<a href="../../model/index.htm#nautilus_trader.model.Quantity"><em>Quantity</em></a>) – The orders current quantity.</li>
<li><strong>price</strong> (<a href="../../model/index.htm#nautilus_trader.model.Price"><em>Price</em></a>) – The orders current price.</li>
<li><strong>trigger_price</strong> (Price or <code>None</code>) – The orders current trigger price.</li>
<li><strong>ts_event</strong> (<em>uint64_t</em>) – UNIX timestamp (nanoseconds) when the order update event occurred.</li>
<li><strong>venue_order_id_modified</strong> (<em>bool</em>) – If the ID was modified for this event.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="get_accountself--account">get_account(self) → Account<a href="#get_accountself--account" class="hash-link" aria-label="Direct link to get_account(self) → Account" title="Direct link to get_account(self) → Account">​</a></h4>
<p>Return the account for the client (if registered).</p>
<ul>
<li><strong>Return type:</strong>
Account or <code>None</code></li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="id-1">id<a href="#id-1" class="hash-link" aria-label="Direct link to id" title="Direct link to id">​</a></h4>
<p>The components ID.</p>
<ul>
<li><strong>Returns:</strong>
ComponentId</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="is_connected-1">is_connected<a href="#is_connected-1" class="hash-link" aria-label="Direct link to is_connected" title="Direct link to is_connected">​</a></h4>
<p>If the client is connected.</p>
<ul>
<li><strong>Returns:</strong>
bool</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="is_degraded-1">is_degraded<a href="#is_degraded-1" class="hash-link" aria-label="Direct link to is_degraded" title="Direct link to is_degraded">​</a></h4>
<p>bool</p>
<p>Return whether the current component state is <code>DEGRADED</code>.</p>
<ul>
<li><strong>Return type:</strong>
bool</li>
<li><strong>Type:</strong>
Component.is_degraded</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="is_disposed-1">is_disposed<a href="#is_disposed-1" class="hash-link" aria-label="Direct link to is_disposed" title="Direct link to is_disposed">​</a></h4>
<p>bool</p>
<p>Return whether the current component state is <code>DISPOSED</code>.</p>
<ul>
<li><strong>Return type:</strong>
bool</li>
<li><strong>Type:</strong>
Component.is_disposed</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="is_faulted-1">is_faulted<a href="#is_faulted-1" class="hash-link" aria-label="Direct link to is_faulted" title="Direct link to is_faulted">​</a></h4>
<p>bool</p>
<p>Return whether the current component state is <code>FAULTED</code>.</p>
<ul>
<li><strong>Return type:</strong>
bool</li>
<li><strong>Type:</strong>
Component.is_faulted</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="is_initialized-1">is_initialized<a href="#is_initialized-1" class="hash-link" aria-label="Direct link to is_initialized" title="Direct link to is_initialized">​</a></h4>
<p>bool</p>
<p>Return whether the component has been initialized (component.state &gt;= <code>INITIALIZED</code>).</p>
<ul>
<li><strong>Return type:</strong>
bool</li>
<li><strong>Type:</strong>
Component.is_initialized</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="is_running-1">is_running<a href="#is_running-1" class="hash-link" aria-label="Direct link to is_running" title="Direct link to is_running">​</a></h4>
<p>bool</p>
<p>Return whether the current component state is <code>RUNNING</code>.</p>
<ul>
<li><strong>Return type:</strong>
bool</li>
<li><strong>Type:</strong>
Component.is_running</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="is_stopped-1">is_stopped<a href="#is_stopped-1" class="hash-link" aria-label="Direct link to is_stopped" title="Direct link to is_stopped">​</a></h4>
<p>bool</p>
<p>Return whether the current component state is <code>STOPPED</code>.</p>
<ul>
<li><strong>Return type:</strong>
bool</li>
<li><strong>Type:</strong>
Component.is_stopped</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="modify_orderself-modifyorder-command--void">modify_order(self, ModifyOrder command) → void<a href="#modify_orderself-modifyorder-command--void" class="hash-link" aria-label="Direct link to modify_order(self, ModifyOrder command) → void" title="Direct link to modify_order(self, ModifyOrder command) → void">​</a></h4>
<p>Modify the order with parameters contained in the command.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>command</strong> (<a href="../../execution/index.htm#nautilus_trader.execution.messages.ModifyOrder"><em>ModifyOrder</em></a>) – The command to execute.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="oms_type">oms_type<a href="#oms_type" class="hash-link" aria-label="Direct link to oms_type" title="Direct link to oms_type">​</a></h4>
<p>The venues order management system type.</p>
<ul>
<li><strong>Returns:</strong>
OmsType</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="query_orderself-queryorder-command--void">query_order(self, QueryOrder command) → void<a href="#query_orderself-queryorder-command--void" class="hash-link" aria-label="Direct link to query_order(self, QueryOrder command) → void" title="Direct link to query_order(self, QueryOrder command) → void">​</a></h4>
<p>Initiate a reconciliation for the queried order which will generate an
OrderStatusReport.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>command</strong> (<a href="../../execution/index.htm#nautilus_trader.execution.messages.QueryOrder"><em>QueryOrder</em></a>) – The command to execute.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="resetself--void-1">reset(self) → void<a href="#resetself--void-1" class="hash-link" aria-label="Direct link to reset(self) → void" title="Direct link to reset(self) → void">​</a></h4>
<p>Reset the component.</p>
<p>All stateful fields are reset to their initial value.</p>
<p>While executing on_reset() any exception will be logged and reraised, then the component
will remain in a <code>RESETTING</code> state.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-10">WARNING<a href="#warning-10" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>Do not override.</p>
<p>If the component is not in a valid state from which to execute this method,
then the component state will not change, and an error will be logged.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="resumeself--void-1">resume(self) → void<a href="#resumeself--void-1" class="hash-link" aria-label="Direct link to resume(self) → void" title="Direct link to resume(self) → void">​</a></h4>
<p>Resume the component.</p>
<p>While executing on_resume() any exception will be logged and reraised, then the component
will remain in a <code>RESUMING</code> state.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-11">WARNING<a href="#warning-11" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>Do not override.</p>
<p>If the component is not in a valid state from which to execute this method,
then the component state will not change, and an error will be logged.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="async-run_after_delaydelay-float-coro-coroutine--none-1"><em>async</em> run_after_delay(delay: float, coro: Coroutine) → None<a href="#async-run_after_delaydelay-float-coro-coroutine--none-1" class="hash-link" aria-label="Direct link to async-run_after_delaydelay-float-coro-coroutine--none-1" title="Direct link to async-run_after_delaydelay-float-coro-coroutine--none-1">​</a></h4>
<p>Run the given coroutine after a delay.</p>
<ul>
<li><strong>Parameters:</strong>
<ul>
<li><strong>delay</strong> (<em>float</em>) – The delay (seconds) before running the coroutine.</li>
<li><strong>coro</strong> (<em>Coroutine</em>) – The coroutine to run after the initial delay.</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="shutdown_systemself-str-reasonnone--void-1">shutdown_system(self, str reason=None) → void<a href="#shutdown_systemself-str-reasonnone--void-1" class="hash-link" aria-label="Direct link to shutdown_system(self, str reason=None) → void" title="Direct link to shutdown_system(self, str reason=None) → void">​</a></h4>
<p>Initiate a system-wide shutdown by generating and publishing a ShutdownSystem command.</p>
<p>The command is handled by the system’s NautilusKernel, which will invoke either stop (synchronously)
or stop_async (asynchronously) depending on the execution context and the presence of an active event loop.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>reason</strong> (<em>str</em> <em>,</em> <em>optional</em>) – The reason for issuing the shutdown command.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="startself--void-1">start(self) → void<a href="#startself--void-1" class="hash-link" aria-label="Direct link to start(self) → void" title="Direct link to start(self) → void">​</a></h4>
<p>Start the component.</p>
<p>While executing on_start() any exception will be logged and reraised, then the component
will remain in a <code>STARTING</code> state.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-12">WARNING<a href="#warning-12" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>Do not override.</p>
<p>If the component is not in a valid state from which to execute this method,
then the component state will not change, and an error will be logged.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="state-1">state<a href="#state-1" class="hash-link" aria-label="Direct link to state" title="Direct link to state">​</a></h4>
<p>ComponentState</p>
<p>Return the components current state.</p>
<ul>
<li><strong>Return type:</strong>
ComponentState</li>
<li><strong>Type:</strong>
Component.state</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="stopself--void-1">stop(self) → void<a href="#stopself--void-1" class="hash-link" aria-label="Direct link to stop(self) → void" title="Direct link to stop(self) → void">​</a></h4>
<p>Stop the component.</p>
<p>While executing on_stop() any exception will be logged and reraised, then the component
will remain in a <code>STOPPING</code> state.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="warning-13">WARNING<a href="#warning-13" class="hash-link" aria-label="Direct link to WARNING" title="Direct link to WARNING">​</a></h4>
<p>Do not override.</p>
<p>If the component is not in a valid state from which to execute this method,
then the component state will not change, and an error will be logged.</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="submit_orderself-submitorder-command--void">submit_order(self, SubmitOrder command) → void<a href="#submit_orderself-submitorder-command--void" class="hash-link" aria-label="Direct link to submit_order(self, SubmitOrder command) → void" title="Direct link to submit_order(self, SubmitOrder command) → void">​</a></h4>
<p>Submit the order contained in the given command for execution.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>command</strong> (<a href="../../execution/index.htm#nautilus_trader.execution.messages.SubmitOrder"><em>SubmitOrder</em></a>) – The command to execute.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="submit_order_listself-submitorderlist-command--void">submit_order_list(self, SubmitOrderList command) → void<a href="#submit_order_listself-submitorderlist-command--void" class="hash-link" aria-label="Direct link to submit_order_list(self, SubmitOrderList command) → void" title="Direct link to submit_order_list(self, SubmitOrderList command) → void">​</a></h4>
<p>Submit the order list contained in the given command for execution.</p>
<ul>
<li><strong>Parameters:</strong>
<strong>command</strong> (<a href="../../execution/index.htm#nautilus_trader.execution.messages.SubmitOrderList"><em>SubmitOrderList</em></a>) – The command to execute.</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="trader_id-1">trader_id<a href="#trader_id-1" class="hash-link" aria-label="Direct link to trader_id" title="Direct link to trader_id">​</a></h4>
<p>The trader ID associated with the component.</p>
<ul>
<li><strong>Returns:</strong>
TraderId</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="type-1">type<a href="#type-1" class="hash-link" aria-label="Direct link to type" title="Direct link to type">​</a></h4>
<p>The components type.</p>
<ul>
<li><strong>Returns:</strong>
type</li>
</ul>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="venue-1">venue<a href="#venue-1" class="hash-link" aria-label="Direct link to venue" title="Direct link to venue">​</a></h4>
<p>The clients venue ID (if not a routing client).</p>
<ul>
<li><strong>Returns:</strong>
Venue or <code>None</code></li>
</ul></div></article><nav class="docusaurus-mt-lg pagination-nav" aria-label="Docs pages"><a class="pagination-nav__link pagination-nav__link--prev" href="../interactive_brokers/index.htm"><div class="pagination-nav__sublabel">Previous</div><div class="pagination-nav__label">Interactive Brokers</div></a><a class="pagination-nav__link pagination-nav__link--next" href="../tardis/index.htm"><div class="pagination-nav__sublabel">Next</div><div class="pagination-nav__label">Tardis</div></a></nav></div></div><div class="col col--3"><div class="tableOfContents_bqdL thin-scrollbar theme-doc-toc-desktop"><ul class="table-of-contents table-of-contents__left-border"><li><a href="#class-polymarketdataclientconfig" class="table-of-contents__link toc-highlight"><em>class</em> PolymarketDataClientConfig</a></li><li><a href="#class-polymarketexecclientconfig" class="table-of-contents__link toc-highlight"><em>class</em> PolymarketExecClientConfig</a></li><li><a href="#class-polymarketinstrumentprovider" class="table-of-contents__link toc-highlight"><em>class</em> PolymarketInstrumentProvider</a></li><li><a href="#class-polymarketlivedataclientfactory" class="table-of-contents__link toc-highlight"><em>class</em> PolymarketLiveDataClientFactory</a></li><li><a href="#class-polymarketliveexecclientfactory" class="table-of-contents__link toc-highlight"><em>class</em> PolymarketLiveExecClientFactory</a></li><li><a href="#get_polymarket_http_clientapi_key-str--none--none-api_secret-str--none--none-passphrase-str--none--none-base_url-str--none--none-chain_id-int--137-signature_type-int--0-private_key-str--none--none-funder-str--none--none--clobclient" class="table-of-contents__link toc-highlight">get_polymarket_http_client(api_key: str | None = None, api_secret: str | None = None, passphrase: str | None = None, base_url: str | None = None, chain_id: int = 137, signature_type: int = 0, private_key: str | None = None, funder: str | None = None) → ClobClient</a></li><li><a href="#get_polymarket_instrument_idcondition_id-str-token_id-str--int--instrumentid" class="table-of-contents__link toc-highlight">get_polymarket_instrument_id(condition_id: str, token_id: str | int) → InstrumentId</a></li><li><a href="#get_polymarket_instrument_providerclient-clobclient-clock-liveclock-config-instrumentproviderconfig--polymarketinstrumentprovider" class="table-of-contents__link toc-highlight">get_polymarket_instrument_provider(client: ClobClient, clock: LiveClock, config: InstrumentProviderConfig) → PolymarketInstrumentProvider</a></li><li><a href="#config" class="table-of-contents__link toc-highlight">Config</a><ul><li><a href="#class-polymarketdataclientconfig-1" class="table-of-contents__link toc-highlight"><em>class</em> PolymarketDataClientConfig</a></li><li><a href="#class-polymarketexecclientconfig-1" class="table-of-contents__link toc-highlight"><em>class</em> PolymarketExecClientConfig</a></li></ul></li><li><a href="#factories" class="table-of-contents__link toc-highlight">Factories</a><ul><li><a href="#get_polymarket_http_clientapi_key-str--none--none-api_secret-str--none--none-passphrase-str--none--none-base_url-str--none--none-chain_id-int--137-signature_type-int--0-private_key-str--none--none-funder-str--none--none--clobclient-1" class="table-of-contents__link toc-highlight">get_polymarket_http_client(api_key: str | None = None, api_secret: str | None = None, passphrase: str | None = None, base_url: str | None = None, chain_id: int = 137, signature_type: int = 0, private_key: str | None = None, funder: str | None = None) → ClobClient</a></li><li><a href="#get_polymarket_instrument_providerclient-clobclient-clock-liveclock-config-instrumentproviderconfig--polymarketinstrumentprovider-1" class="table-of-contents__link toc-highlight">get_polymarket_instrument_provider(client: ClobClient, clock: LiveClock, config: InstrumentProviderConfig) → PolymarketInstrumentProvider</a></li><li><a href="#class-polymarketlivedataclientfactory-1" class="table-of-contents__link toc-highlight"><em>class</em> PolymarketLiveDataClientFactory</a></li><li><a href="#class-polymarketliveexecclientfactory-1" class="table-of-contents__link toc-highlight"><em>class</em> PolymarketLiveExecClientFactory</a></li></ul></li><li><a href="#enums" class="table-of-contents__link toc-highlight">Enums</a><ul><li><a href="#class-polymarketsignaturetype" class="table-of-contents__link toc-highlight"><em>class</em> PolymarketSignatureType</a></li><li><a href="#class-polymarketorderside" class="table-of-contents__link toc-highlight"><em>class</em> PolymarketOrderSide</a></li><li><a href="#class-polymarketliquidityside" class="table-of-contents__link toc-highlight"><em>class</em> PolymarketLiquiditySide</a></li><li><a href="#class-polymarketordertype" class="table-of-contents__link toc-highlight"><em>class</em> PolymarketOrderType</a></li><li><a href="#class-polymarketeventtype" class="table-of-contents__link toc-highlight"><em>class</em> PolymarketEventType</a></li><li><a href="#class-polymarketorderstatus" class="table-of-contents__link toc-highlight"><em>class</em> PolymarketOrderStatus</a></li><li><a href="#class-polymarkettradestatus" class="table-of-contents__link toc-highlight"><em>class</em> PolymarketTradeStatus</a></li></ul></li><li><a href="#providers" class="table-of-contents__link toc-highlight">Providers</a><ul><li><a href="#class-polymarketinstrumentprovider-1" class="table-of-contents__link toc-highlight"><em>class</em> PolymarketInstrumentProvider</a></li></ul></li><li><a href="#data" class="table-of-contents__link toc-highlight">Data</a><ul><li><a href="#class-polymarketdataclient" class="table-of-contents__link toc-highlight"><em>class</em> PolymarketDataClient</a></li></ul></li><li><a href="#execution" class="table-of-contents__link toc-highlight">Execution</a><ul><li><a href="#class-polymarketexecutionclient" class="table-of-contents__link toc-highlight"><em>class</em> PolymarketExecutionClient</a></li></ul></li></ul></div></div></div><div class="footer-wrapper MuiBox-root css-0"><div class="social-footer-box MuiBox-root css-0"><style data-emotion="css 17rjyz3">.css-17rjyz3{-webkit-text-decoration:underline;text-decoration:underline;text-decoration-color:rgba(25, 118, 210, 0.4);padding:12px;margin-right:10px;}.css-17rjyz3:hover{text-decoration-color:inherit;}</style><style data-emotion="css jl1bw5">.css-jl1bw5{margin:0;font:inherit;color:#1976d2;-webkit-text-decoration:underline;text-decoration:underline;text-decoration-color:rgba(25, 118, 210, 0.4);padding:12px;margin-right:10px;}.css-jl1bw5:hover{text-decoration-color:inherit;}</style><a class="MuiTypography-root MuiTypography-inherit MuiLink-root MuiLink-underlineAlways github-footer css-jl1bw5" href="https://github.com/nautechsystems/nautilus_trader" target="_blank"></a><a class="MuiTypography-root MuiTypography-inherit MuiLink-root MuiLink-underlineAlways discord-footer css-jl1bw5" href="https://discord.gg/NautilusTrader" target="_blank"></a><a class="MuiTypography-root MuiTypography-inherit MuiLink-root MuiLink-underlineAlways linkedin-footer css-jl1bw5" href="https://www.linkedin.com/company/nautechsystems/" target="_blank"></a><a class="MuiTypography-root MuiTypography-inherit MuiLink-root MuiLink-underlineAlways x-footer css-jl1bw5" href="https://twitter.com/NautilusTrader" target="_blank"></a></div><div class="footer-copyright">© 2025 Nautech Systems Pty Ltd. All rights reserved.</div></div></div></div></main></div></div></div></div>
</body>
</html>